{"layout":"tutorial_hands_on","title":"Virtual screening of the SARS-CoV-2 main protease with rxDock and pose scoring","level":"Intermediate","zenodo_link":"https://zenodo.org/record/3730474","questions":["How can candidate ligands be generated and docked to a protein in Galaxy?","How can the poses of the docked ligands be evaluated?","How can a workflow for drug virtual screening be constructed in Galaxy?"],"objectives":["Understand how Galaxy was used to perform docking and pose scoring on the SARS-CoV-2 main protease (MPro).","Replicate the study on a (very) small scale","Gain familiarity with the docking and scoring techniques involved."],"time_estimation":"2H","key_points":["Galaxy can support large, rapid studies in computational chemistry","Protein-ligand docking contributes to the discovery of new drugs"],"requirements":[{"type":"internal","topic_name":"computational-chemistry","tutorials":["cheminformatics"]}],"tags":["covid19","one-health"],"contributors":[{"name":"Simon Bray","joined":"2019-05","elixir_node":"de","former_affiliations":["uni-freiburg","elixir-europe"],"id":"simonbray","url":"https://training.galaxyproject.org/training-material/api/contributors/simonbray.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/simonbray/"}],"js_requirements":{"mathjax":null,"mermaid":false},"short_id":"T00049","url":"/topics/computational-chemistry/tutorials/covid19-docking/tutorial.html","topic_name":"computational-chemistry","tutorial_name":"covid19-docking","dir":"topics/computational-chemistry/tutorials/covid19-docking","symlink":null,"id":"computational-chemistry/covid19-docking","ref_tutorials":["<p>This tutorial provides a companion to the work performed in March 2020 by InformaticsMatters, the Diamond Light Source, and the European Galaxy Team to perform virtual screening on candidate ligands for the SARS-CoV-2 main protease (MPro). This work is described <a href=\"https://covid19.galaxyproject.org/cheminformatics\">in our dedicated site</a>.</p>\n\n<p>In this tutorial, you will perform protein-ligand docking to MPro using rxDock (<span class=\"citation\"><a href=\"#rdock\">Ruiz-Carmona <i>et al.</i> 2014</a></span>), a version of the popular rDock software, and score the results using two different methods. The same tools will be used as in the original study, but with a smaller dataset.</p>\n\n<blockquote class=\"agenda\">\n  <agenda-title></agenda-title>\n\n  <p>In this tutorial, we will cover:</p>\n\n<ol id=\"markdown-toc\">\n  <li><a href=\"#background\" id=\"markdown-toc-background\">Background</a></li>\n  <li><a href=\"#get-data\" id=\"markdown-toc-get-data\">Get data</a></li>\n  <li><a href=\"#preparation-for-docking\" id=\"markdown-toc-preparation-for-docking\">Preparation for docking</a>    <ol>\n      <li><a href=\"#charge-enumeration\" id=\"markdown-toc-charge-enumeration\">Charge enumeration</a></li>\n      <li><a href=\"#generate-three-dimensional-conformations\" id=\"markdown-toc-generate-three-dimensional-conformations\">Generate three-dimensional conformations</a></li>\n      <li><a href=\"#splitting-the-sd-file-into-a-collection\" id=\"markdown-toc-splitting-the-sd-file-into-a-collection\">Splitting the SD-file into a collection</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#active-site-preparation\" id=\"markdown-toc-active-site-preparation\">Active site preparation</a>    <ol>\n      <li><a href=\"#convert-protein-structure-to-mol2-format\" id=\"markdown-toc-convert-protein-structure-to-mol2-format\">Convert protein structure to MOL2 format</a></li>\n      <li><a href=\"#generate-frankenstein-ligand\" id=\"markdown-toc-generate-frankenstein-ligand\">Generate Frankenstein ligand</a></li>\n      <li><a href=\"#generate-active-site-definition\" id=\"markdown-toc-generate-active-site-definition\">Generate active site definition</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#docking-and-scoring\" id=\"markdown-toc-docking-and-scoring\">Docking and scoring</a>    <ol>\n      <li><a href=\"#docking-with-rxdock\" id=\"markdown-toc-docking-with-rxdock\">Docking with rxDock</a></li>\n      <li><a href=\"#collapse-collection-to-a-single-file\" id=\"markdown-toc-collapse-collection-to-a-single-file\">Collapse collection to a single file</a></li>\n      <li><a href=\"#pose-scoring-with-transfs\" id=\"markdown-toc-pose-scoring-with-transfs\">Pose scoring with TransFS</a></li>\n      <li><a href=\"#pose-scoring-with-sucos\" id=\"markdown-toc-pose-scoring-with-sucos\">Pose scoring with SuCOS</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#compound-selection\" id=\"markdown-toc-compound-selection\">Compound selection</a></li>\n  <li><a href=\"#conclusion\" id=\"markdown-toc-conclusion\">Conclusion</a></li>\n</ol>\n\n</blockquote>\n\n<h1 id=\"background\">Background</h1>\n\n<p>Early in March 2020, the Diamond Light Source completed a successful fragment screen on MPro, which provided 55 fragment hits (see their <a href=\"https://www.diamond.ac.uk/covid-19/for-scientists/Main-protease-structure-and-XChem.html\">press release</a> here). In an effort to identify candidate molecules for binding, InformaticsMatters, the XChem group and the European Galaxy team joined forces to construct and execute a Galaxy workflow for performing and evaluating molecular docking on a massive scale.</p>\n\n<p>An initial list of 41,000 candidate molecules was assembled by using the Fragalysis fragment network to elaborate from the initial fragment hits, as described <a href=\"https://diamondlightsource.atlassian.net/wiki/spaces/FRAG/pages/8323192/The+Astex+Fragment+network\">in their documentation</a>. These were used as inputs for the docking and scoring workflow. The workflow consists of the following steps, each of which was carried out using tools installed on the European Galaxy server:</p>\n<ol>\n  <li>Charge enumeration of the 41,000 candidate molecules selected based on the fragment hits.</li>\n  <li>Generation of 3D conformations based on SMILES strings of the candidate molecules.</li>\n  <li>Docking of molecules into each of the MPro structures using rxDock.</li>\n  <li>Evaluation of the docking poses using a TransFS, a deep learning approach (<span class=\"citation\"><a href=\"#transfs\">Scantlebury 2019</a></span>) developed by the XChem group and collaborators, and SuCOS scoring (<span class=\"citation\"><a href=\"#sucos\">Leong 2019</a></span>), which compares the poses with the structures of the original fragment hits.</li>\n</ol>\n\n<p>The original study required almost 20 years of CPU time, not counting GPU resources consumed. This is obviously not reproducible as a tutorial. Therefore, we will repeat the workflow with a small library of just 100 molecules, on a single MPro fragment structure. Links will be provided to original Galaxy histories, with notes to explain where and why things were done differently to the tutorial.</p>\n\n<figure id=\"figure-1\" style=\"max-width: 90%;\"><img src=\"/training-material/topics/computational-chemistry/images/mpro.png\" alt=\"MPro structure, with a fragment bound. \" width=\"811\" height=\"539\" loading=\"lazy\" /><a target=\"_blank\" href=\"/training-material/topics/computational-chemistry/images/mpro.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 1</strong>:</span> Structure of MPro, with a fragment bound. <a href=\"https://usegalaxy.eu/u/sbray/v/mpro-x0072\">Click to view</a> in NGL. (<span class=\"citation\"><a href=\"#ngl\">Rose <i>et al.</i> 2018</a></span>)</figcaption></figure>\n\n<h1 id=\"get-data\">Get data</h1>\n\n<p>We require three datasets for the simulation and analysis:</p>\n<ol>\n  <li>A list of 100 ligand candidates. These are the molecules which will be docking into the protein binding site.</li>\n  <li>A PDB file of the receptor MPro protein (without ligand or solvent).</li>\n  <li>A list of fragment hits (17 in total) in SDF format.</li>\n</ol>\n\n<blockquote class=\"details\">\n  <details-title>Differences with the original study</details-title>\n\n  <p>Of the initial 55 fragment hits, 17 were chosen for further study. From these, 41,587 compounds were generated using the Fragalysis fragment network for further study. The 100 compounds used in the tutorial are taken from this list.</p>\n\n  <p>Starting data is available from this Galaxy history: <a href=\"https://usegalaxy.eu/u/sbray/h/mpro-raw-data\">https://usegalaxy.eu/u/sbray/h/mpro-raw-data</a>.</p>\n\n  <p>This history contains 103 files. One of these (<code class=\"language-plaintext highlighter-rouge\">Initial candidates for docking</code>) contains the 41k candidate compounds in SMILES format. The remaining 102 files (all with names beginning with <code class=\"language-plaintext highlighter-rouge\">Mpro-x...</code>) provide structural information on the fragment hits - 6 files per hit (hence 17 x 6 = 102).</p>\n\n  <p>The identity of the files is as follows:</p>\n\n  <ul>\n    <li>the <code class=\"language-plaintext highlighter-rouge\">*_0.mol</code> files contain the fragment structure in mol format.</li>\n    <li>the <code class=\"language-plaintext highlighter-rouge\">*_0.pdb</code> files contain the fragment structure in pdb format.</li>\n    <li>the <code class=\"language-plaintext highlighter-rouge\">*_0_apo.pdb</code> files contain the protein with solvent, but without ligand</li>\n    <li>the <code class=\"language-plaintext highlighter-rouge\">*_0_apo-desolv.pdb</code> files contain the protein without either solvent or ligand</li>\n    <li>the <code class=\"language-plaintext highlighter-rouge\">*_0_apo-solv.pdb</code> files contain only solvent</li>\n    <li>the <code class=\"language-plaintext highlighter-rouge\">*_0_bound.pdb</code> file contain everything (protein, ligand and solvent)</li>\n  </ul>\n\n  <p>The PDB file of the receptor that we are using is <code class=\"language-plaintext highlighter-rouge\">Mpro-x0195_0_apo-desolv.pdb</code>. In other words, the structure is derived from just one fragment hit. In the original study, however, all compounds were docked against all of the fragment hit structures.</p>\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Data upload</hands-on-title>\n\n  <ol>\n    <li>Create a new history for this tutorial</li>\n    <li>\n      <p>Import the files from <a href=\"https://zenodo.org/record/3730474\">Zenodo</a>:</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>https://zenodo.org/record/3730474/files/candidates.smi\nhttps://zenodo.org/record/3730474/files/Mpro-x0195_0_apo-desolv.pdb\nhttps://zenodo.org/record/3730474/files/hits.sdf\n</code></pre></div>      </div>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-importing-via-links\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-importing-via-links\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Importing via links</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Copy the link location</li>   <li>     <p>Click <i class=\"fas fa-upload\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-upload</span> <strong>Upload Data</strong> at the top of the tool panel</p>   </li>   <li>Select <i class=\"fa fa-edit\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-wf-edit</span> <strong>Paste/Fetch Data</strong></li>   <li>     <p>Paste the link(s) into the text field</p>   </li>   <li>     <p>Press <strong>Start</strong></p>   </li>   <li><strong>Close</strong> the window</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li>Rename the datasets <code class=\"language-plaintext highlighter-rouge\">Candidates SMILES</code>, <code class=\"language-plaintext highlighter-rouge\">Receptor PDB</code> and <code class=\"language-plaintext highlighter-rouge\">Hits SDF</code> respectively.</li>\n    <li>\n      <p>Check that the datatypes (<code class=\"language-plaintext highlighter-rouge\">smi</code>, <code class=\"language-plaintext highlighter-rouge\">pdb</code>, and <code class=\"language-plaintext highlighter-rouge\">sdf</code> respectively) are correct. In particularly, check the <code class=\"language-plaintext highlighter-rouge\">Candidates SMILES</code> file, as the SMILES datatype is not detected automatically by Galaxy.</p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-changing-the-datatype\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-changing-the-datatype\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Changing the datatype</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Click on the <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> <strong>pencil icon</strong> for the dataset to edit its attributes</li>   <li>In the central panel, click <i class=\"fas fa-database\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-chart-select-data</span> <strong>Datatypes</strong> tab on the top</li>   <li>In the <i class=\"fas fa-database\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-chart-select-data</span> <strong>Assign Datatype</strong>, select <code class=\"language-plaintext highlighter-rouge\">datatypes</code> from “<em>New type</em>” dropdown     <ul>       <li>Tip: you can start typing the datatype into the field to filter the dropdown menu</li>     </ul>   </li>   <li>Click the <strong>Save</strong> button</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n  </ol>\n</blockquote>\n\n<h1 id=\"preparation-for-docking\">Preparation for docking</h1>\n\n<p>Before docking, the candidate ligands need to be prepared for docking with the following steps: 1) charge enumeration, 2) generation of three-dimensional structures, and 3) splitting the SD-file into a collection.</p>\n\n<blockquote class=\"details\">\n  <details-title>Differences with the original study</details-title>\n\n  <p>This stage is carried out as described here, except of course with the full set of 42,000 compounds. See <a href=\"https://covid19.galaxyproject.org/cheminformatics/1-DockingPrep/\">the docking prep workflow</a> for more details.</p>\n</blockquote>\n\n<h2 id=\"charge-enumeration\">Charge enumeration</h2>\n\n<p>Many of the compounds may contain functional groups which can exist in multiple charge states, and this will affect the quality of binding to the receptor dramatically. Therefore, we perform ‘charge enumeration’, which means that we generate all charge forms of the compounds within a certain pH range.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Charge enumeration</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/bgruening/enumerate_charges/enumerate_charges/2020.03.4+galaxy0\" title=\"Enumerate charges tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Enumerate charges</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 2020.03.4+galaxy0)</span> with the following parameters:\n      <ul>\n        <li><em>“Input molecule data”</em>: <code class=\"language-plaintext highlighter-rouge\">Candidate SMILES</code></li>\n        <li><em>“Minimum pH”</em>: <code class=\"language-plaintext highlighter-rouge\">4.4</code></li>\n        <li><em>“Maximum pH”</em>: <code class=\"language-plaintext highlighter-rouge\">10.4</code></li>\n      </ul>\n    </li>\n    <li>\n      <p>Rename the output file <code class=\"language-plaintext highlighter-rouge\">Enumerated candidates SMILES</code>.</p>\n\n      <blockquote class=\"comment\">\n        <comment-title></comment-title>\n\n        <p>The <strong>Enumerate charges</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> tool is based on the Dimorphite-DL program. (<span class=\"citation\"><a href=\"#Ropp2019\">Ropp <i>et al.</i> 2019</a></span>)</p>\n      </blockquote>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>The output is another SMILES file, with several hundred entries.</p>\n\n<h2 id=\"generate-three-dimensional-conformations\">Generate three-dimensional conformations</h2>\n\n<p>So far our list of enumerated candidate compounds is still in SMILES format; we need to produce three-dimensional structures in SDF format for docking. This can be done with the <strong>Compound conversion</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> tool.</p>\n\n<p>If you are not familiar with SMILES and SDF formats, consult the introductory <a href=\"../cheminformatics/tutorial.html\">protein-ligand docking tutorial</a> for more details.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Convert to SDF format</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/bgruening/openbabel_compound_convert/openbabel_compound_convert/3.1.1+galaxy0\" title=\"Compound conversion tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Compound conversion</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 3.1.1+galaxy0)</span> with the following parameters:\n      <ul>\n        <li><em>“Molecular input file”</em>: <code class=\"language-plaintext highlighter-rouge\">Enumerated candidates</code> dataset.</li>\n        <li><em>“Output format”</em>: <code class=\"language-plaintext highlighter-rouge\">MDL MOL format (sdf, mol)</code>\n          <ul>\n            <li><em>“Generate 3D coordinates”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <p>Rename the output file <code class=\"language-plaintext highlighter-rouge\">Enumerated candidates SDF</code>.</p>\n\n      <blockquote class=\"comment\">\n        <comment-title></comment-title>\n\n        <p>The <strong>Compound conversion</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> tool is based on the OpenBabel toolkit. (<span class=\"citation\"><a href=\"#OBoyle2011\">O’Boyle <i>et al.</i> 2011</a></span>)</p>\n      </blockquote>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h2 id=\"splitting-the-sd-file-into-a-collection\">Splitting the SD-file into a collection</h2>\n\n<p>The next stage is to split the SD-file with the candidate ligands into a set of smaller SD-files.</p>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <p>Why is splitting the file necessary?</p>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <p>The rxDock tool performs one docking at a time (more technically: the task is not parallelized, as it uses only a single CPU). Therefore, splitting the large SD-file into many small files allows the work to be carried out by multiple Galaxy jobs in parallel, so it completes faster.</p>\n\n    <p>In the original study, this kind of parallelization was absolutely essential because of the enormous dataset; at some points, there were 5,000 docking jobs running concurrently on the European Galaxy server. Even on the much smaller scale of this tutorial, we can speed things up considerably using this trick.</p>\n\n  </blockquote>\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Split the SD-files</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0\" title=\"Split file to dataset collection tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Split file to dataset collection</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.5.0)</span> with the following parameters:\n      <ul>\n        <li><em>“Select the file type to split”</em>: <code class=\"language-plaintext highlighter-rouge\">SD-files</code></li>\n        <li><em>“SD-file to split”</em>: <code class=\"language-plaintext highlighter-rouge\">Enumerated candidates SDF</code>\n          <ul>\n            <li><em>“Specify number of output files or number of records per file?”</em>: <code class=\"language-plaintext highlighter-rouge\">Number of output files</code>\n              <ul>\n                <li><em>“Number of new files”</em>: <code class=\"language-plaintext highlighter-rouge\">10</code></li>\n              </ul>\n            </li>\n            <li><em>“Method to allocate records to new files”</em>: <code class=\"language-plaintext highlighter-rouge\">Alternate output files</code></li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h1 id=\"active-site-preparation\">Active site preparation</h1>\n\n<p>The active site also needs to be prepared for docking, using the following steps: 1) conversion to MOL2 format, and 2) generation of the active site using the <strong>rbcavity</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> tool.</p>\n\n<blockquote class=\"details\">\n  <details-title>Differences with the original study</details-title>\n\n  <p>This stage was carried out as described here. However, it was repeated for each of the fragment hit structures, not just the <code class=\"language-plaintext highlighter-rouge\">Mpro-x0195_0_apo-desolv.pdb</code> file used here. See <a href=\"https://covid19.galaxyproject.org/cheminformatics/2-ActiveSitePrep/\">the active site prep workflow</a> for more details.</p>\n</blockquote>\n\n<h2 id=\"convert-protein-structure-to-mol2-format\">Convert protein structure to MOL2 format</h2>\n\n<p>The receptor file we are using is in PDB format, but the rxDock tool we use for docking requires an input in MOL2 format. Therefore, we first convert the file.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Conversion to MOL2 format</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/bgruening/openbabel_compound_convert/openbabel_compound_convert/3.1.1+galaxy0\" title=\"Compound conversion tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Compound conversion</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 3.1.1+galaxy0)</span> with the following parameters:\n      <ul>\n        <li><em>“Molecular input file”</em>: <code class=\"language-plaintext highlighter-rouge\">Receptor PDB</code> dataset.</li>\n        <li><em>“Output format”</em>: <code class=\"language-plaintext highlighter-rouge\">Sybyl Mol2 format (mol2)</code></li>\n      </ul>\n    </li>\n    <li>Rename the output file <code class=\"language-plaintext highlighter-rouge\">Receptor MOL2</code>.</li>\n  </ol>\n\n</blockquote>\n\n<h2 id=\"generate-frankenstein-ligand\">Generate Frankenstein ligand</h2>\n\n<p>For docking with rxDock, a file needs to be created defining the active site. This requires two input files - one for the protein and one for the ligand. We want an active site generation that takes into account the features of all 17 fragments, and therefore need to generate a ‘Frankenstein ligand’ which possesses the properties of all the fragments. A very simple Galaxy tool is available for this.</p>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <p>What is a ‘Frankenstein ligand’ and why do we need it?</p>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <p>The Frankenstein ligand combines the atoms of all the fragments and therefore occupies the entire space of the binding site. Therefore, it is the best choice for cavity definition. See the <a href=\"https://www.informaticsmatters.com/blog/2018/11/23/cavities-and-frankenstein-molecules.html\">information provided by InformaticsMatters</a> for more details.</p>\n\n  </blockquote>\n\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Generate Frankenstein ligand</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/bgruening/ctb_frankenstein_ligand/ctb_frankenstein_ligand/2013.1-0+galaxy0\" title=\"Create Frankenstein ligand tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Create Frankenstein ligand</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 2013.1-0+galaxy0)</span> with the following parameters:\n      <ul>\n        <li><em>“Input file”</em>: <code class=\"language-plaintext highlighter-rouge\">Hits SDF</code></li>\n      </ul>\n    </li>\n    <li>Rename the file to <code class=\"language-plaintext highlighter-rouge\">Frankstein SDF</code>.</li>\n  </ol>\n\n</blockquote>\n\n<h2 id=\"generate-active-site-definition\">Generate active site definition</h2>\n\n<p>The active site can now be generated using the <strong>rbcavity</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> tool, which requires the receptor in MOL2 format as input as well as a single reference ligand in Mol/SDF format. We use the Frankenstein ligand as the reference.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Active site preparation</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/bgruening/rxdock_rbcavity/rxdock_rbcavity/0.1.5\" title=\"rxDock cavity definition tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>rxDock cavity definition</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.1.5)</span> with the following parameters:\n      <ul>\n        <li><em>“Receptor”</em>: <code class=\"language-plaintext highlighter-rouge\">Receptor MOL2</code></li>\n        <li><em>“Reference ligand”</em>: <code class=\"language-plaintext highlighter-rouge\">Frankenstein SDF</code></li>\n        <li><em>“Mapper sphere radius”</em>: <code class=\"language-plaintext highlighter-rouge\">3.0</code></li>\n        <li><em>“Mapper small sphere radius”</em>: <code class=\"language-plaintext highlighter-rouge\">1.0</code></li>\n        <li><em>“Mapper minimum volume”</em>: <code class=\"language-plaintext highlighter-rouge\">100</code></li>\n        <li><em>“Mapper volume increment”</em>: <code class=\"language-plaintext highlighter-rouge\">0</code></li>\n        <li><em>“Mapper grid step”</em>: <code class=\"language-plaintext highlighter-rouge\">0.5</code></li>\n        <li><em>“Cavity weight”</em>: <code class=\"language-plaintext highlighter-rouge\">1.0</code></li>\n      </ul>\n    </li>\n    <li>Rename the output file <code class=\"language-plaintext highlighter-rouge\">Active site</code>.\n      <blockquote class=\"comment\">\n        <comment-title></comment-title>\n\n        <p>The meanings of these parameters are too complex to go into in this tutorial. If you are interested, see the <a href=\"http://rdock.sourceforge.net/wp-content/uploads/2015/08/rDock_User_Guide.pdf\">rDock documentation</a> for more details.</p>\n      </blockquote>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h1 id=\"docking-and-scoring\">Docking and scoring</h1>\n\n<p>Docking and scoring are now performed, using the following steps: 1) docking using rxDock, 2) recombining the results into a single SDF file, 3) TransFS scoring, and 4) SuCOS scoring.</p>\n\n<blockquote class=\"details\">\n  <details-title>Differences with the original study</details-title>\n\n  <p>This section in the original study differed from this tutorial in the following ways:</p>\n  <ol>\n    <li>Docking was performed on over 100,000 enumerated candidates, rather than the 300 used here.</li>\n    <li>25 different poses were generated per candidate, rather than 5, as in this tutorial.</li>\n    <li>Because of the large number of poses to score (more than a million), the scoring steps were parallelized by splitting into collections. This is skipped in the tutorial.</li>\n    <li>The entire process was repeated 17 times, using a different fragment hit as the receptor structure each time.\nSee <a href=\"https://covid19.galaxyproject.org/cheminformatics/3-Docking/\">the Docking</a> for more details. A full list of Galaxy histories generated is listed <a href=\"https://covid19.galaxyproject.org/cheminformatics/Histories/\">the histories page</a>.</li>\n  </ol>\n</blockquote>\n\n<h2 id=\"docking-with-rxdock\">Docking with rxDock</h2>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Docking</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/bgruening/rxdock_rbdock/rxdock_rbdock/0.1.5\" title=\"rxDock docking tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>rxDock docking</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.1.5)</span> with the following parameters:\n      <ul>\n        <li><em>“Receptor”</em>: <code class=\"language-plaintext highlighter-rouge\">Receptor MOL2</code></li>\n        <li><em>“Active site”</em>: <code class=\"language-plaintext highlighter-rouge\">Active site</code></li>\n        <li><em>“Ligands”</em>: <code class=\"language-plaintext highlighter-rouge\">Split file</code> collection</li>\n        <li><em>“Number of dockings”</em>: <code class=\"language-plaintext highlighter-rouge\">5</code></li>\n        <li><em>“Number of best poses”</em>: <code class=\"language-plaintext highlighter-rouge\">5</code></li>\n      </ul>\n\n      <blockquote class=\"comment\">\n        <comment-title></comment-title>\n\n        <p>For more information about docking, check out the <a href=\"../cheminformatics/tutorial.html\">introductory tutorial</a>. It uses a different tool, AutoDock Vina, rather than rxDock, but the general principles are the same.</p>\n      </blockquote>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h2 id=\"collapse-collection-to-a-single-file\">Collapse collection to a single file</h2>\n\n<p>Having created a collection to parallelize the docking procedure, we can now recombine the results to a single file.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Collapse collection</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/nml/collapse_collections/collapse_dataset/4.2\" title=\"Collapse Collection tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Collapse Collection</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 4.2)</span> with the following parameters:\n      <ul>\n        <li><em>“Collection of files to collapse into single dataset”</em>: Output of docking step</li>\n      </ul>\n    </li>\n    <li>Rename to <code class=\"language-plaintext highlighter-rouge\">Docked poses SDF</code>.</li>\n  </ol>\n\n</blockquote>\n\n<p>The output file should contain around 1,900 docked poses in SDF format.</p>\n\n<h2 id=\"pose-scoring-with-transfs\">Pose scoring with TransFS</h2>\n\n<p>In this step, we carry out scoring of the poses using TransFS. This is a deep learning approach developed at the University of Oxford, employing augmentation of training data with incorrectly docked ligands to prompt the model to learn from protein-ligand interactions. (<span class=\"citation\"><a href=\"#transfs\">Scantlebury 2019</a></span>)</p>\n\n<p>The TransFS scoring returns a value (saved as <code class=\"language-plaintext highlighter-rouge\">&lt;TransFSScore&gt;</code> in the SDF file) between 0 (poor) and 1 (good).</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>TransFS scoring</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/bgruening/xchem_transfs_scoring/xchem_transfs_scoring/0.4.0\" title=\"XChem TransFS pose scoring tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>XChem TransFS pose scoring</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.4.0)</span> with the following parameters:\n      <ul>\n        <li><em>“Receptor”</em>: <code class=\"language-plaintext highlighter-rouge\">Receptor PDB</code></li>\n        <li><em>“Ligands”</em>: <code class=\"language-plaintext highlighter-rouge\">Docked poses SDF</code></li>\n        <li><em>“Distance to waters”</em>: <code class=\"language-plaintext highlighter-rouge\">2</code></li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h2 id=\"pose-scoring-with-sucos\">Pose scoring with SuCOS</h2>\n\n<p>This step involves scoring of the poses from each molecule against the original fragment screening hit ligands using the SuCOS MAX shape and feature overlay algorithm. (<span class=\"citation\"><a href=\"#sucos\">Leong 2019</a></span>) The conformation and position of the poses are compared to known structures (i.e. the fragment hits) to determine a score.</p>\n\n<p>SuCOS scoring returns a value (saved as <code class=\"language-plaintext highlighter-rouge\">&lt;Max_SuCOS_Score&gt;</code> in the SDF file) between 0 (poor) and 1 (good).</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>SuCOS scoring</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/bgruening/sucos_max_score/sucos_max_score/2020.03.4+galaxy0\" title=\"Max SuCOS score tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Max SuCOS score</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 2020.03.4+galaxy0)</span> with the following parameters:\n      <ul>\n        <li><em>“Ligands to be scored”</em>: Output of the TransFS step</li>\n        <li><em>“Set of clusters to score against”</em>: <code class=\"language-plaintext highlighter-rouge\">Hits SDF</code></li>\n      </ul>\n    </li>\n    <li>Rename the output file to <code class=\"language-plaintext highlighter-rouge\">Scored poses</code>.</li>\n  </ol>\n</blockquote>\n\n<h1 id=\"compound-selection\">Compound selection</h1>\n\n<p>The aim of the original study was to select 500 candidate molecules for synthesis and experimental study. In order to do this, the data for all fragment hits had to be combined (i.e. so that each compound was assigned the lowest score from all the fragments). The resulting table was then compared with a list of compounds available from <a href=\"https://enamine.net/\">Enamine</a> and <a href=\"https://chem-space.com/\">Chemspace</a> and the 500 highest scoring matching compounds were selected for purchase.</p>\n\n<p>This step is skipped in the tutorial, as only 100 compounds were tested, using only a single fragment hit structure. If you want, though, check out the <a href=\"https://usegalaxy.eu/u/timdudgeon/h/top-500-enamine--chemspace-bb\">history</a> and <a href=\"https://usegalaxy.eu/u/timdudgeon/w/filter-results\">workflow</a> used.</p>\n\n<h1 id=\"conclusion\">Conclusion</h1>\n\n<p>This tutorial guided you through docking and scoring of a small set of compounds to the MPro protein. Hopefully, you have a better understanding of how docking can be practically used, as well as how the original study was performed.</p>\n"],"ref_slides":[],"video_library":{"tutorial":null,"slides":null,"demo":null,"both":null,"session":null},"hands_on":true,"slides":false,"mod_date":"2023-11-03 14:30:27 +0000","pub_date":"2020-03-27 13:26:13 +0000","version":17,"workflows":[{"workflow":"workflow.ga","tests":false,"url":"https://training.galaxyproject.org/training-material/topics/computational-chemistry/tutorials/covid19-docking/workflows/workflow.ga","path":"topics/computational-chemistry/tutorials/covid19-docking/workflows/workflow.ga","wfid":"computational-chemistry-covid19-docking","wfname":"workflow","trs_endpoint":"https://training.galaxyproject.org/training-material/api/ga4gh/trs/v2/tools/computational-chemistry-covid19-docking/versions/workflow","license":null,"creators":[],"name":"Virtual screening of the SARS-CoV-2 main protease with rDock and pose scoring","title":"Virtual screening of the SARS-CoV-2 main protease with rDock and pose scoring","test_results":null,"modified":"2024-06-13 19:24:25 +0000","mermaid":"flowchart TD\n  0[\"ℹ️ Input Dataset\\nCandidates\"];\n  style 0 stroke:#2c3143,stroke-width:4px;\n  1[\"ℹ️ Input Dataset\\nMpro-x0195_0_apo-desolv.pdb\"];\n  style 1 stroke:#2c3143,stroke-width:4px;\n  2[\"ℹ️ Input Dataset\\nhits.sdf\"];\n  style 2 stroke:#2c3143,stroke-width:4px;\n  3[\"Enumerate changes\"];\n  0 -->|output| 3;\n  4[\"Compound conversion\"];\n  1 -->|output| 4;\n  5[\"Create Frankenstein ligand\"];\n  2 -->|output| 5;\n  6[\"Compound conversion\"];\n  3 -->|output| 6;\n  7[\"rDock cavity definition\"];\n  4 -->|outfile| 7;\n  5 -->|outfile| 7;\n  8[\"Split file\"];\n  6 -->|outfile| 8;\n  9[\"rDock docking\"];\n  4 -->|outfile| 9;\n  8 -->|list_output_sdf| 9;\n  7 -->|activesite| 9;\n  10[\"Collapse Collection\"];\n  9 -->|output| 10;\n  11[\"XChem TransFS pose scoring\"];\n  1 -->|output| 11;\n  10 -->|output| 11;\n  12[\"Max SuCOS score\"];\n  11 -->|output| 12;\n  2 -->|output| 12;"}],"api":"https://training.galaxyproject.org/training-material/api/topics/computational-chemistry/tutorials/covid19-docking/tutorial.json","tools":["toolshed.g2.bx.psu.edu/repos/bgruening/ctb_frankenstein_ligand/ctb_frankenstein_ligand/0.1.1","toolshed.g2.bx.psu.edu/repos/bgruening/ctb_frankenstein_ligand/ctb_frankenstein_ligand/2013.1-0+galaxy0","toolshed.g2.bx.psu.edu/repos/bgruening/enumerate_charges/enumerate_charges/0.1","toolshed.g2.bx.psu.edu/repos/bgruening/enumerate_charges/enumerate_charges/2020.03.4+galaxy0","toolshed.g2.bx.psu.edu/repos/bgruening/openbabel_compound_convert/openbabel_compound_convert/2.4.2.2.0","toolshed.g2.bx.psu.edu/repos/bgruening/openbabel_compound_convert/openbabel_compound_convert/3.1.1+galaxy0","toolshed.g2.bx.psu.edu/repos/bgruening/rdock_rbcavity/rdock_rbcavity/0.1","toolshed.g2.bx.psu.edu/repos/bgruening/rdock_rbdock/rdock_rbdock/0.1.4","toolshed.g2.bx.psu.edu/repos/bgruening/rxdock_rbcavity/rxdock_rbcavity/0.1.5","toolshed.g2.bx.psu.edu/repos/bgruening/rxdock_rbdock/rxdock_rbdock/0.1.5","toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.4.0","toolshed.g2.bx.psu.edu/repos/bgruening/split_file_to_collection/split_file_to_collection/0.5.0","toolshed.g2.bx.psu.edu/repos/bgruening/sucos_max_score/sucos_max_score/0.2.3","toolshed.g2.bx.psu.edu/repos/bgruening/sucos_max_score/sucos_max_score/2020.03.4+galaxy0","toolshed.g2.bx.psu.edu/repos/bgruening/xchem_transfs_scoring/xchem_transfs_scoring/0.4.0","toolshed.g2.bx.psu.edu/repos/nml/collapse_collections/collapse_dataset/4.2","xchem_pose_scoring"],"supported_servers":{"exact":[],"inexact":[]},"topic_name_human":"Computational chemistry","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[{"name":"ctb_frankenstein_ligand","owner":"bgruening","revisions":"8e214e52e461","tool_panel_section_label":"ChemicalToolBox","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"ctb_frankenstein_ligand","owner":"bgruening","revisions":"7255688c77f3","tool_panel_section_label":"ChemicalToolBox","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"enumerate_charges","owner":"bgruening","revisions":"2a868592ebcb","tool_panel_section_label":"ChemicalToolBox","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"enumerate_charges","owner":"bgruening","revisions":"67ee76f0e497","tool_panel_section_label":"ChemicalToolBox","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"openbabel_compound_convert","owner":"bgruening","revisions":"b59c91adeac1","tool_panel_section_label":"ChemicalToolBox","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"openbabel_compound_convert","owner":"bgruening","revisions":"e2c36f62e22f","tool_panel_section_label":"ChemicalToolBox","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"rdock_rbcavity","owner":"bgruening","revisions":"744a777e9f90","tool_panel_section_label":"ChemicalToolBox","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"rdock_rbdock","owner":"bgruening","revisions":"a22969b08177","tool_panel_section_label":"ChemicalToolBox","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"rxdock_rbcavity","owner":"bgruening","revisions":"7fac8e7a12d5","tool_panel_section_label":"ChemicalToolBox","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"rxdock_rbdock","owner":"bgruening","revisions":"6fe6b0e10ed6","tool_panel_section_label":"ChemicalToolBox","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"split_file_to_collection","owner":"bgruening","revisions":"0046692724f9","tool_panel_section_label":"Collection Operations","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"split_file_to_collection","owner":"bgruening","revisions":"6cbe2f30c2d7","tool_panel_section_label":"Collection Operations","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"sucos_max_score","owner":"bgruening","revisions":"d4c67ced6abc","tool_panel_section_label":"ChemicalToolBox","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"sucos_max_score","owner":"bgruening","revisions":"9b48456a96fe","tool_panel_section_label":"ChemicalToolBox","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"xchem_transfs_scoring","owner":"bgruening","revisions":"f6f9b47d02b6","tool_panel_section_label":"ChemicalToolBox","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"collapse_collections","owner":"nml","revisions":"830961c48e42","tool_panel_section_label":"Collection Operations","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"}]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools:\n- name: ctb_frankenstein_ligand\n  owner: bgruening\n  revisions: 8e214e52e461\n  tool_panel_section_label: ChemicalToolBox\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: ctb_frankenstein_ligand\n  owner: bgruening\n  revisions: 7255688c77f3\n  tool_panel_section_label: ChemicalToolBox\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: enumerate_charges\n  owner: bgruening\n  revisions: 2a868592ebcb\n  tool_panel_section_label: ChemicalToolBox\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: enumerate_charges\n  owner: bgruening\n  revisions: 67ee76f0e497\n  tool_panel_section_label: ChemicalToolBox\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: openbabel_compound_convert\n  owner: bgruening\n  revisions: b59c91adeac1\n  tool_panel_section_label: ChemicalToolBox\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: openbabel_compound_convert\n  owner: bgruening\n  revisions: e2c36f62e22f\n  tool_panel_section_label: ChemicalToolBox\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: rdock_rbcavity\n  owner: bgruening\n  revisions: 744a777e9f90\n  tool_panel_section_label: ChemicalToolBox\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: rdock_rbdock\n  owner: bgruening\n  revisions: a22969b08177\n  tool_panel_section_label: ChemicalToolBox\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: rxdock_rbcavity\n  owner: bgruening\n  revisions: 7fac8e7a12d5\n  tool_panel_section_label: ChemicalToolBox\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: rxdock_rbdock\n  owner: bgruening\n  revisions: 6fe6b0e10ed6\n  tool_panel_section_label: ChemicalToolBox\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: split_file_to_collection\n  owner: bgruening\n  revisions: '0046692724f9'\n  tool_panel_section_label: Collection Operations\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: split_file_to_collection\n  owner: bgruening\n  revisions: 6cbe2f30c2d7\n  tool_panel_section_label: Collection Operations\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: sucos_max_score\n  owner: bgruening\n  revisions: d4c67ced6abc\n  tool_panel_section_label: ChemicalToolBox\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: sucos_max_score\n  owner: bgruening\n  revisions: 9b48456a96fe\n  tool_panel_section_label: ChemicalToolBox\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: xchem_transfs_scoring\n  owner: bgruening\n  revisions: f6f9b47d02b6\n  tool_panel_section_label: ChemicalToolBox\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: collapse_collections\n  owner: nml\n  revisions: 830961c48e42\n  tool_panel_section_label: Collection Operations\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n","tours":false,"video":false,"translations":{"tutorial":[],"slides":[],"video":false},"license":"CC-BY-4.0","type":"tutorial"}