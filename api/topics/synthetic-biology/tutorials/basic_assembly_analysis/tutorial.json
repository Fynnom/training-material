{"layout":"tutorial_hands_on","title":"Designing plasmids encoding predicted pathways by using the BASIC assembly method","zenodo_link":"https://zenodo.org/record/6123887","questions":["How to design plasmids encoding predicted pathways using BASIC assembly method ?","How to generate scripts enabling the automatic build of plasmids ?"],"objectives":["Annotate the SBML pathway using Selenzy tool.","Design plasmids encoding predicted pathways using rpbasicdesign tool.","Generate dnabot scripts enabling the automatic build of plasmids."],"time_estimation":"15M","key_points":["Knowing the reaction is not sufficient to implement a pathway, one needs to find out which enzyme is capable of catalyzing the reactions. For this, Selenzyme is used to search for enzymes using reactions as query. As a result, UniProt IDs of enzymes are stored as annotation in SBML files.","Expressing pathways into cells involved not only gene encoding enzymes, but also additional genetic parts such as libraries of promoter(s), RBSs, terminators, ... From these, multiple combinations of parts are possible, and each one could produce different results. Several methods exist to assemble genetic parts together into plasmids, the BASIC Assembly approach is one of them. The BasicDesign tool generates combinations of the genetic parts that are compliant with the BASIC Assembly patterns.","Automatizing the construction of compound producing strains necessitate to translate protocols into instructions that could be understable by lab robots. To do this, DNA-Bot reads the list of constructs and the DNA parts information and generates python instructions for the automated build of the genetic constructs using OpenTrons liquid handling robots."],"contributors":[{"name":"Kenza Bazi-Kabbaj","email":"kenza.bazi-kabbaj@inrae.fr","orcid":"0000-0002-4319-5616","joined":"2022-03","id":"kenza12","url":"https://training.galaxyproject.org/training-material/api/contributors/kenza12.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/kenza12/"},{"name":"Thomas Duigou","email":"thomas.duigou@inrae.fr","orcid":"0000-0002-2649-2950","linkedin":"thomas-duigou-ba281730","joined":"2022-03","id":"tduigou","url":"https://training.galaxyproject.org/training-material/api/contributors/tduigou.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/tduigou/"},{"name":"Joan Hérisson","email":"joan.herisson@univ-evry.fr","orcid":"0000-0001-9741-0847","linkedin":"joanherisson","joined":"2022-03","id":"breakthewall","url":"https://training.galaxyproject.org/training-material/api/contributors/breakthewall.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/breakthewall/"},{"name":"Guillaume Gricourt","email":"guillaume.gricourt@inrae.fr","orcid":"0000-0003-0143-5535","linkedin":"guillaume-gricourt","joined":"2022-03","id":"guillaume-gricourt","url":"https://training.galaxyproject.org/training-material/api/contributors/guillaume-gricourt.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/guillaume-gricourt/"},{"name":"Ioana Popescu","email":"ioana.popescu@univ-evry.fr","orcid":"0000-0003-2547-8935","twitter":"ioanagrig","linkedin":"ioana-popescu-8207a026","joined":"2022-03","id":"ioanagry","url":"https://training.galaxyproject.org/training-material/api/contributors/ioanagry.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/ioanagry/"},{"name":"Jean-Loup Faulon","email":"Jean-loup.Faulon@inrae.fr","orcid":"0000-0003-4274-2953","linkedin":"jean-loup-faulon-6b85976","twitter":"jeanloupfaulon","joined":"2022-03","elixir_node":"fr","affiliations":["elixir-europe"],"id":"jfaulon","url":"https://training.galaxyproject.org/training-material/api/contributors/jfaulon.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/jfaulon/"}],"recordings":[{"captioners":["kenza12"],"date":"2022-05-11","length":"3M","youtube_id":"0ItpHuSM7t0","speakers":["breakthewall"],"type":"Demo"}],"js_requirements":{"mathjax":null,"mermaid":false},"short_id":"T00273","url":"/topics/synthetic-biology/tutorials/basic_assembly_analysis/tutorial.html","topic_name":"synthetic-biology","tutorial_name":"basic_assembly_analysis","dir":"topics/synthetic-biology/tutorials/basic_assembly_analysis","symlink":null,"id":"synthetic-biology/basic_assembly_analysis","ref_tutorials":["<p>Synthetic biology is a novel engineering discipline which requires computational tools for the design of metabolic pathways for the production of chemicals such as SynBioCAD portal which is the first Galaxy set of tools for synthetic biology and metabolic engineering (<span class=\"citation\"><a href=\"#Hrisson2022\">Hérisson <i>et al.</i> 2022</a></span>).</p>\n\n<p>In this tutorial, we will use a set of tools from the <strong>Genetic Design - BASIC Assembly Workflow</strong> (https://galaxy-synbiocad.org) which will enable you to design plasmids implementing metabolic pathways for the bioproduction of lycopene in <em>E.coli</em> (one of the preferred host cell for microbial biochemicals production).</p>\n\n<p>Lycopene is a potent antioxidant and has been widely used in the fields of pharmaceuticals, nutraceuticals, and cosmetics. It’s widely found in fruits including tomato, watermelon, guava, and papaya but the extraction method of lycopene from these natural sources is expensive, complicated and cannot match the large market demand.</p>\n\n<p>To address this demand, synthetic biology and metabolic engineering have been employed to develop microbial cell factories (e.g. <em>E.coli</em> strains) for lycopene production.</p>\n\n<p>To design plasmids encoding lycopene bioproducing pathways, we will use the BASIC assembly method (as described in <span class=\"citation\"><a href=\"#Storch2015\">Storch <i>et al.</i> 2015</a></span>) which relies on orthogonal linkers and type IIs restriction enzyme cleavage to provide a robust and accurate assembly of DNA parts into plasmid constructs. From these construct definition, the workflow will generate scripts enabling the automatic build of the plasmids as well as the transformation of strains using an Opentrons liquid handler robot. After downloading these scripts onto a computer connected to an Opentrons, one can perform the automated construction of the plasmids at the bench.</p>\n\n<p>The workflow scheme we will use is shown below. First, we will run the steps of this workflow individually so as not to neglect the understanding of the intermediate steps as well. Then, we will run the workflow automatically so that it itself retrieves the outputs from the previous step and gives them as input to the next tool.</p>\n\n<p><a href=\"../../images/basic_assembly_workflow.png\" rel=\"noopener noreferrer\"><img src=\"../../images/basic_assembly_workflow.png\" alt=\"Genetic Design - BASIC Assembly Workflow. \" width=\"975\" height=\"573\" loading=\"lazy\" /></a></p>\n\n<blockquote class=\"agenda\">\n  <agenda-title></agenda-title>\n\n  <p>In this tutorial, we will cover:</p>\n\n<ol id=\"markdown-toc\">\n  <li><a href=\"#data-preparation\" id=\"markdown-toc-data-preparation\">Data Preparation</a>    <ol>\n      <li><a href=\"#get-data\" id=\"markdown-toc-get-data\">Get data</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#find-enzymes-using-selenzyme\" id=\"markdown-toc-find-enzymes-using-selenzyme\">Find enzymes using <strong>Selenzyme</strong></a></li>\n  <li><a href=\"#generate-potential-constructs-from-sbml-file-using-basicdesign\" id=\"markdown-toc-generate-potential-constructs-from-sbml-file-using-basicdesign\">Generate potential constructs from SBML file using <strong>BasicDesign</strong></a></li>\n  <li><a href=\"#generating-python-scripts-using-dna-bot\" id=\"markdown-toc-generating-python-scripts-using-dna-bot\">Generating python scripts using <strong>DNA-Bot</strong></a></li>\n  <li><a href=\"#run-the-genetic-design---basic-assembly-workflow\" id=\"markdown-toc-run-the-genetic-design---basic-assembly-workflow\">Run the <strong>Genetic Design - BASIC Assembly Workflow</strong></a></li>\n</ol>\n\n</blockquote>\n\n<h1 id=\"data-preparation\">Data Preparation</h1>\n\n<p>First we need to upload and prepare the following inputs to analyze:</p>\n\n<ul>\n  <li>\n    <p>One SBML (Systems Biology Markup Language) file modeling a heterologous pathway producing lycopene such as those produced by the Pathway Analysis Workflow (https://galaxy-synbiocad.org).</p>\n  </li>\n  <li>\n    <p>The <code class=\"language-plaintext highlighter-rouge\">parts_for_lycopene.csv</code> file listing the parts to be used (linkers, backbone and promoters) in the constructions.</p>\n  </li>\n  <li>\n    <p>Two YAML files providing two examples of settings, i.e. providing the identifiers of the laboratory equipment and the parameters to be used in the Opentrons scripts.</p>\n  </li>\n</ul>\n\n<h2 id=\"get-data\">Get data</h2>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Data upload</hands-on-title>\n\n  <ol>\n    <li>Create a new history for this tutorial named <em>Genetic Design - BASIC Assembly Analysis</em>.</li>\n    <li>\n      <p>Import the input files from <a href=\"https://zenodo.org/record/6123887\">Zenodo</a>:</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>https://zenodo.org/record/6123887/files/dnabot_london_settings.yaml\nhttps://zenodo.org/record/6123887/files/dnabot_paris_settings.yaml\nhttps://zenodo.org/record/6123887/files/parts_for_lycopene.csv\nhttps://zenodo.org/record/6123887/files/rp_002_0011.xml\n</code></pre></div>      </div>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-importing-via-links\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-importing-via-links\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Importing via links</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Copy the link location</li>   <li>     <p>Click <i class=\"fas fa-upload\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-upload</span> <strong>Upload Data</strong> at the top of the tool panel</p>   </li>   <li>Select <i class=\"fa fa-edit\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-wf-edit</span> <strong>Paste/Fetch Data</strong></li>   <li>     <p>Paste the link(s) into the text field</p>   </li>   <li>     <p>Press <strong>Start</strong></p>   </li>   <li><strong>Close</strong> the window</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li>\n      <p>Rename the datasets if you want to shorten the file names.\nRename <code class=\"language-plaintext highlighter-rouge\">rp_002_0011.xml</code> to <code class=\"language-plaintext highlighter-rouge\">pathway.xml</code>.</p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-renaming-a-dataset\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-renaming-a-dataset\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Renaming a dataset</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Click on the <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> <strong>pencil icon</strong> for the dataset to edit its attributes</li>   <li>In the central panel, change the <strong>Name</strong> field</li>   <li>Click the <strong>Save</strong> button</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h1 id=\"find-enzymes-using-selenzyme\">Find enzymes using <strong>Selenzyme</strong></h1>\n\n<p>At first, a pathway generated by the <strong>Pathway Analysis workflow</strong> (https://galaxy-synbiocad.org) is provided as input to the Selenzyme tool (<span class=\"citation\"><a href=\"#Carbonell2018\">Carbonell <i>et al.</i> 2018</a></span>). Selenzyme searches for enzymes corresponding to each reaction of the pathway. It performs a reaction similarity search in the reference reaction database <a href=\"https://www.metanetx.org\">MetaNetX</a> and outputs an updated SBML file annotated with the enzyme UniProt IDs.\nThe tool provides several scores that can be combined in order to define an overall score. Scores are given for reaction similarity, conservation based on a multiple sequence alignment, phylogenetic distance between source organism and host, and additional scores calculated from sequence properties as shown in the example bellow.</p>\n\n<p><a href=\"../../images/selenzy_tool.png\" rel=\"noopener noreferrer\"><img src=\"../../images/selenzy_tool.png\" alt=\"Selenzyme Results. \" width=\"1836\" height=\"695\" loading=\"lazy\" /></a></p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Annotate enzymes with Uniprot IDs from a SBML pathway</hands-on-title>\n\n  <ol>\n    <li>Run <span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/tduigou/selenzy/selenzy-wrapper/0.2.0\" title=\"Selenzyme tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Selenzyme</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.2.0)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Pathway (SBML)”</em>: Select <code class=\"language-plaintext highlighter-rouge\">pathway.xml</code> from your current history</li>\n        <li>In <em>“Advanced Options”</em>:\n          <ul>\n            <li><em>“Host taxon ID”</em>: Leave the default value <code class=\"language-plaintext highlighter-rouge\">83333</code>. This stands for using E. coli as the chassis host.</li>\n            <li><em>“Comma separated taxon IDs of output enzyme sequences”</em>: <em>enter <code class=\"language-plaintext highlighter-rouge\">553</code> which is the taxon ID of the Pantoea ananatis strain from which we want to extact enzymes</em></li>\n          </ul>\n        </li>\n      </ul>\n\n      <blockquote class=\"comment\">\n        <comment-title></comment-title>\n\n        <p>This tool will produce annotated pathway with UniProt IDs in XML and CSV format.</p>\n      </blockquote>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>How are identified the enzyme in the SBML file?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <ol>\n      <li>Enzyme are identified by their UniProt ID</li>\n    </ol>\n\n  </blockquote>\n\n</blockquote>\n\n<h1 id=\"generate-potential-constructs-from-sbml-file-using-basicdesign\">Generate potential constructs from SBML file using <strong>BasicDesign</strong></h1>\n\n<p>Second, the BasicDesign tool extracts enzyme IDs contained in the SBML (previously produced by Selenzyme) to generate genetic constructs compliant with the BASIC assembly approach. It uses as input an SBML file annotated with enzyme IDs for each reaction, and optionally one or several CSV files listing by their IDs the linkers, the promoters and the backbone used (<code class=\"language-plaintext highlighter-rouge\">parts_for_lycopene.csv</code>). Example, below:</p>\n\n<p><em>id,type,sequence,comment</em><br />\n<em>L1,neutral linker,,</em><br />\n<em>L2,neutral linker,,</em><br />\n<em>L3,neutral linker,,</em></p>\n\n<p>For <strong>linkers</strong>, the type annotation should be one of <em>neutral linker</em>, <em>methylated linker</em>, <em>peptide fusion linker</em> or <em>RBS linker</em>. For <strong>user parts</strong>, type should be one of <em>backbone</em> or <em>constitutive promoter</em>. Other type will raise a warning and will be omited.</p>\n\n<p>BasicDesign converts the SBML file into CSV files describing the DNA-parts to be included into each construct (in an operon format, i.e. with only one promoter) and enumerate possible combinations of promoters, RBSs and enzymes into constructs. Depending on the numbers of enzymes per reaction, of RBSs and promoters available, and whether or not to perform CDS permutation within the operon, the number of constructs may vary.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Generate genetic constructs from the previously annotated SBML file</hands-on-title>\n\n  <ol>\n    <li>Run <span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/tduigou/rpbasicdesign/rpbasicdesign/0.3.4\" title=\"BasicDesign tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>BasicDesign</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.3.4)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“rpSBML file”: <code class=\"language-plaintext highlighter-rouge\">uniprot_ids</code> (output of <strong>Selenzyme</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> in xml format)</em></li>\n        <li>In <em>“Advanced Options”</em>:\n          <ul>\n            <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Linkers and user parts”: Select <code class=\"language-plaintext highlighter-rouge\">parts_for_lycopene.csv</code> from your current history in csv format</em></li>\n          </ul>\n        </li>\n      </ul>\n\n      <blockquote class=\"comment\">\n        <comment-title></comment-title>\n\n        <p>This tool will output a CSV constructs file (listing the constructs to be built), where each row corresponds to one construct and consists of a sequence of BASIC linker and DNA part IDs. The two other outputted CSV files provide the plate coordinates of (i) the BASIC linkers and (ii) the DNA-parts that the user will need to provide. Additionally, one SBOL (Synthetic Biology Open Language) file is produced for each construct generated. These files can be downloaded and visualized using online tools such as <a href=\"https://visbol.org/\">VisBOL</a>.</p>\n      </blockquote>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>How many constructs did you get ?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <ol>\n      <li>88 construct designs were generated in CSV and SBOL format.</li>\n    </ol>\n\n  </blockquote>\n\n</blockquote>\n\n<h1 id=\"generating-python-scripts-using-dna-bot\">Generating python scripts using <strong>DNA-Bot</strong></h1>\n\n<p>In the last step, the DNA-Bot tool (<span class=\"citation\"><a href=\"#Storch2020\">Storch <i>et al.</i> 2020</a></span>) reads the list of constructs (previously produced by BasicDesign) and the DNA-parts position on the source plates and generates a set of python scripts to drive an Opentrons liquid handling robot for building the the plasmids. Optional parameters can be set by the user to define the plastic labwares to be used, and set protocol parameters such as washing or incubation times for purification step (<code class=\"language-plaintext highlighter-rouge\">dnabot_paris_settings.yaml</code>).</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Generate DNA Bot python scripts</hands-on-title>\n\n  <ol>\n    <li>Run <span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/tduigou/dnabot/dnabot/3.1.0\" title=\"DNA-Bot tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>DNA-Bot</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 3.1.0)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Source Construct”</em>: <code class=\"language-plaintext highlighter-rouge\">Constructs</code> (output of <strong>BasicDesign</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n        <li><i class=\"far fa-copy\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-files</span> <em>“Plate files”</em>: Select these two files: <code class=\"language-plaintext highlighter-rouge\">User parts plate</code> (output of <strong>BasicDesign</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>), <code class=\"language-plaintext highlighter-rouge\">Biolegio plate</code> (output of <strong>BasicDesign</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>) with <strong>Multiple datasets</strong>.</li>\n        <li>In <em>“Advanced Options”</em>:\n          <ul>\n            <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Yaml file providing labware IDs and parameter to be used (Optionally)”</em>: Select either <code class=\"language-plaintext highlighter-rouge\">dnabot_paris_settings.yaml</code> or <code class=\"language-plaintext highlighter-rouge\">dnabot_london_settings.yaml</code> from your history)</li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <!--SNIPPET-->\n  <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-select-multiple-datasets\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-select-multiple-datasets\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Select multiple datasets</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ol>   <li>Click on <i class=\"far fa-copy\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-files</span> <strong>Multiple datasets</strong></li>   <li>Select several files by keeping the <kbd>Ctrl</kbd> (or <kbd>COMMAND</kbd>) key pressed and clicking on the files of interest</li> </ol> </blockquote>\n  <p><!--END_SNIPPET--></p>\n\n  <blockquote class=\"comment\">\n    <comment-title></comment-title>\n\n    <p>This tool will output DNA-Bot scripts in tar format. You need to download it and decompress the archive. After downloading these scripts onto a computer connected to an Opentrons, one can perform the automated construction of the plasmids at the bench. Additional metadata meaningful to keep track of parameters are also outputted by the tool.\n<a href=\"../../images/dnabot_outputs.png\" rel=\"noopener noreferrer\"><img src=\"../../images/dnabot_outputs.png\" alt=\"Dnabot Outputs. \" width=\"470\" height=\"611\" loading=\"lazy\" /></a>\n<a href=\"../../images/BASIC_ASSEMBLY_WF.png\" rel=\"noopener noreferrer\"><img src=\"../../images/BASIC_ASSEMBLY_WF.png\" alt=\"BASIC assembly workflow. \" width=\"1849\" height=\"944\" loading=\"lazy\" /></a></p>\n  </blockquote>\n</blockquote>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>Looking at the scripts names, can you figure out the main steps of DNA-Bot ?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <ol>\n      <li>DNA-Bot outputs python scripts that implement the 4 assembly steps: clip reactions, purification, assembly and strain transformation. In short, the <strong>Clip reactions</strong> step prepares the mixes for the ligation of the individual DNA parts with the linkers; the <strong>Purification</strong> step purifies the linker-ligated DNA parts using magnetic beads and the Opentrons magnetic module; the <strong>Assembly</strong> step mixes the DNA purified parts to build the final constructs; while the <strong>Transformation</strong> step transforms the chassis micro-organism with the plasmid and inoculates onto agar.</li>\n    </ol>\n\n  </blockquote>\n\n</blockquote>\n\n<h1 id=\"run-the-genetic-design---basic-assembly-workflow\">Run the <strong>Genetic Design - BASIC Assembly Workflow</strong></h1>\n\n<p>In this section, you can run the Genetic Design - BASIC Assembly Workflow more easily and fastly following these instructions:</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Execute the entire workflow in one go.</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Import the workflow into Galaxy</p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"hands_on\">   <div class=\"box-title hands_on-title\" id=\"hands-on-importing-and-launching-a-gtn-workflow\"><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i> Hands-on: Importing and launching a GTN workflow</div>   <div class=\"show-when-galaxy-proxy-active\"> <span class=\"workflow\" data-workflow=\"https://training.galaxyproject.org/training-material/api/ga4gh/trs/v2/tools/synthetic-biology-basic_assembly_analysis/versions/genetic_design_basic_assembly\">Launch <strong>Genetic Design - Basic Assembly Workflow</strong> <i class=\"fas fa-share-alt\" aria-hidden=\"true\"></i></span> (<a href=\"https://github.com/galaxyproject/training-material/blob/main/topics/synthetic-biology/tutorials/basic_assembly_analysis/workflows/Genetic_Design_BASIC_Assembly.ga\">View on GitHub</a>, <a href=\"https://training.galaxyproject.org/training-material/topics/synthetic-biology/tutorials/basic_assembly_analysis/workflows/Genetic_Design_BASIC_Assembly.ga\">Download workflow</a>) workflow. </div>   <div class=\"hide-when-galaxy-proxy-active\"> Click to  <a href=\"https://my.galaxy.training/?path=/workflows/trs_import%3Frun_form=true%26trs_url=https://training.galaxyproject.org/training-material/api/ga4gh/trs/v2/tools/synthetic-biology-basic_assembly_analysis/versions/genetic_design_basic_assembly\">     Launch <strong>Genetic Design - Basic Assembly Workflow</strong> <i class=\"fas fa-share-alt\" aria-hidden=\"true\"></i> </a> (<a href=\"https://github.com/galaxyproject/training-material/blob/main/topics/synthetic-biology/tutorials/basic_assembly_analysis/workflows/Genetic_Design_BASIC_Assembly.ga\">View on GitHub</a>, <a href=\"https://training.galaxyproject.org/training-material/topics/synthetic-biology/tutorials/basic_assembly_analysis/workflows/Genetic_Design_BASIC_Assembly.ga\">Download workflow</a>) </div>   <!--SNIPPET-->   <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-if-this-does-not-work\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-if-this-does-not-work\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: If this does not work</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Click on <em>Workflow</em> on the top menu bar of Galaxy. You will see a list of all your workflows.</li>   <li>Click on <i class=\"fas fa-upload\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-upload</span> <strong>Import</strong> at the top-right of the screen</li>   <li>Paste the following URL into the box labelled <em>“Archived Workflow URL”</em>: <code class=\"language-plaintext highlighter-rouge\">https://training.galaxyproject.org/training-material/topics/synthetic-biology/tutorials/basic_assembly_analysis/workflows/Genetic_Design_BASIC_Assembly.ga</code></li>   <li>Click the <strong>Import workflow</strong> button</li> </ul>   <p>Below is a short video demonstrating how to import a workflow from GitHub using this procedure:</p>   <figure> <iframe credentialless=\"\" allowfullscreen=\"\" referrerpolicy=\"no-referrer\" sandbox=\"allow-scripts allow-same-origin\" allow=\"accelerometer 'none'; ambient-light-sensor 'none'; autoplay 'none'; battery 'none'; bluetooth 'none'; browsing-topics 'none'; camera 'none'; ch-ua 'none'; display-capture 'none'; domain-agent 'none'; document-domain 'none'; encrypted-media 'none'; execution-while-not-rendered 'none'; execution-while-out-of-viewport 'none'; gamepad 'none'; geolocation 'none'; gyroscope 'none'; hid 'none'; identity-credentials-get 'none'; idle-detection 'none'; keyboard-map 'none'; local-fonts 'none'; magnetometer 'none'; microphone 'none'; midi 'none'; navigation-override 'none'; otp-credentials 'none'; payment 'none'; picture-in-picture 'none'; publickey-credentials-create 'none'; publickey-credentials-get 'none'; screen-wake-lock 'none'; serial 'none'; speaker-selection 'none'; sync-xhr 'none'; usb 'none'; web-share 'none'; window-management 'none'; xr-spatial-tracking 'none'\" csp=\"sandbox allow-scripts allow-same-origin;\" width=\"560\" height=\"315\" src=\"https://www.youtube-nocookie.com/embed/hoP36Te5wko\" title=\"Importing a workflow from URL\" frameborder=\"0\" loading=\"lazy\"></iframe> <figcaption>   <span class=\"figcaption-prefix\"><strong>Video</strong>:</span> Importing a workflow from URL</figcaption> </figure> </blockquote>   <p><!--END_SNIPPET--></p> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li>Click on <em>Workflow</em> on the top menu bar of Galaxy. You will see <strong>Genetic Design - Basic Assembly Workflow</strong></li>\n    <li>Click on the <i class=\"fas fa-play\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">workflow-run</span> (<em>Run workflow</em>) button next to your workflow</li>\n    <li>Provide the workflow with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Pathway (SBML)”:</em> Select <code class=\"language-plaintext highlighter-rouge\">pathway.xml</code> from your current history</li>\n        <li><em>“Host taxon ID”</em>: Leave the default value <code class=\"language-plaintext highlighter-rouge\">83333</code>. This stands for using E. coli as the chassis host.</li>\n        <li><em>“Comma separated taxon IDs of output enzyme sequences”</em>: enter <code class=\"language-plaintext highlighter-rouge\">553</code> which is the taxon ID of the Pantoea ananatis strain from which we want to extact enzymes</li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Linkers and user parts”: Select <code class=\"language-plaintext highlighter-rouge\">parts_for_lycopene.csv</code> from your current history in csv format</em></li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“DNA-Bot settings (Optionally)”</em>: Select either <code class=\"language-plaintext highlighter-rouge\">dnabot_paris_settings.yaml</code> or <code class=\"language-plaintext highlighter-rouge\">dnabot_london_settings.yaml</code> from your history)</li>\n      </ul>\n\n      <blockquote class=\"comment\">\n        <comment-title></comment-title>\n\n        <p>All the outputs will be automatically generated and identical to the previous ones.</p>\n      </blockquote>\n    </li>\n  </ol>\n</blockquote>\n\n"],"ref_slides":[],"hands_on":true,"slides":false,"mod_date":"2024-05-31 14:27:26 +0000","pub_date":"2022-05-12 13:33:35 +0000","version":20,"workflows":[{"workflow":"Genetic_Design_BASIC_Assembly.ga","tests":false,"url":"https://training.galaxyproject.org/training-material/topics/synthetic-biology/tutorials/basic_assembly_analysis/workflows/Genetic_Design_BASIC_Assembly.ga","path":"topics/synthetic-biology/tutorials/basic_assembly_analysis/workflows/Genetic_Design_BASIC_Assembly.ga","wfid":"synthetic-biology-basic_assembly_analysis","wfname":"genetic_design_basic_assembly","trs_endpoint":"https://training.galaxyproject.org/training-material/api/ga4gh/trs/v2/tools/synthetic-biology-basic_assembly_analysis/versions/genetic_design_basic_assembly","license":null,"creators":[],"name":"Genetic Design (BASIC Assembly)","title":"Genetic Design (BASIC Assembly)","test_results":null,"modified":"2024-06-23 00:06:11 +0000","mermaid":"flowchart TD\n  0[\"ℹ️ Input Dataset\\nPathway SBML\"];\n  style 0 stroke:#2c3143,stroke-width:4px;\n  1[\"ℹ️ Input Parameter\\nHost taxon ID\"];\n  style 1 fill:#ded,stroke:#393,stroke-width:4px;\n  2[\"ℹ️ Input Parameter\\nEnzyme taxon IDs\"];\n  style 2 fill:#ded,stroke:#393,stroke-width:4px;\n  3[\"ℹ️ Input Dataset\\nLinkers and user parts\"];\n  style 3 stroke:#2c3143,stroke-width:4px;\n  4[\"ℹ️ Input Dataset\\nDNA-Bot settings\"];\n  style 4 stroke:#2c3143,stroke-width:4px;\n  5[\"Selenzyme\"];\n  2 -->|output| 5;\n  1 -->|output| 5;\n  0 -->|output| 5;\n  54b833fa-ec4f-458a-b085-23211f4e56ca[\"Output\\nUniprot IDs\"];\n  5 --> 54b833fa-ec4f-458a-b085-23211f4e56ca;\n  style 54b833fa-ec4f-458a-b085-23211f4e56ca stroke:#2c3143,stroke-width:4px;\n  6[\"BasicDesign\"];\n  3 -->|output| 6;\n  5 -->|uniprot_ids| 6;\n  7[\"DNA-Bot\"];\n  4 -->|output| 7;\n  6 -->|Constructs| 7;\n  6 -->|User parts plate| 7;\n  6 -->|Biolegio plate| 7;"}],"api":"https://training.galaxyproject.org/training-material/api/topics/synthetic-biology/tutorials/basic_assembly_analysis/tutorial.json","tools":["toolshed.g2.bx.psu.edu/repos/tduigou/dnabot/dnabot/3.1.0","toolshed.g2.bx.psu.edu/repos/tduigou/rpbasicdesign/rpbasicdesign/0.3.4","toolshed.g2.bx.psu.edu/repos/tduigou/selenzy/selenzy-wrapper/0.2.0"],"supported_servers":{"exact":[],"inexact":[]},"topic_name_human":"Synthetic Biology","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[{"name":"dnabot","owner":"tduigou","revisions":"ec9cef4b5b5a","tool_panel_section_label":"Synthetic Biology","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"rpbasicdesign","owner":"tduigou","revisions":"de9f53630349","tool_panel_section_label":"Synthetic Biology","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"selenzy","owner":"tduigou","revisions":"34a9d136a5bf","tool_panel_section_label":"Synthetic Biology","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"}]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools:\n- name: dnabot\n  owner: tduigou\n  revisions: ec9cef4b5b5a\n  tool_panel_section_label: Synthetic Biology\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: rpbasicdesign\n  owner: tduigou\n  revisions: de9f53630349\n  tool_panel_section_label: Synthetic Biology\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: selenzy\n  owner: tduigou\n  revisions: 34a9d136a5bf\n  tool_panel_section_label: Synthetic Biology\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n","tours":false,"video":false,"slides_recordings":false,"translations":{"tutorial":[],"slides":[],"video":false},"license":"CC-BY-4.0","type":"tutorial"}