{"layout":"tutorial_hands_on","title":"VGP assembly pipeline - short version","zenodo_link":"https://zenodo.org/record/5887339","level":"Intermediate","tags":["pacbio","eukaryote","VGP"],"questions":["What combination of tools can produce the highest quality assembly of vertebrate genomes?","How can we evaluate how good it is?"],"objectives":["Learn the tools necessary to perform a de novo assembly of a vertebrate genome","Evaluate the quality of the assembly"],"time_estimation":"1h","key_points":["The VGP pipeline allows to generate error-free, near gapless reference-quality genome assemblies","The assembly can be divided in four main stages: genome profile analysis, HiFi long read phased assembly with hifiasm, Bionano hybrid scaffolding and Hi-C hybrid scaffolding"],"contributors":[{"name":"Delphine Lariviere","email":"delphine.lariviere@galaxy.org","joined":"2017-09","orcid":"0000-0001-6421-3484","id":"delphine-l","url":"https://training.galaxyproject.org/training-material/api/contributors/delphine-l.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/delphine-l/"},{"name":"Alex Ostrovsky","email":"a.ostrovsky@mac.com","orcid":"0000-0002-7901-7109","joined":"2019-06","id":"astrovsky01","url":"https://training.galaxyproject.org/training-material/api/contributors/astrovsky01.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/astrovsky01/"},{"name":"Cristóbal Gallardo","joined":"2020-11","elixir_node":"de","orcid":"0000-0002-5752-2155","former_affiliations":["uni-freiburg","elixir-europe"],"id":"gallardoalba","url":"https://training.galaxyproject.org/training-material/api/contributors/gallardoalba.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/gallardoalba/"},{"name":"Brandon Pickett","joined":"2022-01","id":"pickettbd","url":"https://training.galaxyproject.org/training-material/api/contributors/pickettbd.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/pickettbd/"},{"name":"Linelle Abueg","joined":"2022-01","id":"abueg","url":"https://training.galaxyproject.org/training-material/api/contributors/abueg.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/abueg/"},{"name":"Anton Nekrutenko","email":"anton@nekrut.org","joined":"2017-09","id":"nekrut","url":"https://training.galaxyproject.org/training-material/api/contributors/nekrut.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/nekrut/"}],"abbreviations":{"primary assembly":"homozygous regions of the genome plus one set of alleles for the heterozygous loci","alternate assembly":"alternate loci not represented in the primary assembly","QV":"assembly consensus quality","unitig":"A uniquely assembleable subset of overlapping fragments. A unitig is an assembly of fragments for which there are no competing internal overlaps. A unitig is either a correctly assembled portion of a contig or a collapsed assembly of several high-fidelity copies of a repeat.","contigs":"contiguous sequences in an assembly","collection":"Galaxy's way to represent multiple datasets as a single interface entity","collections":"Galaxy's way to represent multiple datasets as a single interface entity","scaffold":"one or more contigs joined by gap sequence","scaffolds":"one or more contigs joined by gap sequence","Hi-C":"all-versus-all chromatin conformation capture","HiFi":"high fidelity reads","GWS":"Galaxy Workflow System","VGP":"Vertebrate Genome Project","G10K":"Genome 10K"},"js_requirements":{"mathjax":null,"mermaid":false},"short_id":"T00040","url":"/topics/assembly/tutorials/vgp_workflow_training/tutorial.html","topic_name":"assembly","tutorial_name":"vgp_workflow_training","dir":"topics/assembly/tutorials/vgp_workflow_training","symlink":null,"id":"assembly/vgp_workflow_training","ref_tutorials":["<p>The Vertebrate Genome Project (VGP), a project of the Genome 10K (G10K) Consortium, aims to generate high-quality, near error-free, gap-free, chromosome-level, haplotype-phased, annotated reference genome assemblies for every vertebrate species (<span class=\"citation\"><a href=\"#Rhie2021\">Rhie <i>et al.</i> 2020</a></span>). The VGP has developed a fully automated <em>de-novo</em> genome assembly pipeline, which uses a combination of three different technologies: Pacbio high fidelity reads (HiFi), all-versus-all chromatin conformation capture (Hi-C) data, and (optionally) BioNano optical map data. The pipeline consists of nine distinct workflows. This tutorial provides a quick example of how to run these workflows for one particular scenario, which is, based on our experience, the most common: assembling genomes using <abbr title=\"high fidelity reads\">HiFi</abbr> Reads combined with <abbr title=\"all-versus-all chromatin conformation capture\">Hi-C</abbr> data (both generated from the same individual).</p>\n\n<blockquote class=\"agenda\">\n  <agenda-title></agenda-title>\n\n  <p>In this tutorial, we will cover:</p>\n\n<ol id=\"markdown-toc\">\n  <li><a href=\"#getting-started-on-galaxy\" id=\"markdown-toc-getting-started-on-galaxy\">Getting started on Galaxy</a></li>\n  <li><a href=\"#the-vgp-galaxy-pipeline\" id=\"markdown-toc-the-vgp-galaxy-pipeline\">The VGP-Galaxy pipeline</a></li>\n  <li><a href=\"#getting-the-data\" id=\"markdown-toc-getting-the-data\">Getting the data</a>    <ol>\n      <li><a href=\"#uploading-fasta-datasets-from-zenodo\" id=\"markdown-toc-uploading-fasta-datasets-from-zenodo\">Uploading <code class=\"language-plaintext highlighter-rouge\">fasta</code> datasets from Zenodo</a></li>\n      <li><a href=\"#uploading-fastqsangergz-datasets-from-zenodo\" id=\"markdown-toc-uploading-fastqsangergz-datasets-from-zenodo\">Uploading <code class=\"language-plaintext highlighter-rouge\">fastqsanger.gz</code> datasets from Zenodo</a></li>\n      <li><a href=\"#organizing-the-data\" id=\"markdown-toc-organizing-the-data\">Organizing the data</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#importing-workflows\" id=\"markdown-toc-importing-workflows\">Importing workflows</a></li>\n  <li><a href=\"#performing-the-assembly\" id=\"markdown-toc-performing-the-assembly\">Performing the assembly</a>    <ol>\n      <li><a href=\"#genome-profile-analysis-wf1\" id=\"markdown-toc-genome-profile-analysis-wf1\">Genome profile analysis (WF1)</a></li>\n      <li><a href=\"#assembly-contiging-with-hifiasm-wf4\" id=\"markdown-toc-assembly-contiging-with-hifiasm-wf4\">Assembly (contiging) with <code class=\"language-plaintext highlighter-rouge\">hifiasm</code> (WF4)</a></li>\n      <li><a href=\"#purging-duplicates-with-purge_dups\" id=\"markdown-toc-purging-duplicates-with-purge_dups\">Purging duplicates with <code class=\"language-plaintext highlighter-rouge\">purge_dups</code></a></li>\n      <li><a href=\"#hi-c-scaffolding\" id=\"markdown-toc-hi-c-scaffolding\">Hi-C scaffolding</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#conclusion\" id=\"markdown-toc-conclusion\">Conclusion</a></li>\n</ol>\n\n</blockquote>\n\n<h1 id=\"getting-started-on-galaxy\">Getting started on Galaxy</h1>\n\n<p>This tutorial assumes you are comfortable getting data into Galaxy, running jobs, managing history, etc. If you are unfamiliar with Galaxy, we recommend you visit the <a href=\"https://training.galaxyproject.org\">Galaxy Training Network</a>. Consider starting with the following trainings:</p>\n<ul>\n  <li><a href=\"/training-material/topics/introduction/tutorials/introduction/slides.html\">Introduction to Galaxy</a></li>\n  <li><a href=\"/training-material/topics/introduction/tutorials/galaxy-intro-101/tutorial.html\">Galaxy 101</a></li>\n  <li><a href=\"/training-material/topics/galaxy-interface/tutorials/get-data/slides.html\">Getting Data into Galaxy</a></li>\n  <li><a href=\"/training-material/topics/galaxy-interface/tutorials/collections/tutorial.html\">Using Dataset Collections</a></li>\n  <li><a href=\"/training-material/topics/galaxy-interface/tutorials/history/tutorial.html\">Understanding the Galaxy History System</a></li>\n  <li><a href=\"/training-material/topics/introduction/index.html\">Introduction to Galaxy Analyses</a></li>\n  <li><a href=\"/training-material/topics/galaxy-interface/tutorials/download-delete-data/tutorial.html\">Downloading and Deleting Data in Galaxy</a></li>\n</ul>\n\n<h1 id=\"the-vgp-galaxy-pipeline\">The VGP-Galaxy pipeline</h1>\n\n<p>The <abbr title=\"Vertebrate Genome Project\">VGP</abbr> assembly pipeline has a modular organization, consisting in ten workflows (Fig. 1). It can used with the following types of input data:</p>\n\n<table>\n  <thead>\n    <tr>\n      <th>Input data</th>\n      <th>Assembly quality</th>\n      <th>Analysis trajectory <br />(<a href=\"#figure-1\">Fig. 1)</a></th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>HiFi</td>\n      <td>The minimum requirement</td>\n      <td>A</td>\n    </tr>\n    <tr>\n      <td>HiFi + HiC</td>\n      <td>Better continuity</td>\n      <td>B</td>\n    </tr>\n    <tr>\n      <td>HiFi + BioNano</td>\n      <td>Better continuity</td>\n      <td>C</td>\n    </tr>\n    <tr>\n      <td>HiFi + Hi-C + BioNano</td>\n      <td>Even better continuity</td>\n      <td>D</td>\n    </tr>\n    <tr>\n      <td>HiFi + parental data</td>\n      <td>Better haplotype resolution</td>\n      <td>E</td>\n    </tr>\n    <tr>\n      <td>HiFi + parental data + Hi-C</td>\n      <td>Better haplotype resolution and improved continuity</td>\n      <td>F</td>\n    </tr>\n    <tr>\n      <td>HiFi + parental + BioNano</td>\n      <td>Better haplotype resolution and improved continuity</td>\n      <td>G</td>\n    </tr>\n    <tr>\n      <td>HiFi + parental data + Hi-C + BioNano</td>\n      <td>Better haplotype resolution and ultimate continuity</td>\n      <td>H</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>If this table “HiFi” and “Hi-C” are derived from the individual whose genome is being assembled. “Parental data” is high coverage Illumina data derived from parents of the individual being assembled. Datasets containing parental data are also called “<em>Trios</em>”. Each combination of input datasets is supported by an <em>analysis trajectory</em>: a combination of workflows designed for generating assembly given a particular combination of inputs. These trajectories are listed in the table above and shown in the figure below. We suggest at least 30✕ PacBio HiFi coverage and 30✕ Hi-C coverage per haplotype (parental genome); and up to 60✕ coverage to accurately assemble highly repetitive regions.</p>\n\n<figure id=\"figure-1\" style=\"max-width: 90%;\"><div style=\"overflow-x: auto\"><object data=\"../../images/vgp_assembly/VGP_workflow_modules.svg\" type=\"image/svg+xml\" alt=\"The nine workflows of Galaxy assembly pipeline. \"><img src=\"../../images/vgp_assembly/VGP_workflow_modules.png\" alt=\"The nine workflows of Galaxy assembly pipeline. \" />The nine workflows of Galaxy assembly pipeline.</object></div><a target=\"_blank\" href=\"../../images/vgp_assembly/VGP_workflow_modules.svg\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 1</strong>:</span> Eight analysis trajectories are possible depending on the combination of input data. A decision on whether or not to invoke Workflow 6 is based on the analysis of QC output of workflows 3, 4, or 5. Thicker lines connecting Workflows 7, 8, and 9 represent the fact that these workflows are invoked separately for each phased assembly (once for maternal and once for paternal).</figcaption></figure>\n<p><br />\nThe first stage of the pipeline is the generation of <em>k</em>-mer profiles of the raw reads to estimate genome size, heterozygosity, repetitiveness, and error rate necessary for parameterizing downstream workflows. The generation of <em>k</em>-mer counts can be done from HiFi data only (Workflow 1) or include data from parental reads for trio-based phasing (Workflow 2; trio is a combination of paternal sequencing data with that from an offspring that is being assembled). The second stage is the phased contig assembly. In addition to using only <abbr title=\"high fidelity reads\">HiFi</abbr> reads (Workflow 3), the contig building (contiging) step can leverage <abbr title=\"all-versus-all chromatin conformation capture\">Hi-C</abbr> (Workflow 4) or parental read data (Workflow 5) to produce fully-phased haplotypes (hap1/hap2 or parental/maternal assigned haplotypes), using <a href=\"https://github.com/chhylp123/hifiasm\"><code class=\"language-plaintext highlighter-rouge\">hifiasm</code></a>. The contiging workflows also produce a number of critical quality control (QC) metrics such as <em>k</em>-mer multiplicity profiles. Inspection of these profiles provides information to decide whether the third stage—purging of false duplication—is required. Purging (Workflow 6), using <a href=\"https://github.com/dfguan/purge_dups\"><code class=\"language-plaintext highlighter-rouge\">purge_dups</code></a> identifies and resolves haplotype-specific assembly segments incorrectly labeled as primary contigs, as well as heterozygous contig overlaps. This increases continuity and the quality of the final assembly. The purging stage is generally unnecessary for trio data for which reliable haplotype resolution is performed using <em>k</em>-mer profiles obtained from parental reads. The fourth stage, scaffolding, produces chromosome-level scaffolds using information provided by Bionano (Workflow 7), with <a href=\"https://bionano.com/software-downloads/\"><code class=\"language-plaintext highlighter-rouge\">Bionano Solve</code></a> (optional) and Hi-C (Workflow 8) data and <a href=\"https://github.com/c-zhou/yahsscaffolding\"><code class=\"language-plaintext highlighter-rouge\">YaHS</code></a> algorithms. A final stage of decontamination (Workflow 9) removes exogenous sequences (e.g., viral and bacterial sequences) from the scaffolded assembly. A separate workflow (WF0) is used for mitochondrial assembly.</p>\n\n<blockquote class=\"comment\">\n  <comment-title>A note on data quality</comment-title>\n  <p>We suggest at least 30✕ PacBio HiFi coverage and 30✕ Hi-C coverage per haplotype (parental genome); and up to 60✕ coverage to accurately assemble highly repetitive regions.</p>\n</blockquote>\n\n<h1 id=\"getting-the-data\">Getting the data</h1>\n\n<p>The following steps use PacBio <abbr title=\"high fidelity reads\">HiFi</abbr> and Illumina <abbr title=\"all-versus-all chromatin conformation capture\">Hi-C</abbr> data from baker’s yeast (<a href=\"https://en.wikipedia.org/wiki/Saccharomyces_cerevisiae\"><em>Saccharomyces cerevisiae</em></a>). The tutorial represents trajectory <strong>B</strong> from Fig. 1 above. For this tutorial, the first step is to get the datasets from Zenodo. Specifically, we will be uploading two datasets:</p>\n\n<ol>\n  <li>A set of PacBio <abbr title=\"high fidelity reads\">HiFi</abbr> reads in <code class=\"language-plaintext highlighter-rouge\">fasta</code> format</li>\n  <li>A set of Illumina <abbr title=\"all-versus-all chromatin conformation capture\">Hi-C</abbr> reads in <code class=\"language-plaintext highlighter-rouge\">fastqsanger.gz</code> format</li>\n</ol>\n\n<h2 id=\"uploading-fasta-datasets-from-zenodo\">Uploading <code class=\"language-plaintext highlighter-rouge\">fasta</code> datasets from Zenodo</h2>\n\n<p>The following two steps demonstrate how to upload three PacBio <abbr title=\"high fidelity reads\">HiFi</abbr> datasets into you Galaxy history.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title><b>Uploading <tt>FASTA</tt> datasets from Zenodo</b></hands-on-title>\n\n  <ol>\n    <li>\n      <p>Create a new history for this tutorial</p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-creating-a-new-history\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-creating-a-new-history\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Creating a new history</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <p>Click the <i class=\"fas fa-plus\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">new-history</span> icon at the top of the history panel:</p>   <p><img src=\"/training-material/shared/images/history_create_new.svg\" alt=\"UI for creating new history\" /></p>   <!-- the original drawing can be found here https://docs.google.com/drawings/d/1cCBrLAo4kDGic5QyB70rRiWJAKTenTU8STsKDaLcVU8/edit?usp=sharing --> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li>\n      <p>Copy the following URLs into clipboard.</p>\n\n      <p>you can do this by clicking on <i class=\"far fa-copy\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">copy</span> button in the right upper corner of the box below. It will appear if you mouse over the box.)</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>https://zenodo.org/record/6098306/files/HiFi_synthetic_50x_01.fasta\nhttps://zenodo.org/record/6098306/files/HiFi_synthetic_50x_02.fasta\nhttps://zenodo.org/record/6098306/files/HiFi_synthetic_50x_03.fasta\n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Upload datasets into Galaxy.</p>\n      <ul>\n        <li>set the datatype to <code class=\"language-plaintext highlighter-rouge\">fasta</code></li>\n      </ul>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-importing-via-links\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-importing-via-links\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Importing via links</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Copy the link location</li>   <li>     <p>Click <i class=\"fas fa-upload\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-upload</span> <strong>Upload Data</strong> at the top of the tool panel</p>   </li>   <li>Select <i class=\"fa fa-edit\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-wf-edit</span> <strong>Paste/Fetch Data</strong></li>   <li>     <p>Paste the link(s) into the text field</p>   </li>   <li>     <p>Change <strong>Type (set all):</strong> from “Auto-detect” to <code class=\"language-plaintext highlighter-rouge\">fasta</code></p>   </li>   <li>     <p>Press <strong>Start</strong></p>   </li>   <li><strong>Close</strong> the window</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-upload-fasta-datasets-via-links\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-upload-fasta-datasets-via-links\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Upload fasta datasets via links</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <p>Uploading <code class=\"language-plaintext highlighter-rouge\">fasta</code> or <code class=\"language-plaintext highlighter-rouge\">fasta.gz</code> datasets via URL.</p>   <p><img src=\"/training-material/faqs/galaxy/images/upload_fasta_via_url.png\" alt=\"UploadAnimatedPng\" /></p> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h2 id=\"uploading-fastqsangergz-datasets-from-zenodo\">Uploading <code class=\"language-plaintext highlighter-rouge\">fastqsanger.gz</code> datasets from Zenodo</h2>\n\n<p>Illumina <abbr title=\"all-versus-all chromatin conformation capture\">Hi-C</abbr> data is uploaded in essentially the same way as shown in the following two steps.</p>\n\n<blockquote class=\"warning\">\n  <warning-title>DANGER: Make sure you choose correct format!</warning-title>\n  <p>When selecting datatype in “<strong>Type (set all)</strong>” drop-down, make sure you select <code class=\"language-plaintext highlighter-rouge\">fastaqsanger</code> or <code class=\"language-plaintext highlighter-rouge\">fastqsanger.gz</code> BUT NOT <code class=\"language-plaintext highlighter-rouge\">fastqcssanger</code> or anything else!</p>\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title><b>Uploading <tt>fastqsanger.gz</tt> datasets from Zenodo</b></hands-on-title>\n\n  <ol>\n    <li>Copy the following URLs into clipboard.\n      <ul>\n        <li>you can do this by clicking on <i class=\"far fa-copy\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">copy</span> button in the right upper corner of the box below. It will appear if you mouse over the box.</li>\n      </ul>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>https://zenodo.org/record/5550653/files/SRR7126301_1.fastq.gz\nhttps://zenodo.org/record/5550653/files/SRR7126301_2.fastq.gz\n</code></pre></div>      </div>\n    </li>\n    <li>Upload datasets into Galaxy.\n      <ul>\n        <li>set the datatype to <code class=\"language-plaintext highlighter-rouge\">fastqsanger.gz</code></li>\n      </ul>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-importing-via-links-1\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-importing-via-links-1\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Importing via links</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Copy the link location</li>   <li>     <p>Click <i class=\"fas fa-upload\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-upload</span> <strong>Upload Data</strong> at the top of the tool panel</p>   </li>   <li>Select <i class=\"fa fa-edit\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-wf-edit</span> <strong>Paste/Fetch Data</strong></li>   <li>     <p>Paste the link(s) into the text field</p>   </li>   <li>     <p>Change <strong>Type (set all):</strong> from “Auto-detect” to <code class=\"language-plaintext highlighter-rouge\">fasta</code></p>   </li>   <li>     <p>Press <strong>Start</strong></p>   </li>   <li><strong>Close</strong> the window</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-upload-fastqsanger-datasets-via-links\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-upload-fastqsanger-datasets-via-links\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Upload fastqsanger datasets via links</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <p>Uploading <code class=\"language-plaintext highlighter-rouge\">fastqsanger</code> or <code class=\"language-plaintext highlighter-rouge\">fastqsanger.gz</code> datasets via URL.</p>   <ol>   <li>     <p>Click on <strong>Upload Data</strong> on the top of the left panel:</p>     <p><img src=\"/training-material/faqs/galaxy/images/upload_data_button.png\" alt=\"UploadDataButton\" /></p>   </li>   <li>     <p>Click on <strong>Paste/Fetch</strong>:</p>     <p><img src=\"/training-material/faqs/galaxy/images/paste_fetch_data_button.png\" alt=\"PasteFetchButton\" /></p>   </li>   <li>     <p>Paste URL into text box that would appear:</p>     <p><img src=\"/training-material/faqs/galaxy/images/paste_fetch_data_modal.png\" alt=\"PasteFetchModal\" /></p>   </li>   <li>     <p>Set <strong>Type (set all)</strong> to <code class=\"language-plaintext highlighter-rouge\">fastqsanger</code> or, if your data is compressed as in URLs above (they have <code class=\"language-plaintext highlighter-rouge\">.gz</code> extensions), to <code class=\"language-plaintext highlighter-rouge\">fastqsanger.gz</code></p>     <p><img src=\"/training-material/faqs/galaxy/images/paste_fetch_set_data_type.png\" alt=\"ChangeTypeDropDown\" />:</p>   </li> </ol>   <blockquote class=\"warning\">   <warning-title>Danger: Make sure you choose corect format!</warning-title>   <p>When selecting datatype in “<strong>Type (set all)</strong>” dropdown, make sure you select <code class=\"language-plaintext highlighter-rouge\">fastaqsanger</code> or <code class=\"language-plaintext highlighter-rouge\">fastqsanger.gz</code> BUT NOT <code class=\"language-plaintext highlighter-rouge\">fastqcssanger</code> or anything else!</p> </blockquote>   <p><img src=\"/training-material/faqs/galaxy/images/upload_fastqsanger_via_url.png\" alt=\"UploadAnimatedPng\" /></p> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"warning\">\n  <warning-title>These datasets are large!</warning-title>\n  <p>Hi-C datasets are large. It will take some time (~15 min) for them to be fully uploaded. Please, be patient.</p>\n</blockquote>\n\n<h2 id=\"organizing-the-data\">Organizing the data</h2>\n\n<p>If everything goes smoothly you history will look like shown in Fig. 4 below. The three <abbr title=\"high fidelity reads\">HiFi</abbr> fasta files are better represented as a collection: Galaxy’s way to represent multiple datasets as a single interface entity (collection). Also, importantly, the workflow we will be using for the analysis of our data takes collection as an input (it does not access individual datasets). So let’s create a collection using steps outlines in the Tip <i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tip</span> “Creating a dataset collection” that you can find below Fig. 4.</p>\n\n<figure id=\"figure-2\" style=\"max-width: 90%;\"><div style=\"overflow-x: auto\"><object data=\"../../images/vgp_assembly/making_list.svg\" type=\"image/svg+xml\" alt=\"AfterUpload. \">AfterUpload.</object></div><a target=\"_blank\" href=\"../../images/vgp_assembly/making_list.svg\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 2</strong>:</span> History after uploading HiFi and HiC data (left). Creation of a list (collection) combines all HiFi datasets into a single history item called 'HiFi data' (right). See below for instruction on how to make this collection.</figcaption></figure>\n\n<!--SNIPPET-->\n<blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-creating-a-dataset-collection\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-creating-a-dataset-collection\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Creating a dataset collection</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Click on <i class=\"far fa-check-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-selector</span> <strong>Select Items</strong> at the top of the history panel <img src=\"/training-material/topics/galaxy-interface/images/historyItemControls.png\" alt=\"Select Items button\" /></li>   <li>Check all the datasets in your history you would like to include</li>   <li>     <p>Click <strong>n of N selected</strong> and choose <strong>Build Dataset List</strong></p>     <p><img src=\"/training-material/topics/galaxy-interface/images/buildList.png\" alt=\"build list collection menu item\" width=\"15%\" /></p>   </li>   <li>Enter a name for your collection</li>   <li>Click <strong>Create collection</strong> to build your collection</li>   <li>Click on the checkmark icon at the top of your history again</li> </ul> </blockquote>\n<p><!--END_SNIPPET--></p>\n\n<blockquote class=\"details\">\n  <details-title>Other ways to upload the data</details-title>\n  <p>You can obviously upload your own datasets via URLs as illustrated above or from your own computer. In addition, you can upload data from a major repository called <a href=\"https://genomeark.org\">GenomeArk</a>. GenomeArk is integrated directly into Galaxy Upload. To use GenomeArk following the steps in the Tip <i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tip</span> below:</p>\n\n  <!--SNIPPET-->\n  <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-upload-datasets-from-genomeark\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-upload-datasets-from-genomeark\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Upload datasets from GenomeArk</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ol>   <li>Open the file <i class=\"fas fa-upload\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-upload</span> <strong>upload</strong> menu</li>   <li>Click on <strong>Choose remote files</strong> tab</li>   <li>Click on the <strong>Genome Ark</strong> button and then click on <strong>species</strong></li> </ol>   <p>You can find the data by following this path: <code class=\"language-plaintext highlighter-rouge\">/species/${Genus}_${species}/${specimen_code}/genomic_data</code>. Inside a given datatype directory (<em>e.g.</em> <code class=\"language-plaintext highlighter-rouge\">pacbio</code>), select all the relevant files individually until all the desired files are highlighted and click the <kbd>Ok</kbd> button. Note that there may be multiple pages of files listed. Also note that you may not want every file listed.</p> </blockquote>\n  <p><!--END_SNIPPET--></p>\n</blockquote>\n\n<p>Once we have imported the datasets, the next step is to import the workflows necessary for the analysis of our data from <a href=\"https://dockstore.org\">DockStore</a>.</p>\n\n<h1 id=\"importing-workflows\">Importing workflows</h1>\n\n<p>All analyses described in this tutorial are performed using <em>workflows</em>–chains of tools–shown in <a href=\"#figure-1\">Fig. 1</a>. Specifically, we will use four workflows corresponding to analysis trajectory <strong>B</strong>: 1, 4, 6, and 8. To use these four workflows you need to import them into your Galaxy account following the steps below. Note: these are not necessarily the latest versions of the actual workflows, but versions that have been tested for this tutorial. To see the latest versions, see the <a href=\"https://galaxyproject.org/projects/vgp/workflows/\">Galaxy Project VGP workflows page</a> and click on the Dockstore links to import workflows.</p>\n\n<blockquote class=\"hands-on\">\n  <hands-on-title>Importing workflows from GitHub</hands-on-title>\n\n  <p>Links to the four workflows that will be used in this tutorial are listed in the table. Follow the procedure described below the table to import each of them into your Galaxy account.</p>\n\n  <table>\n    <thead>\n      <tr>\n        <th>Workflow</th>\n        <th>Link</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><em>K</em>-mer profiling workflow (WF1)</td>\n        <td><a href=\"https://raw.githubusercontent.com/iwc-workflows/kmer-profiling-hifi-VGP1/v0.1.4/kmer-profiling-hifi-VGP1.ga\">https://raw.githubusercontent.com/iwc-workflows/kmer-profiling-hifi-VGP1/v0.1.4/kmer-profiling-hifi-VGP1.ga</a></td>\n      </tr>\n      <tr>\n        <td>Assembly (contiging) with Hi-C workflow (WF4)</td>\n        <td><a href=\"https://raw.githubusercontent.com/iwc-workflows/Assembly-Hifi-HiC-phasing-VGP4/v0.1.6/Assembly-Hifi-HiC-phasing-VGP4.ga\">https://raw.githubusercontent.com/iwc-workflows/Assembly-Hifi-HiC-phasing-VGP4/v0.1.6/Assembly-Hifi-HiC-phasing-VGP4.ga</a></td>\n      </tr>\n      <tr>\n        <td>Purge duplicate contigs workflow (WF6)</td>\n        <td><a href=\"https://raw.githubusercontent.com/iwc-workflows/Purge-duplicate-contigs-VGP6/v0.3.2/Purge-duplicate-contigs-VGP6.ga\">https://raw.githubusercontent.com/iwc-workflows/Purge-duplicate-contigs-VGP6/v0.3.2/Purge-duplicate-contigs-VGP6.ga</a></td>\n      </tr>\n      <tr>\n        <td>Scaffolding with Hi-C workflow (WF8)</td>\n        <td><a href=\"https://raw.githubusercontent.com/iwc-workflows/Scaffolding-HiC-VGP8/v0.2/Scaffolding-HiC-VGP8.ga\">https://raw.githubusercontent.com/iwc-workflows/Scaffolding-HiC-VGP8/v0.2/Scaffolding-HiC-VGP8.ga</a></td>\n      </tr>\n    </tbody>\n  </table>\n\n  <ol>\n    <li>\n      <p>Copy the workflow URL into clipboard</p>\n\n      <ol>\n        <li>Right click on a URL in the table above.</li>\n        <li>Select “Copy link address” option in the dropdown menu that appears.</li>\n        <li>Go to Galaxy</li>\n      </ol>\n\n      <blockquote class=\"warning\">\n        <warning-title>Make sure you are logged in!</warning-title>\n        <p>Ensure that you are logged in into your Galaxy account!</p>\n      </blockquote>\n    </li>\n    <li>\n      <p>Import the workflow</p>\n\n      <ol>\n        <li>Click “Workflow” on top of the Galaxy interface.</li>\n        <li>On top-right of the middle pane click “<i class=\"fas fa-upload\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-upload</span> Import” button.</li>\n        <li>Paste the URL you copied into the clipboard at Step 1 above to “Archived Workflow URL” box.</li>\n        <li>Click “Import workflow” button.</li>\n      </ol>\n    </li>\n  </ol>\n\n  <p>This entire procedure is shown in the animated figure below. <i class=\"fas fa-exclamation-triangle\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">warning</span> <strong>You need to repeat this process for all four workflows</strong></p>\n\n  <figure id=\"figure-3\" style=\"max-width: 90%;\"><img src=\"../../images/vgp_assembly/importing_via_url_vgp_specific.png\" alt=\"Upload via URL. \" width=\"1280\" height=\"720\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/vgp_assembly/importing_via_url_vgp_specific.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 3</strong>:</span> Importing a workflow via URL.</figcaption></figure>\n\n</blockquote>\n\n<blockquote class=\"details\">\n  <details-title>Other ways to import workflows the data</details-title>\n  <p>You can import workflows from a variety of different sources including <a href=\"https://dockstore.org\">DockStore</a>, <a href=\"https://workflowhub.eu\">WorkflowHub</a>, or a URL:</p>\n\n  <!--SNIPPET-->\n  <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-import-workflows-from-dockstore\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-import-workflows-from-dockstore\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Import workflows from DockStore</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <p><a href=\"https://dockstore.org/\">Dockstore</a> is a free and open source platform for sharing reusable and scalable analytical tools and workflows.</p>   <ol>   <li>Ensure that you are logged in to your Galaxy account.</li>   <li>Go to <a href=\"https://dockstore.org\">DockStore</a>.</li>   <li>Select any Galaxy workflow you want to import.</li>   <li>Click on “Galaxy” dropdown within the “Launch with” panel located in the upper right corner.</li>   <li>Select a galaxy instance you want to launch this workflow with.</li>   <li>You will be redirected to Galaxy and presented with a list of workflow versions.</li>   <li>Click the version you want (usually the latest labelled as “main”)</li>   <li>You are done!</li> </ol>   <p>The following short video walks you through this uncomplicated procedure:</p>   <figure> <iframe credentialless=\"\" allowfullscreen=\"\" referrerpolicy=\"no-referrer\" sandbox=\"allow-scripts allow-same-origin\" allow=\"accelerometer 'none'; ambient-light-sensor 'none'; autoplay 'none'; battery 'none'; bluetooth 'none'; browsing-topics 'none'; camera 'none'; ch-ua 'none'; display-capture 'none'; domain-agent 'none'; document-domain 'none'; encrypted-media 'none'; execution-while-not-rendered 'none'; execution-while-out-of-viewport 'none'; gamepad 'none'; geolocation 'none'; gyroscope 'none'; hid 'none'; identity-credentials-get 'none'; idle-detection 'none'; keyboard-map 'none'; local-fonts 'none'; magnetometer 'none'; microphone 'none'; midi 'none'; navigation-override 'none'; otp-credentials 'none'; payment 'none'; picture-in-picture 'none'; publickey-credentials-create 'none'; publickey-credentials-get 'none'; screen-wake-lock 'none'; serial 'none'; speaker-selection 'none'; sync-xhr 'none'; usb 'none'; web-share 'none'; window-management 'none'; xr-spatial-tracking 'none'\" csp=\"sandbox allow-scripts allow-same-origin;\" width=\"560\" height=\"315\" src=\"https://www.youtube-nocookie.com/embed/K2wFrSLFpa0\" title=\"Importing from Dockstore\" frameborder=\"0\" loading=\"lazy\"></iframe> <figcaption>   <span class=\"figcaption-prefix\"><strong>Video</strong>:</span> Importing from Dockstore</figcaption> </figure> </blockquote>\n  <p><!--END_SNIPPET--></p>\n\n  <!--SNIPPET-->\n  <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-import-workflows-from-workflowhub\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-import-workflows-from-workflowhub\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Import workflows from WorkflowHub</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <p><a href=\"https://workflowhub.eu/\">WorkflowHub</a> is a workflow management system which allows workflows to be FAIR (Findable, Accessible, Interoperable, and Reusable), citable, have managed metadata profiles, and be openly available for review and analytics.</p>   <ol>   <li>Ensure that you are logged in to your Galaxy account.</li>   <li>Click on the <strong>Workflow</strong> menu, located in the top bar.</li>   <li>Click on the <strong>Import</strong> button, located in the right corner.</li>   <li>In the section “Import a Workflow from Configured GA4GH Tool Registry Servers (e.g. Dockstore)”, click on <strong>Search form</strong>.</li>   <li>In the <strong>TRS Server: <em>workflowhub.eu</em></strong> menu you should type your query. <img src=\"/training-material/topics/assembly/images/vgp_assembly/workflow_list.png\" alt=\"galaxy TRS workflow search field, name:vgp is entered in the search bar, and five different workflows all labelled VGP are listed\" /></li>   <li>Click on the desired workflow, and finally select the latest available version.</li> </ol>   <p>After that, the imported workflows will appear in the main workflow menu. In order to run the workflow, just need to click in the <i class=\"fas fa-play\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">workflow-run</span> <strong>Run workflow</strong> icon.</p>   <p>Below is a short video showing this uncomplicated procedure:</p>   <figure> <iframe credentialless=\"\" allowfullscreen=\"\" referrerpolicy=\"no-referrer\" sandbox=\"allow-scripts allow-same-origin\" allow=\"accelerometer 'none'; ambient-light-sensor 'none'; autoplay 'none'; battery 'none'; bluetooth 'none'; browsing-topics 'none'; camera 'none'; ch-ua 'none'; display-capture 'none'; domain-agent 'none'; document-domain 'none'; encrypted-media 'none'; execution-while-not-rendered 'none'; execution-while-out-of-viewport 'none'; gamepad 'none'; geolocation 'none'; gyroscope 'none'; hid 'none'; identity-credentials-get 'none'; idle-detection 'none'; keyboard-map 'none'; local-fonts 'none'; magnetometer 'none'; microphone 'none'; midi 'none'; navigation-override 'none'; otp-credentials 'none'; payment 'none'; picture-in-picture 'none'; publickey-credentials-create 'none'; publickey-credentials-get 'none'; screen-wake-lock 'none'; serial 'none'; speaker-selection 'none'; sync-xhr 'none'; usb 'none'; web-share 'none'; window-management 'none'; xr-spatial-tracking 'none'\" csp=\"sandbox allow-scripts allow-same-origin;\" width=\"560\" height=\"315\" src=\"https://www.youtube-nocookie.com/embed/hoP36Te5wko\" title=\"Importing from WorkflowHub\" frameborder=\"0\" loading=\"lazy\"></iframe> <figcaption>   <span class=\"figcaption-prefix\"><strong>Video</strong>:</span> Importing from WorkflowHub</figcaption> </figure> </blockquote>\n  <p><!--END_SNIPPET--></p>\n\n  <!--SNIPPET-->\n  <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-importing-a-workflow\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-importing-a-workflow\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Importing a workflow</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Click on <em>Workflow</em> on the top menu bar of Galaxy. You will see a list of all your workflows.</li>   <li>Click on <i class=\"fas fa-upload\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-upload</span> <strong>Import</strong> at the top-right of the screen</li>   <li>Provide your workflow     <ul>       <li>Option 1: Paste the URL of the workflow into the box labelled <em>“Archived Workflow URL”</em></li>       <li>Option 2: Upload the workflow file in the box labelled <em>“Archived Workflow File”</em></li>     </ul>   </li>   <li>Click the <strong>Import workflow</strong> button</li> </ul>   <p>Below is a short video demonstrating how to import a workflow from GitHub using this procedure:</p>   <figure> <iframe credentialless=\"\" allowfullscreen=\"\" referrerpolicy=\"no-referrer\" sandbox=\"allow-scripts allow-same-origin\" allow=\"accelerometer 'none'; ambient-light-sensor 'none'; autoplay 'none'; battery 'none'; bluetooth 'none'; browsing-topics 'none'; camera 'none'; ch-ua 'none'; display-capture 'none'; domain-agent 'none'; document-domain 'none'; encrypted-media 'none'; execution-while-not-rendered 'none'; execution-while-out-of-viewport 'none'; gamepad 'none'; geolocation 'none'; gyroscope 'none'; hid 'none'; identity-credentials-get 'none'; idle-detection 'none'; keyboard-map 'none'; local-fonts 'none'; magnetometer 'none'; microphone 'none'; midi 'none'; navigation-override 'none'; otp-credentials 'none'; payment 'none'; picture-in-picture 'none'; publickey-credentials-create 'none'; publickey-credentials-get 'none'; screen-wake-lock 'none'; serial 'none'; speaker-selection 'none'; sync-xhr 'none'; usb 'none'; web-share 'none'; window-management 'none'; xr-spatial-tracking 'none'\" csp=\"sandbox allow-scripts allow-same-origin;\" width=\"560\" height=\"315\" src=\"https://www.youtube-nocookie.com/embed/hoP36Te5wko\" title=\"Importing a workflow from URL\" frameborder=\"0\" loading=\"lazy\"></iframe> <figcaption>   <span class=\"figcaption-prefix\"><strong>Video</strong>:</span> Importing a workflow from URL</figcaption> </figure> </blockquote>\n  <p><!--END_SNIPPET--></p>\n\n</blockquote>\n\n<p>Once all four workflows are imported, your workflow list should look like this:</p>\n\n<figure id=\"figure-4\" style=\"max-width: 90%;\"><img src=\"../../images/vgp_assembly/imported_workflows.png\" alt=\"Workflow menu. \" width=\"960\" height=\"590\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/vgp_assembly/imported_workflows.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 4</strong>:</span> Workflow list. The workflow menu lists all the workflows that have been imported. It provides useful information for organizing the workflows, such as last update and the tags. The workflows can be run by clicking in the play icon, marked in red in the image.</figcaption></figure>\n\n<p>Once we have imported the datasets and the workflows, we can start with the genome assembly.</p>\n\n<h1 id=\"performing-the-assembly\">Performing the assembly</h1>\n\n<p>Workflows listed in <a href=\"#figure-1\">Fig. 1</a> support a variety of “analysis trajectories”. The majority of species that were sequenced by the <abbr title=\"Vertebrate Genome Project\">VGP</abbr> usually contain <abbr title=\"high fidelity reads\">HiFi</abbr> reads for the individual being sequenced supplemented with <abbr title=\"all-versus-all chromatin conformation capture\">Hi-C</abbr> data. As a result most assemblies performed by us follow the trajectory <strong>B</strong>. This is why this tutorial was designed to follow this trajectory as well.</p>\n\n<h2 id=\"genome-profile-analysis-wf1\">Genome profile analysis (WF1)</h2>\n\n<p>Now that our data and workflows are imported, we can run our first workflow. Before the assembly can be run, we need to collect metrics on the properties of the genome under consideration, such as the expected genome size according to our data. The present pipeline uses <strong>Meryl</strong> for generating the <em>k</em>-mer database and <strong>Genomescope2</strong> for determining genome characteristics based on a <em>k</em>-mer analysis.</p>\n\n<h3 id=\"launching-the-workflow\">Launching the workflow</h3>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title><b>Launching <i>K</i>-mer profile analysis workflow</b></hands-on-title>\n\n  <ol>\n    <li>\n      <p>Identify inputs</p>\n\n      <p>The profiling workflow takes the following inputs:</p>\n\n      <ol>\n        <li><abbr title=\"high fidelity reads\">HiFi</abbr> reads as a collection</li>\n        <li><em>K</em>-mer length</li>\n        <li>Ploidy</li>\n      </ol>\n    </li>\n    <li>\n      <p>Launch <em>k</em>-mer profiling workflow</p>\n\n      <ol>\n        <li>Click in the <strong>Workflow</strong> menu, located in the top bar</li>\n        <li>Click in the <i class=\"fas fa-play\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">workflow-run</span> <strong>Run workflow</strong> buttom corresponding to <code class=\"language-plaintext highlighter-rouge\">K-mer profiling and QC (WF1)</code></li>\n        <li>In the <strong>Workflow: VGP genome profile analysis</strong> menu:\n          <ul>\n            <li><i class=\"far fa-folder\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-collection</span> “<em>Collection of Pacbio Data</em>”: <code class=\"language-plaintext highlighter-rouge\">7: HiFi_collection</code></li>\n            <li>“<em>K-mer length</em>”: <code class=\"language-plaintext highlighter-rouge\">31</code></li>\n            <li>“<em>Ploidy</em>”: <code class=\"language-plaintext highlighter-rouge\">2</code></li>\n          </ul>\n        </li>\n        <li>Click on the <kbd>Run workflow</kbd> buttom</li>\n      </ol>\n\n      <p>This should like this:</p>\n\n      <figure id=\"figure-5\" style=\"max-width: 90%;\"><img src=\"../../images/vgp_assembly/wf1_launch_ui.png\" alt=\"Parameters of *k*-mer profiling workflow. \" width=\"1408\" height=\"744\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/vgp_assembly/wf1_launch_ui.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 5</strong>:</span> Workflow main menu. The workflow menu lists all the workflows that have been imported. It provides useful information for organizing the workflows, such as last update and the tags. The worklows can be run by clicking in the play icon, marked in red in the image.</figcaption></figure>\n\n      <blockquote class=\"comment\">\n        <comment-title>K-mer length</comment-title>\n        <p>In this tutorial, we are using a <em>k</em>-mer length of 31. This can vary, but the VGP pipeline tends to use a <em>k</em>-mer length of 21, which tends to work well for most mammalian-size genomes. There is more discussion about <em>k</em>-mer length trade-offs in the extended VGP pipeline tutorial.</p>\n      </blockquote>\n    </li>\n  </ol>\n\n  <p><br /></p>\n\n  <ol>\n    <li>\n      <p>Refill your coffee</p>\n\n      <p>Assembly is not exactly an instantaneous type of analysis - this workflow will take approx 15 minutes to complete. The same is true for all analyses in tutorial.</p>\n    </li>\n  </ol>\n</blockquote>\n\n<h3 id=\"interpreting-the-results\">Interpreting the results</h3>\n\n<p>Once the workflow has finished, we can evaluate the linear plot generated by <a href=\"https://github.com/schatzlab/`Genomescope`\"><strong><code class=\"language-plaintext highlighter-rouge\">Genomescope</code></strong></a>, which includes valuable information such as the observed <em>k</em>-mer profile, fitted models and estimated parameters. This file corresponds to the dataset <code class=\"language-plaintext highlighter-rouge\">15</code> in this <a href=\"https://usegalaxy.org/u/cartman/h/k-mer-profiling\">history</a>.\n<br /></p>\n<figure id=\"figure-6\" style=\"max-width: 90%;\"><img src=\"../../images/vgp_assembly/genomescope_plot.png\" alt=\"`Genomescope` plot. \" width=\"2000\" height=\"2000\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/vgp_assembly/genomescope_plot.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 6</strong>:</span> GenomeScope2 <i>k</i>-mer profile. The first peak located at about 25&times; corresponds to the heterozygous peak. The second peak at 50&times;, corresponds to the homozygous peak. The plot also includes information about the the inferred total genome length (len), genome unique length percent (uniq), overall heterozygosity rate (ab), mean <i>k</i>-mer coverage for heterozygous bases (kcov), read error rate (err), average rate of read duplications (dup) and <i>k</i>-mer size (k).</figcaption></figure>\n<p><br />\nThis distribution is the result of the Poisson process underlying the generation of sequencing reads. As we can see, the <em>k</em>-mer profile follows a bimodal distribution, indicative of a diploid genome. The distribution is consistent with the theoretical diploid model (model fit &gt; 93%). Low frequency <em>k</em>-mers are the result of sequencing errors, and are indicated by the red line. Genomescope2 estimated a haploid genome size of around 11.7 Mbp, a value reasonably close to the <em>Saccharomyces</em> genome size.</p>\n\n<h2 id=\"assembly-contiging-with-hifiasm-wf4\">Assembly (contiging) with <code class=\"language-plaintext highlighter-rouge\">hifiasm</code> (WF4)</h2>\n\n<p>To generate contiguous sequences in an assembly (contigs) we will use <a href=\"https://github.com/chhylp123/hifiasm\"><strong>hifiasm</strong></a> assembler. It is a part of the <code class=\"language-plaintext highlighter-rouge\">Assembly with HiC (WF4)</code> workflow . This workflow uses <strong>hifiasm</strong> (HiC mode) to generate HiC-phased haplotypes (hap1 and hap2). This is in contrast to its default mode, which generates primary and alternate pseudohaplotype assemblies. This workflow includes three tools for evaluating assembly quality: <a href=\"https://github.com/vgl-hub/gfastats\"><strong><code class=\"language-plaintext highlighter-rouge\">gfastats</code></strong></a>, <a href=\"https://busco.ezlab.org/\"><strong><code class=\"language-plaintext highlighter-rouge\">BUSCO</code></strong></a> and <a href=\"https://github.com/marbl/merqury\"><strong><code class=\"language-plaintext highlighter-rouge\">Merqury</code></strong></a>.</p>\n\n<h3 id=\"launching-the-workflow-1\">Launching the workflow</h3>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title><b>Launching assembly (contiging) workflow</b></hands-on-title>\n\n  <p><strong>Step 1: Identify inputs</strong></p>\n\n  <p>The assembly workflow takes the following inputs:</p>\n\n  <ol>\n    <li><abbr title=\"high fidelity reads\">HiFi</abbr> reads as a collection</li>\n    <li>Forward Hi-C reads</li>\n    <li>Reverse Hi-C reads</li>\n    <li><code class=\"language-plaintext highlighter-rouge\">Genomescope</code> Model Parameters generated by previous (<em>k</em>-mer profiling) workflow</li>\n    <li><code class=\"language-plaintext highlighter-rouge\">Genomescope</code> Summary generated by previous (<em>k</em>-mer profiling) workflow</li>\n    <li>Meryl <em>k</em>-mer database generated by previous (<em>k</em>-mer profiling) workflow</li>\n    <li>Busco lineage\n<br /></li>\n  </ol>\n\n  <p><strong>Step 2: Launch the workflow</strong></p>\n\n  <ol>\n    <li>Click in the <strong>Workflow</strong> menu, located in the top bar</li>\n    <li>Click in the <i class=\"fas fa-play\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">workflow-run</span> <strong>Run workflow</strong> button corresponding to <code class=\"language-plaintext highlighter-rouge\">VGP HiFi phased assembly with hifiasm and HiC data</code></li>\n    <li>In the <strong>Workflow: Assembly with HiC (WF4)</strong> menu fill the following parameters:\n      <ul>\n        <li><i class=\"far fa-folder\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-collection</span> “<em>Pacbio Reads Collection</em>”: Collection with original HiFi data</li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> “<em>Meryl database</em>”: Meryl <em>k</em>-mer database: one of the outputs of the previous workflow  (contains tag “<code class=\"language-plaintext highlighter-rouge\">MerylDatabase</code>”)</li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> “<em>HiC forward reads</em>”: Forward Hi-C reads</li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> “<em>HiC reverse reads</em>”: Reverse Hi-C reads</li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> “<em>Provide lineage for BUSCO (e.g., Vertebrata)</em>”: <code class=\"language-plaintext highlighter-rouge\">Ascomycota</code></li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> “<em>GenomeScope Summary</em>”: GenomeScope summary: one of the outputs of the previous workflow (contains tag “<code class=\"language-plaintext highlighter-rouge\">GenomeScopeSummary</code>”)</li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> “<em>GenomeScope Model Parameters</em>”: GenomeScope model parameters: one of the outputs of the previous workflow (contains tag “<code class=\"language-plaintext highlighter-rouge\">GenomeScopeParameters</code>”)</li>\n      </ul>\n    </li>\n    <li>Click on the <kbd>Run workflow</kbd> button</li>\n  </ol>\n</blockquote>\n\n<h3 id=\"interpreting-the-results-1\">Interpreting the results</h3>\n\n<blockquote class=\"warning\">\n  <warning-title>There will be two assemblies!</warning-title>\n  <p>Because we are assembling a diploid organism this workflow will produce two assemblies: hap1 and hap2!</p>\n</blockquote>\n\n<p>Let’s have a look at the stats generated by <strong>gfastats</strong>. This output summarizes some main assembly statistics, such as contig number, N50, assembly length, etc. Below we provide a partial output of <code class=\"language-plaintext highlighter-rouge\">gfastats</code> in which information about both assemblies is shown side-by-side:</p>\n\n<blockquote class=\"matrix\">\n  <table>\n    <thead>\n      <tr>\n        <th>Statistic</th>\n        <th style=\"text-align: right\">Hap 1</th>\n        <th style=\"text-align: right\">Hap 2</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td># contigs</td>\n        <td style=\"text-align: right\">16</td>\n        <td style=\"text-align: right\">19</td>\n      </tr>\n      <tr>\n        <td>Total contig length</td>\n        <td style=\"text-align: right\">12,050,076</td>\n        <td style=\"text-align: right\">12,360,746</td>\n      </tr>\n      <tr>\n        <td>Average contig length</td>\n        <td style=\"text-align: right\">753,129.75</td>\n        <td style=\"text-align: right\">650,565.58</td>\n      </tr>\n      <tr>\n        <td>Contig N50</td>\n        <td style=\"text-align: right\">923,452</td>\n        <td style=\"text-align: right\">922,430</td>\n      </tr>\n      <tr>\n        <td>Contig N50</td>\n        <td style=\"text-align: right\">923,452</td>\n        <td style=\"text-align: right\">922,430</td>\n      </tr>\n      <tr>\n        <td>Contig auN</td>\n        <td style=\"text-align: right\">909,022.62</td>\n        <td style=\"text-align: right\">891,508.36</td>\n      </tr>\n      <tr>\n        <td>Contig L50</td>\n        <td style=\"text-align: right\">6</td>\n        <td style=\"text-align: right\">6</td>\n      </tr>\n      <tr>\n        <td>Contig L50</td>\n        <td style=\"text-align: right\">6</td>\n        <td style=\"text-align: right\">6</td>\n      </tr>\n      <tr>\n        <td>Contig NG50</td>\n        <td style=\"text-align: right\">923,452</td>\n        <td style=\"text-align: right\">922,430</td>\n      </tr>\n      <tr>\n        <td>Contig NG50</td>\n        <td style=\"text-align: right\">923,452</td>\n        <td style=\"text-align: right\">922,430</td>\n      </tr>\n      <tr>\n        <td>Contig auNG</td>\n        <td style=\"text-align: right\">932,462.97</td>\n        <td style=\"text-align: right\">938,074.26</td>\n      </tr>\n      <tr>\n        <td>Contig LG50</td>\n        <td style=\"text-align: right\">6</td>\n        <td style=\"text-align: right\">6</td>\n      </tr>\n      <tr>\n        <td>Contig LG50</td>\n        <td style=\"text-align: right\">6</td>\n        <td style=\"text-align: right\">6</td>\n      </tr>\n      <tr>\n        <td>Largest contig</td>\n        <td style=\"text-align: right\">1,532,843</td>\n        <td style=\"text-align: right\">1,531,728</td>\n      </tr>\n      <tr>\n        <td>Smallest contig</td>\n        <td style=\"text-align: right\">231,313</td>\n        <td style=\"text-align: right\">26,588</td>\n      </tr>\n    </tbody>\n  </table>\n</blockquote>\n\n<p>According to the report, both assemblies are quite similar; the primary assembly includes 16 <abbr title=\"contiguous sequences in an assembly\">contigs</abbr>, whose cumulative length is around 12 Mbp. The alternate assembly includes 19 contigs, whose total length is 12.3Mbp. Both assemblies come close to the estimated genome size, which is as expected since we used hifiasm-HiC mode to generate phased assemblies which lowers the chance of false duplications that can inflate assembly size.</p>\n\n<blockquote class=\"comment\">\n  <comment-title>Are you working with pri/alt assemblies?</comment-title>\n  <p>This tutorial uses the hifiasm-HiC workflow, which generates phased hap1 and hap2 assemblies. The phasing helps lower the chance of false duplications, since the phasing information helps the assembler know which genomic variation is heterozygosity at the same locus versus being two different loci entirely. If you are working with primary/alternate assemblies (especially if there is no internal purging in the initial assembly), you can expect higher false duplication rates than we observe here with the yeast HiC hap1/hap2.</p>\n</blockquote>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>What is the longest contig in the primary assembly? And in the alternate one?</li>\n    <li>What is the N50 of the primary assembly?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <ol>\n      <li>The longest contig in the primary assembly is 1,532,843 bp, and 1,531,728 bp in the alternate assembly.</li>\n      <li>The N50 of the primary assembly is 923.452 bp.</li>\n    </ol>\n\n  </blockquote>\n\n</blockquote>\n\n<p>Next, we are going to evaluate the outputs generated by <strong>BUSCO</strong>. This tool provides quantitative assessment of the completeness of a genome assembly in terms of expected gene content. It relies on the analysis of genes that should be present only once in a complete assembly or gene set, while allowing for rare gene duplications or losses (<span class=\"citation\"><a href=\"#Simo2015\">Simão <i>et al.</i> 2015</a></span>).</p>\n\n<p><br /></p>\n\n<figure id=\"figure-7\" style=\"max-width: 90%;\"><div style=\"overflow-x: auto\"><object data=\"../../images/vgp_assembly/busco_after_contiging.svg\" type=\"image/svg+xml\" alt=\"BUSCO assessment. \">BUSCO assessment.</object></div><a target=\"_blank\" href=\"../../images/vgp_assembly/busco_after_contiging.svg\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 7</strong>:</span> A composite of BUSCO completeness summaries for hap1 and hap2</figcaption></figure>\n\n<p><br /></p>\n\n<p>As we can see in the report, the results are simplified into four categories: <em>complete and single-copy</em>, <em>complete and duplicated</em>, <em>fragmented</em> and <em>missing</em>.</p>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>How many complete BUSCO genes have been identified in the primary assembly?</li>\n    <li>How many BUSCOs genes are absent?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <ol>\n      <li>According to the report, our assembly contains the complete sequence of 1,562 complete BUSCO genes.</li>\n      <li>92 BUSCO genes are missing.</li>\n    </ol>\n\n  </blockquote>\n\n</blockquote>\n\n<p>Despite <strong>BUSCO</strong> being robust for species that have been widely studied, it can be inaccurate when the newly assembled genome belongs to a taxonomic group that is not well represented in <a href=\"https://www.orthodb.org/\">OrthoDB</a>. <code class=\"language-plaintext highlighter-rouge\">Merqury</code> provides a complementary approach for assessing genome assembly quality metrics in a reference-free manner via <em>k</em>-mer copy number analysis. Specifically, it takes our hap1 as the first genome assembly, hap2 as the second genome assembly, and the merylDB generated previously for <em>k</em>-mer counts.</p>\n\n<p>By default, <code class=\"language-plaintext highlighter-rouge\">Merqury</code> generates three collections as output: stats, plots and assembly consensus quality (QV) stats. The “stats” collection contains the completeness statistics, while the “QV stats” collection contains the quality value statistics. Let’s have a look at the copy number (CN) spectrum plot, known as the <em>spectra-cn</em> plot. The spectra-cn plot looks at both of your assemblies (here, your haplotypes) taken <em>together</em> (fig. 6a).  We can see a small amount of false duplications here: at the 50 mark on the x-axis, there is a small amount of <em>k</em>-mers present at 3-copy across the two assemblies (the green bump).\n<br /></p>\n<figure id=\"figure-8\" style=\"max-width: 90%;\"><div style=\"overflow-x: auto\"><object data=\"../../images/vgp_assembly/yeast_c_merqury_cn.svg\" width=\"100%\" type=\"image/svg+xml\" alt=\"Figure 6: Merqury spectra-cn plot for initial yeast contigs. \"><img src=\"../../images/vgp_assembly/yeast_c_merqury_cn.png\" alt=\"Figure 6: Merqury spectra-cn plot for initial yeast contigs. \" />Figure 6: Merqury spectra-cn plot for initial yeast contigs.</object></div><a target=\"_blank\" href=\"../../images/vgp_assembly/yeast_c_merqury_cn.svg\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 8</strong>:</span> Merqury CN plot for yeast assemblies. The plot tracks the multiplicity of each <i>k</i>-mer found in the read set and colors it by the number of times it is found in a given assembly. Merqury connects the midpoint of each histogram bin with a line, giving the illusion of a smooth curve. <b>a)</b>. <i>K</i>-mer distribution of both haplotypes. <b>b)</b>. <i>K</i>-mer distribution of an individual haplotype (hap2).</figcaption></figure>\n<p><br /></p>\n\n<p>Thus, we know there is some false duplication (the 3-copy green bump) present as 2-copy in one of our assemblies, but we don’t know which one. We can look at the individual copy number spectrum for each haplotype in order to figure out which one contains the 2-copy <em>k</em>-mers (<em>i.e.</em>, the false duplications). In the Merqury spectra-CN plot for hap2 we can see the small bump of 2-copy <em>k</em>-mers (blue) at around the 50 mark on the x-axis (fig. 6b).</p>\n\n<p>Now that we know which haplotype contains the false duplications, we can run the purging workflow to try to get rid of these duplicates.</p>\n\n<h2 id=\"purging-duplicates-with-purge_dups\">Purging duplicates with <code class=\"language-plaintext highlighter-rouge\">purge_dups</code></h2>\n\n<p>An ideal haploid representation would consist of one allelic copy of all heterozygous regions in the two haplotypes, as well as all hemizygous regions from both haplotypes (<span class=\"citation\"><a href=\"#Guan2019\">Guan <i>et al.</i> 2019</a></span>). However, in highly heterozygous genomes, assembly algorithms are frequently not able to identify the highly divergent allelic sequences as belonging to the same region, resulting in the assembly of those regions as separate contigs. In order to prevent potential issues in downstream analysis, we are going to run the <strong>Purge duplicate contigs (WF6)</strong>, which will allow to identify and reassign heterozygous contigs. This step is only necessary if haplotypic duplications are observed, and the output should be carefully checked for overpurging.</p>\n\n<h3 id=\"launching-the-workflow-2\">Launching the workflow</h3>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title><b>Launching duplicate purging workflow</b></hands-on-title>\n\n  <p><strong>Step 1: Identify inputs</strong></p>\n\n  <p>The purging workflow takes the following inputs:</p>\n\n  <ol>\n    <li><abbr title=\"high fidelity reads\">HiFi</abbr> reads as a collection</li>\n    <li>Primary assembly produced by <code class=\"language-plaintext highlighter-rouge\">hifiasm</code> in the previous run of assembly workflow (WF4).</li>\n    <li>Alternate assembly produced by <code class=\"language-plaintext highlighter-rouge\">hifiasam</code> in the previous run of assembly workflow (WF4).</li>\n    <li><code class=\"language-plaintext highlighter-rouge\">Genomescope</code> Model Parameters generated by previous (<em>k</em>-mer profiling) workflow</li>\n    <li>Estimated genome size parsed from GenoeScope summary by the previous run of assembly workflow (WF4).</li>\n    <li>Meryl <em>k</em>-mer database generated by previous (<em>k</em>-mer profiling, WF1) workflow</li>\n    <li>Busco lineage</li>\n  </ol>\n\n  <p><strong>Step 2: Launch Purge duplicate contigs workflow (WF6)</strong></p>\n\n  <ol>\n    <li>Click in the <strong>Workflow</strong> menu, located in the top bar</li>\n    <li>Click in the <i class=\"fas fa-play\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">workflow-run</span> <strong>Run workflow</strong> button corresponding to <code class=\"language-plaintext highlighter-rouge\">Purge duplicate contigs (WF6)</code></li>\n    <li>In the <strong>Workflow: VGP purge assembly with purge_dups pipeline</strong> menu:\n      <ul>\n        <li><i class=\"far fa-folder\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-collection</span> “<em>Pacbio Reads Collection - Trimmed</em>”: One of the outputs of the assembly workflow is a trimmed collection of HiFi reads. It has a tag <code class=\"language-plaintext highlighter-rouge\">trimmed_hifi</code>.</li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> “<em>Hifiasm Primary assembly</em>”: An output of the assembly workflow (WF4) containing contigs for Hap1 in FASTA format. This dataset has a tag <code class=\"language-plaintext highlighter-rouge\">hifiasm_Assembly_Haplotype_1</code>.</li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> “<em>Hifiasm Alternate assembly</em>”: An output of the assembly workflow (WF4) containing contigs for Hap2 in FASTA format. This dataset has a tag <code class=\"language-plaintext highlighter-rouge\">hifiasm_Assembly_Haplotype_2</code></li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> “<em>Meryl database</em>”: Meryl <em>k</em>-mer database: one of the outputs of the previous workflow  (contains tag “<code class=\"language-plaintext highlighter-rouge\">MerylDatabase</code>”)</li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> “<em>GenomeScope Model Parameters</em>”: GenomeScope model parameters: one of the outputs of the previous workflow (contains tag “<code class=\"language-plaintext highlighter-rouge\">GenomeScopeParameters</code>”)</li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> “<em>Estimated genome size</em>”: A dataset produced with the assembly workflow (WF4). It contains a tag <code class=\"language-plaintext highlighter-rouge\">estimated_genome_size</code>.</li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> “<em>Provide lineage for BUSCO (e.g., Vertebrata)</em>”: <code class=\"language-plaintext highlighter-rouge\">Ascomycota</code></li>\n      </ul>\n    </li>\n    <li>Click in the <kbd>Run workflow</kbd> buttom</li>\n  </ol>\n</blockquote>\n\n<h3 id=\"interpreting-results\">Interpreting results</h3>\n\n<p>The two most important outputs of the purging workflow are purged versions of Primary and Alternate assemblies. These have tags <kbd>PurgedPrimaryAssembly</kbd> and <kbd>PurgedAlternateAssembly</kbd> for Primary and Alternate assemblies, respectively. This step also provides QC metrics for evaluating the effect of purging (Figure below).</p>\n\n<p><br /></p>\n\n<figure id=\"figure-9\" style=\"max-width: 90%;\"><div style=\"overflow-x: auto\"><object data=\"../../images/vgp_assembly/merqury_cn_after_purging.svg\" width=\"100%\" type=\"image/svg+xml\" alt=\"Comparison of pre- and post-purging. \">Comparison of pre- and post-purging.</object></div><a target=\"_blank\" href=\"../../images/vgp_assembly/merqury_cn_after_purging.svg\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 9</strong>:</span> Comparison of pre- (<b>a)</b> and <b>c)</b>) and post-purging (<b>b)</b> and <b>d)</b>) Merqury CN spectra   . The two top plots (<b>a)</b> and <b>b)</b>) for our dataset (yeast) and the two bottom plots (<b>c)</b> and <b>d)</b>) for a Chub mackerel (<i>Scomber japonicus</i>) -- a much larger genome. In the case of yeast the difference is not profound because our training dataset has been downsized and groomed to be as small as possible. In the case of zebra finch the green bump (<i>k</i>-mers appearing in three copies) is smaller after purging (Although potential overpurging can be seen by the new read-only (grey) bump that was not there before). Given the scale of the Y-axis this difference is substantial.</figcaption></figure>\n\n<p><br /></p>\n\n<h2 id=\"hi-c-scaffolding\">Hi-C scaffolding</h2>\n\n<p>In this final stage, we will run the <strong>Scaffolding HiC YAHS (WF8)</strong>, which exploits the fact that the contact frequency between a pair of loci strongly correlates with the one-dimensional distance between them. This information allows <a href=\"https://github.com/c-zhou/yahs\"><strong>YAHS</strong></a> – the main tool in this workflow – to generate scaffolds that are often chromosome-sized.</p>\n\n<h3 id=\"launching-hi-c-scaffolding-workflow\">Launching Hi-C scaffolding workflow</h3>\n\n<blockquote class=\"warning\">\n  <warning-title>The scaffolding workflow is run on <b>ONE</b> haplotype at a time.</warning-title>\n  <p>Contiging (WF4) and purging (WF6) workflows work with both (hap1/hap2, primary/alternate) assemblies simultaneously. This is not the case for contiging – it hgas to be run independently for each haplotype assembly. In this example (below) we run contiging on hap1 (Primary) assembly only.</p>\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title><b>Launching Hi-C scaffolding workflow</b></hands-on-title>\n\n  <p><strong>Step 1: Identify inputs</strong></p>\n\n  <p>The scaffolding workflow takes the following inputs:</p>\n\n  <ol>\n    <li>An assembly graph</li>\n    <li>Forward Hi-C reads</li>\n    <li>Reverse Hi-C reads</li>\n    <li>Estimated genome size parsed from GenoeScope summary by the previous run of assembly workflow (WF4).</li>\n    <li>Restriction enzymes used in Hi-C library preparation procedure</li>\n    <li>Busco lineage</li>\n  </ol>\n\n  <p><strong>Step 2: Launch scaffolding workflow (WF8)</strong></p>\n\n  <ol>\n    <li>Click in the <strong>Workflow</strong> menu, located in the top bar</li>\n    <li>Click in the <i class=\"fas fa-play\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">workflow-run</span> <strong>Run workflow</strong> button corresponding to <code class=\"language-plaintext highlighter-rouge\">Scaffolding HiC YAHS (WF8)</code></li>\n    <li>In the <strong>Scaffolding HiC YAHS (WF8)</strong> menu:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> “<em>input GFA</em>”: Output of purging workflow (WF6) with a tag <code class=\"language-plaintext highlighter-rouge\">PurgedPrimaryAssembly</code> (or <code class=\"language-plaintext highlighter-rouge\">PurgedPrimaryAssembly</code> of scaffolding the Alternate assembly).</li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> “<em>HiC forward reads</em>”: Forward Hi-C reads</li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> “<em>HiC reverse reads</em>”: Reverse Hi-C reads</li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> “<em>Estimated genome size - Parameter File</em>”: An output of the contiging workflow (WF4) with a tag <code class=\"language-plaintext highlighter-rouge\">estimated_genome_size</code>.</li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> “<em>Provide lineage for BUSCO (e.g., Vertebrata)</em>”: <code class=\"language-plaintext highlighter-rouge\">Ascomycota</code></li>\n      </ul>\n    </li>\n    <li>Click in the <kbd>Run workflow</kbd> button</li>\n  </ol>\n</blockquote>\n\n<blockquote class=\"comment\">\n  <comment-title>Bypassing purging workflow</comment-title>\n  <p>In some situations (such as assemblies utilizing Trio data (Fig. 1) you do not need to perform purging and can go directly from contiging to scaffolding. In this case you will need to use an output of contiging workflow that has a tag <code class=\"language-plaintext highlighter-rouge\">hic_hap1_gfa</code> for primary assembly or <code class=\"language-plaintext highlighter-rouge\">hic_hap2_gfa</code> for alternate assembly:</p>\n\n  <p>In other words, the only parameter that you will need to set differently (relative to setting above) is this:</p>\n  <hr />\n\n  <p><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> “<em>input GFA</em>”: Output of contiging workflow (WF4) with a tag <code class=\"language-plaintext highlighter-rouge\">hic_hap1_gfa</code> for primary assembly or <code class=\"language-plaintext highlighter-rouge\">hic_hap2_gfa</code> for alternate assembly.</p>\n  <hr />\n\n</blockquote>\n\n<h3 id=\"interpreting-the-results-2\">Interpreting the results</h3>\n\n<p>In order to evaluate the Hi-C hybrid scaffolding, we are going to compare the contact maps before and after running the HiC hybrid scaffolding workflow (Fig. below). They will have the following tags:</p>\n\n<ul>\n  <li>Before scaffolding: <code class=\"language-plaintext highlighter-rouge\">pretext_s1</code></li>\n  <li>After scaffolding: <code class=\"language-plaintext highlighter-rouge\">pretext_s2</code></li>\n</ul>\n\n<p>Below is the comparison of the two maps obtained from our data a more profound “real live” example from assembly of zebra finch (<em>Taeniopygia guttata</em>) genome:</p>\n\n<p><br /></p>\n\n<figure id=\"figure-10\" style=\"max-width: 90%;\"><div style=\"overflow-x: auto\"><object data=\"../../images/vgp_assembly/hi-c_pretext_final.svg\" type=\"image/svg+xml\" alt=\"Pretext final contact map. \"><img src=\"../../images/vgp_assembly/hi-c_pretext_final.png\" alt=\"Pretext final contact map. \" />Pretext final contact map.</object></div><a target=\"_blank\" href=\"../../images/vgp_assembly/hi-c_pretext_final.svg\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 10</strong>:</span> Hi-C maps generated by Pretext before and after scaffolding with Hi-C data. The red circles indicate the differences between the contact maps generated before and after Hi-C hybrid scaffolding. The bottom two panels show results of scaffolding on zebra finch where scaffolding dramatically decreases the number of segments by merging multiple contigs into scaffolds.</figcaption></figure>\n\n<p><br /></p>\n\n<p>The regions marked with red circles highlight the most notable difference between the two contact maps, where inversion has been fixed.</p>\n\n<h1 id=\"conclusion\">Conclusion</h1>\n\n<p>To sum up, it is worthwhile to compare the final assembly with the <a href=\"https://ftp.ncbi.nlm.nih.gov/genomes/all/GCF/000/146/045/GCF_000146045.2_R64/GCF_000146045.2_R64_assembly_stats.txt\"><em>S. cerevisiae</em> S288C reference genome</a>:</p>\n\n<p><br /></p>\n\n<figure id=\"figure-11\" style=\"max-width: 90%;\"><img src=\"../../images/vgp_assembly/quast_plot.png\" alt=\"Quast plot. \" width=\"1307\" height=\"763\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/vgp_assembly/quast_plot.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 11</strong>:</span> Cumulative continuity plot comparing assembly generated here (red line) with existing yeast reference (black dotted line). Our assembly is slightly smaller (11,287,131 bp versus 12,071,326. Our assembly is lacking the mitochondrial genome (~86 kb) beacuse the initial data does include mitochondrial reads. This is partially responsible for this discrepancy.</figcaption></figure>\n\n<p><br /></p>\n\n<p>With respect to the total sequence length, we can conclude that the size of our genome assembly is very similar to the reference genome. It is noteworthy that the reference genome consists of 17 sequences, while our assembly includes only 16 chromosomes. This is due to the fact that the reference genome also includes the sequence of the mitochondrial DNA, which consists of 85,779 bp. (The above comparison is performed using <span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/quast/quast/5.2.0+galaxy1\" title=\"Quast tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Quast</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 5.2.0+galaxy1)</span> using Primary assembly generated with scaffolding workflow (WF8) and yeast reference.)</p>\n\n<p><br /></p>\n\n<figure id=\"figure-12\" style=\"max-width: 90%;\"><div style=\"overflow-x: auto\"><object data=\"../../images/vgp_assembly/hi-c_pretext_conclusion.svg\" type=\"image/svg+xml\" alt=\"Comparison reference genome. \"><img src=\"../../images/vgp_assembly/hi-c_pretext_conclusion.png\" alt=\"Comparison reference genome. \" />Comparison reference genome.</object></div><a target=\"_blank\" href=\"../../images/vgp_assembly/hi-c_pretext_conclusion.svg\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 12</strong>:</span> Comparison between contact maps generated using the final Primary assembly from this tutorial (left) and the reference genome (right).</figcaption></figure>\n\n<p><br /></p>\n\n<p>If we compare the contact map of our assembled genome with the reference assembly (Fig. above), we can see that the two are indistinguishable, suggesting that we have generated a chromosome level genome assembly.</p>\n\n"],"ref_slides":[],"hands_on":true,"slides":false,"mod_date":"2024-04-30 01:53:29 +0000","pub_date":"2022-04-06 05:32:19 +0000","version":74,"api":"https://training.galaxyproject.org/training-material/api/topics/assembly/tutorials/vgp_workflow_training/tutorial.json","tools":["toolshed.g2.bx.psu.edu/repos/iuc/quast/quast/5.2.0+galaxy1"],"supported_servers":{"exact":[{"url":"https://galaxy.mesocentre.uca.fr","name":"Galaxy@AuBi","usegalaxy":false},{"url":"https://galaxytrakr.org/","name":"GalaxyTrakr","usegalaxy":false},{"url":"https://mississippi.sorbonne-universite.fr","name":"MISSISSIPPI","usegalaxy":false},{"url":"https://usegalaxy.cz/","name":"UseGalaxy.cz","usegalaxy":false},{"url":"https://usegalaxy.eu","name":"UseGalaxy.eu","usegalaxy":true},{"url":"https://usegalaxy.fr/","name":"UseGalaxy.fr","usegalaxy":false},{"url":"https://usegalaxy.no/","name":"UseGalaxy.no","usegalaxy":false},{"url":"https://usegalaxy.org","name":"UseGalaxy.org (Main)","usegalaxy":true},{"url":"https://usegalaxy.org.au","name":"UseGalaxy.org.au","usegalaxy":true}],"inexact":[{"url":"https://cpt.tamu.edu/galaxy-public/","name":"Center for Phage Technology (CPT)","usegalaxy":false},{"url":"https://galaxy.hyphy.org/","name":"HyPhy HIV NGS Tools","usegalaxy":false}]},"topic_name_human":"Assembly","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[{"name":"quast","owner":"iuc","revisions":"72472698a2df","tool_panel_section_label":"Assembly","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"}]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools:\n- name: quast\n  owner: iuc\n  revisions: 72472698a2df\n  tool_panel_section_label: Assembly\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n","tours":false,"video":false,"slides_recordings":false,"translations":{"tutorial":[],"slides":[],"video":false},"license":"CC-BY-4.0","type":"tutorial"}