{"layout":"tutorial_slides","title":"An Introduction to Genome Assembly","zenodo_link":"https://doi.org/10.5281/zenodo.582600","questions":["How do we perform a very basic genome assembly from short read data?"],"objectives":["assemble some paired end reads using Velvet","examine the output of the assembly."],"time_estimation":"30m","level":"Introductory","key_points":["We assembled some Illumina fastq reads into contigs using a short read assembler called Velvet","We showed what effect one of the key assembly parameters, the k-mer size, has on the assembly","It looks as though there are some exploitable patterns in the metric data vs the k-mer size."],"contributors":["slugger70"],"js_requirements":{"mathjax":null,"mermaid":false},"short_id":"S00033","url":"/topics/assembly/tutorials/general-introduction/slides.html","topic_name":"assembly","tutorial_name":"general-introduction","dir":"topics/assembly/tutorials/general-introduction","symlink":null,"id":"assembly/general-introduction","ref_tutorials":["<h1 id=\"genome-assembly-with-velvet-background\">Genome assembly with Velvet: Background</h1>\n\n<p>Velvet is one of a number of <em>de novo</em> assemblers that use short read sets as input (<em>e.g.</em> Illumina Reads). The assembly method is based on the manipulation of de Bruijn graphs, via the removal of errors and the simplification of repeated regions.</p>\n\n<blockquote class=\"comment\">\n  <comment-title></comment-title>\n\n  <p>For information about Velvet, you can check its (nice) <a href=\"https://en.wikipedia.org/wiki/Velvet_assembler\">Wikipedia page</a>.</p>\n</blockquote>\n\n<p>For this tutorial, we have a set of reads from an imaginary <em>Staphylococcus aureus</em> bacterium with a miniature genome (197,394 bp). Our mutant strain read set was sequenced with the whole genome shotgun method, using an Illumina DNA sequencing instrument. From these reads, we would like to rebuild our imaginary <em>Staphylococcus aureus</em> bacterium via a <em>de novo</em> assembly of a short read set using the Velvet assembler.</p>\n\n<p>We also have a sequence for a reference genome that we will use later in the tutorial.</p>\n\n<blockquote class=\"agenda\">\n  <agenda-title></agenda-title>\n\n  <p>In this tutorial, we will deal with:</p>\n\n<ol id=\"markdown-toc\">\n  <li><a href=\"#genome-assembly-with-velvet-background\" id=\"markdown-toc-genome-assembly-with-velvet-background\">Genome assembly with Velvet: Background</a></li>\n  <li><a href=\"#get-the-data\" id=\"markdown-toc-get-the-data\">Get the data</a></li>\n  <li><a href=\"#evaluate-the-input-reads\" id=\"markdown-toc-evaluate-the-input-reads\">Evaluate the input reads</a></li>\n  <li><a href=\"#assemble-reads-with-velvet\" id=\"markdown-toc-assemble-reads-with-velvet\">Assemble reads with Velvet</a></li>\n  <li><a href=\"#collect-some-statistics-on-the-contigs\" id=\"markdown-toc-collect-some-statistics-on-the-contigs\">Collect some statistics on the contigs</a></li>\n  <li><a href=\"#discussion\" id=\"markdown-toc-discussion\">Discussion</a></li>\n</ol>\n\n</blockquote>\n\n<h1 id=\"get-the-data\">Get the data</h1>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Getting the data</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Create and name a new history for this tutorial.</p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-creating-a-new-history\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-creating-a-new-history\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Creating a new history</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <p>Click the <i class=\"fas fa-plus\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">new-history</span> icon at the top of the history panel:</p>   <p><img src=\"/training-material/shared/images/history_create_new.svg\" alt=\"UI for creating new history\" /></p>   <!-- the original drawing can be found here https://docs.google.com/drawings/d/1cCBrLAo4kDGic5QyB70rRiWJAKTenTU8STsKDaLcVU8/edit?usp=sharing --> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li>\n      <p>Import from <a href=\"https://doi.org/10.5281/zenodo.582600\">Zenodo</a> or from the data library the files:</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>https://zenodo.org/record/582600/files/mutant_R1.fastq\nhttps://zenodo.org/record/582600/files/mutant_R2.fastq\nhttps://zenodo.org/record/582600/files/wildtype.fna\n</code></pre></div>      </div>\n\n      <blockquote class=\"tip\">\n        <tip-title>Importing data via links</tip-title>\n\n        <ul>\n          <li>Copy the link location (Right-click on the filename then “Copy Link Address”)</li>\n          <li>Open the Galaxy Upload Manager</li>\n          <li>Select <strong>Paste/Fetch Data</strong></li>\n          <li>Paste the link into the text field</li>\n          <li>For the read files, change the data-type to <strong>fastqsanger</strong></li>\n          <li>Press <strong>Start</strong></li>\n        </ul>\n      </blockquote>\n    </li>\n    <li>\n      <p>Change the name of the files to <code class=\"language-plaintext highlighter-rouge\">mutant_R1</code>, <code class=\"language-plaintext highlighter-rouge\">mutant_R2</code> and <code class=\"language-plaintext highlighter-rouge\">wildtype.fna</code>.</p>\n\n      <p>As a default, Galaxy uses the link as the name of the new dataset. It also does not link the dataset to a database or a reference genome.</p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-renaming-a-dataset\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-renaming-a-dataset\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Renaming a dataset</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Click on the <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> <strong>pencil icon</strong> for the dataset to edit its attributes</li>   <li>In the central panel, change the <strong>Name</strong> field</li>   <li>Click the <strong>Save</strong> button</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li>\n      <p>Inspect the content of a file.</p>\n\n      <blockquote class=\"tip\">\n        <tip-title>Inspecting the content of a dataset</tip-title>\n\n        <ul>\n          <li>Click on the <i class=\"far fa-eye\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-eye</span> (eye) icon next to the relevant history entry</li>\n          <li>View the content of the file in the central panel</li>\n        </ul>\n      </blockquote>\n\n      <blockquote class=\"question\">\n        <question-title></question-title>\n\n        <ol>\n          <li>What are four key features of a FASTQ file?</li>\n          <li>What is the main difference between a FASTQ and a FASTA file?</li>\n        </ol>\n\n        <blockquote class=\"solution\">\n          <solution-title></solution-title>\n          <ol>\n            <li>Each sequence in a FASTQ file is represented by 4 lines: 1st line is the id, 2nd line is the sequence, 3rd line is not used, and 4th line is the quality of sequencing per nucleotide</li>\n            <li>In a FASTQ file, not only are the sequences present, but information about the quality of sequencing is also included.</li>\n          </ol>\n        </blockquote>\n      </blockquote>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>The reads have been sequenced from an imaginary <em>Staphylococcus aureus</em> bacterium using an Illumina DNA sequencing instrument. We obtained the 2 files we imported (<code class=\"language-plaintext highlighter-rouge\">mutant_R1</code> and <code class=\"language-plaintext highlighter-rouge\">mutant_R2</code>)</p>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <p>Why do we have 2 files here if we only sequenced the bacteria once?</p>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <ol>\n      <li>The bacteria has been sequenced using paired-end sequencing. The first file corresponds to forward reads and the second file to reverse reads.</li>\n    </ol>\n  </blockquote>\n</blockquote>\n\n<h1 id=\"evaluate-the-input-reads\">Evaluate the input reads</h1>\n\n<p>Before doing any assembly, the first questions you should ask about your input reads include:</p>\n\n<ul>\n  <li>What is the coverage of my genome?</li>\n  <li>How good is my read set?</li>\n  <li>Do I need to ask for a new sequencing run?</li>\n  <li>Is it suitable for the analysis I need to do?</li>\n</ul>\n\n<p>We will evaluate the input reads using the FastQC tool. This tool runs a standard series of tests on your read set and returns a relatively easy-to-interpret report. We will use it to evaluate the quality of our FASTQ files and combine the results with MultiQC.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>FastQC on a fastq file</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.73+galaxy0\" title=\"FastQC tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>FastQC</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.73+galaxy0)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-copy\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-files</span> <em>“Raw read data from your current history”</em>:  <code class=\"language-plaintext highlighter-rouge\">mutant_R1.fastq</code> and <code class=\"language-plaintext highlighter-rouge\">mutant_R2.fastq</code></li>\n      </ul>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-select-multiple-datasets\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-select-multiple-datasets\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Select multiple datasets</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ol>   <li>Click on <i class=\"far fa-copy\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-files</span> <strong>Multiple datasets</strong></li>   <li>Select several files by keeping the <kbd>Ctrl</kbd> (or <kbd>COMMAND</kbd>) key pressed and clicking on the files of interest</li> </ol> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc/1.11+galaxy1\" title=\"MultiQC tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>MultiQC</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 1.11+galaxy1)</span> with the following parameters:\n      <ul>\n        <li><em>“Results: Which tool was used to generate logs?”</em>: <code class=\"language-plaintext highlighter-rouge\">FastQC</code></li>\n        <li><em>Click “Insert FastQC output”</em></li>\n        <li><em>“Type of FastQC output?”</em>: <code class=\"language-plaintext highlighter-rouge\">multiple datasets, select the raw data files from FastQC</code></li>\n      </ul>\n    </li>\n  </ol>\n</blockquote>\n\n<p>MultiQC generates a webpage combining reports for FastQC on both datasets. It includes these graphs and tables:</p>\n\n<ul>\n  <li>\n    <p>General statistics</p>\n\n    <p>We need to know about the data for our analysis. In particular, we need to know the read lengths as it is important in setting the maximum k-mer size for an assembly.</p>\n\n    <blockquote class=\"comment\">\n      <comment-title>Getting the length of sequences</comment-title>\n\n      <ul>\n        <li>Find the MultiQC output that is a webpage and click to view</li>\n        <li>The first table shows General Statistics for the input read files</li>\n        <li>At the top of this table, click on <strong>Configure Columns</strong></li>\n        <li>Make sure the box next to <strong>Length</strong> is ticked</li>\n        <li>Close the window</li>\n        <li>This table should now show a column for read lengths</li>\n      </ul>\n    </blockquote>\n\n    <blockquote class=\"question\">\n      <question-title></question-title>\n\n      <ol>\n        <li>How long are the sequences?</li>\n        <li>What is the average coverage of the genome, given our imaginary <em>Staphylococcus aureus</em> bacterium has a genome of 197,394 bp?</li>\n      </ol>\n\n      <blockquote class=\"solution\">\n        <solution-title></solution-title>\n        <ol>\n          <li>The sequences are 150 bp long</li>\n          <li>We have 2 x 12,480 sequences of 150 bp, so the average genome coverage is: 2 * 12480 * 150 / 197394, or approximately 19 X coverage.</li>\n        </ol>\n      </blockquote>\n    </blockquote>\n  </li>\n  <li>\n    <p>Sequence Quality Histograms</p>\n\n    <p>Dips in quality near the beginning, middle or end of the reads may determine the trimming/cleanup methods and parameters to be used, or may indicate technical problems with the sequencing process/machine run.</p>\n\n    <figure id=\"figure-1\" style=\"max-width: 90%;\"><img src=\"../../images/fastqc_per_base_sequence_quality_plot.png\" alt=\"Sequence Quality Histograms with the mean quality value across each base position in the read. \" width=\"1200\" height=\"800\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/fastqc_per_base_sequence_quality_plot.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 1</strong>:</span> The mean quality value across each base position in the read</figcaption></figure>\n\n    <blockquote class=\"question\">\n      <question-title></question-title>\n\n      <ol>\n        <li>What does the y-axis represent?</li>\n        <li>Why is the quality score decreasing across the length of the reads?</li>\n      </ol>\n\n      <blockquote class=\"solution\">\n        <solution-title></solution-title>\n        <ol>\n          <li>The y-axis represents the quality score for each base (an estimate of the error during sequencing).</li>\n          <li>The quality score is decreasing accross the length of the reads because the sequencing become less and less reliable at the end of the reads.</li>\n        </ol>\n      </blockquote>\n    </blockquote>\n  </li>\n  <li>\n    <p>Per Sequence GC Content</p>\n\n    <p>High GC organisms tend not to assemble well and may have an uneven read coverage distribution.</p>\n  </li>\n  <li>\n    <p>Per Base N Content</p>\n\n    <p>The presence of large numbers of Ns in reads may point to a poor quality sequencing run. You will need to trim these reads to remove Ns.</p>\n  </li>\n  <li>\n    <p>k-mer content</p>\n\n    <p>The presence of highly recurring k-mers may point to contamination of reads with barcodes or adapter sequences.</p>\n  </li>\n</ul>\n\n<blockquote class=\"comment\">\n  <comment-title></comment-title>\n\n  <p>For a fuller discussion of FastQC outputs and warnings, see the <a href=\"https://www.bioinformatics.babraham.ac.uk/projects/fastqc/\">FastQC website link</a>, including the section on each of the output <a href=\"https://www.bioinformatics.babraham.ac.uk/projects/fastqc/Help/3%20Analysis%20Modules/\">reports</a>, and examples of <a href=\"https://www.bioinformatics.babraham.ac.uk/projects/fastqc/good_sequence_short_fastqc.html\">“good”</a> and <a href=\"https://www.bioinformatics.babraham.ac.uk/projects/fastqc/bad_sequence_fastqc.html\">“bad”</a> Illumina data.</p>\n</blockquote>\n\n<p>We won’t be doing anything to these data to clean it up as there isn’t much need. Therefore we will get on with the assembly!</p>\n\n<h1 id=\"assemble-reads-with-velvet\">Assemble reads with Velvet</h1>\n\n<p>Now, we want to assemble our reads to find the sequence of our imaginary <em>Staphylococcus aureus</em> bacterium. We will perform a <em>de novo</em> assembly of the reads into long contiguous sequences using the Velvet short read assembler.</p>\n\n<p>The first step of the assembler is to build a de Bruijn graph. For that, it will break our reads into k-mers, <em>i.e.</em> fragments of length <em>k</em>. Velvet requires the user to input a value of <em>k</em> (k-mer size) for the assembly process. Small k-mers will give greater connectivity, but large k-mers will give better specificity.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Assemble the reads</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/devteam/fastq_paired_end_interlacer/fastq_paired_end_interlacer/1.2.0.1+galaxy0\" title=\"FASTQ interlacer tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>FASTQ interlacer</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 1.2.0.1+galaxy0)</span> with the following parameters:\n      <ul>\n        <li><em>“Type of paired-end datasets”</em>: <code class=\"language-plaintext highlighter-rouge\">2 separate datasets</code></li>\n        <li><em>“Left-hand mates”</em>: <code class=\"language-plaintext highlighter-rouge\">mutant_R1.fastq</code></li>\n        <li><em>“Right-hand mates”</em>: <code class=\"language-plaintext highlighter-rouge\">mutant_R2.fastq</code></li>\n      </ul>\n\n      <p>Currently our paired-end reads are in 2 files (one with the forward reads and one with the reverse reads), but Velvet requires only one file, where each read is next to its mate read. In other words, if the reads are indexed from 0, then reads 0 and 1 are paired, 2 and 3, 4 and 5, etc. Before doing the assembly <em>per se</em>, we need to prepare the files by combining them.</p>\n    </li>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/devteam/velvet/velveth/1.2.10.3\" title=\"velveth tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>velveth</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 1.2.10.3)</span> with the following parameters:\n      <ul>\n        <li><em>“Hash Length”</em>: <code class=\"language-plaintext highlighter-rouge\">29</code></li>\n        <li><em>“Input Files”</em>\n          <ul>\n            <li>Click on <i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <em>“Input Files”</em></li>\n            <li>In “1: Input Files”\n              <ul>\n                <li><em>“Choose the input type”</em>: <code class=\"language-plaintext highlighter-rouge\">interleaved paired end</code></li>\n                <li><em>“read type”</em>: <code class=\"language-plaintext highlighter-rouge\">shortPaired reads</code></li>\n                <li><i class=\"far fa-copy\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-files</span> <em>“Dataset”</em>:  pairs output of <strong>FASTQ interlacer</strong></li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n      </ul>\n\n      <p>The tool takes our reads and break them into k-mers.</p>\n    </li>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/devteam/velvet/velvetg/1.2.10.2\" title=\"velvetg tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>velvetg</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 1.2.10.2)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-copy\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-files</span> <em>“Velvet Dataset”</em>:  outputs of <strong>velveth</strong></li>\n        <li><em>“Using Paired Reads”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n      </ul>\n\n      <p>This last tool actually does the assembly.</p>\n    </li>\n  </ol>\n</blockquote>\n\n<p>Five files are generated. We will look at the contigs file and the stats file:</p>\n\n<ul>\n  <li>\n    <p>The <strong>Contigs</strong> file</p>\n\n    <p>This file contains the sequences of the contigs. In the header of each contig, a bit of information is added:</p>\n    <ul>\n      <li>the k-mer length (called “length”): For the value of k chosen in the assembly, a measure of how many k-mers overlap (by 1 bp each overlap) to give this length</li>\n      <li>the k-mer coverage (called “coverage”): For the value of k chosen in the assembly, a measure of how many k-mers overlap each base position (in the assembly).</li>\n      <li>Note that your results may look different to the example in the image below.</li>\n    </ul>\n\n    <p><a href=\"../../images/image10.png\" rel=\"noopener noreferrer\"><img src=\"../../images/image10.png\" alt=\"Contigs output. \" width=\"521\" height=\"344\" loading=\"lazy\" /></a></p>\n  </li>\n  <li>\n    <p>The <strong>Stats</strong> file</p>\n\n    <p>This is a tabular file giving for each contig the k-mer lengths, k-mer coverages and other measures.  Note that your results may look different to the example in the image below.</p>\n\n    <p><a href=\"../../images/image11.png\" rel=\"noopener noreferrer\"><img src=\"../../images/image11.png\" alt=\"Contigs stats output. \" width=\"399\" height=\"505\" loading=\"lazy\" /></a></p>\n  </li>\n</ul>\n\n<h1 id=\"collect-some-statistics-on-the-contigs\">Collect some statistics on the contigs</h1>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>How many contigs have been built?</li>\n    <li>What is the mean, min and max length of the contigs?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <ol>\n      <li>355</li>\n      <li>To compute this information, we can use the Datamash tool on the 2nd columns (length). Be careful with the first line, the header. As a result, we obtain approximately: 516 as mean, 1 as min and 8836 as max. It would mean that the smallest contig has a length of 1 bp, even smaller than k. The length on the 2nd column corresponds to length of the contig in k-mers. This means that the smallest contig has a length of 1k = 29. So to obtain the real length, we need to add k-1 to the length. We then obtain a mean contig length of 544 bp, a min contig of 29 bp and a max contig of 8864 bp.</li>\n    </ol>\n  </blockquote>\n</blockquote>\n\n<p>This table is limitted, but we will now collect more basic statistics on our assembly.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Collect fasta statistics on our contigs</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/quast/quast/5.2.0+galaxy1\" title=\"Quast tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Quast</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 5.2.0+galaxy1)</span> with the following parameters:\n      <ul>\n        <li><em>“Assembly mode”</em>: <code class=\"language-plaintext highlighter-rouge\">Individual assembly (1 contig file per sample)</code></li>\n        <li><em>“Use customized names?”</em>: <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n        <li><em>“Contigs/scaffolds file”</em>: contigs output of <strong>velvetg</strong></li>\n        <li><em>“Type of assembly”</em>: <code class=\"language-plaintext highlighter-rouge\">Genome</code></li>\n        <li><em>“Use a reference genome?”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n        <li><em>“Reference genome”</em>: <code class=\"language-plaintext highlighter-rouge\">wildtype.fna</code></li>\n        <li><em>“Type of organism”</em>: <code class=\"language-plaintext highlighter-rouge\">Prokaryotes</code></li>\n        <li><em>“Lower Threshold”</em>: <code class=\"language-plaintext highlighter-rouge\">500</code></li>\n        <li><em>“Advanced options: Comma-separated list of contig length thresholds”</em>: <code class=\"language-plaintext highlighter-rouge\">0,1000</code></li>\n      </ul>\n    </li>\n  </ol>\n</blockquote>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>What is represented in the Icarus viewer?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <ol>\n      <li>Icarus is a novel genome visualizer for accurate assessment and analysis of genomic draft assemblies. It draws contigs ordered from longest to shortest, highlights N50, N75 (NG50, NG75) and long contigs larger than a user-specified threshold</li>\n    </ol>\n  </blockquote>\n</blockquote>\n\n<p>The HTML report reports many statistics computed by QUAST to assess the quality of the assembly:</p>\n\n<ul>\n  <li>Statistics about the quality of the assembly when compared to the reference (fraction of the genome, duplication ratio, etc)</li>\n  <li>\n    <p>Misassembly statistics, including the number of misassemblies</p>\n\n    <p>A misassembly is a position in the contigs (breakpoints) that satisfy one of the following criteria:</p>\n    <ul>\n      <li>the left flanking sequence aligns over 1 kbp away from the right flanking sequence on the reference;</li>\n      <li>flanking sequences overlap on more than 1 kbp</li>\n      <li>flanking sequences align to different strands or different chromosomes</li>\n    </ul>\n  </li>\n  <li>Unaligned regions in the assembly</li>\n  <li>Mismatches compared to the reference genomes</li>\n  <li>Statistics about the assembly <em>per se</em>, such as the number of contigs and the length of the largest contig</li>\n</ul>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>How many contigs have been constructed?</li>\n    <li>Which proportion of the reference genome do they represent?</li>\n    <li>How many misassemblies have been found?</li>\n    <li>Has the assembly introduced mismatches and indels?</li>\n    <li>What are N50 and L50?</li>\n    <li>Is there a bias in GC percentage induced by the assembly?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <ol>\n      <li>190 contigs have been constructed, but only 47 have a length &gt; 500 bp.</li>\n      <li>The contigs represents 87.965% of the reference genome.</li>\n      <li>1 misassembly has been found: it corresponds to a relocation, <em>i.e.</em> a misassembly event (breakpoint) where the left flanking sequence aligns over 1 kbp away from the right flanking sequence on the reference genome.</li>\n      <li>8.06 mismatches per 100 kbp and 4.03 indels per 100 kbp are found.</li>\n      <li>N50 is the length for which the collection of all contigs of that length or longer covers at least half an assembly. In other words, if contigs were ordered from small to large, half of all the nucleotides will be in contigs this size or larger. And L50 is the number of contigs equal to or longer than N50: L50 is the minimal number of contigs that cover half the assembly.</li>\n      <li>The GC % in the assembly is 33.64%, really similar to the one of the reference genome (33.43%).</li>\n    </ol>\n  </blockquote>\n</blockquote>\n\n<h1 id=\"discussion\">Discussion</h1>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>(Optional) Rerun for values <i>k</i> ranging from 31 to 101</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/devteam/velvet/velveth/1.2.10.3\" title=\"velveth tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>velveth</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 1.2.10.3)</span> with the same parameters as before except\n      <ul>\n        <li><em>“Hash Length”</em>: a value between 31 and 101</li>\n      </ul>\n    </li>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/devteam/velvet/velvetg/1.2.10.2\" title=\"velvetg tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>velvetg</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 1.2.10.2)</span> with the same parameters as before</li>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/quast/quast/5.2.0+galaxy1\" title=\"Quast tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Quast</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 5.2.0+galaxy1)</span> with the same parameters as before</li>\n  </ol>\n</blockquote>\n\n<p>We have completed an assembly on this data set for a number of k values ranging from 29 to 101. A few of the assembly metrics appear below.</p>\n\n<figure id=\"figure-2\" style=\"max-width: 90%;\"><img src=\"../../images/number_of_contigs.png\" alt=\"contigs. \" width=\"600\" height=\"371\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/number_of_contigs.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 2</strong>:</span> Number of contigs in the assembly for various k-mer sizes</figcaption></figure>\n\n<figure id=\"figure-3\" style=\"max-width: 90%;\"><img src=\"../../images/largest_contig.png\" alt=\"largest_contig. \" width=\"600\" height=\"371\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/largest_contig.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 3</strong>:</span> Largest contig in each of the assemblies by k-mer size</figcaption></figure>\n\n<figure id=\"figure-4\" style=\"max-width: 90%;\"><img src=\"../../images/total_bp.png\" alt=\"total_bp. \" width=\"600\" height=\"371\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/total_bp.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 4</strong>:</span> Total number of base pairs in all the contigs for each assembly by k-mer size</figcaption></figure>\n\n<figure id=\"figure-5\" style=\"max-width: 90%;\"><img src=\"../../images/n50.png\" alt=\"n50. \" width=\"600\" height=\"371\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/n50.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 5</strong>:</span> N50 metric for each of the assemblies by k-mer size</figcaption></figure>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>Are there any distinct features in the charts?</li>\n    <li>Does it look like one assembly might be better than some of the others?</li>\n  </ol>\n\n</blockquote>\n\n<p>The reasons for these patterns will be discussed in detail in the De Bruijn graph assembly slides and tutorial.</p>\n"],"ref_slides":[".enlarge120[\n\n# ***De novo* Genome Assembly**\n\n]\n\n#### With thanks to T Seemann, D Bulach, I Cooke and Simon Gladman\n---\n.enlarge120[\n\n# ***De novo* assembly**\n\n]\n\n.pull-left[\n\n**The process of reconstructing the original DNA sequence from the fragment reads alone.**\n\n* Instinctively like a jigsaw puzzle\n\n  * Find reads which \"fit together\" (overlap)\n  * Could be missing pieces (sequencing bias)\n  * Some pieces will be dirty (sequencing errors)\n\n]\n\n.pull-right[ ![Graphic of a shattered, human-like egg sitting on a wall, dressed in a suit. Several men stand around him attempting to piece back together shattered fragments of the egg.](../../images/Humpty.jpg) ]\n\n---\n\n# **Another View**\n\n![A stack of newspapers is labelled genomic DNA. A line labelled points an image of a room full of shredded paper and people inside, labelled reads. Then the line continues to a pile of newspaper clippings reading draft genome sequence, and finally to closed genome sequence with a cartoon of a newspaper.](../../images/newspaper.png)\n\n---\n\n# **Assembly: An Example**\n\n---\n\n# **A small \"genome\"**\n\n![The text \"Friends, romans, countrymen, lend me your ears;\". A small drawing of Shakespeare has a speech bubble reading \"I'll return them tomorrow\"](../../images/shakespear1.png)\n\n---\n\n# **Shakespearomics**\n\n![A set of reads is shown, with various subsets of the sentence like \"ds, romans, count\" and \"friends, rom\" and \"crymen, lend me\". The c in crymen is highlighted yellow, as it should be trymen (from countrymen.) The drawing of Shakespeare now says \"Oops! I dropped them.\"](../../images/shakespear2.png)\n\n---\n\n# **Shakespearomics**\n\n![The reads are shown again, now with overlaps below, reconstructing the sentence from the fragments. Shakespeare says I'm good with words. Crymen and \"send me your ears\" have their first letters highlighted in yellow due to their typos.](../../images/shakespear3.png)\n\n---\n\n# **Shakespearomics**\n\n![Finally a \"majority consensus\" is shown below the overlaps, in two other reads we saw count and countrymen, in addition to our crymen. So that makes 2/3 that have the correct text, and we go with the majority. The same is done for the other typo. Shakespeare says We have a consensus!](../../images/shakespear4.png)\n\n---\n\n# **So far, so good!**\n\n---\n\n# **The Awful Truth**\n\n![A meme image showing boromir from lord of the rings. The text reads: one does not simply assemble a genome.](../../images/notsimply.png)\n\n## \"Genome assembly is impossible.\" - A/Prof. Mihai Pop\n\n---\n.enlarge120[\n\n# **Why is it so hard?**\n\n]\n\n.pull-left[\n* Millions of pieces\n  * Much, much shorter than the genome\n  * Lots of them look similar\n* Missing pieces\n  * Some parts can't be sequenced easily\n* Dirty Pieces\n  * Lots of errors in reads\n]\n\n.pull-right[ ![A picture of a jigsaw puzzle titled \"The world's most difficult\" and showing a field of small round candies. It boasts the same artwork on both sides.](../../images/worlds_hardest.png) ]\n\n---\n\n# **Assembly recipe**\n\n* Find all overlaps between reads\n  * Hmm, sounds like a lot of work..\n* Build a graph\n  * A picture of the read connections\n* Simplify the graph\n  * Sequencing errors will mess it up a lot\n* Traverse the graph\n  * Trace a sensible path to produce a consensus\n\n---\n\n![Reads are provided to the algorithm, they are in the colours of the rainbow. Next overlaps are identified and the rainbow resolves itself. A subset of that is highlighted and points to reads connected by overlaps with many arrows going between the bluegreen fragments that are highlighted. This goes to the hamiltonian path identified with a re-run arrow between, indicating some mount of backtracking needed to find the best path. Finally the hamiltonian produces a consensus sequence with the correct final ordering.](../../images/olc_pic.png)\n\n---\n\n# **A more realistic graph**\n\n![A graph showing maybe 500 nodes connected with messy lines, it is intentionally impossible to read and a mess to highlight the scope of the problem.](../../images/real_graph.png)\n\n---\n\n# .image-15[![fun with a strike through it.](../../images/nofun.png)] **What ruins the graph?**\n\n* Read errors\n  * Introduces false edges and nodes\n\n* Non haploid organisms\n  * Heterozygosity causes lots of detours\n\n* Repeats\n  * If they are longer than the read length\n  * Causes nodes to be shared, locality confusion.\n\n---\n\n# **Repeats**\n\n---\n.enlarge120[\n# **What is a repeat?**\n]\n\n.pull-left[\n\n#### ***A segment of DNA which occurs more than once in the genome sequence***\n\n* Very common\n  * Transposons (self replicating genes)\n  * Satellites (repetitive adjacent patterns)\n  * Gene duplications (paralogs)\n\n]\n\n.pull-right[\n\n![Three human children wearing similar shirts. One reads I was planned, one I was not, and the third Me neither.](../../images/triplets.png)\n\n]\n\n---\n\n# **Effect on Assembly**\n\n![A genome with a repeat in two distinct locations is shown. Arrows point to the repeats being collapsed, and then the in-between bits being cut out of the sequence completely.](../../images/repeat_effect.png)\n\n---\n.enlarge120[\n# **The law of repeats** .image-15[![A picture of the ocean with text reading repeat after me.](../../images/repeatafterme.png)]\n]\n\n## **It is impossible to resolve repeats of length S unless you have reads longer than S**\n\n## **It is impossible to resolve repeats of length S unless you have reads longer than S**\n\n---\n\n# **Scaffolding**\n\n---\n.enlarge120[\n# **Beyond contigs**\n]\n\n.pull-left[\n\nContig sizes are limited by:\n\n* the length of the repeats in your genome\n  * Can't change this\n\n\n* the length (or \"span\") of the reads\n  * Use long read technology\n  * Use tricks with other technology\n\n]\n\n---\n.enlarge120[\n# **Types of reads**\n]\n\n.pull-left[.enlarge120[**Example fragment**]]\n\n\n.remark-code[.enlarge120[atcgtatgatcttgagattctctcttcccttatagctgctata]]\n\n.pull-left[.enlarge120[**\"Single-end\" read**]]\n\n\n.remark-code[.enlarge120[**atcgtatg**atcttgagattctctcttcccttatagctgctata]]\n\nsequence *one* end of the fragment\n\n.pull-left[.enlarge120[**\"Paired-end\" read**]]\n\n\n.remark-code[.enlarge120[**atcgtatg**atcttgagattctctcttcccttatag**ctgctata**]]\n\nsequence both ends of the same fragment\n\n**We can exploit this information!**\n---\n\n.enlarge120[# **Scaffolding**]\n\n* **Paired end reads**\n  * Known sequences at each end of fragment\n  * Roughly known fragment length\n\n* **Most ends will occur in same contig**\n\n* **Some will occur in different contigs**\n  * ***evidence that these contigs are linked***\n---\n\n.enlarge120[# **Contigs to Scaffolds**]\n\n![A scaffold with gaps as yellow boxes is shown. Above is a set of contigs and paired-end reads shown bridging the gaps.](../../images/scaffolding.png)\n\n---\n\n.enlarge120[# **Assessing assemblies**]\n\n* We desire\n  * Total length similar to genome size\n  * Fewer, larger contigs\n  * Correct contigs\n\n* Metrics\n  * No generally useful measure. (No real prior information)\n  * Longest contigs, total base pairs in contigs, **N50**, ...\n\n---\n\n.enlarge120[# **The \"N50\"**]\n\n.enlarge120[***The length of that contig from which 50% of the bases are in it and shorter contigs***]\n\n* Imagine we have 7 contigs with lengths:\n  * 1, 1, 3, 5, 8, 12, 20\n\n* Total\n  * 1+1+3+5+8+12+20 = 50\n\n* N50 is the \"halfway sum\" = 25\n  * 1+1+3+5+8+**12** = 30 (>25) so **N50 is 12**\n\n---\n\n.enlarge120[# **2 levels of assembly**]\n\n* Draft assembly\n  * Will contain a number of non-linked scaffolds with gaps of unknown sequence\n  * Fairly easy to get to\n\n* Closed (finished) assembly\n  * One sequence for each chromosome\n  * Takes a **lot** more work\n  * Small genomes are becoming easier with long read tech\n  * Large genomes are the province of big consortia (e.g. Human Genome Consortium)\n\n---\n.enlarge120[# **How do I do it?**]\n---\n.enlarge120[\n# **Example**\n\n* Culture your bacterium\n\n\n* Extract your genomic DNA\n\n\n* Send it to your sequencing centre for Illumina sequencing\n  * 250bp paired end\n\n\n* Get back 2 files\n  * .remark-code[MRSA_R1.fastq.gz]\n  * .remark-code[MRSA_R2.fastq.gz]\n\n\n* ***Now what?***\n]\n\n---\n.enlarge120[# **Assembly tools**\n\n* **Genome**\n  * **Velvet, Velvet Optimizer, Spades,** Abyss, MIRA, Newbler, SGA, AllPaths, Ray, SOAPdenovo, ...\n\n\n* Meta-genome\n  * Meta Velvet, SGA, custom scripts + above\n\n\n* Transcriptome\n  * Trinity, Oases, Trans-abyss\n\n***And many, many others...***\n\n]\n\n---\n.enlarge120[\n# **Assembly Exercise #1**\n\n* We will do a simple assembly using **Velvet** in **Galaxy**\n* We can do a number of different assemblies and compare some assembly metrics.\n\n]\n"],"hands_on":true,"slides":true,"mod_date":"2024-05-29 14:28:52 +0000","pub_date":"2017-05-23 16:37:24 +0000","version":48,"workflows":[{"workflow":"assembly-general-introduction.ga","tests":true,"url":"https://training.galaxyproject.org/training-material/topics/assembly/tutorials/general-introduction/workflows/assembly-general-introduction.ga","path":"topics/assembly/tutorials/general-introduction/workflows/assembly-general-introduction.ga","wfid":"assembly-general-introduction","wfname":"assembly-general-introduction","trs_endpoint":"https://training.galaxyproject.org/training-material/api/ga4gh/trs/v2/tools/assembly-general-introduction/versions/assembly-general-introduction","license":null,"creators":[],"name":"Intro to Genome Assembly","title":"Intro to Genome Assembly","test_results":null,"modified":"2024-06-24 07:14:26 +0000","mermaid":"flowchart TD\n  0[\"ℹ️ Input Dataset\\nmutant_R1.fastq\"];\n  style 0 stroke:#2c3143,stroke-width:4px;\n  1[\"ℹ️ Input Dataset\\nmutant_R2.fastq\"];\n  style 1 stroke:#2c3143,stroke-width:4px;\n  2[\"ℹ️ Input Dataset\\nwildtype.fna\"];\n  style 2 stroke:#2c3143,stroke-width:4px;\n  3[\"FastQC\"];\n  0 -->|output| 3;\n  22a51e6e-2e5f-4415-a127-e0b1c179a1b1[\"Output\\nfastqc_html\"];\n  3 --> 22a51e6e-2e5f-4415-a127-e0b1c179a1b1;\n  style 22a51e6e-2e5f-4415-a127-e0b1c179a1b1 stroke:#2c3143,stroke-width:4px;\n  51ec8c05-eb47-4359-9120-0eca1a6d5c2f[\"Output\\nfastqc_txt\"];\n  3 --> 51ec8c05-eb47-4359-9120-0eca1a6d5c2f;\n  style 51ec8c05-eb47-4359-9120-0eca1a6d5c2f stroke:#2c3143,stroke-width:4px;\n  4[\"FastQC\"];\n  1 -->|output| 4;\n  5[\"FASTQ interlacer\"];\n  0 -->|output| 5;\n  1 -->|output| 5;\n  225edf5f-3b90-4f84-a38a-5c786000a3fc[\"Output\\noutput_pairs\"];\n  5 --> 225edf5f-3b90-4f84-a38a-5c786000a3fc;\n  style 225edf5f-3b90-4f84-a38a-5c786000a3fc stroke:#2c3143,stroke-width:4px;\n  dae90093-ae96-4bb2-824d-c92b61585096[\"Output\\noutput_singles\"];\n  5 --> dae90093-ae96-4bb2-824d-c92b61585096;\n  style dae90093-ae96-4bb2-824d-c92b61585096 stroke:#2c3143,stroke-width:4px;\n  6[\"MultiQC\"];\n  3 -->|text_file| 6;\n  4 -->|text_file| 6;\n  85e3704a-859d-4657-b3d7-9b67e4981d21[\"Output\\nmultiqc_stats\"];\n  6 --> 85e3704a-859d-4657-b3d7-9b67e4981d21;\n  style 85e3704a-859d-4657-b3d7-9b67e4981d21 stroke:#2c3143,stroke-width:4px;\n  fab7e06a-604e-4432-b0ed-b63157a8643b[\"Output\\nmultiqc_report\"];\n  6 --> fab7e06a-604e-4432-b0ed-b63157a8643b;\n  style fab7e06a-604e-4432-b0ed-b63157a8643b stroke:#2c3143,stroke-width:4px;\n  7[\"velveth\"];\n  5 -->|outfile_pairs| 7;\n  607a214d-9137-4e73-9b73-954c79678937[\"Output\\nvelveth_out\"];\n  7 --> 607a214d-9137-4e73-9b73-954c79678937;\n  style 607a214d-9137-4e73-9b73-954c79678937 stroke:#2c3143,stroke-width:4px;\n  8[\"velvetg\"];\n  7 -->|out_file1| 8;\n  b0cf3779-6199-42c9-963f-a733559f90bb[\"Output\\nvelvet_contigs\"];\n  8 --> b0cf3779-6199-42c9-963f-a733559f90bb;\n  style b0cf3779-6199-42c9-963f-a733559f90bb stroke:#2c3143,stroke-width:4px;\n  54926701-ccae-4143-b649-b7e08e1c6a8e[\"Output\\nvelvet_stats\"];\n  8 --> 54926701-ccae-4143-b649-b7e08e1c6a8e;\n  style 54926701-ccae-4143-b649-b7e08e1c6a8e stroke:#2c3143,stroke-width:4px;\n  9[\"Quast\"];\n  2 -->|output| 9;\n  8 -->|contigs| 9;\n  0babe959-4d63-4838-9e18-4526b3dd0db5[\"Output\\nquast_report_html\"];\n  9 --> 0babe959-4d63-4838-9e18-4526b3dd0db5;\n  style 0babe959-4d63-4838-9e18-4526b3dd0db5 stroke:#2c3143,stroke-width:4px;\n  f41c43c4-763c-42bc-b36e-9ea76e7752c2[\"Output\\nquast_report_pdf\"];\n  9 --> f41c43c4-763c-42bc-b36e-9ea76e7752c2;\n  style f41c43c4-763c-42bc-b36e-9ea76e7752c2 stroke:#2c3143,stroke-width:4px;"}],"api":"https://training.galaxyproject.org/training-material/api/topics/assembly/tutorials/general-introduction/tutorial.json","tools":["toolshed.g2.bx.psu.edu/repos/devteam/fastq_paired_end_interlacer/fastq_paired_end_interlacer/1.2.0.1+galaxy0","toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.72+galaxy1","toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.73+galaxy0","toolshed.g2.bx.psu.edu/repos/devteam/velvet/velvetg/1.2.10.1","toolshed.g2.bx.psu.edu/repos/devteam/velvet/velvetg/1.2.10.2","toolshed.g2.bx.psu.edu/repos/devteam/velvet/velveth/1.2.10.1","toolshed.g2.bx.psu.edu/repos/devteam/velvet/velveth/1.2.10.3","toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc/1.11+galaxy1","toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc/1.7","toolshed.g2.bx.psu.edu/repos/iuc/quast/quast/5.0.2+galaxy0","toolshed.g2.bx.psu.edu/repos/iuc/quast/quast/5.2.0+galaxy1"],"supported_servers":{"exact":[{"url":"https://galaxy.mesocentre.uca.fr","name":"Galaxy@AuBi","usegalaxy":false},{"url":"https://usegalaxy.org","name":"UseGalaxy.org (Main)","usegalaxy":true},{"url":"https://usegalaxy.org.au","name":"UseGalaxy.org.au","usegalaxy":true}],"inexact":[{"url":"https://usegalaxy.cz/","name":"UseGalaxy.cz","usegalaxy":false},{"url":"https://usegalaxy.eu","name":"UseGalaxy.eu","usegalaxy":true},{"url":"https://usegalaxy.fr/","name":"UseGalaxy.fr","usegalaxy":false}]},"topic_name_human":"Assembly","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[{"name":"fastq_paired_end_interlacer","owner":"devteam","revisions":"2ccb8dcabddc","tool_panel_section_label":"FASTA/FASTQ","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"fastqc","owner":"devteam","revisions":"e7b2202befea","tool_panel_section_label":"FASTA/FASTQ","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"fastqc","owner":"devteam","revisions":"3d0c7bdf12f5","tool_panel_section_label":"FASTA/FASTQ","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"velvet","owner":"devteam","revisions":"5da9a0e2fb2d","tool_panel_section_label":"Assembly","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"velvet","owner":"devteam","revisions":"920677cd220f","tool_panel_section_label":"Assembly","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"velvet","owner":"devteam","revisions":"5da9a0e2fb2d","tool_panel_section_label":"Assembly","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"velvet","owner":"devteam","revisions":"920677cd220f","tool_panel_section_label":"Assembly","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"multiqc","owner":"iuc","revisions":"abfd8a6544d7","tool_panel_section_label":"Quality Control","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"multiqc","owner":"iuc","revisions":"b2f1f75d49c4","tool_panel_section_label":"Quality Control","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"quast","owner":"iuc","revisions":"59db8ea8c845","tool_panel_section_label":"Assembly","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"quast","owner":"iuc","revisions":"72472698a2df","tool_panel_section_label":"Assembly","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"}]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools:\n- name: fastq_paired_end_interlacer\n  owner: devteam\n  revisions: 2ccb8dcabddc\n  tool_panel_section_label: FASTA/FASTQ\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: fastqc\n  owner: devteam\n  revisions: e7b2202befea\n  tool_panel_section_label: FASTA/FASTQ\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: fastqc\n  owner: devteam\n  revisions: 3d0c7bdf12f5\n  tool_panel_section_label: FASTA/FASTQ\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: velvet\n  owner: devteam\n  revisions: 5da9a0e2fb2d\n  tool_panel_section_label: Assembly\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: velvet\n  owner: devteam\n  revisions: 920677cd220f\n  tool_panel_section_label: Assembly\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: velvet\n  owner: devteam\n  revisions: 5da9a0e2fb2d\n  tool_panel_section_label: Assembly\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: velvet\n  owner: devteam\n  revisions: 920677cd220f\n  tool_panel_section_label: Assembly\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: multiqc\n  owner: iuc\n  revisions: abfd8a6544d7\n  tool_panel_section_label: Quality Control\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: multiqc\n  owner: iuc\n  revisions: b2f1f75d49c4\n  tool_panel_section_label: Quality Control\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: quast\n  owner: iuc\n  revisions: 59db8ea8c845\n  tool_panel_section_label: Assembly\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: quast\n  owner: iuc\n  revisions: 72472698a2df\n  tool_panel_section_label: Assembly\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n","tours":false,"video":false,"slides_recordings":[{"captioners":["shiltemann","hexylena"],"date":"2021-02-15","galaxy_version":"21.01","length":"25M","youtube_id":"-EX_G1griZE","speakers":["slugger70"]}],"translations":{"tutorial":[],"slides":[],"video":false},"license":"CC-BY-4.0","type":"tutorial","logo":"GTN","class":"enlarge120","recordings":[{"captioners":["shiltemann","hexylena"],"date":"2021-02-15","galaxy_version":"21.01","length":"25M","youtube_id":"-EX_G1griZE","speakers":["slugger70"]}],"redirect_from":["/short/assembly/general-introduction/slides","/short/S00033"]}