{"layout":"tutorial_hands_on","title":"RNA-seq Alignment with STAR","questions":["What are the first steps to process RNA-seq data?"],"objectives":["Learn the basics to process RNA sequences","Check the quality and trim the sequences with bash","Use command line STAR aligner to map the RNA sequences","Estimate the number of reads per gens"],"time_estimation":"90M","key_points":["Bioinformatic command line tools are collections of commands that can be used to carry out bioinformatic analyses.","To use most powerful bioinformatic tools, you will need to use the command line.","There a few basic steps to follow in order to process the RNA sequences","Quality control, trimming and alignment to reference genome are the first part of the RNA-seq downstream analysis"],"zenodo_link":"https://zenodo.org/record/6457007","contributions":{"authorship":["Sofokli5"],"editing":["fpsom","shiltemann","hexylena","carpentries"],"funding":["gallantries"]},"js_requirements":{"mathjax":null,"mermaid":false},"short_id":"T00346","url":"/topics/transcriptomics/tutorials/rna-seq-bash-star-align/tutorial.html","topic_name":"transcriptomics","tutorial_name":"rna-seq-bash-star-align","dir":"topics/transcriptomics/tutorials/rna-seq-bash-star-align","symlink":null,"id":"transcriptomics/rna-seq-bash-star-align","ref_tutorials":["<p>In recent years, RNA sequencing (in short RNA-Seq) has become a very widely used technology to analyze the continuously changing cellular transcriptome, i.e. the set of all RNA molecules in one cell or a population of cells. One of the most common aims of RNA-Seq is the profiling of gene expression by identifying genes or molecular pathways that are differentially expressed (DE) between two or more biological conditions. This tutorial demonstrates a computational workflow for counting and locating the genes in RNA sequences. The first and most critical step in an RNA-seq analysis.</p>\n\n<p>In the study of <span class=\"citation\"><a href=\"#brooks2011conservation\">Brooks <i>et al.</i> 2011</a></span>, the authors identified genes and pathways regulated by the <em>Pasilla</em> gene (the <em>Drosophila</em> homologue of the mammalian splicing regulators Nova-1 and Nova-2 proteins) using RNA-Seq data. They depleted the <em>Pasilla</em> (<em>PS</em>) gene in <em>Drosophila melanogaster</em> by RNA interference (RNAi). Total RNA was then isolated and used to prepare both single-end and paired-end RNA-Seq libraries for treated (PS depleted) and untreated samples. These libraries were sequenced to obtain RNA-Seq reads for each sample. The RNA-Seq data for the treated and the untreated samples can be compared to identify the effects of <em>Pasilla</em> gene depletion on gene expression.</p>\n\n<p>In this tutorial, we illustrate the analysis of the gene expression data step by step using 7 of the original datasets:</p>\n\n<ul>\n  <li>4 untreated samples: <a href=\"https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM461176\">GSM461176</a>, <a href=\"https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM461177\">GSM461177</a>, <a href=\"https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM461178\">GSM461178</a>, <a href=\"https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM461182\">GSM461182</a></li>\n  <li>3 treated samples (<em>Pasilla</em> gene depleted by RNAi): <a href=\"https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM461179\">GSM461179</a>, <a href=\"https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM461180\">GSM461180</a>, <a href=\"https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSM461181\">GSM461181</a></li>\n</ul>\n\n<p>Each sample constitutes a separate biological replicate of the corresponding condition (treated or untreated). Moreover, two of the treated and two of the untreated samples are from a paired-end sequencing assay, while the remaining samples are from a single-end sequencing experiment.</p>\n\n<blockquote class=\"comment\">\n  <comment-title>Full data</comment-title>\n\n  <p>The original data are available at NCBI Gene Expression Omnibus (GEO) under accession number <a href=\"https://www.ncbi.nlm.nih.gov/geo/query/acc.cgi?acc=GSE18508\">GSE18508</a>. The raw RNA-Seq reads have been extracted from the Sequence Read Archive (SRA) files and converted into FASTQ files.</p>\n</blockquote>\n\n<blockquote class=\"agenda\">\n  <agenda-title></agenda-title>\n\n  <p>In this tutorial, we will cover:</p>\n\n<ol id=\"markdown-toc\">\n  <li><a href=\"#data-upload\" id=\"markdown-toc-data-upload\">Data Upload</a></li>\n  <li><a href=\"#tools-to-use\" id=\"markdown-toc-tools-to-use\">Tools to use</a></li>\n  <li><a href=\"#data-from-galaxy-to-rstudio\" id=\"markdown-toc-data-from-galaxy-to-rstudio\">Data from Galaxy to RStudio</a></li>\n  <li><a href=\"#quality-control\" id=\"markdown-toc-quality-control\">Quality Control</a></li>\n  <li><a href=\"#alignment-to-a-reference-genome\" id=\"markdown-toc-alignment-to-a-reference-genome\">Alignment to a reference genome</a></li>\n  <li><a href=\"#setting-up\" id=\"markdown-toc-setting-up\">Setting up</a></li>\n  <li><a href=\"#sambam-format\" id=\"markdown-toc-sambam-format\">SAM/BAM format</a></li>\n  <li><a href=\"#counting-reads-per-genes\" id=\"markdown-toc-counting-reads-per-genes\">Counting reads per genes</a></li>\n</ol>\n\n</blockquote>\n\n<blockquote class=\"comment\">\n  <comment-title></comment-title>\n\n  <p>This tutorial is significantly based on Galaxy’s <a href=\"/training-material/topics/transcriptomics/tutorials/ref-based/tutorial.html\">“Reference-based RNA-Seq data analysis”</a> tutorial.</p>\n\n</blockquote>\n\n<h1 id=\"data-upload\">Data Upload</h1>\n\n<p>At first, we need to put our hands on our data. In this tutorial we will use the files for 2 out of the 7 samples to demonstrate how to calculate read counts (a measure of the gene expression) from FASTQ files (quality control, mapping, read counting). The FASTQ files for the other 5 samples, are provided, in case you want to reproduce the whole analysis later.\nThe “Data Upload” process is the only one in this tutorial that takes place directly into Galaxy’s interface.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Data upload</hands-on-title>\n\n  <ol>\n    <li>Import the FASTQ file pairs from <a href=\"https://zenodo.org/record/6457007\">Zenodo</a> or a data library:\n      <ul>\n        <li><code class=\"language-plaintext highlighter-rouge\">GSM461177</code> (untreated): <code class=\"language-plaintext highlighter-rouge\">GSM461177_1</code> and <code class=\"language-plaintext highlighter-rouge\">GSM461177_2</code></li>\n        <li><code class=\"language-plaintext highlighter-rouge\">GSM461180</code> (treated): <code class=\"language-plaintext highlighter-rouge\">GSM461180_1</code> and <code class=\"language-plaintext highlighter-rouge\">GSM461180_2</code></li>\n      </ul>\n\n      <div class=\"language-text highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>https://zenodo.org/record/6457007/files/GSM461177_1.fastqsanger\nhttps://zenodo.org/record/6457007/files/GSM461177_2.fastqsanger\nhttps://zenodo.org/record/6457007/files/GSM461180_1.fastqsanger\nhttps://zenodo.org/record/6457007/files/GSM461180_2.fastqsanger\n</code></pre></div>      </div>\n    </li>\n    <li>\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-importing-via-links\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-importing-via-links\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Importing via links</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Copy the link location</li>   <li>     <p>Click <i class=\"fas fa-upload\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-upload</span> <strong>Upload Data</strong> at the top of the tool panel</p>   </li>   <li>Select <i class=\"fa fa-edit\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-wf-edit</span> <strong>Paste/Fetch Data</strong></li>   <li>     <p>Paste the link(s) into the text field</p>   </li>   <li>     <p>Press <strong>Start</strong></p>   </li>   <li><strong>Close</strong> the window</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li>\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-importing-data-from-a-data-library\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-importing-data-from-a-data-library\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Importing data from a data library</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <p>As an alternative to uploading the data from a URL or your computer, the files may also have been made available from a <em>shared data library</em>:</p>   <ol>   <li>Go into <strong>Shared data</strong> (top panel) then <strong>Data libraries</strong></li>   <li>Navigate to  the correct folder as indicated by your instructor.     <ul>       <li>On most Galaxies tutorial data will be provided in a folder named <strong>GTN - Material –&gt; Topic Name -&gt; Tutorial Name</strong>.</li>     </ul>   </li>   <li>Select the desired files</li>   <li>Click on <strong>Add to History</strong> <i class=\"fas fa-caret-down\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-dropdown</span> near the top and select <strong>as Datasets</strong> from the dropdown menu</li>   <li>     <p>In the pop-up window, choose</p>     <ul>       <li><em>“Select history”</em>: the history you want to import the data to (or create a new one)</li>     </ul>   </li>   <li>Click on <strong>Import</strong></li> </ol> </blockquote>\n      <p><!--END_SNIPPET--></p>\n\n      <blockquote class=\"comment\">\n        <comment-title></comment-title>\n\n        <p>Note that these are the full files for the samples and ~1.5Gb each so it may take some minutes to import.</p>\n\n        <p>For a quicker run-through of the FASTQ steps a small subset of each FASTQ file (~5Mb) can be found here on <a href=\"https://zenodo.org/record/6457007\">Zenodo</a>:</p>\n\n        <div class=\"language-text highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>https://zenodo.org/record/6457007/files/GSM461177_1_subsampled.fastqsanger\nhttps://zenodo.org/record/6457007/files/GSM461177_2_subsampled.fastqsanger\nhttps://zenodo.org/record/6457007/files/GSM461180_1_subsampled.fastqsanger\nhttps://zenodo.org/record/6457007/files/GSM461180_2_subsampled.fastqsanger\n</code></pre></div>        </div>\n\n      </blockquote>\n    </li>\n    <li>\n      <p>Change the datatype from <code class=\"language-plaintext highlighter-rouge\">fastqsanger</code> to <code class=\"language-plaintext highlighter-rouge\">fastq</code>.</p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-changing-the-datatype\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-changing-the-datatype\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Changing the datatype</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Click on the <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> <strong>pencil icon</strong> for the dataset to edit its attributes</li>   <li>In the central panel, click <i class=\"fas fa-database\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-chart-select-data</span> <strong>Datatypes</strong> tab on the top</li>   <li>In the <i class=\"fas fa-database\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-chart-select-data</span> <strong>Assign Datatype</strong>, select <code class=\"language-plaintext highlighter-rouge\">fastq</code> from “<em>New type</em>” dropdown     <ul>       <li>Tip: you can start typing the datatype into the field to filter the dropdown menu</li>     </ul>   </li>   <li>Click the <strong>Save</strong> button</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li>We also need to import two more files, essential for the alignment operation (and basically every alignment procedure): the organism’s reference genome (here <em>D. melanogaster</em>) and the organism’s gene annotation.\nThose can be aquired directly via link and Galaxy’s data library as described above. For this tutorial we are going to use the files <a href=\"https://hgdownload.soe.ucsc.edu/goldenPath/dm6/bigZips/dm6.fa.gz\">dm6.fa.gz</a> and <a href=\"https://usegalaxy.eu/libraries/folders/F30cab321d898d2fb/dataset/02c5f7fcdb6bf41f\">Drosophila_melanogaster.BDGP6.87.gtf (dm6)</a>. Note that it is essential to convert genome’s file from <code class=\"language-plaintext highlighter-rouge\">*.fa.gz</code> to <code class=\"language-plaintext highlighter-rouge\">*.fa</code>. That is easy now that we have already used the same method to convert <code class=\"language-plaintext highlighter-rouge\">fastqsanger</code> to <code class=\"language-plaintext highlighter-rouge\">fastq</code>. Remember to change the name of the file, too, in your working history as Galaxy will not do it automatically. Doing so will prevent any confusions later on.</li>\n  </ol>\n\n  <!--SNIPPET-->\n  <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-renaming-a-dataset\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-renaming-a-dataset\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Renaming a dataset</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Click on the <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> <strong>pencil icon</strong> for the dataset to edit its attributes</li>   <li>In the central panel, change the <strong>Name</strong> field  to <code class=\"language-plaintext highlighter-rouge\">dm6.fa</code></li>   <li>Click the <strong>Save</strong> button</li> </ul> </blockquote>\n  <p><!--END_SNIPPET--></p>\n\n</blockquote>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>How are the DNA sequences stored?</li>\n    <li>What are the other entries of the file?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <ol>\n      <li>The DNA sequences are stored in a FASTQ file, in the second line of every 4-line group.</li>\n      <li>This file format is called <a href=\"https://en.wikipedia.org/wiki/FASTQ_format\">FASTQ format</a>. It stores sequence information and quality information. Each sequence is represented by a group of 4 lines with the 1st line being the sequence id, the second the sequence of nucleotides, the third a transition line and the last one a sequence of quality score for each nucleotide.</li>\n    </ol>\n  </blockquote>\n</blockquote>\n\n<p>Keep in mind that the reads are raw data from the sequencing machine without any pretreatments. They need to be assessed for their quality.</p>\n\n<h1 id=\"tools-to-use\">Tools to use</h1>\n\n<!--SNIPPET-->\n<blockquote class=\"hands_on\">   <div class=\"box-title hands_on-title\" id=\"hands-on-launch-rstudio\"><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i> Hands-on: Launch RStudio</div>   <p>Depending on which server you are using, you may be able to run RStudio directly in Galaxy. If that is not available, RStudio Cloud can be an alternative.</p>   <blockquote class=\"tip\">   <tip-title>Launch RStudio in Galaxy</tip-title>   <p>Currently RStudio in Galaxy is only available on <a href=\"https://usegalaxy.eu\">UseGalaxy.eu</a> and <a href=\"https://usegalaxy.org\">UseGalaxy.org</a></p>   <ol>     <li>Open the Rstudio tool <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> by clicking <a href=\"https://usegalaxy.eu/?tool_id=interactive_tool_rstudio\">here to launch RStudio</a></li>     <li>Click Run Tool</li>     <li>The tool will start running and will stay running permanently</li>     <li>Click on the “User” menu at the top and go to “Active InteractiveTools” and locate the RStudio instance you started.</li>   </ol> </blockquote>   <blockquote class=\"tip\">   <tip-title>Launch RStudio Cloud if not available on Galaxy</tip-title>   <p>If RStudio is not available on the Galaxy instance:</p>   <ol>     <li>Register for <a href=\"https://client.login.rstudio.cloud/oauth/login?show_auth=0&amp;show_login=1&amp;show_setup=1\">RStudio Cloud</a>, or login if you already have an account</li>     <li>Create a new project</li>   </ol> </blockquote> </blockquote>\n<p><!--END_SNIPPET--></p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Software to use</hands-on-title>\n\n  <p>The R Console and other interactive tools like RStudio are great for prototyping code and exploring data, but sooner or later we will want to use our program in a pipeline or run it in a shell script to process thousands of data files. This is one of those cases and, in order to do that, we will use the terminal provided by the RStudio itself.\nWe go to “Tools” and pick the “Shell…” option and we are good to go. Our workspace is the left, terminal window that just opened.</p>\n\n  <p>Fortunately, <a href=\"https://docs.conda.io/en/latest/miniconda.html\">miniconda</a> is already installed. Miniconda is a package manager that simplifies the installation processes. We can and will use it to install every essential package for our tutorial. However, it is of critical importance that we do that in an new environment within our existing base and install our packages in said environment.</p>\n\n  <blockquote class=\"code-in\">\n    <code-in-title>Environment and Packages</code-in-title>\n    <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>conda create <span class=\"nt\">-n</span> name_of_your_env fastqc cutadapt star samtools subread\n<span class=\"nv\">$ </span>conda activate name_of_your_env\n</code></pre></div>    </div>\n  </blockquote>\n\n  <table>\n    <thead>\n      <tr>\n        <th>Software</th>\n        <th>Version</th>\n        <th>Manual</th>\n        <th>Available for</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><a href=\"https://www.bioinformatics.babraham.ac.uk/projects/fastqc/\">fastqc</a></td>\n        <td>0.12.1</td>\n        <td><a href=\"https://www.bioinformatics.babraham.ac.uk/projects/fastqc/Help/\">fastqc Manual</a></td>\n        <td>Linux, MacOS, Windows</td>\n        <td>A quality control tool for high throughput sequence data.</td>\n      </tr>\n      <tr>\n        <td><a href=\"https://cutadapt.readthedocs.io/en/stable/index.html\">Cutadapt</a></td>\n        <td>4.4</td>\n        <td><a href=\"https://cutadapt.readthedocs.io/en/stable/guide.html\">Cutadapt Manual</a></td>\n        <td>Linux, MacOS</td>\n        <td>Finds and removes adapter sequences, primers, poly-A tails and other types of unwanted sequence from your high-throughput sequencing reads.</td>\n      </tr>\n      <tr>\n        <td><a href=\"https://github.com/alexdobin/STAR\">STAR</a></td>\n        <td>2.7.10b</td>\n        <td><a href=\"https://github.com/alexdobin/STAR/blob/master/doc/STARmanual.pdf\">STAR Manual</a></td>\n        <td>Linux, MacOS</td>\n        <td>Universal RNA-seq aligner.</td>\n      </tr>\n      <tr>\n        <td><a href=\"http://samtools.sourceforge.net/\">SAMtools</a></td>\n        <td>1.17</td>\n        <td><a href=\"http://www.htslib.org/doc/samtools.html\">SAMtools Manual</a></td>\n        <td>Linux, MacOS</td>\n        <td>Utilities for manipulating alignments in the SAM format.</td>\n      </tr>\n      <tr>\n        <td><a href=\"https://subread.sourceforge.net/\">Subread</a></td>\n        <td>2.0.3</td>\n        <td><a href=\"https://subread.sourceforge.net/featureCounts.html\">featureCounts Manual</a></td>\n        <td>Linux, MacOS, Windows</td>\n        <td>Subread is a general-purpose read aligner which can align both genomic DNA-seq and RNA-seq reads and it includes <strong>featureCounts</strong>, a highly efficient general-purpose read summarization program that counts mapped reads for genomic features.</td>\n      </tr>\n    </tbody>\n  </table>\n\n</blockquote>\n\n<h1 id=\"data-from-galaxy-to-rstudio\">Data from Galaxy to RStudio</h1>\n\n<p>Okay, our data are imported into our Gaxaly History we are working on, but we are gonna need to access them through RStutio in order to work with them.\nFortunately, this step is pretty simple with Galaxy:</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Get Data</hands-on-title>\n  <blockquote class=\"code-in\">\n    <code-in-title> The gx_get() Function</code-in-title>\n    <div class=\"language-R highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">gx_get</span><span class=\"p\">(</span><span class=\"n\">number_of_file_you_want_to_import_as_given_in_Galaxy_History</span><span class=\"p\">)</span><span class=\"w\">\n</span></code></pre></div>    </div>\n  </blockquote>\n  <p>The above function will import the files selected in RStudio and it will return the path where they will be stored. We will execute it multiple times, one for every distinct file (6 in our occasion). And now every time we are going to need one of the files imported we are going to use the path returned by the function.</p>\n\n</blockquote>\n\n<h1 id=\"quality-control\">Quality Control</h1>\n\n<p>During sequencing, errors are introduced, such as incorrect nucleotides being called. These are due to the technical limitations of each sequencing platform. Sequencing errors might bias the analysis and can lead to a misinterpretation of the data. Adapters may also be present if the reads are longer than the fragments sequenced and trimming these may improve the number of reads mapped.</p>\n\n<p>Sequence quality control is therefore an essential first step in your analysis. We will use similar tools as described in the <a href=\"/training-material/topics/sequence-analysis/tutorials/quality-control/tutorial.html\">“Quality control” tutorial</a>: <a href=\"https://www.bioinformatics.babraham.ac.uk/projects/fastqc/\">FastQC</a> to create a report of sequence quality and <a href=\"https://cutadapt.readthedocs.io/en/stable/guide.html\">Cutadapt</a> (<span class=\"citation\"><a href=\"#marcel2011cutadapt\">Marcel 2011</a></span>) to improve the quality of sequences via trimming and filtering.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>FastQC</hands-on-title>\n\n  <p>When using fastqc to check the quality of our reads, it would be nice to have a folder where our results will be saved. From there we can access them and assess the quality of the reads given.</p>\n\n  <blockquote class=\"code-in\">\n    <code-in-title>Environment and Packages</code-in-title>\n    <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span><span class=\"nb\">mkdir </span>qualityRaw\n<span class=\"nv\">$ </span>fastqc /import/number_of_dataset_1_as_described_above <span class=\"nt\">-o</span> qualityRaw/\n<span class=\"nv\">$ </span>fastqc /import/number_of_dataset_2_as_described_above <span class=\"nt\">-o</span> qualityRaw/\n<span class=\"nv\">$ </span>fastqc /import/number_of_dataset_3_as_described_above <span class=\"nt\">-o</span> qualityRaw/\n<span class=\"nv\">$ </span>fastqc /import/number_of_dataset_4_as_described_above <span class=\"nt\">-o</span> qualityRaw/\n</code></pre></div>    </div>\n  </blockquote>\n\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Cutadapt</hands-on-title>\n\n  <p>Now, it would be a good idea to trim the reads in order to get rid of bases that were sequenced with high uncertainty (i.e. low quality bases) at the read ends and also remove the reads of overall bad quality. We can also use this opportunity to restore the trimmed files names to make our job easier down the road.</p>\n\n  <blockquote class=\"code-in\">\n    <code-in-title>Environment and Packages</code-in-title>\n    <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span><span class=\"nb\">mkdir </span>trimmedData\n<span class=\"nv\">$ </span>cutadapt /import/2 /import/3_reverse_file_of_2 <span class=\"nt\">-o</span> /trimmedData/GSM461177_R1 <span class=\"nt\">-p</span> /trimmedData/GSM461177_R2\n</code></pre></div>    </div>\n  </blockquote>\n  <p>The same trimming procedure should take place for the second pair of reads (forward and reverse as above). After that, the files we are going to work with are the ones located in the <strong>trimmedData</strong> folder (4 in our case).</p>\n\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>FastQC on trimmed data</hands-on-title>\n\n  <p>A second quality check can take place, same as before, only this time applied on the trimmed data files located in the <strong>trimmedData</strong> folder.</p>\n\n  <blockquote class=\"code-in\">\n    <code-in-title>Environment and Packages</code-in-title>\n    <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span><span class=\"nb\">mkdir </span>qualityTrimmed\n<span class=\"nv\">$ </span>fastqc /trimmedData/GSM641177_R1 <span class=\"nt\">-o</span> qualityRaw/\n<span class=\"nv\">$ </span>fastqc /trimmedData/GSM641177_R2 <span class=\"nt\">-o</span> qualityRaw/\n<span class=\"nv\">$ </span>fastqc /trimmedData/GSM641180_R1 <span class=\"nt\">-o</span> qualityRaw/\n<span class=\"nv\">$ </span>fastqc /trimmedData/GSM641180_R2 <span class=\"nt\">-o</span> qualityRaw/\n</code></pre></div>    </div>\n  </blockquote>\n\n</blockquote>\n\n<h1 id=\"alignment-to-a-reference-genome\">Alignment to a reference genome</h1>\n\n<p><a href=\"../../images/bash-star-rnaseq/workflow_align.png\" rel=\"noopener noreferrer\"><img src=\"../../images/bash-star-rnaseq/workflow_align.png\" alt=\"Simplified workflow that starts with the raw sequence reads and ends up to genome alignment. \" width=\"383\" height=\"299\" loading=\"lazy\" /></a></p>\n\n<p>Image from <a href=\"https://datacarpentry.org/wrangling-genomics/\">“Data Wrangling and Processing for Genomics”</a></p>\n\n<p>We perform read alignment or mapping to determine where in the genome our reads originated from. There are a number of tools to choose from and, while there is no gold standard, there are some tools that are better suited for particular NGS analyses. We will be using the <a href=\"https://github.com/alexdobin/STAR\">STAR Aligner (STAR)</a>, which is a universal aligner for mapping sequences against a large reference genome.</p>\n\n<p>The alignment process consists of two steps:</p>\n\n<ol>\n  <li>Indexing the reference genome</li>\n  <li>Aligning the reads to the reference genome</li>\n</ol>\n\n<h1 id=\"setting-up\">Setting up</h1>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Index the reference genome</hands-on-title>\n  <p>Our first step is to index the reference genome for use by STAR. Indexing allows the aligner to quickly find potential alignment sites for query sequences in a genome, which saves time during alignment. Indexing the reference only has to be run once. The only reason you would want to create a new index is if you are working with a different reference genome or you are using a different tool for alignment.</p>\n\n  <blockquote class=\"code-in\">\n    <code-in-title>Indexing with `STAR`</code-in-title>\n    <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span><span class=\"nb\">mkdir </span>index\n<span class=\"nv\">$ </span>STAR <span class=\"nt\">--runThreadN</span> 16 <span class=\"nt\">--runMode</span> genomeGenerate <span class=\"nt\">--genomeDir</span> ~/index <span class=\"nt\">--genomeFastaFiles</span> /import/14 <span class=\"nt\">--sjdbGTFfile</span> /import/15 <span class=\"nt\">--sjdbOverhang</span> 100 <span class=\"nt\">--genomeSAindexNbases</span> 12\n</code></pre></div>    </div>\n  </blockquote>\n\n  <p>While the index is created and saved in the <strong>index</strong> folder, you will see output that looks something like this:</p>\n\n  <blockquote class=\"code-out\">\n    <code-out-title></code-out-title>\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>STAR version: 2.7.10b   compiled: 2022-11-01T09:53:26-04:00 :/home/dobin/data/STAR/STARcode\nSTAR.master/source\nDate Time ..... started STAR run\nDate Time ... starting to generate Genome files\nDate Time ..... processing annotations GTF\nDate Time ... starting to sort Suffix Array. This may take a long time...\nDate Time ... sorting Suffix Array chunks and saving them to disk...\n</code></pre></div>    </div>\n  </blockquote>\n\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Align reads to reference genome</hands-on-title>\n\n  <p>The alignment process consists of choosing an appropriate reference genome to map our reads against and then deciding on an aligner. We will use the STAR algorithm as said.</p>\n\n  <p>An example of what a <code class=\"language-plaintext highlighter-rouge\">STAR</code> command looks like is below. This command will not run, as we do not have the files: <code class=\"language-plaintext highlighter-rouge\">input_file_R1</code> or <code class=\"language-plaintext highlighter-rouge\">input_file_R2</code>.</p>\n\n  <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ STAR --genomeDir /index_folder --runThreadN 16 --readFilesIn /trimmedData/input_file_R1 /trimmedData/input_file_R2\n</code></pre></div>  </div>\n\n  <p>Have a look at the <a href=\"https://github.com/alexdobin/STAR/blob/master/doc/STARmanual.pdf\">STAR manual</a>, while we are running STAR with the default</p>\n\n  <p>parameters here, your use case might require a change of parameters. <em>NOTE: Always read the manual page for any tool before using\nand make sure the options you use are appropriate for your data.</em></p>\n\n  <p>We are going to start by aligning the reads from just one of the\nsamples in our dataset (GSM461177). After that, we will be\niterating the following process on the second pair of our sample files (GSM461180).</p>\n\n  <blockquote class=\"code-in\">\n    <code-in-title>Aligning with STAR</code-in-title>\n    <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>STAR <span class=\"nt\">--genomeDir</span> ~/index <span class=\"nt\">--runThreadN</span> 16 <span class=\"nt\">--</span> readFilesIn /trimmedData/GSM461177_R1 /trimmedData/GSM461177_R2 <span class=\"nt\">--outFileNamePrefix</span> GSM461177\n</code></pre></div>    </div>\n  </blockquote>\n\n  <blockquote class=\"code-out\">\n    <code-out-title></code-out-title>\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>Date Time ..... started STAR run\nDate Time ..... loading genome\nDate Time ..... started mapping\n</code></pre></div>    </div>\n  </blockquote>\n\n</blockquote>\n\n<h1 id=\"sambam-format\">SAM/BAM format</h1>\n\n<p>The <a href=\"https://genome.sph.umich.edu/wiki/SAM\">SAM file</a>,\nis a tab-delimited text file that contains information for each individual read and its alignment to the genome. While we do not\nhave time to go into detail about the features of the SAM format, the paper by\n<a href=\"http://bioinformatics.oxfordjournals.org/content/25/16/2078.full\">Heng Li et al.</a> provides a lot more detail on the specification.</p>\n\n<p><strong>The compressed binary version of SAM is called a BAM file.</strong> We use this version to reduce size and to allow for <em>indexing</em>, which enables efficient random access of the data contained within the file.</p>\n\n<p>The file begins with a <strong>header</strong>, which is optional for SAM files. The header is used to describe the source of data, reference sequence, method of\nalignment, etc., this will change depending on the aligner being used. Following the header is the <strong>alignment section</strong>. Each line\nthat follows corresponds to alignment information for a single read. Each alignment line has <strong>11 mandatory fields</strong> for essential\nmapping information and a variable number of other fields for aligner specific information. An example entry from a SAM file is\ndisplayed below with the different fields highlighted.</p>\n\n<p><a href=\"../../images/bash-star-rnaseq/sam_bam.png\" rel=\"noopener noreferrer\"><img src=\"../../images/bash-star-rnaseq/sam_bam.png\" alt=\"sam file example with fields description, showing qname, flag, rname, pos, maqp, and cigar as the first fields. \" width=\"712\" height=\"177\" loading=\"lazy\" /></a></p>\n\n<p>Image from <a href=\"https://datacarpentry.org/wrangling-genomics/\">Data Wrangling and Processing for Genomics</a></p>\n\n<p><a href=\"../../images/bash-star-rnaseq/sam_bam3.png\" rel=\"noopener noreferrer\"><img src=\"../../images/bash-star-rnaseq/sam_bam3.png\" alt=\"sam file example with fields description, showing seq, qual, mrnm, mpos, and size as the second set of fields.\" width=\"677\" height=\"166\" loading=\"lazy\" /></a></p>\n\n<p>Image from <a href=\"https://datacarpentry.org/wrangling-genomics/\">“Data Wrangling and Processing for Genomics”</a></p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>SAM to BAM</hands-on-title>\n  <blockquote class=\"code-in\">\n    <code-in-title>bash</code-in-title>\n    <p>We will convert the SAM file to BAM format using the <code class=\"language-plaintext highlighter-rouge\">samtools</code> program with the <code class=\"language-plaintext highlighter-rouge\">view</code> command and tell this command that the input is in SAM format (<code class=\"language-plaintext highlighter-rouge\">-S</code>) and to output BAM format (<code class=\"language-plaintext highlighter-rouge\">-b</code>). We will start with the first sample (GSM461177) and repeat the process with the second (GSM461180):</p>\n\n    <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>samtools view <span class=\"nt\">-S</span> <span class=\"nt\">-b</span> GSM461177Aligned.out.sam <span class=\"o\">&gt;</span> GSM461177Aligned.out.bam\n</code></pre></div>    </div>\n  </blockquote>\n  <blockquote class=\"code-out\">\n    <code-out-title></code-out-title>\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>[samopen] SAM header is present: 1 sequences.\n</code></pre></div>    </div>\n  </blockquote>\n\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Sort BAM file by coordinates</hands-on-title>\n\n  <p>Next we sort the BAM file using the <code class=\"language-plaintext highlighter-rouge\">sort</code> command from <code class=\"language-plaintext highlighter-rouge\">samtools</code>. <code class=\"language-plaintext highlighter-rouge\">-o</code> tells the command where to write the output.</p>\n  <blockquote class=\"code-in\">\n    <code-in-title>`sort` command</code-in-title>\n    <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>samtools <span class=\"nb\">sort</span> <span class=\"nt\">-o</span> GSM461177Aligned.out.sorted.bam GSM461177Aligned.out.bam\n</code></pre></div>    </div>\n  </blockquote>\n\n  <p>Our files are pretty small, so we will not see this output. If you run the workflow with larger files, you will see something like this:</p>\n  <blockquote class=\"code-out\">\n    <code-out-title></code-out-title>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>[bam_sort_core] merging from 2 files...\n</code></pre></div>    </div>\n  </blockquote>\n\n  <p>SAM/BAM files can be sorted in multiple ways, e.g. by location of alignment on the chromosome, by read name, etc. It is important to be aware that different alignment tools will output differently sorted SAM/BAM, and different downstream tools require differently sorted alignment files as input.</p>\n\n  <p>You can use samtools to learn more about this bam file as well.</p>\n\n</blockquote>\n\n<h1 id=\"counting-reads-per-genes\">Counting reads per genes</h1>\n\n<p>Time to tie things up! To compare the expression of single genes between different conditions (e.g. with or without PS depletion), an essential first step is to quantify the number of reads per gene, or more specifically the number of reads mapping to the exons of each gene.</p>\n\n<figure id=\"figure-1\" style=\"max-width: 90%;\"><img src=\"../../images/transcriptomics_images/gene_counting.png\" alt=\"Counting the number of reads per annotated gene. \" width=\"981\" height=\"142\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/transcriptomics_images/gene_counting.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 1</strong>:</span> Counting the number of reads per annotated gene</figcaption></figure>\n\n<p>For the final step of this tutorial we will use featureCounts to count the number of reads per annotated gene.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>FeatureCounts</hands-on-title>\n\n  <p>The main output of featureCounts is a table with the counts, i.e. the number of reads (or fragments in the case of paired-end reads) mapped to each gene (in rows, with their ID in the first column) in the provided annotation. FeatureCount generates also the feature length output datasets. Keep in mind that the “/import/7/” corresponds to <em>D. melanogaster’s</em> gene annotation file we imported in RStudio way back.</p>\n\n  <blockquote class=\"code-in\">\n    <code-in-title>featureCounts</code-in-title>\n    <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>featureCounts <span class=\"nt\">-a</span> /import/7 <span class=\"nt\">-T</span> 8 <span class=\"nt\">-o</span> featurecounts.txt <span class=\"nt\">-p</span> GSM461177Aligned.out.sorted.bam GSM461180Aligned.out.sorted.bam\n</code></pre></div>    </div>\n  </blockquote>\n\n  <p>The <strong>featurecounts.txt</strong> produced contains all the information needed for further downstream analysis of the sequences we aligned (e.g. Differential Expression).</p>\n\n</blockquote>\n"],"ref_slides":[],"video_library":{"tutorial":null,"slides":null,"demo":null,"both":null,"session":null},"hands_on":true,"slides":false,"mod_date":"2023-11-03 14:30:27 +0000","pub_date":"2023-05-15 12:12:40 +0000","version":16,"api":"https://training.galaxyproject.org/training-material/api/topics/transcriptomics/tutorials/rna-seq-bash-star-align/tutorial.json","tools":[],"supported_servers":{"exact":[],"inexact":[{"name":"UseGalaxy.eu","url":"https://usegalaxy.eu","id":"eu","human":"Galaxy Europe","usegalaxy":true},{"name":"UseGalaxy.org","url":"https://usegalaxy.org","id":"us","human":"Galaxy Main","usegalaxy":true},{"name":"UseGalaxy.org.au","url":"https://usegalaxy.org.au","id":"au","human":"Galaxy Australia","usegalaxy":true},{"name":"UseGalaxy.fr","url":"https://usegalaxy.fr","id":"fr","human":"Galaxy France","usegalaxy":true}]},"topic_name_human":"Transcriptomics","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools: []\n","tours":false,"video":false,"translations":{"tutorial":[],"slides":[],"video":false},"license":"CC-BY-4.0","type":"tutorial","contributors":[{"name":"Sofoklis Keisaris","email":"sofoskeisaris@gmail.com","orcid":"0000-0002-4833-4726","joined":"2022-05","id":"Sofokli5","url":"https://training.galaxyproject.org/training-material/api/contributors/Sofokli5.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/Sofokli5/"},{"name":"Fotis E. Psomopoulos","email":"fpsom@certh.gr","twitter":"fopsom","matrix":"fpsom:matrix.org","orcid":"0000-0002-0222-4273","linkedin":"fpsom","joined":"2019-03","elixir_node":"gr","affiliations":["gallantries","elixir-europe"],"id":"fpsom","url":"https://training.galaxyproject.org/training-material/api/contributors/fpsom.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/fpsom/"},{"name":"Saskia Hiltemann","maintainer_contact":"gitter","email":"saskia.hiltemann@gmail.com","fediverse":"https://mstdn.science/@shiltemann","fediverse_flavor":"mastodon","bluesky":"shiltemann.bsky.social","linkedin":"shiltemann","matrix":"shiltemann:matrix.org","orcid":"0000-0003-3803-468X","joined":"2017-09","bio":"Researcher at Erasmus Medical Center","elixir_node":"nl","contact_for_training":true,"affiliations":["CINECA-Project","gallantries","erasmusmc","elixir-europe","uni-freiburg"],"location":{"country":"NL","lat":51.912,"lon":4.462},"id":"shiltemann","url":"https://training.galaxyproject.org/training-material/api/contributors/shiltemann.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/shiltemann/"},{"name":"Helena Rasche","orcid":"0000-0001-9760-8992","maintainer_contact":"gitter","matrix":"hexylena:matrix.org","joined":"2017-09","elixir_node":"nl","affiliations":["gallantries","by-covid","erasmusmc","elixir-europe","elixir-converge"],"former_affiliations":["deNBI","avans-atgm","uni-freiburg"],"contact_for_training":false,"location":{"country":"NL","lat":51.91,"lon":4.46},"id":"hexylena","url":"https://training.galaxyproject.org/training-material/api/contributors/hexylena.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/hexylena/"},{"name":"The Carpentries","joined":"2021-09","id":"carpentries","url":"https://training.galaxyproject.org/training-material/api/organisations/carpentries.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/carpentries/"},{"name":"Gallantries: Bridging Training Communities in Life Science, Environment and Health","short_name":"Gallantries","start_date":"2020-09-01","end_date":"2023-09-30","joined":"2020-09","avatar":"https://gallantries.github.io/assets/images/gallantries-logo.png","github":false,"funder":true,"url":"https://training.galaxyproject.org/training-material/api/funders/gallantries.json","funder_name":"Erasmus+ Programme","funding_id":"2020-1-NL01-KA203-064717","funding_system":"erasmusplus","funding_statement":"This project (<a href=\"https://erasmus-plus.ec.europa.eu/projects/search/details/2020-1-NL01-KA203-064717\"><code class=\"language-plaintext highlighter-rouge\">2020-1-NL01-KA203-064717</code></a>) is funded with the support of the Erasmus+ programme of the European Union. Their funding has supported a large number of tutorials within the GTN across a wide array of topics.\n<img src=\"https://gallantries.github.io/assets/images/logosbeneficaireserasmusright_en.jpg\" alt=\"eu flag with the text: with the support of the erasmus programme of the european union\" />\n<img src=\"https://www.erasmusplus.nl/assets/images/logo.png\" alt=\"erasmus plus logo\" />","members":["abretaud","bebatut","colineroyaux","fpsom","hexylena","shiltemann","yvanlebras"],"id":"gallantries","page":"https://training.galaxyproject.org/training-material/hall-of-fame/gallantries/"}]}