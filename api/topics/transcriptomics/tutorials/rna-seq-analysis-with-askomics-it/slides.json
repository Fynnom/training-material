{"layout":"tutorial_slides","title":"Integrate and query local datasets and distant RDF data with AskOmics using Semantic Web technologies","zenodo_link":"https://zenodo.org/record/3925863","requirements":[{"type":"internal","topic_name":"transcriptomics","tutorials":["rna-seq-counts-to-genes"]}],"questions":["What is the Semantic Web and how can it help integrating and querying data?","How can AskOmics help benefiting from Semantic Web technologies without having to write RDF or SPARQL code?"],"objectives":["Understand the basics of RDF and SPARQL","Learn how input data must be structured to be integrated with AskOmics","Learn how to connect distant SPARQL endpoints to local data with AskOmics"],"time_estimation":"2H","key_points":["RDF and SPARQL are Semantic Web technologies that come useful for data integration and querying but the technical aspects may deter end-users","AskOmics is a web platform for data integration and query using Semantic Web in a user-friendly way"],"contributors":["xgaia","abretaud","annesiegel","odameron","mboudet"],"js_requirements":{"mathjax":null,"mermaid":false},"short_id":"S00097","url":"/topics/transcriptomics/tutorials/rna-seq-analysis-with-askomics-it/slides.html","topic_name":"transcriptomics","tutorial_name":"rna-seq-analysis-with-askomics-it","dir":"topics/transcriptomics/tutorials/rna-seq-analysis-with-askomics-it","symlink":null,"id":"transcriptomics/rna-seq-analysis-with-askomics-it","ref_tutorials":["<p>AskOmics is a web application for data integration and querying using the Semantic Web technologies. It helps users to convert multiple data sources (CSV/TSV files, GFF and BED annotation) into “RDF triples” and store them in a specific kind of database: an “RDF triplestore”. Under this form, data can then be queried using a specific language: “SPARQL”. AskOmics hides the complexity of these technologies and allows to perform complex queries using a user-friendly interface.</p>\n\n<!-- AskOmics for RNA-Seq -->\n<p>AskOmics comes in useful for cross-referencing results datasets with various reference data. For example, in RNA-Seq studies, we often need to filter the results on the fold change and the p-value, to get the most significant differentially expressed genes. If you are studying a particular phenotype and already know the position of some QTL associated to this phenotype, you would then want to find the positions of the differentially expressed genes and determine which gene is located within one of those QTL. Finally, you would want to know if these genes have human homologs, and use the neXtProt database to get the location of the proteins coded by the homologs. The whole process involves several tools to parse and manipulate the different data format, and to map datasets on each other. AskOmics offer a solution to 1) automatically convert the multiple formats to RDF, 2) use a user-friendly interface to perform complex SPARQL queries on the RDF datasets to find the genes you are interested in, and 3) connect external SPARQL databases and link external data with your own.</p>\n\n<!-- The data -->\n<p>In this tutorial, we will use results from a differential expression analysis. This file is provided for you below. You could also generate the file yourself, by following the <a href=\"/training-material/topics/transcriptomics/tutorials/rna-seq-counts-to-genes/tutorial.html\">RNA-Seq counts to gene tutorial</a>. The file used here was generated from limma-voom but you could use a file from any RNA-seq differential expression tool, such as edgeR or DESeq2, as long as it contains the required columns (see below).</p>\n\n<p>The differentially expressed results will be linked to the official mouse genome annotation, in general feature format (GFF). The file provided is a subset of the mouse annotation (GRCm38.p6) obtained from <a href=\"http://www.ensembl.org/Mus_musculus/Info/Index\">Ensembl</a>.</p>\n\n<p>We will use a file containing quantitative trait loci (QTL) information, to find if our differentially expressed genes are located inside a known QTL. This file is a subset of a query performed on <a href=\"http://www.informatics.jax.org\">Mouse Genome Informatics</a>.</p>\n\n<p>A file containing all homologies between mouse and human will be used to get the human homolog genes. This file is provided by <a href=\"http://www.informatics.jax.org/downloads/reports/index.html#homology\">MGI</a>.</p>\n\n<p>In the differentially expressed file, and the homologs file, gene are described by a symbol (e.g. Pwgrq10). However, in the annotation file and neXtProt database, gene are represented by Ensembl id (e.g. ENSMUSG00000025969). To link the 2 datasets, we will need a file to map the gene symbol with Ensembl id. This file provided for you was previously generated with an AskOmics query on the mouse annotation file and the homolog file.</p>\n\n<p>To link the human gene with neXtProt database, we will use the RDF abstraction of neXtProt. This file was obtained using the <a href=\"https://github.com/askomics/abstractor\">Abstractor</a> tool.</p>\n\n<blockquote class=\"details\">\n  <details-title>Abstraction</details-title>\n  <p>During the integration step, AskOmics builds an RDF description of the data: the <strong>abstraction</strong>. This abstraction is used to explore the data and build the query.\nAskOmics can also integrate <strong>abstraction</strong> of distant endpoint. Abstraction are obtained using <a href=\"https://github.com/askomics/abstractor\">abstractor</a>, a python package to generate RDF abstractions from distant endpoints.\nThe query builder interface is used to create a path through the <strong>abstraction</strong> of each ressources. The path is converted to a SPARQL query that is sent to the multiple SPARQL endpoint.</p>\n</blockquote>\n\n<blockquote class=\"agenda\">\n  <agenda-title></agenda-title>\n\n  <p>In this tutorial, we will cover:</p>\n\n<ol id=\"markdown-toc\">\n  <li><a href=\"#preparing-the-inputs\" id=\"markdown-toc-preparing-the-inputs\">Preparing the inputs</a>    <ol>\n      <li><a href=\"#import-data\" id=\"markdown-toc-import-data\">Import data</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#upload-inputs-into-askomics\" id=\"markdown-toc-upload-inputs-into-askomics\">Upload inputs into AskOmics</a>    <ol>\n      <li><a href=\"#launch-askomics-interactive-tool\" id=\"markdown-toc-launch-askomics-interactive-tool\">Launch AskOmics Interactive Tool</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#integrate-input-files-into-askomics\" id=\"markdown-toc-integrate-input-files-into-askomics\">Integrate input files into AskOmics</a>    <ol>\n      <li><a href=\"#integrate-gff-files\" id=\"markdown-toc-integrate-gff-files\">Integrate GFF files</a></li>\n      <li><a href=\"#integration-of-tabular-tsv-files\" id=\"markdown-toc-integration-of-tabular-tsv-files\">Integration of tabular (TSV) files</a></li>\n      <li><a href=\"#integration-of-rdf-files\" id=\"markdown-toc-integration-of-rdf-files\">Integration of RDF files</a></li>\n      <li><a href=\"#monitor-integration\" id=\"markdown-toc-monitor-integration\">Monitor integration</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#query\" id=\"markdown-toc-query\">Query</a>    <ol>\n      <li><a href=\"#query-builder-overview\" id=\"markdown-toc-query-builder-overview\">Query builder overview</a></li>\n      <li><a href=\"#results-management\" id=\"markdown-toc-results-management\">Results management</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#conclusion\" id=\"markdown-toc-conclusion\">Conclusion</a></li>\n</ol>\n\n</blockquote>\n\n<h1 id=\"preparing-the-inputs\">Preparing the inputs</h1>\n\n<p>We will use four files for this analysis:</p>\n\n<ul>\n  <li><strong>Differentially expressed results file</strong> (genes in rows, and 4 required columns: identifier (ENTREZID), gene symbol (SYMBOL), log fold change (logFC) and adjusted P values (adj.P.Val))</li>\n  <li><strong>Reference genome annotation file</strong> (in GFF format)</li>\n  <li><strong>QTL file</strong> (QTL in rows, with 5 required columns: identifier, chromosome, start, end and name)</li>\n  <li><strong>Homolog file</strong> (TSV of 13 columns including homolog id, organism name and gene symbol)</li>\n  <li><strong>Correspondence file between gene symbol and Ensembl id</strong> (TSV of 3 columns: symbol, the corresponding Ensembl id (mouse and human)</li>\n  <li><strong>neXtProt abstraction</strong> (RDF data description of neXtProt database in turtle format)</li>\n</ul>\n\n<h2 id=\"import-data\">Import data</h2>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Data upload</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Create a new history for this RNA-seq exercise e.g. <code class=\"language-plaintext highlighter-rouge\">RNA-seq AskOmics</code></p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-creating-a-new-history\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-creating-a-new-history\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Creating a new history</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <p>Click the <i class=\"fas fa-plus\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">new-history</span> icon at the top of the history panel:</p>   <p><img src=\"/training-material/shared/images/history_create_new.svg\" alt=\"UI for creating new history\" /></p>   <!-- the original drawing can be found here https://docs.google.com/drawings/d/1cCBrLAo4kDGic5QyB70rRiWJAKTenTU8STsKDaLcVU8/edit?usp=sharing --> </blockquote>\n      <p><!--END_SNIPPET--></p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-renaming-a-history\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-renaming-a-history\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Renaming a history</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ol>   <li>Click on <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> (<strong>Edit</strong>) next to the history name (which by default is “Unnamed history”)</li>   <li>Type the new name</li>   <li>Click on <strong>Save</strong></li> </ol>   <p>If you do not have the <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> (<strong>Edit</strong>) next to the history name:</p>   <ol>   <li>Click on <strong>Unnamed history</strong> (or the current name of the history) (<strong>Click to rename history</strong>) at the top of your history panel</li>   <li>Type the new name</li>   <li>Press <kbd>Enter</kbd></li> </ol> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li>\n      <p>Import the files.</p>\n\n      <p>To import the files, there are two options:</p>\n      <ul>\n        <li>Option 1: From a shared data library if available (ask your instructor)</li>\n        <li>Option 2: From <a href=\"https://zenodo.org/record/3950862\">Zenodo</a></li>\n      </ul>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-importing-via-links\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-importing-via-links\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Importing via links</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Copy the link location</li>   <li>     <p>Click <i class=\"fas fa-upload\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-upload</span> <strong>Upload Data</strong> at the top of the tool panel</p>   </li>   <li>Select <i class=\"fa fa-edit\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-wf-edit</span> <strong>Paste/Fetch Data</strong></li>   <li>     <p>Paste the link(s) into the text field</p>   </li>   <li>     <p>Press <strong>Start</strong></p>   </li>   <li><strong>Close</strong> the window</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-importing-data-from-a-data-library\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-importing-data-from-a-data-library\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Importing data from a data library</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <p>As an alternative to uploading the data from a URL or your computer, the files may also have been made available from a <em>shared data library</em>:</p>   <ol>   <li>Go into <strong>Shared data</strong> (top panel) then <strong>Data libraries</strong></li>   <li>Navigate to  the correct folder as indicated by your instructor.     <ul>       <li>On most Galaxies tutorial data will be provided in a folder named <strong>GTN - Material –&gt; Topic Name -&gt; Tutorial Name</strong>.</li>     </ul>   </li>   <li>Select the desired files</li>   <li>Click on <strong>Add to History</strong> <i class=\"fas fa-caret-down\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-dropdown</span> near the top and select <strong>as Datasets</strong> from the dropdown menu</li>   <li>     <p>In the pop-up window, choose</p>     <ul>       <li><em>“Select history”</em>: the history you want to import the data to (or create a new one)</li>     </ul>   </li>   <li>Click on <strong>Import</strong></li> </ol> </blockquote>\n      <p><!--END_SNIPPET--></p>\n\n      <ul>\n        <li>\n          <p>You can paste the links below into the <strong>Paste/Fetch</strong> box:</p>\n\n          <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>https://zenodo.org/record/2529117/files/limma-voom_luminalpregnant-luminallactate\nhttps://zenodo.org/record/3950862/files/Mus_musculus.GRCm38.98.subset.gff3\nhttps://zenodo.org/record/3950862/files/Symbol.tsv\nhttps://zenodo.org/record/3950862/files/MGIBatchReport_Qtl_Subset.txt\nhttps://zenodo.org/record/3950862/files/HOM_MouseHumanSequence.rpt\nhttps://zenodo.org/record/3950862/files/nextprot_abstraction.ttl\n</code></pre></div>          </div>\n        </li>\n      </ul>\n    </li>\n    <li>Rename the files using the <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> (pencil) icon.\n      <ul>\n        <li>limma-voom_luminalpregnant-luminallactate to <code class=\"language-plaintext highlighter-rouge\">DE results</code></li>\n        <li>Mus_musculus.GRCm38.98.subset.gff3 to <code class=\"language-plaintext highlighter-rouge\">Mus musculus annotation</code></li>\n        <li>Symbol.tsv to <code class=\"language-plaintext highlighter-rouge\">Gene Symbols</code></li>\n        <li>MGIBatchReport_Qtl_Subset.txt to <code class=\"language-plaintext highlighter-rouge\">QTL</code></li>\n        <li>HOM_MouseHumanSequence.rpt to <code class=\"language-plaintext highlighter-rouge\">Homolog groups</code></li>\n        <li>nextprot_asbtraction.ttl to <code class=\"language-plaintext highlighter-rouge\">neXtProt abstraction</code></li>\n      </ul>\n    </li>\n    <li>Check every datatype.\n      <ul>\n        <li>DE results: <code class=\"language-plaintext highlighter-rouge\">tabular</code></li>\n        <li>Mus musculus annotation: <code class=\"language-plaintext highlighter-rouge\">gff</code></li>\n        <li>Gene Symbol: <code class=\"language-plaintext highlighter-rouge\">tabular</code></li>\n        <li>QTL: <code class=\"language-plaintext highlighter-rouge\">tabular</code></li>\n        <li>Homolog groups: <code class=\"language-plaintext highlighter-rouge\">tabular</code></li>\n        <li>neXtprot abstraction: <code class=\"language-plaintext highlighter-rouge\">ttl</code></li>\n      </ul>\n    </li>\n  </ol>\n\n  <p>If the datatypes are wrong, please change it.</p>\n\n  <!--SNIPPET-->\n  <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-changing-the-datatype\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-changing-the-datatype\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Changing the datatype</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Click on the <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> <strong>pencil icon</strong> for the dataset to edit its attributes</li>   <li>In the central panel, click <i class=\"fas fa-database\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-chart-select-data</span> <strong>Datatypes</strong> tab on the top</li>   <li>In the <i class=\"fas fa-database\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-chart-select-data</span> <strong>Assign Datatype</strong>, select  your desired datatype  from “<em>New type</em>” dropdown     <ul>       <li>Tip: you can start typing the datatype into the field to filter the dropdown menu</li>     </ul>   </li>   <li>Click the <strong>Save</strong> button</li> </ul> </blockquote>\n  <p><!--END_SNIPPET--></p>\n</blockquote>\n\n<p>Click on the <i class=\"far fa-eye\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-eye</span> (eye) icon and take a look at the uploaded files.</p>\n\n<p>Two step are necessary to get our data converted into RDF triples. The first step is to upload the Galaxy datasets into the AskOmics server. The second step is to integrate the uploaded data into the RDF triplestore.</p>\n\n<h1 id=\"upload-inputs-into-askomics\">Upload inputs into AskOmics</h1>\n\n<p>We will first launch an AskOmics interactive tool, and upload the data into it.</p>\n\n<h2 id=\"launch-askomics-interactive-tool\">Launch AskOmics Interactive Tool</h2>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Launch AskOmics IT</hands-on-title>\n  <ol>\n    <li><strong>AskOmics</strong> a visual SPARQL query builder <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> to launch the Interactive Tool\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Datasets to load into AskOmics”</em>: <code class=\"language-plaintext highlighter-rouge\">DE results</code>, <code class=\"language-plaintext highlighter-rouge\">Mus musculus annotation</code>, <code class=\"language-plaintext highlighter-rouge\">Gene Symbols</code>, <code class=\"language-plaintext highlighter-rouge\">QTL</code>, <code class=\"language-plaintext highlighter-rouge\">Homolog groups</code> and <code class=\"language-plaintext highlighter-rouge\">neXtProt abstraction</code></li>\n      </ul>\n    </li>\n  </ol>\n</blockquote>\n\n<p>Wait a few seconds (or minutes if computing resources are busy) for AskOmics to be ready to use. A <strong>view</strong> link should appear in the confirmation box just after clicking on the <strong>Execute</strong> button.</p>\n\n<p>AskOmics is an <em>Interactive tool</em>. It means that when you launch it, it will stay in running state (yellow background) in your History. As long as it stays in this running state, you can access it by looking in the “User” &gt; “Active Interactive Tools” menu (click on its name to view it). When you no longer need it, you can stop it by deleting it from your history, or using the “Stop” button in the “User” &gt; “Active Interactive Tools” page.</p>\n\n<p>Keep in mind that as long as this tool runs, it uses computing resources, so don’t forget to stop it when you no longer have use for it.</p>\n\n<p>Once the AskOmics Interactive Tool is ready, you should see a start page looking like this:</p>\n\n<figure id=\"figure-1\" style=\"max-width: 90%;\"><img src=\"images/home.png\" alt=\"home page. \" width=\"1141\" height=\"701\" loading=\"lazy\" /><a target=\"_blank\" href=\"images/home.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 1</strong>:</span> AskOmics home page</figcaption></figure>\n\n<p>You can see that there is no data available yet. It’s because data needs to be integrated: it is the next step.</p>\n\n<h1 id=\"integrate-input-files-into-askomics\">Integrate input files into AskOmics</h1>\n\n<p>AskOmics conversion into RDF is called <em>integration</em>.</p>\n\n<p>On the <strong>Files</strong> page (link at the top of the page), you will see the files you uploaded from Galaxy. We will now integrate all these files.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Integrate data</hands-on-title>\n  <ol>\n    <li>Got to the <strong>Files</strong> page</li>\n    <li>Select all the input files</li>\n    <li>Click on the <strong>Integrate</strong> button</li>\n  </ol>\n</blockquote>\n\n<figure id=\"figure-2\" style=\"max-width: 90%;\"><img src=\"images/files.png\" alt=\"files page. \" width=\"1154\" height=\"647\" loading=\"lazy\" /><a target=\"_blank\" href=\"images/files.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 2</strong>:</span> AskOmics files page</figcaption></figure>\n\n<p>You will land on the <strong>Integrate</strong> page that shows a preview of the data present in each selected file, depending of its data type.</p>\n\n<h2 id=\"integrate-gff-files\">Integrate GFF files</h2>\n\n<p>The GFF preview shows the entities that the file contains. We need to select the entities we want to be integrated.</p>\n\n<p>The <code class=\"language-plaintext highlighter-rouge\">Mus musculus annotation</code> file we’re using contains gene and mRNA entities, and we will need both in the rest of the tutorial.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Integrate `Mus musculus annotation`</hands-on-title>\n  <ol>\n    <li>Search for <code class=\"language-plaintext highlighter-rouge\">Mus musculus annotation (preview)</code></li>\n    <li>Select <code class=\"language-plaintext highlighter-rouge\">gene</code> and <code class=\"language-plaintext highlighter-rouge\">mRNA</code></li>\n    <li>Click on the <strong>Integrate (private dataset)</strong> button</li>\n  </ol>\n  <figure id=\"figure-3\" style=\"max-width: 90%;\"><img src=\"images/mus_musculus_annotation_preview.png\" alt=\"mus musculus annotation preview. \" width=\"1214\" height=\"170\" loading=\"lazy\" /><a target=\"_blank\" href=\"images/mus_musculus_annotation_preview.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 3</strong>:</span> Mus musculus annotation preview</figcaption></figure>\n</blockquote>\n\n<h2 id=\"integration-of-tabular-tsv-files\">Integration of tabular (TSV) files</h2>\n\n<p>The TSV preview shows an HTML table representing the first lines of the TSV file. During integration, AskOmics will convert the file using the header.</p>\n\n<!-- First col: entity, then, attribute -->\n<p>The first column of a TSV file will be the <em>entity</em> name. Other columns of the file will be <em>attributes</em> of the <em>entity</em>. <em>Labels</em> of the <em>entity</em> and <em>attributes</em> will be set by the header. Each <em>label</em> can be edited by clicking on it.</p>\n\n<!-- Attribute types -->\n<p>Entity and attributes can have special types. The types are defined with the select box below the header. An <em>entity</em> can be a <em>start entity</em> or an <em>entity</em>. A <em>start entity</em> means that the entity may be used to start a query on the AskOmics homepage.</p>\n\n<p>Attributes can take the following types:</p>\n<ul>\n  <li>Numeric: if all the values of the column are numeric</li>\n  <li>Text: if all the values are strings</li>\n  <li>Category: if there is a limited number of repeated values (e.g. ‘green’, ‘yellow’ and ‘red’, each one found in multiple lines)</li>\n</ul>\n\n<p>If the entity describes a locatable element on a genome:</p>\n<ul>\n  <li>Reference: chromosome</li>\n  <li>Strand: strand</li>\n  <li>Start: start position</li>\n  <li>End: end position</li>\n</ul>\n\n<!-- Relation -->\n<p>A column can also represent a relation between the <em>entity</em> to another. In this case, the header have to be named <code class=\"language-plaintext highlighter-rouge\">relationName@TargetedEntity</code> and the type <em>Directed</em> or <em>Symetric</em> relation. A <em>Directed</em> relation is a relation from this entity to the targeted one (e.g. A is B’s father, but B is not A’s father). A <em>Symetric relation</em> is a relation that works in both directions (e.g. A loves B, and B loves A).</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Integrate `DE results`</hands-on-title>\n  <ol>\n    <li>Search for <code class=\"language-plaintext highlighter-rouge\">DE results (preview)</code></li>\n    <li>Edit attribute names and types:\n      <ul>\n        <li>change <code class=\"language-plaintext highlighter-rouge\">ENTREZ ID</code> to <code class=\"language-plaintext highlighter-rouge\">Differential Expression</code> and set type to <em>start entity</em></li>\n        <li>change <code class=\"language-plaintext highlighter-rouge\">SYMBOL</code> to <code class=\"language-plaintext highlighter-rouge\">linkedTo@Gene Symbol</code> and set type to <em>Symetric relation</em></li>\n        <li>change <code class=\"language-plaintext highlighter-rouge\">GENENAME</code> to <code class=\"language-plaintext highlighter-rouge\">name</code> and set type to <em>text</em></li>\n        <li>Keep the other column names and set their types to <em>numeric</em></li>\n      </ul>\n    </li>\n    <li><strong>Integrate (private dataset)</strong></li>\n  </ol>\n  <figure id=\"figure-4\" style=\"max-width: 90%;\"><img src=\"images/de_results_preview.png\" alt=\"De results preview. \" width=\"1122\" height=\"397\" loading=\"lazy\" /><a target=\"_blank\" href=\"images/de_results_preview.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 4</strong>:</span> DE results preview</figcaption></figure>\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Integrate `Gene symbols`</hands-on-title>\n  <ol>\n    <li>Search for <code class=\"language-plaintext highlighter-rouge\">Gene symbols (preview)</code></li>\n    <li>Edit attribute names and types:\n      <ul>\n        <li>change <code class=\"language-plaintext highlighter-rouge\">symbol</code> to <code class=\"language-plaintext highlighter-rouge\">Gene Symbol</code> and set type to <em>entity</em></li>\n        <li>Set <code class=\"language-plaintext highlighter-rouge\">to mouse genes@gene</code> type to <em>Symetric relation</em></li>\n      </ul>\n    </li>\n    <li>Click on the <strong>Integrate (private dataset)</strong> button</li>\n  </ol>\n  <figure id=\"figure-5\" style=\"max-width: 90%;\"><img src=\"images/symbol_to_ensembl_preview.png\" alt=\"Gene symbols preview. \" width=\"1152\" height=\"411\" loading=\"lazy\" /><a target=\"_blank\" href=\"images/symbol_to_ensembl_preview.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 5</strong>:</span> Symbol to Ensembl preview</figcaption></figure>\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Integrate `QTL`</hands-on-title>\n  <ol>\n    <li>Search for <code class=\"language-plaintext highlighter-rouge\">QTL (preview)</code></li>\n    <li>Edit attribute names and types:\n      <ul>\n        <li>change <code class=\"language-plaintext highlighter-rouge\">Input</code> to <code class=\"language-plaintext highlighter-rouge\">QTL</code> and set type to <em>start entity</em></li>\n        <li>set <code class=\"language-plaintext highlighter-rouge\">Chr</code> type to <em>Reference</em></li>\n        <li>set <code class=\"language-plaintext highlighter-rouge\">Start</code> type to <em>Start</em></li>\n        <li>set <code class=\"language-plaintext highlighter-rouge\">End</code> type to <em>End</em></li>\n      </ul>\n    </li>\n    <li>Click on the <strong>Integrate (private dataset)</strong> button</li>\n  </ol>\n  <figure id=\"figure-6\" style=\"max-width: 90%;\"><img src=\"images/qtl_preview.png\" alt=\"QTL preview. \" width=\"1130\" height=\"408\" loading=\"lazy\" /><a target=\"_blank\" href=\"images/qtl_preview.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 6</strong>:</span> QTL preview</figcaption></figure>\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Integrate `Homolog groups`</hands-on-title>\n  <ol>\n    <li>Search for <code class=\"language-plaintext highlighter-rouge\">Homolog groups (preview)</code></li>\n    <li>Edit attribute names and types:\n      <ul>\n        <li>change <code class=\"language-plaintext highlighter-rouge\">HomoloGene ID</code> to <code class=\"language-plaintext highlighter-rouge\">Homolog Group</code> and set type to <em>start entity</em></li>\n        <li>set <code class=\"language-plaintext highlighter-rouge\">Common Organism Name</code> type to <em>category</em></li>\n        <li>change <code class=\"language-plaintext highlighter-rouge\">Symbol</code> to <code class=\"language-plaintext highlighter-rouge\">linkedTo@Gene Symbol</code> and set type to <em>Directed relation</em></li>\n        <li>Keep the other column names and set their types to <em>text</em></li>\n      </ul>\n    </li>\n    <li>Click on the <strong>Integrate (private dataset)</strong> button</li>\n  </ol>\n  <figure id=\"figure-7\" style=\"max-width: 90%;\"><img src=\"images/homolog_groups.png\" alt=\"Homolog groups preview. \" width=\"1126\" height=\"396\" loading=\"lazy\" /><a target=\"_blank\" href=\"images/homolog_groups.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 7</strong>:</span> Homolog groups preview</figcaption></figure>\n</blockquote>\n\n<h2 id=\"integration-of-rdf-files\">Integration of RDF files</h2>\n\n<p>The last dataset we want to integrate is the neXtProt abstraction. This file contains some RDF data that instructs AskOmics how to communicate with a remote RDF database containing <a href=\"https://www.nextprot.org/\">neXtProt</a> data.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Integrate `neXtProt abstraction`</hands-on-title>\n  <ol>\n    <li>Search for <code class=\"language-plaintext highlighter-rouge\">neXtProt abstraction (preview)</code></li>\n    <li>Check that <strong>Distant endpoint</strong> is set to <code class=\"language-plaintext highlighter-rouge\">https://sparql.nextprot.org/sparql</code> in <strong>advanced options</strong></li>\n    <li>Click on the <strong>Integrate (private dataset)</strong> button</li>\n  </ol>\n  <figure id=\"figure-8\" style=\"max-width: 90%;\"><img src=\"images/nextprot_abstraction_preview.png\" alt=\"neXtProt abstraction preview. \" width=\"1125\" height=\"497\" loading=\"lazy\" /><a target=\"_blank\" href=\"images/nextprot_abstraction_preview.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 8</strong>:</span> neXtProt abstraction preview</figcaption></figure>\n</blockquote>\n\n<h2 id=\"monitor-integration\">Monitor integration</h2>\n\n<p>Integration can take some time depending on the file size. The <strong>Datasets</strong> page shows the progress.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>track integration progress</hands-on-title>\n  <ol>\n    <li>Go to the <strong>Dataset</strong> page</li>\n    <li>Wait for all datasets to be in <em>success</em> state</li>\n  </ol>\n  <figure id=\"figure-9\" style=\"max-width: 90%;\"><img src=\"images/datasets.png\" alt=\"dataset. \" width=\"1130\" height=\"455\" loading=\"lazy\" /><a target=\"_blank\" href=\"images/datasets.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 9</strong>:</span> Datasets table</figcaption></figure>\n</blockquote>\n\n<h1 id=\"query\">Query</h1>\n\n<p>Once all the data of interest is integrated (converted to RDF), its time to query them. Querying RDF data is done by using the SPARQL language. Fortunately, AskOmics provides a user-friendly interface to build SPARQL queries without having to learn the SPARQL language.</p>\n\n<h2 id=\"query-builder-overview\">Query builder overview</h2>\n\n<h3 id=\"simple-query\">Simple query</h3>\n\n<p>The first step to build a query is to choose a start point for the query.</p>\n\n<figure id=\"figure-10\" style=\"max-width: 90%;\"><img src=\"images/ask.png\" alt=\"ask. \" width=\"1143\" height=\"357\" loading=\"lazy\" /><a target=\"_blank\" href=\"images/ask.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 10</strong>:</span> ask page</figcaption></figure>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Start a query</hands-on-title>\n  <ol>\n    <li>Go to the <strong>Ask!</strong> page</li>\n    <li>Select the <em>Differential Expression</em> entity</li>\n    <li><strong>Start!</strong></li>\n  </ol>\n</blockquote>\n\n<p>Once the start entity is chosen, the query builder is displayed.</p>\n\n<p>The query builder is composed of a graph. Nodes represents <em>entities</em> and links represents <em>relations</em> between entities. The selected entity is surrounded by a red circle. Links and other entities are dotted and lighter because there are not instantiated.</p>\n\n<figure id=\"figure-11\" style=\"max-width: 90%;\"><img src=\"images/query_builder.png\" alt=\"query builder. \" width=\"1120\" height=\"662\" loading=\"lazy\" /><a target=\"_blank\" href=\"images/query_builder.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 11</strong>:</span> Query builder, Differential Expression is the selected entity, Gene Symbol is a suggested entity</figcaption></figure>\n\n<p>On the right, attributes of the selected entity are displayed as attribute boxes. Each box has an eye icon: an opened eye means the attribute will be displayed on the results.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Ask for all Differential Expression and display some attributes</hands-on-title>\n  <ol>\n    <li>Display <code class=\"language-plaintext highlighter-rouge\">logFC</code> and <code class=\"language-plaintext highlighter-rouge\">adj.P.val</code> by clicking on the eye icon</li>\n    <li><strong>Run &amp; preview</strong></li>\n  </ol>\n  <figure id=\"figure-12\" style=\"max-width: 90%;\"><img src=\"images/preview_results.png\" alt=\"preview results. \" width=\"1125\" height=\"550\" loading=\"lazy\" /><a target=\"_blank\" href=\"images/preview_results.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 12</strong>:</span> Results preview</figcaption></figure>\n</blockquote>\n\n<p><strong>Run &amp; preview</strong> launch the query with a limit of 30 rows returned. We use this button to get an idea of the results returned.</p>\n\n<h3 id=\"filter-on-attributes\">Filter on attributes</h3>\n\n<p>Next query will search for all over-expressed genes. Genes are considered over-expressed if the log fold change is &gt; 2. We are only interested by significant results (Adj P value ≤ 0.05)</p>\n\n<p>Back to the query builder,</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Filter attributes to get significant over-expressed genes</hands-on-title>\n  <ol>\n    <li>Filter <code class=\"language-plaintext highlighter-rouge\">logFC</code> with <code class=\"language-plaintext highlighter-rouge\">&gt; 2</code></li>\n    <li>Filter <code class=\"language-plaintext highlighter-rouge\">adj.P.val</code> with <code class=\"language-plaintext highlighter-rouge\">≤ 0.05</code></li>\n    <li><strong>Run &amp; preview</strong></li>\n  </ol>\n  <figure id=\"figure-13\" style=\"max-width: 90%;\"><img src=\"images/preview_results_filtered.png\" alt=\"preview filtered results. \" width=\"1407\" height=\"691\" loading=\"lazy\" /><a target=\"_blank\" href=\"images/preview_results_filtered.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 13</strong>:</span> Filtered results preview</figcaption></figure>\n</blockquote>\n\n<p>The preview shows only significantly over-expressed genes.</p>\n\n<h3 id=\"filter-on-relations\">Filter on relations</h3>\n\n<p>Now that we have found our genes of interest, we will link these genes to the reference genome to get information about their location.</p>\n\n<p>To constraint on relation, we have to click on suggested nodes, linked to our entity of interest.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Link `De results` to `gene` using `Gene Symbol`</hands-on-title>\n  <ol>\n    <li>First, hide <code class=\"language-plaintext highlighter-rouge\">Label</code>, <code class=\"language-plaintext highlighter-rouge\">logFC</code> and <code class=\"language-plaintext highlighter-rouge\">adj.P.val</code> of <code class=\"language-plaintext highlighter-rouge\">Differential Expression</code> using the eye icon</li>\n    <li>Instantiate <code class=\"language-plaintext highlighter-rouge\">Gene Symbol</code> by clicking on the suggested node, and hide his <code class=\"language-plaintext highlighter-rouge\">Label</code> using the eye icon</li>\n    <li>Instantiate <code class=\"language-plaintext highlighter-rouge\">gene</code> by clicking on the <code class=\"language-plaintext highlighter-rouge\">gene</code> node</li>\n    <li><strong>Run &amp; preview</strong></li>\n  </ol>\n  <figure id=\"figure-14\" style=\"max-width: 90%;\"><img src=\"images/gene_query.png\" alt=\"gene query. \" width=\"385\" height=\"444\" loading=\"lazy\" /><a target=\"_blank\" href=\"images/gene_query.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 14</strong>:</span> Gene query</figcaption></figure>\n</blockquote>\n\n<p>Results now show the Ensembl id of our over-expressed genes. We have now access to all the information about the <code class=\"language-plaintext highlighter-rouge\">gene</code> entity contained in the GFF file. For example, we can filter on chromosome and display chromosome and strand to get information about gene location.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Filter `gene`</hands-on-title>\n  <ol>\n    <li>Show <code class=\"language-plaintext highlighter-rouge\">reference</code> and <code class=\"language-plaintext highlighter-rouge\">strand</code> using the eye icon</li>\n    <li>Filter <code class=\"language-plaintext highlighter-rouge\">reference</code> by selecting <code class=\"language-plaintext highlighter-rouge\">X</code> chromosome</li>\n    <li>Filter <code class=\"language-plaintext highlighter-rouge\">strand</code> by selecting <code class=\"language-plaintext highlighter-rouge\">+</code> strand</li>\n    <li><strong>Run &amp; preview</strong></li>\n  </ol>\n  <figure id=\"figure-15\" style=\"max-width: 90%;\"><img src=\"images/gene_filter.png\" alt=\"gene filter. \" width=\"534\" height=\"316\" loading=\"lazy\" /><a target=\"_blank\" href=\"images/gene_filter.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 15</strong>:</span> Gene filtering</figcaption></figure>\n</blockquote>\n\n<h3 id=\"query-on-the-position-of-elements-on-the-genome\">Query on the position of elements on the genome.</h3>\n\n<p>AskOmics is able to perform special queries between entities that are locatable. These queries are:</p>\n\n<ul>\n  <li>Entities overlapping another one</li>\n  <li>Entities included in another entity</li>\n</ul>\n\n<blockquote class=\"details\">\n  <details-title>FALDO ontology</details-title>\n  <p>The <a href=\"https://bioportal.bioontology.org/ontologies/FALDO\">FALDO</a> ontology describes sequence feature positions and regions. AskOmics uses FALDO ontology to represent entity positions. GFF are using FALDO, as well as TSV entities with chromosome, strand, start and end.</p>\n</blockquote>\n\n<p>On the query builder interface, locatable entities are represented with a green circle and relations based on location are represented as green arrow.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Filter `gene`</hands-on-title>\n  <ol>\n    <li>First, remove the reference filter (unselect <code class=\"language-plaintext highlighter-rouge\">X</code> using <code class=\"language-plaintext highlighter-rouge\">ctrl</code>+<code class=\"language-plaintext highlighter-rouge\">click</code>)</li>\n    <li>Remove the strand filter (unselect <code class=\"language-plaintext highlighter-rouge\">+</code> using <code class=\"language-plaintext highlighter-rouge\">ctrl</code>+<code class=\"language-plaintext highlighter-rouge\">click</code>)</li>\n    <li>Hide <code class=\"language-plaintext highlighter-rouge\">reference</code> <code class=\"language-plaintext highlighter-rouge\">strand</code> using the eye</li>\n    <li>Instantiate <code class=\"language-plaintext highlighter-rouge\">QTL</code></li>\n    <li>Click on the link between <code class=\"language-plaintext highlighter-rouge\">gene</code> and <code class=\"language-plaintext highlighter-rouge\">QTL</code> to edit the relation</li>\n    <li>Check that the relation is <code class=\"language-plaintext highlighter-rouge\">gene</code> <code class=\"language-plaintext highlighter-rouge\">included in</code> <code class=\"language-plaintext highlighter-rouge\">QTL</code> <code class=\"language-plaintext highlighter-rouge\">on the same reference</code> with <code class=\"language-plaintext highlighter-rouge\">strict</code> ticked</li>\n    <li><strong>Run &amp; preview</strong></li>\n  </ol>\n  <figure id=\"figure-16\" style=\"max-width: 90%;\"><img src=\"images/query_builder_position.png\" alt=\"FALDO query. \" width=\"1098\" height=\"662\" loading=\"lazy\" /><a target=\"_blank\" href=\"images/query_builder_position.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 16</strong>:</span> FALDO query</figcaption></figure>\n</blockquote>\n\n<p>To go further, we can filter on <code class=\"language-plaintext highlighter-rouge\">QTL</code> to refine the results.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Filter `gene`</hands-on-title>\n  <ol>\n    <li>Go back to the <code class=\"language-plaintext highlighter-rouge\">QTL</code> node</li>\n    <li>Show the <code class=\"language-plaintext highlighter-rouge\">Name</code> attribute using the eye icon</li>\n    <li>Filter the name with a <code class=\"language-plaintext highlighter-rouge\">regexp</code> with <code class=\"language-plaintext highlighter-rouge\">growth</code></li>\n    <li><strong>Run &amp; preview</strong></li>\n  </ol>\n</blockquote>\n\n<p>From now, our query is “All Genes that are over-expressed (logFC &gt; 2 and FDR ≤ 0.05) and located on a QTL that is related to growth”. We can save this results with the <em>Run &amp; save</em> button.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Save a result</hands-on-title>\n  <ol>\n    <li><strong>Run &amp; save</strong></li>\n  </ol>\n</blockquote>\n\n<h3 id=\"use-nextprot-distant-data-to-refine-results\">Use neXtProt distant data to refine results</h3>\n\n<p><a href=\"https://www.nextprot.org\">neXtProt</a> is a comprehensive human-centric discovery platform, offering its users a seamless integration of and navigation through protein-related data. It offer a <a href=\"https://sparql.nextprot.org/sparql\">SPARQL endpoint</a> that can be interrogated with AskOmics.</p>\n\n<p>Since we added the neXtProt abstraction into our AskOmics instance, we can link our data to neXtProt.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Find human homolog genes</hands-on-title>\n  <ol>\n    <li>Go back to the <code class=\"language-plaintext highlighter-rouge\">gene</code> node</li>\n    <li>instantiate <code class=\"language-plaintext highlighter-rouge\">Gene Symbol</code> and hide his <code class=\"language-plaintext highlighter-rouge\">Label</code></li>\n    <li>Instantiate <code class=\"language-plaintext highlighter-rouge\">Homolog Group</code>, hide his label and filter his <code class=\"language-plaintext highlighter-rouge\">Common Organism Name</code> with <code class=\"language-plaintext highlighter-rouge\">human</code></li>\n  </ol>\n  <figure id=\"figure-17\" style=\"max-width: 90%;\"><img src=\"images/filter_organism_name.png\" alt=\"Organism name filter. \" width=\"433\" height=\"120\" loading=\"lazy\" /><a target=\"_blank\" href=\"images/filter_organism_name.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 17</strong>:</span> Organism name filter</figcaption></figure>\n  <ol>\n    <li>From <code class=\"language-plaintext highlighter-rouge\">Homolog Group</code>, instantiate another <code class=\"language-plaintext highlighter-rouge\">Gene Symbol</code> and hide his <code class=\"language-plaintext highlighter-rouge\">Label</code></li>\n    <li>Finally, follow the <code class=\"language-plaintext highlighter-rouge\">to neXtProt Gene</code> link and instantiate <code class=\"language-plaintext highlighter-rouge\">Gene</code> (with a capital G)</li>\n    <li><strong>Run &amp; preview</strong></li>\n  </ol>\n</blockquote>\n\n<p>The query we’ve just built asks for the human homologs of our over-expressed genes. We use the <code class=\"language-plaintext highlighter-rouge\">Gene Symbol</code> to get information from the neXtProt database. AskOmics converts the query into small SPARQL subqueries and send them to the local database and to the remote neXtProt endpoint.</p>\n\n<p>Now we are linked to the neXtProt database, we can obtain information about the proteins encoded by these genes, as well as their location in the cell.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Get the protein and their location</hands-on-title>\n  <ol>\n    <li>Instantiate <code class=\"language-plaintext highlighter-rouge\">Entry</code></li>\n    <li>Instantiate <code class=\"language-plaintext highlighter-rouge\">Isoform</code> and hide the <code class=\"language-plaintext highlighter-rouge\">Label</code></li>\n    <li>Many nodes are connected to <code class=\"language-plaintext highlighter-rouge\">Isoform</code>. Use the <em>Filter links</em> field to filter nodes linked with a link named <code class=\"language-plaintext highlighter-rouge\">location</code></li>\n  </ol>\n  <figure id=\"figure-18\" style=\"max-width: 90%;\"><img src=\"images/filter_links.png\" alt=\"Filter links. \" width=\"669\" height=\"353\" loading=\"lazy\" /><a target=\"_blank\" href=\"images/filter_links.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 18</strong>:</span> Filter links</figcaption></figure>\n  <ol>\n    <li>Instantiate the <code class=\"language-plaintext highlighter-rouge\">Subcellular Location</code> node and hide <code class=\"language-plaintext highlighter-rouge\">Uri</code></li>\n    <li>Use the <em>Filter node</em> field to filter nodes with “location” in their name</li>\n    <li>Instantiate <code class=\"language-plaintext highlighter-rouge\">Uniprot subcellular Location CV</code> (you can use the node filter to clear up the screen)</li>\n    <li><strong>Run &amp; preview</strong></li>\n  </ol>\n</blockquote>\n\n<p>Finally, our query is “All genes that are over-expressed and located on a QTL that is related to growth, their human homologs and the location of the proteins coded by this genes”. We will save it to the results.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Save a result</hands-on-title>\n  <ol>\n    <li><strong>Run &amp; save</strong></li>\n  </ol>\n</blockquote>\n\n<h2 id=\"results-management\">Results management</h2>\n\n<p>The results page displays the saved queries. Queries are sorted by creation date. At the end of the table, action buttons can be used to preview the result, download or send it to Galaxy history.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Edit query name</hands-on-title>\n  <ol>\n    <li>Go to the <em>Results</em> page</li>\n    <li>Use the <em>Preview</em> button to check the result</li>\n    <li>Click on the name to rename the two query with <code class=\"language-plaintext highlighter-rouge\">Over-expressed genes on a growth QTL</code> and <code class=\"language-plaintext highlighter-rouge\">Over-expressed genes on a growth QTL, their human homologs and protein location</code> (press enter key to validate)</li>\n  </ol>\n</blockquote>\n\n<figure id=\"figure-19\" style=\"max-width: 90%;\"><img src=\"images/results_table.png\" alt=\"preview table. \" width=\"1125\" height=\"201\" loading=\"lazy\" /><a target=\"_blank\" href=\"images/results_table.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 19</strong>:</span> Results table</figcaption></figure>\n\n<p>The <strong>Action</strong> column contain button to perform certain action:</p>\n\n<ul>\n  <li>Preview: show a results preview on the bottom of the table</li>\n  <li>Download: Download the results (TSV file)</li>\n  <li>Edit: Edit the query with the query builder</li>\n  <li>SPARQL: edit the query with a SPARQL editor for advanced users</li>\n  <li>Send results to Galaxy: send the results (TSV file) to the most recently used Galaxy history</li>\n  <li>Send query to Galaxy: send the query representation (json file) to the most recently used Galaxy history</li>\n</ul>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Send results to Galaxy</hands-on-title>\n  <ol>\n    <li>Click on <strong>Send results to Galaxy</strong> on each query to send them to the last used Galaxy history</li>\n    <li>Get back to galaxy and wait for the dataset (reload if needed)</li>\n  </ol>\n</blockquote>\n\n<figure id=\"figure-20\" style=\"max-width: 90%;\"><img src=\"images/galaxy_history_results.png\" alt=\"history results. \" width=\"289\" height=\"612\" loading=\"lazy\" /><a target=\"_blank\" href=\"images/galaxy_history_results.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 20</strong>:</span> Galaxy history with the two results</figcaption></figure>\n\n<p>Now that you have used AskOmics to generate this final tabular file, you can continue analysing it with other Galaxy tools.\nIf you are done, don’t forget to close the AskOmics instance by going to the “User” &gt; “Active Interactive Tools” page.</p>\n\n<h1 id=\"conclusion\">Conclusion</h1>\n\n<p>In this tutorial we have seen how to use AskOmics Interactive Tool. We launch the tools with a set of input files, then we have integrated these files into RDF and finally, we built complex queries over this local datasets and neXtProt to answer a biological question.</p>\n"],"ref_slides":["# How to explore data\n\n---\n## Requirements\n\nStudy of biological mechanisms requires to:\n\n- **integrate** multiple data sources (differential expression results, genome annotation, remote protein database)\n- **query** them to answer a biological question (which genes are over-expressed in a condition, and what are the proteins coded by these genes)\n\n.image-00[ ![Local data tables and remote data with gene and proteins is combined in data integration. Now a graph is produced with differential expression pointing to a gene which points to a protein. Next the data is queried and results produced.](images/from_data_to_result.png)]\n\n---\n\n# What is the Semantic Web?\n\n---\n\n## Semantic Web\n\nSet of recommendations to **integrate data**, to **integrate domain knowledge** and to **perform query** and reasoning.\n\n- Resource Description Framework (RDF): annotate data\n- RDFS + OWL: represent knowledge (data description)\n- SPARQL Protocol and RDF Query Language (SPARQL): query data\n\n---\n\n## RDF\n\n- RDF is for describing **resources** (the R in RDF)\n  - resources are identified by URIs (`nextprot:P01137`, `taxon:9606`)\n\n- **describing** (D in RDF) a resource is representing it explicitly\n  - its attributes (`nextprot:P01137 :hasSequence \"MPPSGLRLLL...\"`)\n  - its relations to other entities (`nextprot:P01137 :hasTaxon taxon:9606`)\n  - its descriptions (aka classes) (`nextprot:P01137 :is nextprot:Protein`)\n\n---\n\n## RDF: Set of triples\n\n- RDF is represented by triples (subject, predicate, object)\n  - **Subject**: the resource being described\n  - **Predicate**: the relation (from subject to object)\n  - **Object**: a value of the predicate for the subject\n\n.image-01[ ![a small graph, subject points to object with an arrow labelled predicate.](images/rdf_schema_1.png)]\n\n```turtle\nnextprot:P01137 :hasTaxon taxon:9606 .\nnextprot:P01137 :hasSequence \"MPPSGLRLLL\" .\n```\n\n---\n\n## RDF: triples form a labeled directed graph\n\n\n```turtle\n# Description\nnextprot:P01137 rdf:type nextprot:Protein .\ntaxon:9606 rdf:type nextprot:Organism .\n# Data\nnextprot:P01137 :hasTaxon taxon:9606 .\nnextprot:P01137 :hasSequence \"MPPSGLRLLL\" .\n```\n\n.image-02[ ![A graphic with two regions, data description and data. In the data is a circle labelled nextprot:P01137 which points to a sequence via a hasSequence arrow. The nextprot points to a taxon:9606 with a hasTaxon arrow. The taxon points to a nextprot:Organism in the data description region. The nextprot protein points to nextprot:Protein in the data description region via an rdf:type arrow.](images/rdf_schema_2.png)]\n\n---\n\n## SPARQL\n\n- The SPARQL language is a set of triple patterns with variables (`?variable_name`)\n\n```\nSELECT ?gene\nWHERE {\n    ?gene rdf:type :Gene .\n    ?gene :hasTaxon taxon:9606 .\n}\n```\n\n- All `?gene` with `rdf:type` `:Gene` **and** with `:hasTaxon` `taxon:9606`\n- In other words, the query returns all the human genes\n\n\n---\n\n## SPARQL: entity matching allow federated queries\n\n.pull-left[\n- Using the same identifier for the same entity (**entity matching**) across multiple datasets allows federated queries\n\n- Federated SPARQL queries provide unified querying capabilities over multiple datasets as if they were a single virtual graph\n\n]\n\n.pull-right[\n.image-03[ ![Dataset 1 and 2 are shown as two silos, each with different small graphs. Each has a red node. Those nodes are connected via a dashed line. A picture of a cloud points at the two datasets, and their individual graphs collapsed into one larger graph. A query is sent to this cloud which comes out as a result table.](images/rdf_schema_3.png)]\n]\n\n\n\n---\n\n\n# What is AskOmics?\n\n---\n\n## AskOmics\n\nWeb software for **data integration** and **query** using Semantic Web. The main functionalities are:\n\n- Convert of **multiple data formats** into RDF triples and store them in a local triplestore\n- Generate **complex SPARQL queries** using a user-friendly interface\n- Support external SPARQL endpoint to **cross-reference integrated data with remote data**\n\nAskOmics can be used as a standalone software, or **with Galaxy**\n\n---\n\n\n# Data integration with AskOmics\n\n---\n\n## Local data integration\n\n- RDF and SPARQL are good infrastructures to describe and query biological datasets, but most of them are still stored on flat files like CSV/TSV and GFF.\n\n- AskOmics converts multiple structured data formats into RDF triples\n  * CSV/TSV\n  * GFF\n  * BED\n\n\n---\n\n## AskOmics generates the graph of data and the abstraction\n\nAskOmics uses the file structure (*e.g.* header of TSV files) to generate the graph of data description: **the abstraction**\n\n.image-04[ ![Two tables are provided, pointing to RDF abstraction with a small graph of DE, Gene, and their attributes. And RDF data which has the same graph as abstraction, but with real identifiers.](images/askomics_convertion.png)]\n\n\nThe rest of the files is converted to RDF triples that correspond to the data.\n\n---\n\n\n## Distant RDF data integration\n\n- Some public databases (*e.g.* [neXtProt](https://sparql.nextprot.org)) provide RDF data through a SPARQL endpoint (public access for RDF data)\n\n\n- To connect with a remote SPARQL endpoint, AskOmics needs its RDF abstraction\n- The abstraction can be generated with [abstractor](https://github.com/askomics/abstractor)\n\n```bash\npip3 install abstractor\nabstractor -s https://sparql.nextprot.org/sparql -o nextprot_abstraction.ttl -f turtle\n```\n\n- This abstraction can then be uploaded into AskOmics as a standard file\n\n\n---\n\n# Query multiple data sources with AskOmics\n\n---\n\n## Query composition\n\n- Users navigate through the abstraction of local and remote data and create a path that represents a query\n\n.image-06[ ![A picture of an RDF graph with many nodes. On the right is a query interface of some sort.](images/askomics_query_builder.png)]\n\n- The query is converted to SPARQL code that is executed on the local and remote RDF data\n- Results are returned and can be downloaded\n"],"hands_on":true,"slides":true,"mod_date":"2023-11-03 14:30:27 +0000","pub_date":"2020-07-09 08:03:59 +0000","version":17,"api":"https://training.galaxyproject.org/training-material/api/topics/transcriptomics/tutorials/rna-seq-analysis-with-askomics-it/tutorial.json","tools":[],"supported_servers":{"exact":[],"inexact":[{"name":"UseGalaxy.eu","url":"https://usegalaxy.eu","id":"eu","human":"Galaxy Europe","usegalaxy":true},{"name":"UseGalaxy.org","url":"https://usegalaxy.org","id":"us","human":"Galaxy Main","usegalaxy":true},{"name":"UseGalaxy.org.au","url":"https://usegalaxy.org.au","id":"au","human":"Galaxy Australia","usegalaxy":true},{"name":"UseGalaxy.fr","url":"https://usegalaxy.fr","id":"fr","human":"Galaxy France","usegalaxy":true}]},"topic_name_human":"Transcriptomics","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools: []\n","tours":false,"video":false,"slides_recordings":false,"translations":{"tutorial":[],"slides":[],"video":false},"license":"CC-BY-4.0","type":"tutorial","logo":"GTN","redirect_from":["/short/transcriptomics/rna-seq-analysis-with-askomics-it/slides","/short/S00097"]}