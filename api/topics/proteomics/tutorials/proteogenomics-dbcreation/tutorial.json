{"layout":"tutorial_hands_on","title":"Proteogenomics 1: Database Creation","zenodo_link":"https://doi.org/10.5281/zenodo.1489208","level":"Intermediate","questions":["How to create a customized Protein Database from RNAseq data?"],"objectives":["Generating a customized Protein sequence database with variants, indels, splice junctions and known sequences."],"time_estimation":"30m","key_points":["Generating variant protein database","Generating genomic and variant mapping files for visualization"],"follow_up_training":[{"type":"internal","topic_name":"proteomics","tutorials":["proteogenomics-dbsearch","proteogenomics-novel-peptide-analysis"]}],"contributors":[{"name":"Subina Mehta","email":"subinamehta@gmail.com","twitter":"Subina_Mehta","linkedin":"subinamehta","matrix":"subinamehta:matrix.org","orcid":"0000-0001-9818-0537","joined":"2018-06","id":"subinamehta","url":"https://training.galaxyproject.org/training-material/api/contributors/subinamehta.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/subinamehta/"},{"name":"Timothy J. Griffin","email":"tgriffin@umn.edu","github":false,"joined":"2017-09","orcid":"0000-0001-6801-2559","id":"timothygriffin","url":"https://training.galaxyproject.org/training-material/api/contributors/timothygriffin.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/timothygriffin/"},{"name":"Pratik Jagtap","email":"pjagtap@umn.edu","joined":"2017-09","orcid":"0000-0003-0984-0973","id":"pratikdjagtap","url":"https://training.galaxyproject.org/training-material/api/contributors/pratikdjagtap.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/pratikdjagtap/"},{"name":"Ray Sajulga","email":"rsajulga@umn.edu","joined":"2018-11","id":"jraysajulga","url":"https://training.galaxyproject.org/training-material/api/contributors/jraysajulga.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/jraysajulga/"},{"name":"James Johnson","email":"jj@umn.edu","joined":"2017-09","in_memoriam":"<a href=\"https://galaxyproject.org/news/2024-03-19-remembrances-of-jj/\">James ‘JJ’ Johnson, was a Galaxy community rock star most known for his indispensable contributions to the Galaxy Proteomics community.</a>\n\nJJ’s works will live on in so many Galaxy tools and workflows for years to come.","id":"jj-umn","url":"https://training.galaxyproject.org/training-material/api/contributors/jj-umn.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/jj-umn/"},{"name":"Praveen Kumar","email":"kumar207@umn.edu","joined":"2019-04","id":"pravs3683","url":"https://training.galaxyproject.org/training-material/api/contributors/pravs3683.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/pravs3683/"}],"subtopic":"multi-omics","tags":["proteogenomics"],"recordings":[{"captioners":["emmaleith"],"date":"2021-02-15","galaxy_version":"21.01","length":"40M","youtube_id":"b_kZf8mXHdo","speakers":["jj-umn"]}],"js_requirements":{"mathjax":null,"mermaid":false},"short_id":"T00231","url":"/topics/proteomics/tutorials/proteogenomics-dbcreation/tutorial.html","topic_name":"proteomics","tutorial_name":"proteogenomics-dbcreation","dir":"topics/proteomics/tutorials/proteogenomics-dbcreation","symlink":null,"id":"proteomics/proteogenomics-dbcreation","ref_tutorials":["<p><strong>Proteogenomics</strong> involves the use of mass spectrometry (MS) based proteomics data against genomics and transcriptomics data to identify peptides and to understand protein-level evidence of gene expression. In the first section of the tutorial, we will create a protein database (FASTA) using RNA-sequencing files (FASTQ) and then perform sequence database searching using the resulting FASTA file with the MS data to identify peptides corresponding to novel proteoforms. Then, we will assign the genomic coordinates and annotations for these identified peptides and visualize the data for its spectral quality and genomic localization</p>\n\n<p><a href=\"../../images/potential_novel_publication.png\" rel=\"noopener noreferrer\"><img src=\"../../images/potential_novel_publication.png\" alt=\"Novel Peptides. \" width=\"1995\" height=\"775\" loading=\"lazy\" /></a></p>\n\n<p>Proteogenomics integrates <strong>RNA-Seq</strong> data for generating customized protein sequence databases with mass spectrometry-based proteomics data, which are matched to these databases to identify protein sequence variants. (<span class=\"citation\"><a href=\"#Chambers_2017\">Chambers <i>et al.</i> 2017</a></span>).</p>\n\n<p><a href=\"../../images/workflow_objective1.png\" rel=\"noopener noreferrer\"><img src=\"../../images/workflow_objective1.png\" alt=\"Proteogenomics. \" width=\"1445\" height=\"672\" loading=\"lazy\" /></a></p>\n\n<blockquote class=\"agenda\">\n  <agenda-title></agenda-title>\n\n  <p>In this tutorial, we will cover:</p>\n<ol id=\"markdown-toc\">\n  <li><a href=\"#overview\" id=\"markdown-toc-overview\">Overview</a></li>\n  <li><a href=\"#data-upload\" id=\"markdown-toc-data-upload\">Data upload</a></li>\n  <li><a href=\"#change-the-chromosome-names-in-the-ensembl-gtf-to-match-a-ucsc-genome-reference\" id=\"markdown-toc-change-the-chromosome-names-in-the-ensembl-gtf-to-match-a-ucsc-genome-reference\">Change the chromosome names in the Ensembl GTF to match a UCSC genome reference</a></li>\n  <li><a href=\"#aligning-fastq-files-to-the-mouse-genome\" id=\"markdown-toc-aligning-fastq-files-to-the-mouse-genome\">Aligning FASTQ files to the mouse genome</a></li>\n  <li><a href=\"#variant-analysis\" id=\"markdown-toc-variant-analysis\">Variant Analysis</a>    <ol>\n      <li><a href=\"#variant-calling\" id=\"markdown-toc-variant-calling\">Variant Calling</a></li>\n      <li><a href=\"#variant-annotation-and-genome-mapping\" id=\"markdown-toc-variant-annotation-and-genome-mapping\">Variant annotation and Genome Mapping</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#transcript-assembly\" id=\"markdown-toc-transcript-assembly\">Transcript Assembly</a>    <ol>\n      <li><a href=\"#rna-seq-to-transcripts\" id=\"markdown-toc-rna-seq-to-transcripts\">RNA-seq to transcripts</a></li>\n      <li><a href=\"#evaluate-the-assembly-with-annotated-transcripts\" id=\"markdown-toc-evaluate-the-assembly-with-annotated-transcripts\">Evaluate the assembly with annotated transcripts</a></li>\n      <li><a href=\"#translate-transcripts\" id=\"markdown-toc-translate-transcripts\">Translate transcripts</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#creating-fasta-databases\" id=\"markdown-toc-creating-fasta-databases\">Creating FASTA Databases</a>    <ol>\n      <li><a href=\"#genomic-mapping-database\" id=\"markdown-toc-genomic-mapping-database\">Genomic mapping database</a></li>\n      <li><a href=\"#variant-annotations-database\" id=\"markdown-toc-variant-annotations-database\">Variant Annotations database</a></li>\n      <li><a href=\"#list-of-reference-protein-accession-names\" id=\"markdown-toc-list-of-reference-protein-accession-names\">List of Reference Protein Accession names</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#conclusion\" id=\"markdown-toc-conclusion\">Conclusion</a></li>\n</ol>\n\n</blockquote>\n\n<h1 id=\"overview\">Overview</h1>\n\n<p>This tutorial focuses on creating a <strong>FASTA</strong> database generated from RNA-seq data. There are two outputs from this workflow: (1) a <strong>sequence database</strong> consisting of variants and known reference sequences and (2) mapping files containing <strong>genomic</strong> and <strong>variant</strong> mapping data.</p>\n\n<p><a href=\"../../images/database_creation.png\" rel=\"noopener noreferrer\"><img src=\"../../images/database_creation.png\" alt=\"Database creation. \" width=\"1962\" height=\"914\" loading=\"lazy\" /></a></p>\n\n<p>The first part of the tutorial deals with creating the FASTA file containing sequences with single amino acid variants (SAVs), insertions and deletions (indels). The second part of the workflow helps in creating a FASTA file with transcript assemblies (splicing variants).</p>\n\n<h1 id=\"data-upload\">Data upload</h1>\n\n<p>In this tutorial, protein and the total RNA sample was obtained from the early development of B-cells from mice. It was obtained at two developmental stages of B-cells: <em>Ebf1</em> -/- pre-pro-B and <em>Rag2</em> -/- pro-B. Please refer to the original study  <a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4276347/\">Heydarian, M. et al.</a>for details.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>data upload and organization</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Create a new history and name it something meaningful (e.g. <em>Proteogenomics DB creation</em>)</p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-creating-a-new-history\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-creating-a-new-history\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Creating a new history</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <p>Click the <i class=\"fas fa-plus\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">new-history</span> icon at the top of the history panel:</p>   <p><img src=\"/training-material/shared/images/history_create_new.svg\" alt=\"UI for creating new history\" /></p>   <!-- the original drawing can be found here https://docs.google.com/drawings/d/1cCBrLAo4kDGic5QyB70rRiWJAKTenTU8STsKDaLcVU8/edit?usp=sharing --> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li>Import the Uniprot FASTA, FASTQ file and the GTF file from Zenodo <a href=\"https://doi.org/10.5281/zenodo.1489208\"><a href=\"https://zenodo.org/badge/DOI/10.5281/zenodo.1489208.svg\" rel=\"noopener noreferrer\"><img src=\"https://zenodo.org/badge/DOI/10.5281/zenodo.1489208.svg\" alt=\"DOI. \" loading=\"lazy\" /></a></a>\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>https://zenodo.org/records/1489208/files/Trimmed_ref_5000_uniprot_cRAP.fasta\nhttps://zenodo.org/record/1489208/files/FASTQ_ProB_22LIST.fastqsanger\nhttps://zenodo.org/record/1489208/files/Mus_musculus.GRCm38.86.gtf\n</code></pre></div>      </div>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-importing-via-links\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-importing-via-links\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Importing via links</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Copy the link location</li>   <li>     <p>Click <i class=\"fas fa-upload\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-upload</span> <strong>Upload Data</strong> at the top of the tool panel</p>   </li>   <li>Select <i class=\"fa fa-edit\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-wf-edit</span> <strong>Paste/Fetch Data</strong></li>   <li>     <p>Paste the link(s) into the text field</p>   </li>   <li>     <p>Press <strong>Start</strong></p>   </li>   <li><strong>Close</strong> the window</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li>\n      <p>Rename the datasets with more descriptive names (strip off the url prefixes)</p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-renaming-a-dataset\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-renaming-a-dataset\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Renaming a dataset</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Click on the <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> <strong>pencil icon</strong> for the dataset to edit its attributes</li>   <li>In the central panel, change the <strong>Name</strong> field</li>   <li>Click the <strong>Save</strong> button</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li>\n      <p>Make sure that the datatype of file <code class=\"language-plaintext highlighter-rouge\">FASTQ_ProB_22List.fastqsanger</code> is set to <code class=\"language-plaintext highlighter-rouge\">fastqsanger</code></p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-changing-the-datatype\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-changing-the-datatype\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Changing the datatype</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Click on the <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> <strong>pencil icon</strong> for the dataset to edit its attributes</li>   <li>In the central panel, click <i class=\"fas fa-database\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-chart-select-data</span> <strong>Datatypes</strong> tab on the top</li>   <li>In the <i class=\"fas fa-database\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-chart-select-data</span> <strong>Assign Datatype</strong>, select <code class=\"language-plaintext highlighter-rouge\">fastqsanger</code> from “<em>New type</em>” dropdown     <ul>       <li>Tip: you can start typing the datatype into the field to filter the dropdown menu</li>     </ul>   </li>   <li>Click the <strong>Save</strong> button</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li>\n      <p>Make sure the Database/Build (dbkey) is set to <code class=\"language-plaintext highlighter-rouge\">Mouse.Dec 2011 (GRCm38/mm10)(mm10)</code></p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-changing-database-build-dbkey\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-changing-database-build-dbkey\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Changing database/build (dbkey)</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Click the desired dataset’s name to expand it.</li>   <li>     <p>Click on the “?” next to database indicator:</p>     <p><img src=\"/training-material/shared/images/datasets_dbkey.svg\" alt=\"UI for changing dbkey\" /></p>   </li>   <li>In the central panel, change the <strong>Database/Build</strong> field</li>   <li>Select your desired database key from the dropdown list: <code class=\"language-plaintext highlighter-rouge\">Mouse.Dec 2011 (GRCm38/mm10)(mm10)</code></li>   <li>Click the <strong>Save</strong> button</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li><strong>Note</strong>: If you are running the workflow taken from the <strong>GTN</strong>, then make sure the tool “<strong>Tabular-to-FASTA</strong>” (tool number 26)\nhas Title Column labeled as “1” and Sequence Column as “2”.</li>\n  </ol>\n</blockquote>\n\n<h1 id=\"change-the-chromosome-names-in-the-ensembl-gtf-to-match-a-ucsc-genome-reference\">Change the chromosome names in the Ensembl GTF to match a UCSC genome reference</h1>\n\n<p>UCSC prefaces chromosome names with chr while Ensembl does not. To perform this action, we use the Replace Text in a specific column - a <a href=\"https://docs.python.org/3/library/re.html\">regular expression</a> tool.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Replace Text in a specific column</hands-on-title>\n  <ol>\n    <li><strong>Replace Text in a specific column</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with the following parameters:</li>\n    <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“File to process”</em>: <code class=\"language-plaintext highlighter-rouge\">Mus_musculus.GRCm38.86.gtf</code></li>\n    <li>Change numbered chromosome names\n      <ul>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“in column”</em>: <code class=\"language-plaintext highlighter-rouge\">1</code></li>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“Find pattern”</em>: <code class=\"language-plaintext highlighter-rouge\">^([1-9][0-9]*)$</code></li>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“Replace with</em>: <code class=\"language-plaintext highlighter-rouge\">chr\\\\1</code></li>\n      </ul>\n    </li>\n    <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <em>Insert Replacement</em> to add another replacement option to change XY chromosomes\n      <ul>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“in column”</em>: <code class=\"language-plaintext highlighter-rouge\">1</code></li>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“Find pattern”</em>: <code class=\"language-plaintext highlighter-rouge\">^([XY])$</code></li>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“Replace with</em>: <code class=\"language-plaintext highlighter-rouge\">chr\\\\1</code></li>\n      </ul>\n    </li>\n    <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <em>Insert Replacement</em> to add another replacement option to change mitochondrial chromosome\n      <ul>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“in column”</em>: <code class=\"language-plaintext highlighter-rouge\">1</code></li>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“Find pattern”</em>: <code class=\"language-plaintext highlighter-rouge\">^MT$</code></li>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“Replace with</em>: <code class=\"language-plaintext highlighter-rouge\">chrM</code></li>\n      </ul>\n    </li>\n    <li>Rename the output to <code class=\"language-plaintext highlighter-rouge\">Mus_musculus.GRCm38.86.fixed.gtf</code></li>\n  </ol>\n\n  <blockquote class=\"comment\">\n    <comment-title>Note on chromosome name changes</comment-title>\n    <p>This step is necessary to help identify and correct errors due to inputs having non-identical chromosome identifiers and/or different chromosome sequence content. <a href=\"https://galaxyproject.org/support/chrom-identifiers/\">Galaxy Support</a></p>\n  </blockquote>\n</blockquote>\n\n<h1 id=\"aligning-fastq-files-to-the-mouse-genome\">Aligning FASTQ files to the mouse genome</h1>\n\n<p>The first tool in the workflow is the <a href=\"http://ccb.jhu.edu/software/hisat\"><strong>HISAT2</strong></a> alignment tool. It maps next-generation sequence (NGS) reads to the reference genome. This tool requires an RNA-seq file (.FASTQ) and a reference genome file in Gene transfer format (GTF). This .gtf file is obtained from the Ensembl database. When successful, this tool outputs a .bam file (binary version of a SAM: <strong>S</strong>equence <strong>A</strong>lignment/<strong>M</strong>ap).</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Alignment with HISAT2</hands-on-title>\n\n  <ol>\n    <li><strong>HISAT2</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with the following parameters:\n      <ul>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“Source for the reference genome”</em>: <code class=\"language-plaintext highlighter-rouge\">Use a built-in genome</code></li>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“Select a reference genome”</em>: <code class=\"language-plaintext highlighter-rouge\">mm10</code></li>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“Single-end or paired-end reads”</em>: <code class=\"language-plaintext highlighter-rouge\">Single end</code></li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Input FASTQ files”</em>: <code class=\"language-plaintext highlighter-rouge\">FASTQ_ProB_22LIST.fastqsanger</code></li>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“Specify strand information”</em>: <code class=\"language-plaintext highlighter-rouge\">Unstranded</code></li>\n      </ul>\n    </li>\n    <li>Inspect <i class=\"far fa-eye\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-eye</span> the resulting files</li>\n    <li>Rename the output to <code class=\"language-plaintext highlighter-rouge\">HISAT_Output.BAM</code></li>\n  </ol>\n\n  <blockquote class=\"comment\">\n    <comment-title>Note on strandedness</comment-title>\n    <p>Note that if your reads are from a stranded library, you need to choose the appropriate\nsetting for “Specify strand information” mentioned above. For single-end reads, use <code class=\"language-plaintext highlighter-rouge\">F</code> or <code class=\"language-plaintext highlighter-rouge\">R</code>.\n<code class=\"language-plaintext highlighter-rouge\">F</code> means that a read corresponds to a forward transcript. <code class=\"language-plaintext highlighter-rouge\">R</code> means that a read corresponds to the reverse\ncomplemented counterpart of a transcript.</p>\n\n    <p>For paired-end reads, use either <code class=\"language-plaintext highlighter-rouge\">FR</code> or <code class=\"language-plaintext highlighter-rouge\">RF</code>. With this\noption being used, every read alignment will have an XS attribute tag: <code class=\"language-plaintext highlighter-rouge\">+</code> means a read\nbelongs to a transcript on the positive <code class=\"language-plaintext highlighter-rouge\">+</code> strand of the genome. <code class=\"language-plaintext highlighter-rouge\">-</code> means a read belongs to a\ntranscript on the negative <code class=\"language-plaintext highlighter-rouge\">-</code> strand of the genome. (TopHat has a similar option, <code class=\"language-plaintext highlighter-rouge\">--library--type</code> option,\nwhere fr - first strand corresponds to R and RF; fr - second strand corresponds to F and FR.)</p>\n  </blockquote>\n\n</blockquote>\n\n<h1 id=\"variant-analysis\">Variant Analysis</h1>\n\n<h2 id=\"variant-calling\">Variant Calling</h2>\n\n<p><a href=\"https://github.com/ekg/freebayes\">FreeBayes</a> is a Bayesian genetic variant detector designed to find small polymorphisms, specifically SNPs (single-nucleotide polymorphisms), indels (insertions and deletions), MNPs (multi-nucleotide polymorphisms), and complex events (composite insertion and substitution events) smaller than the length of a short-read sequencing alignment.</p>\n\n<p><a href=\"../../images/variant_calling.png\" rel=\"noopener noreferrer\"><img src=\"../../images/variant_calling.png\" alt=\"Variant calling. \" width=\"1802\" height=\"616\" loading=\"lazy\" /></a></p>\n\n<p>Provided with some BAM dataset(s) and a reference sequence, FreeBayes will generate a VCF dataset describing SNPs, indels, and complex variants in samples in the input alignments. By default, FreeBayes will consider variants supported by at least two observations in a single sample (<code class=\"language-plaintext highlighter-rouge\">-C</code>) and also by at least 20% of the reads from a single sample (<code class=\"language-plaintext highlighter-rouge\">-F</code>). These settings are suitable for low to high depth sequencing in haploid and diploid samples, but users working with polyploid or pooled samples may adjust them depending on the characteristics of their sequencing data.</p>\n\n<p>FreeBayes is capable of calling variant haplotypes shorter than a read length where multiple polymorphisms segregate on the same read. The maximum distance between polymorphisms phased in this way is determined by the <code class=\"language-plaintext highlighter-rouge\">--max-complex-gap</code>, which defaults to 3bp. In practice, this can comfortably be set to half the read length. Ploidy may be set to any level (<code class=\"language-plaintext highlighter-rouge\">-p</code>), but by default all samples are assumed to be diploid. FreeBayes can model per-sample and per-region variation in copy-number (<code class=\"language-plaintext highlighter-rouge\">-A</code>) using a copy-number variation map.</p>\n\n<p>FreeBayes can act as a frequency-based pooled caller and can describe variants and haplotypes in terms of observation frequency rather than called genotypes. To do so, use <code class=\"language-plaintext highlighter-rouge\">--pooled-continuous</code> and set input filters to a suitable level. Allele observation counts will be described by AO and RO fields in the VCF output.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Variant Calling with FreeBayes</hands-on-title>\n\n  <ol>\n    <li><strong>FreeBayes</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with the following parameters:\n      <ul>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“Choose the source for the reference genome”</em>: <code class=\"language-plaintext highlighter-rouge\">Locally cached file</code>\n          <ul>\n            <li><i class=\"far fa-check-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-check</span> <em>“Run in batch mode?”</em>: <code class=\"language-plaintext highlighter-rouge\">Run Individually</code></li>\n            <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span>  <em>“BAM dataset:</em>: <code class=\"language-plaintext highlighter-rouge\">HISAT_Output.BAM</code></li>\n            <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span>  <em>“Using reference genome”</em>: <code class=\"language-plaintext highlighter-rouge\">mm10</code></li>\n          </ul>\n        </li>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“Limit variant calling to a set of regions?”</em>: <code class=\"language-plaintext highlighter-rouge\">Do not Limit</code></li>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“Choose parameter selection level”</em>: <code class=\"language-plaintext highlighter-rouge\">Simple diploid calling</code></li>\n      </ul>\n    </li>\n    <li>Inspect <i class=\"far fa-eye\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-eye</span> the resulting files.</li>\n  </ol>\n\n  <p>Note: FreeBayes may take some time…be patient!!!!</p>\n</blockquote>\n\n<blockquote class=\"comment\">\n  <comment-title>FreeBayes options</comment-title>\n\n  <p>Galaxy allows five levels of control over FreeBayes options, provided by the Choose\n   parameter selection level menu option. These are:</p>\n  <ol>\n    <li>\n      <p>Simple diploid calling: The simplest possible FreeBayes application. Equivalent to using\n   FreeBayes with only a BAM input and no other parameter options.</p>\n    </li>\n    <li>\n      <p>Simple diploid calling with filtering and coverage: Same as #1 plus two additional options:\n    (1) <code class=\"language-plaintext highlighter-rouge\">-0</code> (standard filters: <code class=\"language-plaintext highlighter-rouge\">--min-mapping-quality 30 --min-base-quality 20 --min-supporting-allele\n    -qsum 0 --genotype-variant-threshold 0</code>) and (2) <code class=\"language-plaintext highlighter-rouge\">--min-coverage</code>.</p>\n    </li>\n    <li>\n      <p>Frequency-based pooled calling: This is equivalent to using FreeBayes with the following\n   options: <code class=\"language-plaintext highlighter-rouge\">--haplotype-length 0 --min-alternate-count 1 --min-alternate-fraction 0 --pooled\n   -continuous  --report- monomorphic</code>. This is the best choice for calling variants in mixtures\n   such as viral, bacterial, or organellar genomes.</p>\n    </li>\n    <li>\n      <p>Frequency-based pooled calling with filtering and coverage: Same as #3 but adds <code class=\"language-plaintext highlighter-rouge\">-0</code> and\n   <code class=\"language-plaintext highlighter-rouge\">--min-coverage</code> like in #2.</p>\n    </li>\n  </ol>\n\n  <p>Complete list of all options: Gives you full control by exposing all FreeBayes options as Galaxy parameters.</p>\n</blockquote>\n\n<h2 id=\"variant-annotation-and-genome-mapping\">Variant annotation and Genome Mapping</h2>\n\n<p>CustomProDB (<span class=\"citation\"><a href=\"#Wang_2013\">Wang and Zhang 2013</a></span>) generates custom protein FASTA sequences files from exosome or transcriptome data. Once Freebayes creates the .vcf file, CustomProDB uses this file to generate a custom protein FASTA file from the transcriptome data. For this tool, we use Ensembl 89 mmusculus (GRm38.p5) (dbsnp142) as the genome annotation. We create three FASTA files from CustomProDB: (1) a variant FASTA file for short indels, (2) a Single Amino acid Variant (SAV) FASTA file, an SQLite database file (genome mapping and variant mapping) for mapping proteins to a genome and (3) an RData file for variant protein coding sequences.\nThe reference protein set can be filtered by transcript expression level (RPKM calculated from a BAM file), and variant protein forms can be predicted based on variant calls (SNPs and indels reported in a VCF file).</p>\n\n<p>Annotations CustomProDB depends on a set of annotation files (in RData format) to\ncreate reference and variant protein sequences. Galaxy administrators can use the CustomProDB\ndata manager to create these annotations to make them available for users.</p>\n\n<p><a href=\"../../images/CustomProDB.png\" rel=\"noopener noreferrer\"><img src=\"../../images/CustomProDB.png\" alt=\"customproDB. \" width=\"1895\" height=\"697\" loading=\"lazy\" /></a></p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Generate protein FASTAs from exosome or transcriptome data</hands-on-title>\n\n  <ol>\n    <li><strong>CustomProDB</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with the following parameters:\n      <ul>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span>  <em>“Will you select a genome annotation from your history or use a built-in annotation?”</em>: <code class=\"language-plaintext highlighter-rouge\">Use built in genome annotation</code>\n          <ul>\n            <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span>  <em>“Using reference genome”</em>: <code class=\"language-plaintext highlighter-rouge\">Ensemble 89 mmusculus (GRm38.p5) (dbsnp142)</code></li>\n            <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“BAM file”</em>: <code class=\"language-plaintext highlighter-rouge\">HISAT_Output.BAM</code></li>\n            <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“VCF file”</em>: <code class=\"language-plaintext highlighter-rouge\">Freebayes.vcf</code></li>\n            <li><i class=\"far fa-check-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-check</span> <em>“Annotate SNPs with rsid from dbSNP”</em>: <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n            <li><i class=\"far fa-check-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-check</span> <em>“Annotate somatic SNPs from COSMIC (human only)”</em>: <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n          </ul>\n        </li>\n        <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“Transcript Expression Cutoff (RPKM)”</em>: <code class=\"language-plaintext highlighter-rouge\">1</code></li>\n        <li><i class=\"far fa-check-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-check</span> <em>“Create a variant FASTA for short insertions and deletions”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n        <li><i class=\"far fa-check-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-check</span> <em>“Create SQLite files for mapping proteins to genome and summarizing variant proteins”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n        <li><i class=\"far fa-check-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-check</span> <em>“Create RData file of variant protein coding sequences”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n      </ul>\n    </li>\n    <li>Inspect <i class=\"far fa-eye\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-eye</span> the resulting files</li>\n  </ol>\n</blockquote>\n\n<p>There are 6 files are generated through the CustomProDB tool:</p>\n<ul>\n  <li>rpkm.fasta: reference proteins filtered by transcript expression level (RPKM calculated from a BAM file)</li>\n  <li>snv.fasta: Single Nucleotide Variants detected by FreeBayes (.vcf file)</li>\n  <li>indel.fasta: Insertions/Deletions detected by FreeBayes (.vcf file)</li>\n  <li>Genomic_mapping.sqlite: mapping proteins to genome</li>\n  <li>Variant_annotation.sqlite: used to visualize the variants in the Multi-omics Visualization Platform</li>\n  <li>RData: set of annotation files (in RData format) to create reference and variant protein sequences</li>\n</ul>\n\n<p>For mapping proteins to genome and an RData file for variant protein coding sequences. Similar to the genomic mapping, a variant mapping file\nis also generated from CustomProDB. This SQLite file is also converted to tabular format and made SearchGUI-compatible. This\nvariant annotation file will be used to visualize the variants in the Multi-omics Visualization Platform (in-house visualization platform developed by Galaxy-P senior developers).</p>\n\n<h1 id=\"transcript-assembly\">Transcript Assembly</h1>\n\n<h2 id=\"rna-seq-to-transcripts\">RNA-seq to transcripts</h2>\n\n<p><a href=\"http://ccb.jhu.edu/software/stringtie/\">StringTie</a> is a fast and highly efficient assembler of RNA-Seq alignments into potential transcripts. It uses a network flow algorithm as well as an optional <em>de novo</em> assembly step to assemble and quantitate full-length transcripts representing multiple splice variants for each gene locus.</p>\n\n<p>Its input can include not only the alignments of raw reads used by other transcript assemblers, but also alignments of longer sequences that have been assembled from those reads. To identify differentially expressed genes between experiments, StringTie’s output can be processed by specialized software like Ballgown, Cuffdiff or other programs (DESeq2, edgeR, etc.).</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Transcript assembly with StringTie</hands-on-title>\n\n  <ol>\n    <li><strong>StringTie</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Input mapped reads”</em>: <code class=\"language-plaintext highlighter-rouge\">HISAT_Output.BAM</code></li>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“Specify strand information”</em>: <code class=\"language-plaintext highlighter-rouge\">Unstranded</code></li>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“Use a reference file to guide assembly?”</em>: <code class=\"language-plaintext highlighter-rouge\">Use Reference GTF/GFF3</code>\n          <ul>\n            <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“Reference file”</em>: <code class=\"language-plaintext highlighter-rouge\">Use file from History</code></li>\n            <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“GTF/GFF3 dataset to guide assembly”</em>: <code class=\"language-plaintext highlighter-rouge\">Mus_musculus.GRCm38.86.fixed.gtf</code></li>\n            <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“Use Reference transcripts only?”</em>: <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n            <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“Output files for differential expression?”</em>: <code class=\"language-plaintext highlighter-rouge\">No additional output</code></li>\n            <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“Output coverage file?”</em>: <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li>Inspect <i class=\"far fa-eye\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-eye</span> the resulting files.</li>\n    <li>\n      <p>Rename the output to <code class=\"language-plaintext highlighter-rouge\">Stringtie_output.gtf</code></p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-renaming-a-dataset-1\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-renaming-a-dataset-1\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Renaming a dataset</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Click on the <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> <strong>pencil icon</strong> for the dataset to edit its attributes</li>   <li>In the central panel, change the <strong>Name</strong> field</li>   <li>Click the <strong>Save</strong> button</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li>\n      <p>Make sure the datatype is <code class=\"language-plaintext highlighter-rouge\">gtf</code></p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-changing-the-datatype-1\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-changing-the-datatype-1\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Changing the datatype</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Click on the <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> <strong>pencil icon</strong> for the dataset to edit its attributes</li>   <li>In the central panel, click <i class=\"fas fa-database\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-chart-select-data</span> <strong>Datatypes</strong> tab on the top</li>   <li>In the <i class=\"fas fa-database\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-chart-select-data</span> <strong>Assign Datatype</strong>, select  your desired datatype  from “<em>New type</em>” dropdown     <ul>       <li>Tip: you can start typing the datatype into the field to filter the dropdown menu</li>     </ul>   </li>   <li>Click the <strong>Save</strong> button</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>StringTie accepts a BAM (or SAM) file of paired-end RNA-seq reads, which must be sorted by genomic location (coordinate position). This file contains spliced read alignments and can be produced directly by programs such as HISAT2. We recommend using HISAT2 as it is a fast and accurate alignment program. Every spliced read alignment (i.e. an alignment across at least one junction) in the input BAM file must contain the tag XS to indicate the genomic strand that produced the RNA from which the read was sequenced. Alignments produced by HISAT2 (when run with the <code class=\"language-plaintext highlighter-rouge\">--dta</code> option) already include this tag, but if you use a different read mapper\nyou should check that this XS tag is included for spliced alignments.</p>\n\n<blockquote class=\"details\">\n  <details-title>Note about parameter settings</details-title>\n  <p>Be sure to run HISAT2 with the <code class=\"language-plaintext highlighter-rouge\">--dta</code> option for alignment (under ‘Spliced alignment options’),\nfor the best results.</p>\n\n  <p>Also note that if your reads are from a stranded library, you need to choose the appropriate\nsetting for ‘Specify strand information’ above. As, if Forward (FR) is selected, StringTie will\nassume the reads are from a <code class=\"language-plaintext highlighter-rouge\">--fr</code> library, while if Reverse (RF) is selected, StringTie will\nassume the reads are from a <code class=\"language-plaintext highlighter-rouge\">--rf</code> library, otherwise it is assumed that the reads are from an\nunstranded library (the widely-used, although now deprecated, TopHat had a similar <code class=\"language-plaintext highlighter-rouge\">--library-type</code>\noption, where fr-firststrand corresponded to RF and fr-secondstrand corresponded to FR).\nIf you don’t know whether your reads are from a stranded library or not, you could use the\ntool ‘RSeQC Infer Experiment’ to try to determine.</p>\n\n  <p>As an option, a reference annotation file in GTF/GFF3 format can be provided to StringTie. In\nthis case, StringTie will prefer to use these “known” genes from the annotation file, and for\nthe ones that are expressed it will compute coverage, TPM and FPKM values. It will also produce\nadditional transcripts to account for RNA-seq data that aren’t covered by (or explained by) the\nannotation. Note that if option <code class=\"language-plaintext highlighter-rouge\">-e</code> is not used, the reference transcripts need to be fully covered\nby reads in order to be included in StringTie’s output. In that case, other transcripts assembled\nfrom the data by StringTie and not present in the reference file will be printed as well.</p>\n\n  <p>We highly recommend that you provide annotation if you are analyzing a genome that is well\nannotated, such as human, mouse, or other model organisms.</p>\n</blockquote>\n\n<h2 id=\"evaluate-the-assembly-with-annotated-transcripts\">Evaluate the assembly with annotated transcripts</h2>\n\n<p><a href=\"https://ccb.jhu.edu/software/stringtie/gffcompare.shtml\">GffCompare</a> compares and evaluates the accuracy of RNA-Seq transcript assemblers (Cufflinks, Stringtie). * collapse (merge) duplicate transcripts from multiple GTF/GFF3 files (e.g. resulted from assembly of different samples) * classify transcripts from one or multiple GTF/GFF3 files as they relate to reference transcripts provided in a annotation file (also in GTF/GFF3 format)</p>\n\n<p>The original form of this program is also distributed as part of the Cufflinks suite, under the name <a href=\"http://cole-trapnell-lab.github.io/cufflinks/cuffcompare/\">CuffCompare</a>. Most of the options and parameters of CuffCompare are supported by GffCompare, while new features will likely be added to GffCompare in the future.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>compare assembled transcripts against a reference annotation</hands-on-title>\n\n  <ol>\n    <li><strong>GffCompare</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“GTF inputs for comparison”</em><code class=\"language-plaintext highlighter-rouge\">Stringtie_output.gtf</code></li>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“Use Reference Annotation”</em>: <code class=\"language-plaintext highlighter-rouge\">yes</code>\n          <ul>\n            <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“Choose the source for the reference annotation”</em>: <code class=\"language-plaintext highlighter-rouge\">History</code>\n              <ul>\n                <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Reference Annotation”</em>: <code class=\"language-plaintext highlighter-rouge\">Mus_musculus.GRCm38.86.gtf</code></li>\n              </ul>\n            </li>\n            <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“Ignore reference transcripts that are not overlapped by any input transfrags”</em>: <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n            <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“Ignore input transcripts that are not overlapped by any reference transcripts”</em>: <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n          </ul>\n        </li>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“Use Sequence Data”</em>: <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“Discard (ignore) single-exon transcripts”</em>: <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n        <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“Max. Distance for assessing exon accuracy”</em>: <code class=\"language-plaintext highlighter-rouge\">100</code></li>\n        <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“Max distance for transcript grouping”</em>: <code class=\"language-plaintext highlighter-rouge\">100</code></li>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“discard intron-redundant transfrags sharing 5’“</em>: <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"details\">\n  <details-title>GffCompare vs CuffCompare</details-title>\n  <p>A notable difference between GffCompare and CuffCompare is that when a single query GTF/GFF file is\ngiven as input along with a reference annotation (<code class=\"language-plaintext highlighter-rouge\">-r</code> option), GFFCompare switches into “annotation mode”\nand it generates a <code class=\"language-plaintext highlighter-rouge\">.annotated.gtf</code> file instead of the <code class=\"language-plaintext highlighter-rouge\">.merged.gtf</code> produced by CuffCompare with the same\nparameters. This file has the same general format as CuffCompare’s .merged.gtf file (with “class\ncodes” assigned to transcripts as per their relationship with the matching/overlapping reference,\ntranscript) but the original transcript IDs are preserved, so GffCompare can thus be used as a\nsimple way of annotating a set of transcripts.</p>\n\n  <p>Another important difference is that the input transcripts are no longer discarded when they\nare found to be “intron redundant”, i.e. contained within other, longer isoforms. CuffCompare\nhad the <code class=\"language-plaintext highlighter-rouge\">-G</code> option to prevent collapsing of such intron redundant isoforms into their longer\n“containers”, but GffCompare has made this the default mode of operation (hence the <code class=\"language-plaintext highlighter-rouge\">-G</code> option is\nno longer needed and is simply ignored when given).</p>\n\n</blockquote>\n\n<h2 id=\"translate-transcripts\">Translate transcripts</h2>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Translate transcripts to protein sequence</hands-on-title>\n\n  <p>First, we must convert the GffCompare annotated GTF file to BED format.</p>\n\n  <ol>\n    <li><strong>Convert gffCompare annotated GTF to BED</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“GTF annotated by gffCompare”</em>: <code class=\"language-plaintext highlighter-rouge\">output from gff compare</code></li>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“filter GffCompare class_codes to convert”</em>:</li>\n      </ul>\n      <ul>\n        <li><code class=\"language-plaintext highlighter-rouge\">j : Potentially novel isoform (fragment): at least one splice junction is shared with a reference transcript</code></li>\n        <li><code class=\"language-plaintext highlighter-rouge\">e : Single exon transfrag overlapping a reference exon and at least 10 bp of a reference intron, indicating a possible   pre-mRNA fragment.</code></li>\n        <li><code class=\"language-plaintext highlighter-rouge\">i : A transfrag falling entirely within a reference intron</code></li>\n        <li><code class=\"language-plaintext highlighter-rouge\">p : Possible polymerase run-on fragment (within 2Kbases of a reference transcript)</code></li>\n        <li><code class=\"language-plaintext highlighter-rouge\">u : Unknown, intergenic transcript</code></li>\n      </ul>\n\n      <p>Next, we translate transcripts from the input BED file into protein sequences.</p>\n    </li>\n    <li><strong>Translate BED transcripts cDNA in 3frames or CDS</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“A BED file with 12 columns”</em>: <code class=\"language-plaintext highlighter-rouge\">Convert GffCompare-annotated GTF to BED</code></li>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“Source for Genomic Sequence Data”</em>: <code class=\"language-plaintext highlighter-rouge\">Locally cached File</code></li>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“Select reference 2bit file”</em>: <code class=\"language-plaintext highlighter-rouge\">mm10</code></li>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“Fasta ID Options”</em></li>\n      </ul>\n      <ul>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“fasta ID source, e.g. generic”</em>: <code class=\"language-plaintext highlighter-rouge\">generic</code></li>\n      </ul>\n\n      <p>Finally, we convert a BED format file of the proteins from a proteomics search database into a tabular format for the Multiomics Visualization Platform (MVP).</p>\n    </li>\n    <li><strong>bed to protein map</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“A BED file with 12 columns, thickStart and thickEnd define protein coding region”</em>: <code class=\"language-plaintext highlighter-rouge\">Translate cDNA_minus_CDS</code></li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"comment\">\n  <comment-title>Note on data formats</comment-title>\n  <ul>\n    <li>The tabular output can be converted to a sqlite database using the Query_Tabular tool.</li>\n    <li>The sqlite table should be named: feature_cds_map.</li>\n    <li>The names for the columns should be: name, chrom, start, end, strand, cds_start, cds_end</li>\n    <li>This SQL query will return the genomic location for a peptide sequence in a protein\n(multiply the amino acid position by 3 for the cds location)</li>\n  </ul>\n</blockquote>\n\n<h1 id=\"creating-fasta-databases\">Creating FASTA Databases</h1>\n\n<p>In this section we will perform the following tasks:</p>\n<ul>\n  <li>The <strong>Protein Database Downloader</strong> tool is used to download the FASTA database from UniProt and cRAP (<strong>c</strong>ommon <strong>R</strong>epository of <strong>A</strong>dventitious <strong>P</strong>roteins) database containing known/reference mouse proteins. For the purpose of this tutorial, we will use the <code class=\"language-plaintext highlighter-rouge\">Reference_5000_uniprot_cRAP.fasta</code> file as this database.</li>\n  <li>The <strong>FASTA Merge Files and Filter Unique Sequences</strong> tool is used to merge the databases obtained from CustomProDB and “Translate BED” tool\nalong with the UniProt and cRAP databases.</li>\n  <li>The <strong>Regex Text Manipulation</strong> tool is used to manipulate the FASTA file to make it SearchGUI-compatible.</li>\n</ul>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title></hands-on-title>\n\n  <ol>\n    <li><strong>FASTA Merge Files and Filter Unique Sequences</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>\n      <ul>\n        <li>Click <i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <em>“Insert Input FASTA File(s)”</em> twice so that there are a total of three <em>“Input FASTA File(s)”</em> blocks.</li>\n        <li>Use the following parameters:</li>\n      </ul>\n      <ul>\n        <li><i class=\"far fa-check-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-check</span> <em>“Run in batch mode?”</em>: <code class=\"language-plaintext highlighter-rouge\">Merge individual FASTAs (output collection if input is collection)</code></li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Input FASTA File(s)”</em> : <code class=\"language-plaintext highlighter-rouge\">Input Custom ProDB Fasta File output</code>\n          <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>1.HISAT_Output.rpkm\n2.HISAT_Output.snv\n3.HISAT_Output.indel\n</code></pre></div>          </div>\n        </li>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“How are sequences judged to be unique?”</em>: <code class=\"language-plaintext highlighter-rouge\">Accession and Sequence</code></li>\n        <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“Accession Parsing Regular Expression”</em>: <code class=\"language-plaintext highlighter-rouge\">^&gt;([^ |]+).*$</code></li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n<blockquote class=\"comment\">\n  <comment-title>Tool parameters explained</comment-title>\n  <p>This tool concatenates FASTA database files together.</p>\n  <ul>\n    <li>If the uniqueness criterion is “Accession and Sequence”, only the first appearence of each unique sequence will appear in the output. Otherwise, duplicate sequences are allowed, but only the first appearance of each accession will appear in the output.</li>\n    <li>The default accession parser will treat everything in the header before the first space as the accession.</li>\n  </ul>\n</blockquote>\n\n<blockquote class=\"comment\">\n  <comment-title>CustomProDB generated protein Accession names need to be changed for PeptideShaker</comment-title>\n  <p>PeptideShaker does not allow greaterthan sign, comma, or spaces in the protein accession name.\nPeptideShaker also requires the FASTA ID to start with a source, e.g. <em>&gt;sp|Q8C4J7|</em> for SwissProt entries.  Nonstandard entries must be prefixed <em>generic|</em>.\nWe will also need to similarily modify the accessions in the genomic mapping and and variant annotation outputs. For eg: ENSEMBL-PRO (output from CustomProDB) and STRG (from StringTie) are not standard format.</p>\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>FASTA to Tabular</hands-on-title>\n  <ol>\n    <li><strong>FASTA-to-Tabular</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>: with the default parameters\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Convert these sequences”</em>: <code class=\"language-plaintext highlighter-rouge\">Merged and Filtered FASTA from (fasta)</code></li>\n      </ul>\n    </li>\n    <li><strong>Column Regex Find And Replace</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Select cells from”</em>: <code class=\"language-plaintext highlighter-rouge\">FASTA-to-Tabular output</code> from previous step</li>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“Using”</em>: <code class=\"language-plaintext highlighter-rouge\">column 1</code></li>\n        <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <strong>Insert Check</strong>\n          <ul>\n            <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“Find Regex”</em> : <code class=\"language-plaintext highlighter-rouge\">^(ENS[^_]+_\\d+:)([ACGTacgt]+)&gt;([ACGTacgt]+)\\s*</code></li>\n            <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“Replacement”</em>: <code class=\"language-plaintext highlighter-rouge\">\\1\\2_\\3</code></li>\n          </ul>\n        </li>\n        <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <strong>Insert Check</strong>\n          <ul>\n            <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“Find Regex”</em>:  <code class=\"language-plaintext highlighter-rouge\">,([A-Y]\\d+[A-Y]?)\\s*</code></li>\n            <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“Replacement”</em>: <code class=\"language-plaintext highlighter-rouge\">.\\1</code></li>\n          </ul>\n        </li>\n        <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <strong>Insert Check</strong>\n          <ul>\n            <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“Find Regex”</em>: <code class=\"language-plaintext highlighter-rouge\">^(ENS[^ |]*)\\s*</code></li>\n            <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“Replacement”</em>: <code class=\"language-plaintext highlighter-rouge\">generic|\\1</code></li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li><strong>Tabular-to-FASTA</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with the following parameters:\n      <ul>\n        <li><em>“Title column”</em>: <code class=\"language-plaintext highlighter-rouge\">1</code></li>\n        <li><em>“Sequence Column”</em>:<code class=\"language-plaintext highlighter-rouge\">2</code>\n     - Rename it as <strong>CustomProDB Merged Fasta</strong></li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"comment\">\n  <comment-title><b>FASTA-to-Tabular</b> and <b>Tabular-to-FASTA</b> versions</comment-title>\n  <p>Please make sure the tool version is 1.1.1\nAlso, while running the workflow, the Title column for <strong>Tabular-to-FASTA</strong> might come empty, so please make sure you select Title Column as “1”.</p>\n</blockquote>\n\n<p><a href=\"../../images/Fasta_sequence.png\" rel=\"noopener noreferrer\"><img src=\"../../images/Fasta_sequence.png\" alt=\"Fasta sequence. \" width=\"1737\" height=\"412\" loading=\"lazy\" /></a></p>\n\n<p>For visualization purposes we also use the concatenate tool to concatenate the genomic mapping with the protein mapping dataset. This output will be used for visualization in MVP to view the genomic coordinates of the variant peptide.</p>\n\n<p>We also need to modify the CustomProDB protein accessions the same as was done for the FASTA database.</p>\n\n<p>An SQLite database containing the genomic mapping SQLite, variant annotation and information from the protein mapping file is concatenated to form a single genomic mapping SQLite database later used as an input for the ‘Peptide Genomic Coordinate’ tool. For that we need to follow the steps below:</p>\n\n<h2 id=\"genomic-mapping-database\">Genomic mapping database</h2>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Create Database for genomic mapping</hands-on-title>\n\n  <ol>\n    <li><strong>SQLite to tabular for SQL query</strong> <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">hands_on</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“SQLite Database”</em>: <code class=\"language-plaintext highlighter-rouge\">genomic_mapping.sqlite</code> from CustomProDB</li>\n        <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“Query”</em>:\n          <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  SELECT pro_name, chr_name, cds_chr_start - 1, cds_chr_end,strand,cds_start - 1, cds_end\n  FROM genomic_mapping\n  ORDER BY pro_name, cds_start, cds_end\n</code></pre></div>          </div>\n        </li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Omit column headers from tabular output”</em>: <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n      </ul>\n    </li>\n    <li>\n      <p>Rename output to <code class=\"language-plaintext highlighter-rouge\">genomic_mapping_sqlite</code></p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-renaming-a-dataset-2\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-renaming-a-dataset-2\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Renaming a dataset</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Click on the <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> <strong>pencil icon</strong> for the dataset to edit its attributes</li>   <li>In the central panel, change the <strong>Name</strong> field</li>   <li>Click the <strong>Save</strong> button</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n\n      <p>The output is further processed so that the results are compatible with the Multiomics Visualization Platform.\nWe need to modify the CustomProDB protein accessions the same as was done for the FASTA database.</p>\n    </li>\n    <li><strong>Column Regex Find And Replace</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Select cells from”</em>: <code class=\"language-plaintext highlighter-rouge\">genomic_mapping_sqlite' (tabular)</code></li>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“Using”</em>: <code class=\"language-plaintext highlighter-rouge\">column 1</code></li>\n        <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <strong>Insert Check</strong>\n          <ul>\n            <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“Find Regex”</em> : <code class=\"language-plaintext highlighter-rouge\">^(ENS[^_]+_\\d+:)([ACGTacgt]+)&gt;([ACGTacgt]+)\\s*</code></li>\n            <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“Replacement”</em>: <code class=\"language-plaintext highlighter-rouge\">\\1\\2_\\3</code></li>\n          </ul>\n        </li>\n        <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <strong>Insert Check</strong>\n          <ul>\n            <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“Find Regex”</em>:  <code class=\"language-plaintext highlighter-rouge\">,([A-Y]\\d+[A-Y]?)\\s*</code></li>\n            <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“Replacement”</em>: <code class=\"language-plaintext highlighter-rouge\">.\\1</code></li>\n          </ul>\n        </li>\n        <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <strong>Insert Check</strong>\n          <ul>\n            <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“Find Regex”</em>: <code class=\"language-plaintext highlighter-rouge\">^(ENS[^ |]*)\\s*</code></li>\n            <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“Replacement”</em>: <code class=\"language-plaintext highlighter-rouge\">\\1</code></li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <p>Rename the output to <code class=\"language-plaintext highlighter-rouge\">SAV_INDEL</code></p>\n\n      <p>This tool goes line by line through the specified input file and if the text in the selected column matches a specified regular expression pattern, it replaces the text with the specified replacement.</p>\n\n      <p>Next, we will concatenate the output from this tool with the “Bed to protein map” output.</p>\n    </li>\n    <li><strong>Concatenate multiple datasets</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-copy\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-files</span> <em>“Concatenate Datasets”</em>: Select the output from the previous tool named as <code class=\"language-plaintext highlighter-rouge\">SAV_INDEL</code> and the output from the “bed to protein map” tool and concatenate the tool.</li>\n      </ul>\n\n      <p>Output will be the “Genomic_Protein_map” rename it as that</p>\n\n      <p>Now, we load this tabular datasets into an SQLite database.</p>\n    </li>\n    <li><strong>Query Tabular using SQLite</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <strong>Insert Database Table</strong>\n          <ul>\n            <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Tabular Dataset for Table”</em>: <code class=\"language-plaintext highlighter-rouge\">Genomic_Protein_map</code></li>\n            <li>Section <strong>Table Options</strong>:\n              <ul>\n                <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“Specify Name for Table”</em>: <code class=\"language-plaintext highlighter-rouge\">feature_cds_map</code></li>\n                <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“Specify Column Names (comma-separated list)”</em>: <code class=\"language-plaintext highlighter-rouge\">name,chrom,start,end,strand,cds_start,cds_end</code></li>\n                <li><em>“Only load the columns you have named into database”</em>: <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n                <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <strong>Insert Table Index</strong>:\n                  <ul>\n                    <li><i class=\"far fa-check-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-check</span> <em>“This is a unique index”</em>: <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n                    <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“Index on columns”</em>: <code class=\"language-plaintext highlighter-rouge\">name,cds_start,cds_end</code></li>\n                  </ul>\n                </li>\n                <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“Save the sqlite database in your history”</em>:<code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <p>Rename the output as <strong>“genomic_mapping_sqlite”</strong></p>\n\n      <p><a href=\"../../images/genomic_mapping_file.png\" rel=\"noopener noreferrer\"><img src=\"../../images/genomic_mapping_file.png\" alt=\"genomic mapping. \" width=\"1737\" height=\"427\" loading=\"lazy\" /></a></p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h2 id=\"variant-annotations-database\">Variant Annotations database</h2>\n\n<p>We will repeat the process for the variant annotations (this file will be used as a input to the new updates that will be made on the Multiomics Visualization platform).  We need to modify the CustomProDB protein accessions the same as was done for the FASTA database.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Create database for variant annotations</hands-on-title>\n\n  <ol>\n    <li><strong>SQLite to tabular</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“SQLite Database”</em>: <code class=\"language-plaintext highlighter-rouge\">variant_annotations.sqlite</code> from CustomProDB</li>\n        <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“Query”</em>:\n          <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>SELECT var_pro_name,pro_name,cigar,annotation\nFROM variant_annotation\n</code></pre></div>          </div>\n        </li>\n      </ul>\n\n      <p>We will subject the output to text manipulation so that the results are compatible with the Multiomics Visualization Platform.</p>\n    </li>\n    <li><strong>Column Regex Find And Replace</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Select cells from”</em>: <code class=\"language-plaintext highlighter-rouge\">variant_annotations_sqlite' (tabular)</code></li>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“Using:”</em> <code class=\"language-plaintext highlighter-rouge\">column 1</code></li>\n        <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <strong>Insert Check</strong>\n          <ul>\n            <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“Find Regex”</em>: <code class=\"language-plaintext highlighter-rouge\">^(ENS[^_]+_\\d+:)([ACGTacgt]+)&gt;([ACGTacgt]+)\\s*</code></li>\n            <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“Replacement”</em>: <code class=\"language-plaintext highlighter-rouge\">\\1\\2_\\3</code></li>\n          </ul>\n        </li>\n        <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <strong>Insert Check</strong>:\n          <ul>\n            <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“Find Regex”</em>: <code class=\"language-plaintext highlighter-rouge\">,([A-Y]\\d+[A-Y]?)\\s*</code></li>\n            <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“Replacement”</em>: <code class=\"language-plaintext highlighter-rouge\">.\\1</code></li>\n          </ul>\n        </li>\n        <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <strong>Insert Check</strong>:\n          <ul>\n            <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“Find Regex”</em>: <code class=\"language-plaintext highlighter-rouge\">^(ENS[^ |]*)\\s*</code></li>\n            <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“Replacement”</em>:  <code class=\"language-plaintext highlighter-rouge\">\\1</code></li>\n          </ul>\n        </li>\n      </ul>\n\n      <p>Next, we will load this tabular dataset into an SQLite database.</p>\n    </li>\n    <li><strong>Query Tabular</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <strong>Insert Database Table</strong>\n          <ul>\n            <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Tabular Dataset for Table”</em>: <code class=\"language-plaintext highlighter-rouge\">variant_annotation</code></li>\n            <li>Section <strong>Table Options</strong>:\n              <ul>\n                <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“Specify Name for Table”</em>: <code class=\"language-plaintext highlighter-rouge\">variant_annotation</code></li>\n                <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“Specify Column Names (comma-separated list)”</em>: <code class=\"language-plaintext highlighter-rouge\">name,reference,cigar,annotation</code></li>\n                <li><i class=\"far fa-check-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-check</span> <em>“Only load the columns you have named into database”</em>: <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n              </ul>\n            </li>\n            <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <strong>Insert Table Index</strong>\n              <ul>\n                <li><i class=\"far fa-check-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-check</span> <em>“This is a unique index”</em>: <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n                <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“Index on columns”</em>: <code class=\"language-plaintext highlighter-rouge\">name,cigar</code></li>\n              </ul>\n            </li>\n            <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“Save the sqlite database in your history”</em>:<code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li>Rename the output as <strong>“Variant_annotation_sqlitedb”</strong></li>\n  </ol>\n\n</blockquote>\n\n<p>These SQLite databases, which contain the genomic mapping SQLite and variant\nannotation information from the protein mapping file, will be utilized\nby MVP to visualize the genomic loci of any variant peptides.</p>\n\n<p><a href=\"../../images/viewing_SNP_Variant_IGV.png\" rel=\"noopener noreferrer\"><img src=\"../../images/viewing_SNP_Variant_IGV.png\" alt=\"SNP variant. \" width=\"1733\" height=\"1241\" loading=\"lazy\" /></a></p>\n\n<p>Finally, we can create a database which can be used to search Mass spectrometry (raw/mgf) files to identify peptides that match to this database.</p>\n\n<p>To do so:</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title></hands-on-title>\n\n  <ol>\n    <li><strong>FASTA Merge Files and Filter Unique Sequences</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-check-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-check</span> <em>“Run in batch mode?”</em>: <code class=\"language-plaintext highlighter-rouge\">Merge individual FASTAs (output collection if input is collection)</code></li>\n        <li><i class=\"far fa-copy\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-files</span> <em>“Input FASTA File(s)”</em> : <code class=\"language-plaintext highlighter-rouge\">Input Custom ProDB Merged Fasta File output</code></li>\n        <li><i class=\"far fa-copy\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-files</span> <em>“Input FASTA File(s)”</em> : <code class=\"language-plaintext highlighter-rouge\">Input Translate BED transcripts Fasta output</code></li>\n        <li><i class=\"far fa-copy\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-files</span> <em>“Input FASTA File(s)”</em> : <code class=\"language-plaintext highlighter-rouge\">Input Reference_5000_uniprot_cRAP.fasta</code></li>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“How are sequences judged to be unique?”</em>: <code class=\"language-plaintext highlighter-rouge\">Accession and Sequence</code></li>\n        <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“Accession Parsing Regular Expression”</em>: <code class=\"language-plaintext highlighter-rouge\">^&gt;([^ |]+).*$</code></li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"comment\">\n  <comment-title>Tool parameters explained</comment-title>\n  <p>This tool concatenates FASTA database files together.</p>\n  <ul>\n    <li>If the uniqueness criterion is “Accession and Sequence”, only the first appearence of each unique sequence will appear in the output. Otherwise, duplicate sequences are allowed, but only the first appearance of each accession will appear in the output.</li>\n    <li>The default accession parser will treat everything in the header before the first space as the accession.</li>\n  </ul>\n</blockquote>\n\n<h2 id=\"list-of-reference-protein-accession-names\">List of Reference Protein Accession names</h2>\n\n<p>Generate a list of Reference Proteins. Identify peptides that are contained in the reference proteins will be filtered out in the next tutorial.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>FASTA to Tabular</hands-on-title>\n  <ol>\n    <li><strong>FASTA-to-Tabular</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>: with the default parameters\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Convert these sequences”</em>: <code class=\"language-plaintext highlighter-rouge\">HISAT_Output.rpkm (fasta)</code></li>\n      </ul>\n    </li>\n    <li><strong>Filter Tabular</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>: with these filters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Tabular Dataset to filter”</em>: <code class=\"language-plaintext highlighter-rouge\">HISAT_Output.rpkm (tabular)</code></li>\n        <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“Filter by”</em>: <code class=\"language-plaintext highlighter-rouge\">select columns</code></li>\n      </ul>\n      <ul>\n        <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“enter column numbers to keep”</em>: <code class=\"language-plaintext highlighter-rouge\">1</code>\n      - <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“Filter by”</em>: <code class=\"language-plaintext highlighter-rouge\">regex replace value in column</code></li>\n        <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“enter column number to replace”</em>: <code class=\"language-plaintext highlighter-rouge\">1</code></li>\n        <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“regex pattern”</em>: <code class=\"language-plaintext highlighter-rouge\">^([^ |]+).*$</code></li>\n        <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“replacement expression”</em>: <code class=\"language-plaintext highlighter-rouge\">\\1</code></li>\n      </ul>\n    </li>\n    <li><strong>FASTA-to-Tabular</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>: with the default parameters\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Convert these sequences”</em>: <code class=\"language-plaintext highlighter-rouge\">Trimmed_ref_5000_uniprot_cRAP.fasta (fasta)</code></li>\n      </ul>\n    </li>\n    <li><strong>Filter Tabular</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>: with these filters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Tabular Dataset to filter”</em>: <code class=\"language-plaintext highlighter-rouge\">Trimmed_ref_5000_uniprot_cRAP.fasta (tabular)</code></li>\n        <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“Filter by”</em>: <code class=\"language-plaintext highlighter-rouge\">select columns</code></li>\n      </ul>\n      <ul>\n        <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“enter column numbers to keep”</em>: <code class=\"language-plaintext highlighter-rouge\">1</code>\n      - <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“Filter by”</em>: <code class=\"language-plaintext highlighter-rouge\">regex replace value in column</code></li>\n        <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“enter column number to replace”</em>: <code class=\"language-plaintext highlighter-rouge\">1</code></li>\n        <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“regex pattern”</em>: <code class=\"language-plaintext highlighter-rouge\">^[^|]+[|]([^| ]+).*$</code></li>\n        <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <em>“replacement expression”</em>: <code class=\"language-plaintext highlighter-rouge\">\\1</code></li>\n      </ul>\n    </li>\n    <li><strong>Concatenate multiple datasets</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-copy\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-files</span> <em>“Concatenate Datasets”</em>: Select the output from the previous 2 “Filter Tabular” outputs.</li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"comment\">\n  <comment-title><b>FASTA-to-Tabular</b> and <b>Tabular-to-FASTA</b> versions</comment-title>\n  <p>Please make sure the tool version is 1.1.1</p>\n</blockquote>\n\n<blockquote class=\"comment\">\n  <comment-title>Tool versions</comment-title>\n  <ul>\n    <li>All the tools mentioned in this tutorial are subjected to change when the tool version is upgraded .</li>\n  </ul>\n</blockquote>\n\n<h1 id=\"conclusion\">Conclusion</h1>\n\n<p>This completes the walkthrough of the proteogenomics database creation workflow. This tutorial is a guide to have a database and mapping files ready for  Database searching and novel peptide analysis. Researchers can use this workflow with their data also, please note that the tool parameters, reference genomes and the workflow will be needed to be modified accordingly.</p>\n\n<p>This workflow was developed by the Galaxy-P team at the University of Minnesota. For more information about Galaxy-P or our ongoing work, please visit us at <a href=\"https://galaxyp.org\">galaxyp.org</a></p>\n\n"],"ref_slides":[],"hands_on":true,"slides":false,"mod_date":"2024-05-29 14:28:52 +0000","pub_date":"2018-11-20 19:05:23 +0000","version":68,"workflows":[{"workflow":"galaxy-workflow-mouse_rnaseq_dbcreation.ga","tests":false,"url":"https://training.galaxyproject.org/training-material/topics/proteomics/tutorials/proteogenomics-dbcreation/workflows/galaxy-workflow-mouse_rnaseq_dbcreation.ga","path":"topics/proteomics/tutorials/proteogenomics-dbcreation/workflows/galaxy-workflow-mouse_rnaseq_dbcreation.ga","wfid":"proteomics-proteogenomics-dbcreation","wfname":"galaxy-workflow-mouse_rnaseq_dbcreation","trs_endpoint":"https://training.galaxyproject.org/training-material/api/ga4gh/trs/v2/tools/proteomics-proteogenomics-dbcreation/versions/galaxy-workflow-mouse_rnaseq_dbcreation","license":null,"creators":[],"name":"GTN Proteogenomics1 Database Creation","title":"GTN Proteogenomics1 Database Creation","test_results":null,"modified":"2024-06-14 10:38:31 +0000","mermaid":"flowchart TD\n  0[\"ℹ️ Input Dataset\\nFASTQ_ProB_22LIST.fastqsanger\"];\n  style 0 stroke:#2c3143,stroke-width:4px;\n  1[\"ℹ️ Input Dataset\\nMus_musculus.GRCm38.86.gtf\"];\n  style 1 stroke:#2c3143,stroke-width:4px;\n  2[\"ℹ️ Input Dataset\\nTrimmed_ref_5000_uniprot_cRAP.fasta\"];\n  style 2 stroke:#2c3143,stroke-width:4px;\n  3[\"HISAT2\"];\n  0 -->|output| 3;\n  4[\"Editing GTF File\"];\n  1 -->|output| 4;\n  70b6f719-803f-4fa9-8394-a3b64b71ec01[\"Output\\nchr_corrected_gtf\"];\n  4 --> 70b6f719-803f-4fa9-8394-a3b64b71ec01;\n  style 70b6f719-803f-4fa9-8394-a3b64b71ec01 stroke:#2c3143,stroke-width:4px;\n  5[\"FASTA-to-Tabular\"];\n  2 -->|output| 5;\n  6[\"FreeBayes\"];\n  3 -->|output_alignments| 6;\n  7[\"StringTie\"];\n  4 -->|outfile| 7;\n  3 -->|output_alignments| 7;\n  8[\"Filter Tabular\"];\n  5 -->|output| 8;\n  9[\"CustomProDB\"];\n  3 -->|output_alignments| 9;\n  6 -->|output_vcf| 9;\n  10[\"GffCompare\"];\n  4 -->|outfile| 10;\n  7 -->|output_gtf| 10;\n  11[\"SQLite to tabular\"];\n  9 -->|output_genomic_mapping_sqlite| 11;\n  12[\"SQLite to tabular\"];\n  9 -->|output_variant_annotation_sqlite| 12;\n  13[\"FASTA Merge Files and Filter Unique Sequences\"];\n  9 -->|output_rpkm| 13;\n  9 -->|output_snv| 13;\n  9 -->|output_indel| 13;\n  a5054be9-dd74-4d60-a4c6-494fdbcb97a1[\"Output\\nCustomProDB_FASTA\"];\n  13 --> a5054be9-dd74-4d60-a4c6-494fdbcb97a1;\n  style a5054be9-dd74-4d60-a4c6-494fdbcb97a1 stroke:#2c3143,stroke-width:4px;\n  14[\"FASTA-to-Tabular\"];\n  9 -->|output_rpkm| 14;\n  15[\"Convert gffCompare annotated GTF to BED\"];\n  10 -->|transcripts_annotated| 15;\n  16[\"Column Regex Find And Replace\"];\n  11 -->|query_results| 16;\n  17[\"Column Regex Find And Replace\"];\n  12 -->|query_results| 17;\n  18[\"FASTA-to-Tabular\"];\n  13 -->|output| 18;\n  19[\"Filter Tabular\"];\n  14 -->|output| 19;\n  20[\"Translate BED transcripts\"];\n  15 -->|output| 20;\n  21[\"Query Tabular\"];\n  17 -->|out_file1| 21;\n  e9468479-4ebd-4ced-8086-c10e916b97c5[\"Output\\nvariant_annoation_sqlite\"];\n  21 --> e9468479-4ebd-4ced-8086-c10e916b97c5;\n  style e9468479-4ebd-4ced-8086-c10e916b97c5 stroke:#2c3143,stroke-width:4px;\n  22[\"Column Regex Find And Replace\"];\n  18 -->|output| 22;\n  23[\"Reference Protein Accessions\"];\n  19 -->|output| 23;\n  8 -->|output| 23;\n  19aa5a85-5933-4ab5-ae76-e4b1ec5b2f85[\"Output\\nReference_Protein_Accessions\"];\n  23 --> 19aa5a85-5933-4ab5-ae76-e4b1ec5b2f85;\n  style 19aa5a85-5933-4ab5-ae76-e4b1ec5b2f85 stroke:#2c3143,stroke-width:4px;\n  24[\"bed to protein map\"];\n  20 -->|translation_bed| 24;\n  25[\"Tabular-to-FASTA\"];\n  22 -->|out_file1| 25;\n  26[\"Concatenate datasets\"];\n  24 -->|output| 26;\n  16 -->|out_file1| 26;\n  27[\"FASTA Merge Files and Filter Unique Sequences\"];\n  2 -->|output| 27;\n  25 -->|output| 27;\n  20 -->|translation_fasta| 27;\n  924bce7c-5c6a-4cb3-a459-18784a55ae01[\"Output\\nUniprot_cRAP_SAV_indel_translatedbed_FASTA\"];\n  27 --> 924bce7c-5c6a-4cb3-a459-18784a55ae01;\n  style 924bce7c-5c6a-4cb3-a459-18784a55ae01 stroke:#2c3143,stroke-width:4px;\n  28[\"Genomic_mapping_sqlite\"];\n  26 -->|out_file1| 28;\n  6542c4e5-289a-4be4-9b42-7a4e170ba198[\"Output\\ngenomic_mapping_sqlite\"];\n  28 --> 6542c4e5-289a-4be4-9b42-7a4e170ba198;\n  style 6542c4e5-289a-4be4-9b42-7a4e170ba198 stroke:#2c3143,stroke-width:4px;"}],"api":"https://training.galaxyproject.org/training-material/api/topics/proteomics/tutorials/proteogenomics-dbcreation/tutorial.json","tools":["toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_cat/0.1.0","toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_replace_in_column/1.1.3","toolshed.g2.bx.psu.edu/repos/devteam/fasta_to_tabular/fasta2tab/1.1.1","toolshed.g2.bx.psu.edu/repos/devteam/freebayes/freebayes/1.3.1","toolshed.g2.bx.psu.edu/repos/devteam/tabular_to_fasta/tab2fasta/1.1.1","toolshed.g2.bx.psu.edu/repos/galaxyp/bed_to_protein_map/bed_to_protein_map/0.2.0","toolshed.g2.bx.psu.edu/repos/galaxyp/custom_pro_db/custom_pro_db/1.22.0","toolshed.g2.bx.psu.edu/repos/galaxyp/fasta_merge_files_and_filter_unique_sequences/fasta_merge_files_and_filter_unique_sequences/1.2.0","toolshed.g2.bx.psu.edu/repos/galaxyp/gffcompare_to_bed/gffcompare_to_bed/0.2.1","toolshed.g2.bx.psu.edu/repos/galaxyp/regex_find_replace/regexColumn1/1.0.0","toolshed.g2.bx.psu.edu/repos/galaxyp/translate_bed/translate_bed/0.1.0","toolshed.g2.bx.psu.edu/repos/iuc/filter_tabular/filter_tabular/2.0.0","toolshed.g2.bx.psu.edu/repos/iuc/gffcompare/gffcompare/0.11.2","toolshed.g2.bx.psu.edu/repos/iuc/hisat2/hisat2/2.1.0+galaxy5","toolshed.g2.bx.psu.edu/repos/iuc/query_tabular/query_tabular/3.0.0","toolshed.g2.bx.psu.edu/repos/iuc/sqlite_to_tabular/sqlite_to_tabular/2.0.0","toolshed.g2.bx.psu.edu/repos/iuc/stringtie/stringtie/2.1.1"],"supported_servers":{"exact":[{"url":"https://usegalaxy.be/","name":"UseGalaxy.be","usegalaxy":false},{"url":"https://usegalaxy.eu","name":"UseGalaxy.eu","usegalaxy":true},{"url":"https://usegalaxy.org","name":"UseGalaxy.org (Main)","usegalaxy":true}],"inexact":[{"url":"https://usegalaxy.cz/","name":"UseGalaxy.cz","usegalaxy":false},{"url":"https://usegalaxy.no/","name":"UseGalaxy.no","usegalaxy":false},{"url":"https://usegalaxy.org.au","name":"UseGalaxy.org.au","usegalaxy":true}]},"topic_name_human":"Proteomics","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[{"name":"text_processing","owner":"bgruening","revisions":"ddf54b12c295","tool_panel_section_label":"Text Manipulation","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"text_processing","owner":"bgruening","revisions":"d698c222f354","tool_panel_section_label":"Text Manipulation","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"fasta_to_tabular","owner":"devteam","revisions":"e7ed3c310b74","tool_panel_section_label":"FASTA/FASTQ","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"freebayes","owner":"devteam","revisions":"ef2c525bd8cd","tool_panel_section_label":"Variant Calling","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"tabular_to_fasta","owner":"devteam","revisions":"0a7799698fe5","tool_panel_section_label":"FASTA/FASTQ","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"bed_to_protein_map","owner":"galaxyp","revisions":"a7c58b43cbaa","tool_panel_section_label":"Convert Formats","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"custom_pro_db","owner":"galaxyp","revisions":"2c7df0077d28","tool_panel_section_label":"Proteomics","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"fasta_merge_files_and_filter_unique_sequences","owner":"galaxyp","revisions":"f546e7278f04","tool_panel_section_label":"FASTA/FASTQ","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"gffcompare_to_bed","owner":"galaxyp","revisions":"ba5368c19dbd","tool_panel_section_label":"Convert Formats","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"regex_find_replace","owner":"galaxyp","revisions":"209b7c5ee9d7","tool_panel_section_label":"Text Manipulation","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"translate_bed","owner":"galaxyp","revisions":"038ecf54cbec","tool_panel_section_label":"Operate on Genomic Intervals","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"filter_tabular","owner":"iuc","revisions":"34d29339abab","tool_panel_section_label":"Text Manipulation","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"gffcompare","owner":"iuc","revisions":"0f710191a66d","tool_panel_section_label":"Filter and Sort","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"hisat2","owner":"iuc","revisions":"a86e80d3c09c","tool_panel_section_label":"Mapping","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"query_tabular","owner":"iuc","revisions":"33d61c89fb8d","tool_panel_section_label":"Text Manipulation","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"sqlite_to_tabular","owner":"iuc","revisions":"b722161a845a","tool_panel_section_label":"Text Manipulation","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"stringtie","owner":"iuc","revisions":"1ebd14235b92","tool_panel_section_label":"RNA Analysis","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"}]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools:\n- name: text_processing\n  owner: bgruening\n  revisions: ddf54b12c295\n  tool_panel_section_label: Text Manipulation\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: text_processing\n  owner: bgruening\n  revisions: d698c222f354\n  tool_panel_section_label: Text Manipulation\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: fasta_to_tabular\n  owner: devteam\n  revisions: e7ed3c310b74\n  tool_panel_section_label: FASTA/FASTQ\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: freebayes\n  owner: devteam\n  revisions: ef2c525bd8cd\n  tool_panel_section_label: Variant Calling\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: tabular_to_fasta\n  owner: devteam\n  revisions: 0a7799698fe5\n  tool_panel_section_label: FASTA/FASTQ\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: bed_to_protein_map\n  owner: galaxyp\n  revisions: a7c58b43cbaa\n  tool_panel_section_label: Convert Formats\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: custom_pro_db\n  owner: galaxyp\n  revisions: 2c7df0077d28\n  tool_panel_section_label: Proteomics\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: fasta_merge_files_and_filter_unique_sequences\n  owner: galaxyp\n  revisions: f546e7278f04\n  tool_panel_section_label: FASTA/FASTQ\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: gffcompare_to_bed\n  owner: galaxyp\n  revisions: ba5368c19dbd\n  tool_panel_section_label: Convert Formats\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: regex_find_replace\n  owner: galaxyp\n  revisions: 209b7c5ee9d7\n  tool_panel_section_label: Text Manipulation\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: translate_bed\n  owner: galaxyp\n  revisions: '038ecf54cbec'\n  tool_panel_section_label: Operate on Genomic Intervals\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: filter_tabular\n  owner: iuc\n  revisions: 34d29339abab\n  tool_panel_section_label: Text Manipulation\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: gffcompare\n  owner: iuc\n  revisions: 0f710191a66d\n  tool_panel_section_label: Filter and Sort\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: hisat2\n  owner: iuc\n  revisions: a86e80d3c09c\n  tool_panel_section_label: Mapping\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: query_tabular\n  owner: iuc\n  revisions: 33d61c89fb8d\n  tool_panel_section_label: Text Manipulation\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: sqlite_to_tabular\n  owner: iuc\n  revisions: b722161a845a\n  tool_panel_section_label: Text Manipulation\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: stringtie\n  owner: iuc\n  revisions: 1ebd14235b92\n  tool_panel_section_label: RNA Analysis\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n","tours":false,"video":false,"slides_recordings":false,"translations":{"tutorial":[],"slides":[],"video":false},"license":"CC-BY-4.0","type":"tutorial"}