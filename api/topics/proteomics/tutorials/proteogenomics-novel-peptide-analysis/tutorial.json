{"layout":"tutorial_hands_on","title":"Proteogenomics 3: Novel peptide analysis","zenodo_link":"https://doi.org/10.5281/zenodo.1489208","level":"Intermediate","questions":["How to verify the spectra of novel proteoforms?","How to assign genomic allocation to these novel proteoforms?"],"objectives":["How to assign and visualize the genomic localization of these identified novel proteoforms?"],"time_estimation":"30m","key_points":["Learning how to visualize proteomic data and to perform its genomic allocation"],"follow_up_training":[{"type":"internal","topic_name":"proteomics","tutorials":["proteogenomics-dbcreation","proteogenomics-dbsearch"]}],"contributors":[{"name":"Subina Mehta","email":"subinamehta@gmail.com","twitter":"Subina_Mehta","linkedin":"subinamehta","matrix":"subinamehta:matrix.org","orcid":"0000-0001-9818-0537","joined":"2018-06","id":"subinamehta","url":"https://training.galaxyproject.org/training-material/api/contributors/subinamehta.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/subinamehta/"},{"name":"Timothy J. Griffin","email":"tgriffin@umn.edu","github":false,"joined":"2017-09","orcid":"0000-0001-6801-2559","id":"timothygriffin","url":"https://training.galaxyproject.org/training-material/api/contributors/timothygriffin.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/timothygriffin/"},{"name":"Pratik Jagtap","email":"pjagtap@umn.edu","joined":"2017-09","orcid":"0000-0003-0984-0973","id":"pratikdjagtap","url":"https://training.galaxyproject.org/training-material/api/contributors/pratikdjagtap.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/pratikdjagtap/"},{"name":"Ray Sajulga","email":"rsajulga@umn.edu","joined":"2018-11","id":"jraysajulga","url":"https://training.galaxyproject.org/training-material/api/contributors/jraysajulga.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/jraysajulga/"},{"name":"James Johnson","email":"jj@umn.edu","joined":"2017-09","in_memoriam":"<a href=\"https://galaxyproject.org/news/2024-03-19-remembrances-of-jj/\">James ‘JJ’ Johnson, was a Galaxy community rock star most known for his indispensable contributions to the Galaxy Proteomics community.</a>\n\nJJ’s works will live on in so many Galaxy tools and workflows for years to come.","id":"jj-umn","url":"https://training.galaxyproject.org/training-material/api/contributors/jj-umn.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/jj-umn/"},{"name":"Praveen Kumar","email":"kumar207@umn.edu","joined":"2019-04","id":"pravs3683","url":"https://training.galaxyproject.org/training-material/api/contributors/pravs3683.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/pravs3683/"}],"subtopic":"multi-omics","tags":["proteogenomics"],"recordings":[{"captioners":["subinamehta"],"date":"2021-02-15","galaxy_version":"21.01","length":"40M","youtube_id":"Ku274KwFh1Y","speakers":["subinamehta"]}],"js_requirements":{"mathjax":null,"mermaid":false},"short_id":"T00233","url":"/topics/proteomics/tutorials/proteogenomics-novel-peptide-analysis/tutorial.html","topic_name":"proteomics","tutorial_name":"proteogenomics-novel-peptide-analysis","dir":"topics/proteomics/tutorials/proteogenomics-novel-peptide-analysis","symlink":null,"id":"proteomics/proteogenomics-novel-peptide-analysis","ref_tutorials":["<p>The third and the last workflow in the proteogenomics tutorial is to identifying the “<strong>Novel peptides</strong>” using BlastP and to localize the peptides to its genomic coordinates. Inputs from both workflow 1 and 2 will be used in this workflow.\nPlease look at the following tutorials in this proteogenomics series before starting this tutorial:</p>\n<ol>\n  <li><a href=\"/training-material/topics/proteomics/tutorials/proteogenomics-dbcreation/tutorial.html\">Proteogenomics database creation</a></li>\n  <li><a href=\"/training-material/topics/proteomics/tutorials/proteogenomics-dbsearch/tutorial.html\">Proteogenomics database search</a></li>\n</ol>\n\n<p><a href=\"../../images/Third_workflow.png\" rel=\"noopener noreferrer\"><img src=\"../../images/Third_workflow.png\" alt=\"Workflow. \" width=\"1772\" height=\"1084\" loading=\"lazy\" /></a></p>\n\n<blockquote class=\"agenda\">\n  <agenda-title></agenda-title>\n\n  <p>In this tutorial, we will deal with:</p>\n<ol id=\"markdown-toc\">\n  <li><a href=\"#pretreatments\" id=\"markdown-toc-pretreatments\">Pretreatments</a></li>\n  <li><a href=\"#peptide-selection\" id=\"markdown-toc-peptide-selection\">Peptide Selection</a></li>\n  <li><a href=\"#multiomics-visualization-platform-mvp\" id=\"markdown-toc-multiomics-visualization-platform-mvp\">Multiomics Visualization Platform (MVP)</a></li>\n  <li><a href=\"#obtain-peptide-genomic-coordinates\" id=\"markdown-toc-obtain-peptide-genomic-coordinates\">Obtain Peptide genomic Coordinates</a></li>\n  <li><a href=\"#classify-peptides\" id=\"markdown-toc-classify-peptides\">Classify Peptides</a></li>\n  <li><a href=\"#final-summary-output\" id=\"markdown-toc-final-summary-output\">Final Summary Output</a></li>\n</ol>\n\n</blockquote>\n\n<h1 id=\"pretreatments\">Pretreatments</h1>\n\n<p>All the files to run this workflow can be obtained from the <a href=\"/training-material/topics/proteomics/tutorials/proteogenomics-dbsearch/tutorial.html\">second tutorial</a> output. Once the tabular output is generated, we convert this tabular report into a FASTA file. This can be achieved by using the Tabular to FASTA convertion tool.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>data organization</hands-on-title>\n\n  <ol>\n    <li>The inputs for this workflow are:\n      <ul>\n        <li><strong>Tabular file</strong> – “<strong>Peptides for BlastP analysis</strong>”</li>\n        <li><strong>Tabular file</strong> – “<strong>PeptideShaker_PSM</strong>”</li>\n        <li><strong>Mz to sqlite</strong></li>\n        <li><strong>Genomic mapping sqlite</strong></li>\n      </ul>\n    </li>\n  </ol>\n\n  <p>If you do not have these files from the previous tutorials in this series, you can import them from Zenodo:</p>\n  <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>https://zenodo.org/record/1489208/files/Peptides_for_Blast-P_analysis.tabular\nhttps://zenodo.org/record/1489208/files/PeptideShaker_PSM.tabular\nhttps://zenodo.org/record/1489208/files/mz_to_sqlite.mz.sqlite\nhttps://zenodo.org/record/1489208/files/genomic_mapping_sqlite.sqlite\n</code></pre></div>  </div>\n</blockquote>\n\n<h1 id=\"peptide-selection\">Peptide Selection</h1>\n\n<p><a href=\"https://blast.ncbi.nlm.nih.gov/Blast.cgi\">BLAST</a> is a web based tool used to compare biological sequences. BlastP, matches protein sequences against a protein database. More specifically, it looks at the amino acid sequence of proteins and can detect and evaluate the amount of differences between say, an experimentally derived sequence and all known amino acid sequences from a database. It can then find the most similar sequences and allow for identification of known proteins or for identification of potential peptides associated with novel proteoforms.</p>\n\n<p>The first step in this tutorial is to perfrom BLAST-P analysis using the NCBI-NR database. The output from BLASTP will determine the identification of the novel peptides. The result is a tabular file with 25 columns containing all the information regarding the alignment of these peptides with the sequences in the NCBI-NR database.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>NCBI BLAST+ blastp</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/devteam/ncbi_blast_plus/ncbi_blastp_wrapper/0.3.3\" title=\"NCBI BLAST+ blastp tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>NCBI BLAST+ blastp</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.3.3)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <strong>Protein query sequence(s)</strong> - <code class=\"language-plaintext highlighter-rouge\">Peptides for Blast-P analysis.tabular</code></li>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <strong>Subject database/sequences</strong> - <code class=\"language-plaintext highlighter-rouge\">Locally installed BLAST database</code>\n          <ul>\n            <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <strong>Protein BLAST database</strong> - <code class=\"language-plaintext highlighter-rouge\">NCBI-NR(dated)</code></li>\n          </ul>\n        </li>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <strong>Type of BLAST</strong> - <code class=\"language-plaintext highlighter-rouge\">blast-p short</code></li>\n        <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <strong>Set expectation value cutoff</strong> - <code class=\"language-plaintext highlighter-rouge\">200000.0</code></li>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <strong>Output format</strong> - <code class=\"language-plaintext highlighter-rouge\">Tabular format (25 columns)</code></li>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <strong>Advanced Options</strong> - <code class=\"language-plaintext highlighter-rouge\">show advanced options</code>\n          <ul>\n            <li><i class=\"far fa-check-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-check</span> <strong>Filter out low complexity regions (with SEG)</strong> - <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n            <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <strong>Scoring matrix and gap costs</strong> - <code class=\"language-plaintext highlighter-rouge\">PAM30</code>\n              <ul>\n                <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <strong>Gap Costs</strong> - <code class=\"language-plaintext highlighter-rouge\">Extension:9 Extension:1</code></li>\n              </ul>\n            </li>\n            <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <strong>Maximum hits to consider/show</strong> - <code class=\"language-plaintext highlighter-rouge\">1</code></li>\n            <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <strong>Maximum number of HSPs (alignments) to keep for any single query-subject pair</strong> - <code class=\"language-plaintext highlighter-rouge\">1</code></li>\n            <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <strong>Word size for wordfinder algorithm</strong> - <code class=\"language-plaintext highlighter-rouge\">2</code></li>\n            <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <strong>Multiple hits window size: use 0 to specify 1-hit algorithm, leave blank for default</strong> - <code class=\"language-plaintext highlighter-rouge\">40</code></li>\n            <li><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-text</span> <strong>Minimum score to add a word to the BLAST lookup table</strong> - <code class=\"language-plaintext highlighter-rouge\">11</code></li>\n            <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <strong>Composition-based statistics</strong> - <code class=\"language-plaintext highlighter-rouge\">0: no composition-based statistics</code></li>\n            <li><i class=\"far fa-check-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-check</span> <strong>Should the query and subject defline(s) be parsed?</strong> - <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n            <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <strong>Restrict search of database to a given set of ID’s</strong> - <code class=\"language-plaintext highlighter-rouge\">No restriction, search the entire database</code></li>\n            <li><i class=\"far fa-check-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-check</span> <strong>Minimum query coverage per hsp (percentage, 0 to 100)?</strong> - <code class=\"language-plaintext highlighter-rouge\">0</code></li>\n            <li><i class=\"far fa-check-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-check</span> <strong>Compute locally optimal Smith-Waterman alignments</strong> - <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li>Click <strong>Run Tool</strong> and inspect the query results file after it turned green.</li>\n  </ol>\n\n</blockquote>\n\n<p>Once Blast-P search is performed, it provides a tabular output containing “<strong>Novel peptides</strong>”. Now this output is further processed by comparing the Novel Peptide output with the PSM report for selecting only distinct peptides which meet the criteria.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Query Tabular</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/query_tabular/query_tabular/3.0.0\" title=\"Query Tabular tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Query Tabular</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 3.0.0)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <strong>Insert Database Table</strong>\n          <ul>\n            <li>Section <strong>Table Options</strong>\n              <ul>\n                <li><em>“Specify Name for Table”</em>: <code class=\"language-plaintext highlighter-rouge\">blast</code></li>\n                <li><em>“Use first line as column names”</em> : <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n                <li><em>“Specify Column Names (comma-separated list)”</em>:\n<code class=\"language-plaintext highlighter-rouge\">qseqid,sseqid,pident,length,mismatch,gapopen,qstart,qend,sstart,send,evalue,bitscore,sallseqid,score,nident,positive,gaps,ppos,qframe,sframe,qseq,sseq,qlen,slen,salltitles</code></li>\n                <li><em>“Only load the columns you have named into database”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n                <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <strong>Insert Table Index</strong>\n                  <ul>\n                    <li><em>“Table Index”</em>: <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n                    <li><em>“Index on Columns”</em>: <code class=\"language-plaintext highlighter-rouge\">qseqid</code></li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n        <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <strong>Insert Database Table</strong>\n          <ul>\n            <li>Section <strong>Filter Dataset Input</strong>\n              <ul>\n                <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <strong>Filter Tabular Input Lines</strong>\n                  <ul>\n                    <li><em>“Filter by”</em>:  <code class=\"language-plaintext highlighter-rouge\">skip leading lines</code></li>\n                    <li><em>“Skip lines”</em>: <code class=\"language-plaintext highlighter-rouge\">1</code></li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n            <li>Section <strong>Table Options</strong>\n              <ul>\n                <li><em>“Specify Name for Table”</em>: <code class=\"language-plaintext highlighter-rouge\">psm</code></li>\n                <li><em>“Use first line as column names”</em> : <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n                <li><em>“Specify Column Names (comma-separated list)”</em>: <code class=\"language-plaintext highlighter-rouge\">ID,Proteins,Sequence,AAs_Before,AAs_After,Position,Modified_Sequence,Variable_Modifications,Fixed_Modifications,Spectrum_File,Spectrum_Title,Spectrum_Scan_Number,RT,mz,Measured_Charge,Identification_Charge,Theoretical_Mass,Isotope_Number,Precursor_mz_Error_ppm,Localization_Confidence,Probabilistic_PTM_score,Dscore,Confidence,Validation</code></li>\n                <li><em>“Only load the columns you have named into database”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n        <li>\n          <p><em>“Save the sqlite database in your history”</em>: <code class=\"language-plaintext highlighter-rouge\">No</code></p>\n\n          <blockquote class=\"comment\">\n            <comment-title>Querying an SQLite Database</comment-title>\n\n            <p><strong>Query Tabular</strong> can also use an existing SQLite database. Activating <code class=\"language-plaintext highlighter-rouge\">Save the sqlite database in your history</code>\nwill store the created database in the history, allowing to reuse it directly.</p>\n\n          </blockquote>\n        </li>\n        <li><em>“SQL Query to generate tabular output”</em>:\n          <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>SELECT distinct psm.*\nFROM psm join blast ON psm.Sequence = blast.qseqid\nWHERE blast.pident &lt; 100 OR blast.gapopen &gt;= 1 OR blast.length &lt; blast.qlen\nORDER BY psm.Sequence, psm.ID\n</code></pre></div>          </div>\n\n          <blockquote class=\"comment\">\n            <comment-title>Query information</comment-title>\n\n            <p>The query wants a tabular list of peptides in which the lenght of the PSM sequence is equal to the length of the Blast sequence, where in the pident (percentage identity) is less that 100 i.e. Peptide cannot be a 100% identical to the NCBI-nr reference database. Or it should fulfill the criteria that there should be atleast 1 gap present (blast.gapopen &gt;= 1) or the length of the peptide in NCBI-nr should be less than the length of the query length. If the peptide follows all this then it is accepted as a “Novel” proteoform.</p>\n\n          </blockquote>\n        </li>\n        <li><em>“Include query result column headers”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n      </ul>\n    </li>\n    <li>Click <strong>Run Tool</strong> and inspect the query results file after it turned green.</li>\n  </ol>\n\n</blockquote>\n\n<p>Once this step is completed, a tabular output containing novel proteoforms are displayed. These novel proteforms fulfill our criteria of not being present in the existing NCBI repository. The next step is to remove any duplicate sequences. For this, we use the Query tabular tool again to select distinct sequences from the tabular output.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Query Tabular</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/query_tabular/query_tabular/3.0.0\" title=\"Query Tabular tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Query Tabular</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 3.0.0)</span>\n      <ul>\n        <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <strong>Insert Database Table</strong>\n          <ul>\n            <li>Section <strong>Filter Dataset Input</strong>\n              <ul>\n                <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <strong>Insert Filter Tabular Input Lines</strong>\n                  <ul>\n                    <li><em>“Filter by”</em>:  <code class=\"language-plaintext highlighter-rouge\">skip leading lines</code></li>\n                    <li><em>“Skip lines”</em>: <code class=\"language-plaintext highlighter-rouge\">1</code></li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n            <li>Section <strong>Table Options</strong>\n              <ul>\n                <li><em>“Specify Name for Table”</em>: <code class=\"language-plaintext highlighter-rouge\">psm</code></li>\n                <li><em>“Use first line as column names”</em> : <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n                <li><em>“Specify Column Names (comma-separated list)”</em>:<code class=\"language-plaintext highlighter-rouge\">ID,Proteins,Sequence</code></li>\n                <li><em>“Only load the columns you have named into database”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n        <li><em>“SQL Query to generate tabular output”</em>:\n          <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>SELECT distinct Sequence from psm\n</code></pre></div>          </div>\n        </li>\n        <li><em>“include query result column headers”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n      </ul>\n    </li>\n    <li>Click <strong>Run Tool</strong> and inspect the query results file after it turned green.</li>\n  </ol>\n\n</blockquote>\n\n<h1 id=\"multiomics-visualization-platform-mvp\">Multiomics Visualization Platform (MVP)</h1>\n\n<p>The Multiomics Visualization Platform is a Galaxy visualization plugin that allows the user to browse the selected proteomics data. It uses the SQlite database which allows the data to be filtered and aggregated in a user defined manner. It allows various features such as; the PSM can be displayed with a lorikeet spectral view, the selected peptide can be displayed in a protein view and an IGV browser is also available for the selected protein. The step by step guide shown below will provide a walkthrough on how to use this plugin (NOTE: the example shown below is a representative peptide which is subjected to change, so while you are running this tool please take a look at the “Novel Peptide” output from the previous steps).</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Guide to MVP</hands-on-title>\n\n  <p>The spectra belonging to these “Novel peptides” can be viewed using MVP,this can be achieved by selecting the output from the <code class=\"language-plaintext highlighter-rouge\">mz to sqlite tool</code> (Generated in the second workflow).\nHere is a step by step guide to obtain the proteogenomic view of the “Novel peptides”.</p>\n\n  <p>1) Click on the <strong>Visualize in MVP application</strong>, it will open up options for visualization application in the center pane, Select <strong>MVP Application</strong> from the options (or Right click to open in a new window).</p>\n\n  <p><a href=\"../../images/Visualize.png\" rel=\"noopener noreferrer\"><img src=\"../../images/Visualize.png\" alt=\"mz to sqlite. \" width=\"570\" height=\"634\" loading=\"lazy\" /></a></p>\n\n  <p>This will open in the Center Pane. Select the MVP application.</p>\n\n  <p><a href=\"../../images/Open_MVP.png\" rel=\"noopener noreferrer\"><img src=\"../../images/Open_MVP.png\" alt=\"MVP. \" width=\"614\" height=\"625\" loading=\"lazy\" /></a></p>\n\n  <p>This is how it will look.</p>\n\n  <p><a href=\"../../images/Peptide_overview.png\" rel=\"noopener noreferrer\"><img src=\"../../images/Peptide_overview.png\" alt=\"Overview. \" width=\"2208\" height=\"1772\" loading=\"lazy\" /></a></p>\n\n  <p>2) Click on <strong>Load from Galaxy</strong> to open the list of peptides you would like to view.</p>\n\n  <p><a href=\"../../images/load_from_Galaxy.png\" rel=\"noopener noreferrer\"><img src=\"../../images/load_from_Galaxy.png\" alt=\"load from galaxy. \" width=\"1476\" height=\"1032\" loading=\"lazy\" /></a></p>\n\n  <p>This will open a dropdown list. Select the novel peptides from there.</p>\n\n  <p><a href=\"../../images/DropDown_novel.png\" rel=\"noopener noreferrer\"><img src=\"../../images/DropDown_novel.png\" alt=\"dropdown. \" width=\"908\" height=\"743\" loading=\"lazy\" /></a></p>\n\n  <p>3) Select <strong>Novel Peptides</strong> from the right hand side.</p>\n\n  <p><a href=\"../../images/novel_peptides_view.png\" rel=\"noopener noreferrer\"><img src=\"../../images/novel_peptides_view.png\" alt=\"novel peptides view. \" width=\"1316\" height=\"904\" loading=\"lazy\" /></a></p>\n\n  <p>4) Select any peptide, For eg: <code class=\"language-plaintext highlighter-rouge\">DGDLENPVLYSGAV</code>, and then click on <strong>Selected Peptide PSMs</strong>.</p>\n\n  <p><a href=\"../../images/Filtering_novelpeptides.png\" rel=\"noopener noreferrer\"><img src=\"../../images/Filtering_novelpeptides.png\" alt=\"select_pep. \" width=\"989\" height=\"802\" loading=\"lazy\" /></a></p>\n\n  <p>5) If you scroll down, the PSM associated with the peptide will be displayed. By clicking on the PSM, the <em>Lorikeet</em>\nvalues will be shown. The Lorikeet visualization is interactive, i.e the user can change the values or select any\nparameter and click on Update button to view these changes.</p>\n\n  <p><a href=\"../../images/Peptide-Protein_Viewer.png\" rel=\"noopener noreferrer\"><img src=\"../../images/Peptide-Protein_Viewer.png\" alt=\"PSM. \" width=\"1906\" height=\"876\" loading=\"lazy\" /></a></p>\n\n  <p><a href=\"../../images/Lorikeet_Viewer.png\" rel=\"noopener noreferrer\"><img src=\"../../images/Lorikeet_Viewer.png\" alt=\"lorikeet. \" width=\"1890\" height=\"1816\" loading=\"lazy\" /></a></p>\n\n  <p>6) For a Protein centric view, click on <strong>View in Protein</strong> , it will open up all the proteins associate with the\npeptides. For eg: Select the <code class=\"language-plaintext highlighter-rouge\">DGDLENPVLYSGAV</code> peptide and click on the first protein. The chromosome location\nof the peptide will be displayed.</p>\n\n  <p><a href=\"../../images/Selecting_peptide.png\" rel=\"noopener noreferrer\"><img src=\"../../images/Selecting_peptide.png\" alt=\"view in protein. \" width=\"887\" height=\"835\" loading=\"lazy\" /></a></p>\n\n  <p>Once you click on protein it will show the list of proteins the belongs to the peptides.</p>\n\n  <p><a href=\"../../images/opening_IGV.png\" rel=\"noopener noreferrer\"><img src=\"../../images/opening_IGV.png\" alt=\"select protein. \" width=\"987\" height=\"677\" loading=\"lazy\" /></a></p>\n\n  <p>Once you select the protein that you want to visualize you can click on the protein view.</p>\n\n  <p><a href=\"../../images/ProteinViewer.png\" rel=\"noopener noreferrer\"><img src=\"../../images/ProteinViewer.png\" alt=\"protein view. \" width=\"1768\" height=\"581\" loading=\"lazy\" /></a></p>\n\n  <p>7) Clicking on the arrow marks will open up the IGV(js) visualization tool, where-in the genomic localization of the\npeptide will be displayed.</p>\n\n  <p><a href=\"../../images/IGV_1.png\" rel=\"noopener noreferrer\"><img src=\"../../images/IGV_1.png\" alt=\"IGV. \" width=\"2044\" height=\"824\" loading=\"lazy\" /></a></p>\n\n  <p>8) To add tracks to your IGV viewer, click on <strong>Add Track</strong>. This will open up a list of tracks that are compatible\nto view in your IGV viewer. For eg. Select the <code class=\"language-plaintext highlighter-rouge\">Pep_gen_coordinate.bed</code> file and then click on <strong>Load Track</strong>.\nThis will open up the bed will below the nucleotide sequence.</p>\n\n  <p><a href=\"../../images/Options_for_Track.png\" rel=\"noopener noreferrer\"><img src=\"../../images/Options_for_Track.png\" alt=\"tracks align. \" width=\"1160\" height=\"764\" loading=\"lazy\" /></a></p>\n\n  <p>9) By clicking the wheel, you can select the <strong>three frame translate</strong> which will show the three frame translated\nregion of your sequence.</p>\n\n  <p><a href=\"../../images/IGV_viewer.png\" rel=\"noopener noreferrer\"><img src=\"../../images/IGV_viewer.png\" alt=\"IGV viewer. \" width=\"1254\" height=\"220\" loading=\"lazy\" /></a></p>\n\n  <p>10) The IGV is inbuilt in the MVP viewer and is very interactive, you could also load more tracks such as the aligned\nproBAM file (from HISAT) or the identified probam file (one of the input file).\nMVP has many useful features beyond those covered in this workshop and is under active development.</p>\n\n  <p><a href=\"../../images/IGV_2.png\" rel=\"noopener noreferrer\"><img src=\"../../images/IGV_2.png\" alt=\"IGV2. \" width=\"1378\" height=\"546\" loading=\"lazy\" /></a></p>\n\n</blockquote>\n\n<p>The next tool in the workflow is the Peptide genomic coordinate tool which takes the “novel peptides” as the input along with the mztosqlite file and the genomic mapping sqlite file (obtained during creation of the database). This tool helps create a bed file with the genomic coordinate information of the peptides based on the sqlite files.</p>\n\n<h1 id=\"obtain-peptide-genomic-coordinates\">Obtain Peptide genomic Coordinates</h1>\n\n<p>Gets genomic coordinate of peptides based on the information in mzsqlite and genomic mapping sqlite files. This program\nloads two sqlite databases (mzsqlite and genomic mapping sqlite files) and calculates the genomic coordinates of the\npeptides provided as input. This outputs bed file for peptides.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Peptide genomic Coordinate</hands-on-title>\n\n  <ol>\n    <li>Run <span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/galaxyp/peptide_genomic_coordinate/peptide_genomic_coordinate/0.1.1\" title=\"Peptide genomic Coordinate tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Peptide genomic Coordinate</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.1.1)</span> with the following parameters:\n      <ul>\n        <li><em>“Input”</em>: <code class=\"language-plaintext highlighter-rouge\">Peptide list file</code>, <code class=\"language-plaintext highlighter-rouge\">mzsqlite sqlite DB file</code>, and <code class=\"language-plaintext highlighter-rouge\">genomic mapping sqlite DB file</code></li>\n        <li>\n          <p><em>“Output”</em>: <code class=\"language-plaintext highlighter-rouge\">Tabular BED file with all the columns</code></p>\n\n          <p><a href=\"../../images/Output_PGC.png\" rel=\"noopener noreferrer\"><img src=\"../../images/Output_PGC.png\" alt=\"Output PGC. \" width=\"1710\" height=\"358\" loading=\"lazy\" /></a></p>\n        </li>\n      </ul>\n    </li>\n    <li>Click <strong>Run Tool</strong> and inspect the resulting files</li>\n  </ol>\n\n</blockquote>\n\n<h1 id=\"classify-peptides\">Classify Peptides</h1>\n\n<p>Given chromosomal locations of peptides in a BED file, PepPointer classifies them as CDS, UTR, exon, intron, or intergene.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Peppointer</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/galaxyp/pep_pointer/pep_pointer/0.1.3\" title=\"Peppointer tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Peppointer</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.1.3)</span> with the following parameters:\n      <ul>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>“Choose the source of the GTF file”</em> - <code class=\"language-plaintext highlighter-rouge\">From History</code></li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“GTF file with the genome of interest”</em> - <code class=\"language-plaintext highlighter-rouge\">edited_Mus_Musculus_GRCm38.90_Ensembl_GTF</code></li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“BED file with chromosomal coordinates of peptides”</em>: <code class=\"language-plaintext highlighter-rouge\">Bed file from Peptide genomic coordinate tool</code></li>\n      </ul>\n    </li>\n    <li>Click <strong>Run Tool</strong> and inspect the query results file after it turned green.</li>\n  </ol>\n\n  <p>This tool provides a bed output with the classification of the genomic location of the peptides.The Mus-musculus GTF file will be in your history if you have completed the proteogenomics 1 tutorial.</p>\n\n  <p><a href=\"../../images/Output_PP.png\" rel=\"noopener noreferrer\"><img src=\"../../images/Output_PP.png\" alt=\"Output PP. \" width=\"1350\" height=\"444\" loading=\"lazy\" /></a></p>\n\n</blockquote>\n\n<p>The final tool for this workflow generates a tabular output that summarizes the information after running these workflows. The final summary output consists of the Peptide sequence, the spectra associated with the peptides, the protein accession number, chromosome number, Start and Stop of the genomic coordinate, the annotation, the genomic coordinate entry for viewing in Integrative Genomics Viewer (IGV), MVP or UCSC genome browser and the URL for viewing it on UCSC genome browser. This summary is created with the help of the query tabular tool.</p>\n\n<h1 id=\"final-summary-output\">Final Summary Output</h1>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Query Tabular</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/query_tabular/query_tabular/3.0.0\" title=\"Query Tabular tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Query Tabular</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 3.0.0)</span>\n      <ul>\n        <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span>  <strong>Insert Database Table</strong>\n          <ul>\n            <li>Section <strong>Table Options</strong>:\n              <ul>\n                <li><em>“Specify Name for Table”</em>: <code class=\"language-plaintext highlighter-rouge\">bed_pep_pointer</code></li>\n                <li><em>“Use first line as column names”</em> : <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n                <li><em>“Specify Column Names (comma-separated list)”</em>:<code class=\"language-plaintext highlighter-rouge\">chrom,start,end,peptide,score,strand,annot</code></li>\n                <li><em>“Only load the columns you have named into database”</em>: <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n        <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <strong>Insert Database Table</strong>\n          <ul>\n            <li>Section <strong>Filter Dataset Input</strong>\n              <ul>\n                <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <strong>Insert Filter Tabular Input Lines</strong>\n                  <ul>\n                    <li><em>“Filter by”</em>:  <code class=\"language-plaintext highlighter-rouge\">skip leading lines</code></li>\n                    <li><em>“Skip lines”</em>: <code class=\"language-plaintext highlighter-rouge\">1</code></li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n            <li>Section <strong>Table Options</strong>\n              <ul>\n                <li><em>“Specify Name for Table”</em>: <code class=\"language-plaintext highlighter-rouge\">psm</code></li>\n                <li><em>“Use first line as column names”</em> : <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n                <li><em>“Specify Column Names (comma-separated list)”</em>: <code class=\"language-plaintext highlighter-rouge\">ID,Proteins,Sequence,AAs_Before,AAs_After,Position,Modified_Sequence,Variable_Modifications,Fixed_Modifications,Spectrum_File,Spectrum_Title,Spectrum_Scan_Number,RT,mz,Measured_Charge,Identification_Charge,Theoretical_Mass,Isotope_Number,Precursor_mz_Error_ppm,Localization_Confidence,Probabilistic_PTM_score,Dscore,Confidence,Validation</code></li>\n                <li><em>“Only load the columns you have named into database”</em>: <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n        <li><em>“SQL Query to generate tabular output”</em>:\n          <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>SELECT psm.Sequence AS PeptideSequence,\ncount(psm.Sequence) AS SpectralCount,\npsm.Proteins AS Proteins,\nbed_pep_pointer.chrom AS Chromosome,\nbed_pep_pointer.start AS Start,\nbed_pep_pointer.end AS End,\nbed_pep_pointer.strand AS Strand,\nbed_pep_pointer.annot AS Annotation,\nbed_pep_pointer.chrom||':'||bed_pep_pointer.start||'-'||bed_pep_pointer.end AS GenomeCoordinate,\n'https://genome.ucsc.edu/cgi-bin/hgTracks?db=mm10&amp;position='||bed_pep_pointer.chrom||'%3A'||bed_pep_pointer.start||'-'||bed_pep_pointer.end AS UCSC_Genome_Browser\nFROM psm\nINNER JOIN bed_pep_pointer on bed_pep_pointer.peptide = psm.Sequence\nGROUP BY psm.Sequence\n</code></pre></div>          </div>\n        </li>\n        <li><em>“include query result column headers”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n      </ul>\n    </li>\n    <li>\n      <p>Click <strong>Run Tool</strong> and inspect the query results file after it turned green. If everything went well, it should look similiar:</p>\n\n      <p><a href=\"../../images/final_summary.png\" rel=\"noopener noreferrer\"><img src=\"../../images/final_summary.png\" alt=\"Final Summary. \" width=\"1784\" height=\"290\" loading=\"lazy\" /></a></p>\n    </li>\n  </ol>\n\n  <p>The Final summary displays a tabular output containing the list of novel peptides and its corresponding protein. It also provides the users with the chromosomal location of the novel proteoform along with the peptide’s start and end position.\tThe output also features the strand information, gene\tannotation and the genomic coordinates in a specific format that could be used on IGV or UCSC browser. It also provides the user with a\tUCSC Genome Browser link, which the user can directly copy and paste it on a web browser to learn more about the novel proteoform. Here we are demonstrating the use of proteogenomics workflow on an example trimmed mouse dataset. This study explores the possibilities for downstream biological /functional analysis of peptides corresponding to novel proteoforms.</p>\n\n</blockquote>\n\n<h3 id=\"conclusion\">Conclusion</h3>\n\n<p>This completes the proteogenomics workflow analysis. This training workflow uses mouse data. For any other organism the data, tool paramters and the workflow will need to be modified accordingly.This workflow is also available at <a href=\"https://usegalaxy.eu/\">usegalaxy.eu</a>.</p>\n\n<p>This workflow was developed by the Galaxy-P team at the University of Minnesota.\nFor more information about Galaxy-P or our ongoing work, please visit us at <a href=\"http://galaxyp.org\">galaxyp.org</a></p>\n"],"ref_slides":[],"hands_on":true,"slides":false,"mod_date":"2024-05-29 14:28:52 +0000","pub_date":"2018-11-20 19:05:23 +0000","version":48,"workflows":[{"workflow":"galaxy-workflow-mouse_novel_peptide_analysis.ga","tests":false,"url":"https://training.galaxyproject.org/training-material/topics/proteomics/tutorials/proteogenomics-novel-peptide-analysis/workflows/galaxy-workflow-mouse_novel_peptide_analysis.ga","path":"topics/proteomics/tutorials/proteogenomics-novel-peptide-analysis/workflows/galaxy-workflow-mouse_novel_peptide_analysis.ga","wfid":"proteomics-proteogenomics-novel-peptide-analysis","wfname":"galaxy-workflow-mouse_novel_peptide_analysis","trs_endpoint":"https://training.galaxyproject.org/training-material/api/ga4gh/trs/v2/tools/proteomics-proteogenomics-novel-peptide-analysis/versions/galaxy-workflow-mouse_novel_peptide_analysis","license":null,"creators":[],"name":"GTN Proteogemics3 Novel Peptide Analysis","title":"GTN Proteogemics3 Novel Peptide Analysis","test_results":null,"modified":"2024-06-14 12:15:32 +0000","mermaid":"flowchart TD\n  0[\"ℹ️ Input Dataset\\nEdited_Mus_Musculus.GRCm38.86\"];\n  style 0 stroke:#2c3143,stroke-width:4px;\n  1[\"ℹ️ Input Dataset\\npeptides for blast\"];\n  style 1 stroke:#2c3143,stroke-width:4px;\n  2[\"ℹ️ Input Dataset\\nPSM Report\"];\n  style 2 stroke:#2c3143,stroke-width:4px;\n  3[\"ℹ️ Input Dataset\\nmz_sqlite\"];\n  style 3 stroke:#2c3143,stroke-width:4px;\n  4[\"ℹ️ Input Dataset\\ngenomic mapping sqlite db\"];\n  style 4 stroke:#2c3143,stroke-width:4px;\n  5[\"NCBI BLAST+ blastp\"];\n  1 -->|output| 5;\n  88461c74-1312-41d5-bd54-e7d7297ccd76[\"Output\\nBLASTP_results\"];\n  5 --> 88461c74-1312-41d5-bd54-e7d7297ccd76;\n  style 88461c74-1312-41d5-bd54-e7d7297ccd76 stroke:#2c3143,stroke-width:4px;\n  6[\"PSM_Novel_Peptides\"];\n  5 -->|output1| 6;\n  2 -->|output| 6;\n  29c9a368-a7e6-4e8b-81ca-131f63293093[\"Output\\nPSM_Novel_Peptides\"];\n  6 --> 29c9a368-a7e6-4e8b-81ca-131f63293093;\n  style 29c9a368-a7e6-4e8b-81ca-131f63293093 stroke:#2c3143,stroke-width:4px;\n  7[\"Novel_Peptides\"];\n  6 -->|output| 7;\n  56954668-7aac-423a-89af-aecf2b405b94[\"Output\\nNovel_Peptides\"];\n  7 --> 56954668-7aac-423a-89af-aecf2b405b94;\n  style 56954668-7aac-423a-89af-aecf2b405b94 stroke:#2c3143,stroke-width:4px;\n  8[\"Peptide Genomic Coodinate\"];\n  4 -->|output| 8;\n  3 -->|output| 8;\n  7 -->|output| 8;\n  60fd3e41-8cb7-4a49-b585-2a43117e9cf8[\"Output\\nPeptide Genomic Coodinate on input dataset(s)\"];\n  8 --> 60fd3e41-8cb7-4a49-b585-2a43117e9cf8;\n  style 60fd3e41-8cb7-4a49-b585-2a43117e9cf8 stroke:#2c3143,stroke-width:4px;\n  9[\"PepPointer\"];\n  8 -->|peptide_bed| 9;\n  0 -->|output| 9;\n  3c410bed-ff79-4774-b75c-48659d291160[\"Output\\nPepPointer on input dataset(s)\"];\n  9 --> 3c410bed-ff79-4774-b75c-48659d291160;\n  style 3c410bed-ff79-4774-b75c-48659d291160 stroke:#2c3143,stroke-width:4px;\n  10[\"Final_Summary_Novel_Peptides\"];\n  9 -->|classified| 10;\n  6 -->|output| 10;\n  50e64c95-cd68-47cb-9e0c-b3714b2f2431[\"Output\\nFinal_Summary_Novel_Peptides\"];\n  10 --> 50e64c95-cd68-47cb-9e0c-b3714b2f2431;\n  style 50e64c95-cd68-47cb-9e0c-b3714b2f2431 stroke:#2c3143,stroke-width:4px;"}],"api":"https://training.galaxyproject.org/training-material/api/topics/proteomics/tutorials/proteogenomics-novel-peptide-analysis/tutorial.json","tools":["toolshed.g2.bx.psu.edu/repos/devteam/ncbi_blast_plus/ncbi_blastp_wrapper/0.3.3","toolshed.g2.bx.psu.edu/repos/galaxyp/pep_pointer/pep_pointer/0.1.3","toolshed.g2.bx.psu.edu/repos/galaxyp/peptide_genomic_coordinate/peptide_genomic_coordinate/0.1.1","toolshed.g2.bx.psu.edu/repos/iuc/query_tabular/query_tabular/3.0.0"],"supported_servers":{"exact":[{"url":"https://usegalaxy.be/","name":"UseGalaxy.be","usegalaxy":false},{"url":"https://usegalaxy.eu","name":"UseGalaxy.eu","usegalaxy":true},{"url":"https://usegalaxy.org","name":"UseGalaxy.org (Main)","usegalaxy":true},{"url":"https://usegalaxy.org.au","name":"UseGalaxy.org.au","usegalaxy":true}],"inexact":[{"url":"https://usegalaxy.cz/","name":"UseGalaxy.cz","usegalaxy":false},{"url":"https://usegalaxy.no/","name":"UseGalaxy.no","usegalaxy":false}]},"topic_name_human":"Proteomics","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[{"name":"ncbi_blast_plus","owner":"devteam","revisions":"2889433c7ae1","tool_panel_section_label":"NCBI Blast","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"pep_pointer","owner":"galaxyp","revisions":"073a2965e3b2","tool_panel_section_label":"Proteomics","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"peptide_genomic_coordinate","owner":"galaxyp","revisions":"5f49ffce52cb","tool_panel_section_label":"Proteomics","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"query_tabular","owner":"iuc","revisions":"33d61c89fb8d","tool_panel_section_label":"Text Manipulation","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"}]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools:\n- name: ncbi_blast_plus\n  owner: devteam\n  revisions: 2889433c7ae1\n  tool_panel_section_label: NCBI Blast\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: pep_pointer\n  owner: galaxyp\n  revisions: 073a2965e3b2\n  tool_panel_section_label: Proteomics\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: peptide_genomic_coordinate\n  owner: galaxyp\n  revisions: 5f49ffce52cb\n  tool_panel_section_label: Proteomics\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: query_tabular\n  owner: iuc\n  revisions: 33d61c89fb8d\n  tool_panel_section_label: Text Manipulation\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n","tours":false,"video":false,"slides_recordings":false,"translations":{"tutorial":[],"slides":[],"video":false},"license":"CC-BY-4.0","type":"tutorial"}