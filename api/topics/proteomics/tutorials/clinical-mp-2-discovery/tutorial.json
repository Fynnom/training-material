{"layout":"tutorial_hands_on","title":"Clinical-MP-2-Discovery","zenodo_link":"https://doi.org/10.5281/zenodo.10105821","questions":["How to perform database searching?","How to extract microbial and Human protein and peptide sequences from the results"],"objectives":["Perform Database searching using two algorithms","Extract confident peptides and proteins","Generate a microbial peptide panel for verification"],"time_estimation":"3H","key_points":["Employ SearchGUI/PeptideShaker and MaxQuant for database searching","Extraction of confident microbial peptides for verification"],"contributions":{"authorship":["subinamehta","katherine-d21","dechendb"],"editing":["pratikdjagtap","timothygriffin"]},"requirements":[{"type":"internal","topic_name":"proteomics"}],"subtopic":"clinical-metaproteomics","follow_up_training":[{"type":"internal","topic_name":"proteomics","tutorials":["clinical-mp-3-verification"]}],"tags":["label-TMT11"],"redirect_from":["/topics/proteomics/tutorials/clinical-mp-discovery/tutorial","/short/proteomics/clinical-mp-2-discovery","/short/T00414"],"js_requirements":{"mathjax":null,"mermaid":false},"short_id":"T00414","url":"/topics/proteomics/tutorials/clinical-mp-2-discovery/tutorial.html","topic_name":"proteomics","tutorial_name":"clinical-mp-2-discovery","dir":"topics/proteomics/tutorials/clinical-mp-2-discovery","symlink":null,"id":"proteomics/clinical-mp-2-discovery","ref_tutorials":["<p>This tutorial can be followed with any user-defined database but would work best if the clinical metaproteomics database generation module was used (see <a href=\"https://github.com/subinamehta/training-material/blob/main/topics/proteomics/tutorials/clinical-mp-database-generation/tutorial.md\">Database Generation tutorial</a>). The MetaNovo tool generates a more manageable database that contains identified proteins. The MetaNovo-generated database merged with Human SwissProt (reviewed only) and contaminants (cRAP) databases to generate a compact database (~21.2k protein sequences) that will be used for peptide identification.</p>\n\n<h1 id=\"peptide-identification\">Peptide identification</h1>\n<p>The MSMS data will be searched against the compact database <code class=\"language-plaintext highlighter-rouge\">Human UniProt Microbial Proteins (from MetaNovo) and cRAP</code> to identify peptide and protein sequences via sequence database searching. For this tutorial, two peptide identification programs will be used: SearchGUI/PeptideShaker and MaxQuant. However, you could use other software too, such as Fragpipe or Scribe. For the purpose of this tutorial, a dataset of the 4 RAW/MGF files will be used as the MS/MS input.</p>\n\n<p><a href=\"../../images/clinical-mp/clinical-mp-discovery.JPG\" rel=\"noopener noreferrer\"><img src=\"../../images/clinical-mp/clinical-mp-discovery.JPG\" alt=\"Discovery Workflow. \" width=\"960\" height=\"540\" loading=\"lazy\" /></a></p>\n\n<blockquote class=\"agenda\">\n  <agenda-title></agenda-title>\n\n  <p>In this tutorial, we will cover:</p>\n\n<ol id=\"markdown-toc\">\n  <li><a href=\"#peptide-identification\" id=\"markdown-toc-peptide-identification\">Peptide identification</a></li>\n  <li><a href=\"#database-searching\" id=\"markdown-toc-database-searching\">Database Searching</a>    <ol>\n      <li><a href=\"#get-data\" id=\"markdown-toc-get-data\">Get data</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#peptide-identification-1\" id=\"markdown-toc-peptide-identification-1\">Peptide identification</a>    <ol>\n      <li><a href=\"#appending-decoy-sequenced-to-fasta-database-with-fastacli\" id=\"markdown-toc-appending-decoy-sequenced-to-fasta-database-with-fastacli\">Appending decoy sequenced to FASTA database with <strong>FastaCLI</strong></a></li>\n      <li><a href=\"#converting-raw-files-to-mgf-files-with-msconvert\" id=\"markdown-toc-converting-raw-files-to-mgf-files-with-msconvert\">Converting RAW files to MGF files with <strong>msconvert</strong></a></li>\n      <li><a href=\"#perform-database-searching-with-search-gui\" id=\"markdown-toc-perform-database-searching-with-search-gui\">Perform Database searching with <strong>Search GUI</strong></a></li>\n      <li><a href=\"#post-processing-of-searchgui-output-using-with-peptide-shaker\" id=\"markdown-toc-post-processing-of-searchgui-output-using-with-peptide-shaker\">Post-processing of SearchGUI output using with <strong>Peptide Shaker</strong></a></li>\n      <li><a href=\"#using-text-manipulation-tools-to-manage-microbial-outputs-from-searchguipeptideshaker\" id=\"markdown-toc-using-text-manipulation-tools-to-manage-microbial-outputs-from-searchguipeptideshaker\">Using Text Manipulation Tools to Manage Microbial Outputs from SearchGUI/PeptideShaker</a></li>\n      <li><a href=\"#perform-peptide-discovery-with-maxquant\" id=\"markdown-toc-perform-peptide-discovery-with-maxquant\">Perform peptide discovery with <strong>MaxQuant</strong></a></li>\n      <li><a href=\"#using-text-manipulation-tools-to-manage-microbial-outputs-from-maxquant\" id=\"markdown-toc-using-text-manipulation-tools-to-manage-microbial-outputs-from-maxquant\">Using Text Manipulation Tools to Manage Microbial Outputs from MaxQuant</a></li>\n      <li><a href=\"#process-sgps-and-maxquant-peptides-to-compile-one-list-of-unique-microbial-peptides\" id=\"markdown-toc-process-sgps-and-maxquant-peptides-to-compile-one-list-of-unique-microbial-peptides\">Process SGPS and MaxQuant peptides to compile one list of unique microbial peptides</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#conclusion\" id=\"markdown-toc-conclusion\">Conclusion</a></li>\n</ol>\n\n</blockquote>\n\n<h1 id=\"database-searching\">Database Searching</h1>\n<p>This step is to identify proteins based on mass spectrometry data. The algorithms identify peptides in the spectra and search a protein sequence database to match observed peptide data with theoretical peptide masses and spectra. Scoring and false discovery rate control help assess the reliability of matches, followed by protein inference to determine the proteins present in the sample. These algorithms are essential for interpreting mass spectrometry data, aiding in protein identification, quantification, and insights into biological processes and disease mechanisms in proteomics research.</p>\n\n<h2 id=\"get-data\">Get data</h2>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title> Data Upload </hands-on-title>\n\n  <ol>\n    <li>Create a new history for this tutorial</li>\n    <li>\n      <p>Import the files from <a href=\"https://doi.org/10.5281/zenodo.10105821\">Zenodo</a> or from\nthe shared data library (<code class=\"language-plaintext highlighter-rouge\">GTN - Material</code> -&gt; <code class=\"language-plaintext highlighter-rouge\">proteomics</code>\n -&gt; <code class=\"language-plaintext highlighter-rouge\">Clinical-MP-2-Discovery</code>):</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>https://zenodo.org/records/10105821/files/Human_UniProt_Microbial_Proteins_(from_MetaNovo)_and_cRAP.fasta\nhttps://zenodo.org/records/10105821/files/PTRC_Skubitz_Plex2_F10_9Aug19_Rage_Rep-19-06-08.raw\nhttps://zenodo.org/records/10105821/files/PTRC_Skubitz_Plex2_F11_9Aug19_Rage_Rep-19-06-08.raw\nhttps://zenodo.org/records/10105821/files/PTRC_Skubitz_Plex2_F13_9Aug19_Rage_Rep-19-06-08.raw\nhttps://zenodo.org/records/10105821/files/PTRC_Skubitz_Plex2_F15_9Aug19_Rage_Rep-19-06-08.raw\nhttps://zenodo.org/records/10105821/files/Experimental-Design_Discovery_MaxQuant.tabular\n</code></pre></div>      </div>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-importing-via-links\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-importing-via-links\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Importing via links</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Copy the link location</li>   <li>     <p>Click <i class=\"fas fa-upload\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-upload</span> <strong>Upload Data</strong> at the top of the tool panel</p>   </li>   <li>Select <i class=\"fa fa-edit\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-wf-edit</span> <strong>Paste/Fetch Data</strong></li>   <li>     <p>Paste the link(s) into the text field</p>   </li>   <li>     <p>Press <strong>Start</strong></p>   </li>   <li><strong>Close</strong> the window</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-importing-data-from-a-data-library\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-importing-data-from-a-data-library\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Importing data from a data library</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <p>As an alternative to uploading the data from a URL or your computer, the files may also have been made available from a <em>shared data library</em>:</p>   <ol>   <li>Go into <strong>Shared data</strong> (top panel) then <strong>Data libraries</strong></li>   <li>Navigate to  the correct folder as indicated by your instructor.     <ul>       <li>On most Galaxies tutorial data will be provided in a folder named <strong>GTN - Material –&gt; Topic Name -&gt; Tutorial Name</strong>.</li>     </ul>   </li>   <li>Select the desired files</li>   <li>Click on <strong>Add to History</strong> <i class=\"fas fa-caret-down\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-dropdown</span> near the top and select <strong>as Datasets</strong> from the dropdown menu</li>   <li>     <p>In the pop-up window, choose</p>     <ul>       <li><em>“Select history”</em>: the history you want to import the data to (or create a new one)</li>     </ul>   </li>   <li>Click on <strong>Import</strong></li> </ol> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li>Rename the datasets</li>\n    <li>\n      <p>Check that the datatype</p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-changing-the-datatype\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-changing-the-datatype\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Changing the datatype</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Click on the <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> <strong>pencil icon</strong> for the dataset to edit its attributes</li>   <li>In the central panel, click <i class=\"fas fa-database\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-chart-select-data</span> <strong>Datatypes</strong> tab on the top</li>   <li>In the <i class=\"fas fa-database\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-chart-select-data</span> <strong>Assign Datatype</strong>, select <code class=\"language-plaintext highlighter-rouge\">datatypes</code> from “<em>New type</em>” dropdown     <ul>       <li>Tip: you can start typing the datatype into the field to filter the dropdown menu</li>     </ul>   </li>   <li>Click the <strong>Save</strong> button</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li>Add to each database a tag corresponding to user.</li>\n    <li>\n      <p>Create a dataset collection of all the raw files and MGF files.</p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-adding-a-tag\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-adding-a-tag\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Adding a tag</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ol>   <li>Click on the dataset to expand it</li>   <li>Click on <strong>Add Tags</strong> <i class=\"fas fa-tags\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-tags</span></li>   <li>Add a tag  starting with <code class=\"language-plaintext highlighter-rouge\">#</code>     <ul>       <li>Tags starting with <code class=\"language-plaintext highlighter-rouge\">#</code> will be automatically propagated to the outputs of tools using this dataset.</li>     </ul>   </li>   <li>Press <kbd>Enter</kbd></li>   <li>Check that the tag appears below the dataset name</li> </ol> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h1 id=\"peptide-identification-1\">Peptide identification</h1>\n<p>Using the compact database generated by MetaNovo as the input database, we will match MS/MS data to peptide sequences via sequence database searching.</p>\n\n<p>For this tutorial, two peptide identification programs will be used: SearchGUI/PeptideShaker and MaxQuant. For both programs, the created dataset of the four MS datasets  in the history will be used as the MS/MS input. The RAW MS/MS data files will be converted into mascot generic format (MGF) files as that is the standard format in which MS/MS searches are performed.</p>\n\n<p>Peptides identified from each program will be verified with the PepQuery tool to generate a master list of confident verified microbial peptides.</p>\n\n<h2 id=\"appending-decoy-sequenced-to-fasta-database-with-fastacli\">Appending decoy sequenced to FASTA database with <strong>FastaCLI</strong></h2>\n\n<p>Using the FastaCLI tool, decoy sequences will be appended to the FASTA database. Decoy sequences are protein sequences are not expected to be present in samples. For more information on how to generate and append decoy sequences, see <a href=\"https://training.galaxyproject.org/archive/2019-12-01/topics/proteomics/tutorials/database-handling/tutorial.html#creating-a-decoy-database\">GTN Protein FASTA Database Handling</a>.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title> FastaCLI </hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/galaxyp/peptideshaker/fasta_cli/4.0.41+galaxy1\" title=\"FastaCLI tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>FastaCLI</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 4.0.41+galaxy1)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Protein Database”</em>: <code class=\"language-plaintext highlighter-rouge\">output</code> (Input dataset)</li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h2 id=\"converting-raw-files-to-mgf-files-with-msconvert\">Converting RAW files to MGF files with <strong>msconvert</strong></h2>\n\n<p>The msconvert tool allows for the conversion of mass spectrometry data files between different formats, such as thermo.raw, mgf, or mzml.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title> msconvert: RAW to MGF </hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/galaxyp/msconvert/msconvert/3.0.20287.2\" title=\"msconvert tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>msconvert</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 3.0.20287.2)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-folder\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-collection</span> <em>“Input unrefined MS data”</em>: <code class=\"language-plaintext highlighter-rouge\">output</code> (Input dataset collection)</li>\n        <li><em>“Do you agree to the vendor licenses?”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n        <li><em>“Output Type”</em>: <code class=\"language-plaintext highlighter-rouge\">mgf</code></li>\n        <li>In <em>“Data Processing Filters”</em>:\n          <ul>\n            <li><em>“Apply peak picking?”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n            <li><em>“(Re-)calculate charge states?”</em>: <code class=\"language-plaintext highlighter-rouge\">no</code></li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>Why do we need to use MGF instead of RAW files for Search GUI?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <ol>\n      <li>SearchGUI is compatible only with MGF files, hence you have to use msconvert or Thermofile converter tools to convert the RAW format to MGF fomat.</li>\n    </ol>\n\n  </blockquote>\n\n</blockquote>\n\n<h2 id=\"perform-database-searching-with-search-gui\">Perform Database searching with <strong>Search GUI</strong></h2>\n<p>SearchGUI is a database-searching tool that comprises different search engines to match sample MS/MS spectra to known peptide sequences. In our analysis, we will use X!Tandem and MS-GF+ as search algorithms within SearchGUI for matching spectra from mass spectrometry data against peptides from the protein sequence database.</p>\n\n<p>The SearchGUI tool will perform a database search based on the parameters we’ve set and will generate a file (called a SearchGUI archive file) that will serve as the input for the PeptideShaker tool. The SearchGUI archive file contains Peptide-Spectral Matches (PSMs), and PeptideShaker is a post-processing software that will assess the confidence of the data. PeptideShaker also infers the identities of proteins based on the matched peptide sequences, and users are able to visualize these outputs to interpret results.  More information about database searching using SearchGUI and PeptideShaker is accessible at <a href=\"https://gxy.io/GTN:T00221\">Metaproteomics tutorial</a>.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title> Peptide discovery using SearchGUI </hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/galaxyp/peptideshaker/search_gui/4.0.41+galaxy1\" title=\"Search GUI tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Search GUI</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 4.0.41+galaxy1)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Identification Parameters file”</em>: <code class=\"language-plaintext highlighter-rouge\">Identification_Parameters_File</code> (output of <strong>Identification Parameters</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Fasta file”</em>: <code class=\"language-plaintext highlighter-rouge\">input_database_concatenated_target_decoy</code> (output of <strong>FastaCLI</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Input Peak Lists”</em>: <code class=\"language-plaintext highlighter-rouge\">output</code> (output of <strong>msconvert</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n        <li><em>“SearchGUI Options”</em>: <code class=\"language-plaintext highlighter-rouge\">Default</code></li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>Why do we need to add decoy sequences to our FASTA database for Search GUI? And how many do we need to add?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <ol>\n      <li>Adding decoy sequences helps in FDR estimation, discriminating true positives from false positives, and quality control of the data. The number of decoy sequences you need to add to your database depends on the desired FDR level you want to achieve. A common practice is to use a 1:1 ratio of target sequences to decoy sequences. In other words, for every real protein sequence in your database, you would add a decoy sequence. This allows you to estimate the FDR at 1%, 5%, or any other chosen threshold.</li>\n    </ol>\n\n  </blockquote>\n\n</blockquote>\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>What is the Identification Parameters tool?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <ol>\n      <li>Identification Parameters tool is an input required by the search GUI tool, it contains all the parameters required to run the search algorithms.</li>\n    </ol>\n\n  </blockquote>\n\n</blockquote>\n\n<h2 id=\"post-processing-of-searchgui-output-using-with-peptide-shaker\">Post-processing of SearchGUI output using with <strong>Peptide Shaker</strong></h2>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title> Peptide Shaker </hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/galaxyp/peptideshaker/peptide_shaker/2.0.33+galaxy1\" title=\"Peptide Shaker tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Peptide Shaker</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 2.0.33+galaxy1)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Compressed SearchGUI results”</em>: <code class=\"language-plaintext highlighter-rouge\">searchgui_results</code> (output of <strong>Search GUI</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n        <li>In <em>“Exporting options”</em>:\n          <ul>\n            <li><em>“Follow-up analysis export options”</em>: <code class=\"language-plaintext highlighter-rouge\">Do not export</code></li>\n            <li><em>“Identification features reports to be generated”</em>: <code class=\"language-plaintext highlighter-rouge\">PSM Report</code> <code class=\"language-plaintext highlighter-rouge\">Peptide Report</code> <code class=\"language-plaintext highlighter-rouge\">Protein Report</code> <code class=\"language-plaintext highlighter-rouge\">Certificate of Analysis</code></li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>What are the differences between the following reports from PeptideShaker: PSM report, Peptide report, and Protein report?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <ol>\n      <li>PSM reports focus on individual peptide-spectrum matches, providing detailed information about each spectrum and its assigned peptide sequence. Peptide reports summarize information about unique peptides and their properties. Protein reports, on the other hand, focus on proteins, including protein inference, grouping, and quantification, making them more suitable for understanding the overall protein composition in a sample. These reports serve different purposes in proteomic data analysis and are used to extract various levels of information from mass spectrometry results.</li>\n    </ol>\n\n  </blockquote>\n\n</blockquote>\n\n<h2 id=\"using-text-manipulation-tools-to-manage-microbial-outputs-from-searchguipeptideshaker\">Using Text Manipulation Tools to Manage Microbial Outputs from SearchGUI/PeptideShaker</h2>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title> Selecting microbial peptides from SearchGUI/PeptideShaker with Select tool </hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"Grep1\" title=\"Select tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Select</strong></span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Select lines from”</em>: <code class=\"language-plaintext highlighter-rouge\">output_peptides</code> (output of <strong>Peptide Shaker</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n        <li><em>“that”</em>: <code class=\"language-plaintext highlighter-rouge\">NOT Matching</code></li>\n        <li><em>“the pattern”</em>: <code class=\"language-plaintext highlighter-rouge\">(_HUMAN)|(_REVERSED)|(CON)|(con)</code></li>\n        <li><em>“Keep header line”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>What is the purpose of this step?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <ol>\n      <li>This step is to extract microbial peptides or to remove any peptides that match humans, reverse, contaminants, etc.</li>\n    </ol>\n\n  </blockquote>\n\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title> Selecting microbial PSMs from SearchGUI/PeptideShaker with Select </hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"Grep1\" title=\"Select tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Select</strong></span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Select lines from”</em>: <code class=\"language-plaintext highlighter-rouge\">output_psm</code> (output of <strong>Peptide Shaker</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n        <li><em>“that”</em>: <code class=\"language-plaintext highlighter-rouge\">NOT Matching</code></li>\n        <li><em>“the pattern”</em>: <code class=\"language-plaintext highlighter-rouge\">(_HUMAN)|(_REVERSED)|(CON)|(con)</code></li>\n        <li><em>“Keep header line”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title> Filtering confident microbial peptides from SGPS  with Filter </hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"Filter1\" title=\"Filter tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Filter</strong></span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Filter”</em>: <code class=\"language-plaintext highlighter-rouge\">out_file1</code> (output of <strong>Select</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n        <li><em>“With following condition”</em>: <code class=\"language-plaintext highlighter-rouge\">c17=='Confident'</code></li>\n        <li><em>“Number of header lines to skip”</em>: <code class=\"language-plaintext highlighter-rouge\">1</code></li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>In the Filtering steps, what does “Confidence” mean quantitatively, i.e. what is the percentage cutoff?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <ol>\n      <li>The term “Confidence” in the context of proteomic data analysis often refers to a measure of how reliable or trustworthy a particular protein or peptide identification is. However, the specific numerical value or percentage cutoff for confidence can vary depending on the software or approach you are using and the goals of your analysis. In many proteomics studies, researchers use a false discovery rate (FDR) to set a quantitative confidence threshold. Here we have set it as 1%FDR, which means that you’re accepting only 1% or less of your reported identifications as likely to be false positives.</li>\n    </ol>\n\n  </blockquote>\n\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title> Filtering confident microbial PSMs from SGPS with Filter </hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"Filter1\" title=\"Filter tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Filter</strong></span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Filter”</em>: <code class=\"language-plaintext highlighter-rouge\">out_file1</code> (output of <strong>Select</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n        <li><em>“With following condition”</em>: <code class=\"language-plaintext highlighter-rouge\">c24=='Confident'</code></li>\n        <li><em>“Number of header lines to skip”</em>: <code class=\"language-plaintext highlighter-rouge\">1</code></li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>We will generate and merge the Human SwissProt Protein Database and contaminants (cRAP) and convert the resulting FASTA file to a tabular file that will be used in the Query Tabular tool to generate distinct microbial peptides from SearchGUI/PeptideShaker.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title> Merging Human SwissProt and cRAP databases for Query Tabular with FASTA Merge Files and Filter Unique Sequences </hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/galaxyp/fasta_merge_files_and_filter_unique_sequences/fasta_merge_files_and_filter_unique_sequences/1.2.0\" title=\"FASTA Merge Files and Filter Unique Sequences tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>FASTA Merge Files and Filter Unique Sequences</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 1.2.0)</span> with the following parameters:\n      <ul>\n        <li><em>“Run in batch mode?”</em>: <code class=\"language-plaintext highlighter-rouge\">Merge individual FASTAs (output collection if input is collection)</code>\n          <ul>\n            <li>In <em>“Input FASTA File(s)”</em>:\n              <ul>\n                <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <em>“Insert Input FASTA File(s)”</em>\n                  <ul>\n                    <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“FASTA File”</em>: <code class=\"language-plaintext highlighter-rouge\">Human Swissprot Protein Database</code> (output of <strong>Protein Database Downloader</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n                    <li>\n                      <ul>\n                        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“FASTA File”</em>: <code class=\"language-plaintext highlighter-rouge\">Contaminants cRAP database</code> (output of <strong>Protein Database Downloader</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n                      </ul>\n                    </li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title> Converting FASTA sequences to TAB-delimited file with FASTA-to-Tabular </hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/devteam/fasta_to_tabular/fasta2tab/1.1.0\" title=\"FASTA-to-Tabular tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>FASTA-to-Tabular</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 1.1.0)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Convert these sequences”</em>: <code class=\"language-plaintext highlighter-rouge\">output</code> (output of <strong>FASTA Merge Files and Filter Unique Sequences</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title> Filtering out accession numbers from TAB-delimited file  with Filter Tabular </hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/filter_tabular/filter_tabular/3.3.0\" title=\"Filter Tabular tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Filter Tabular</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 3.3.0)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Tabular Dataset to filter”</em>: <code class=\"language-plaintext highlighter-rouge\">output</code> (output of <strong>FASTA-to-Tabular</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n        <li>In <em>“Filter Tabular Input Lines”</em>:\n          <ul>\n            <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <em>“Insert Filter Tabular Input Lines”</em>\n              <ul>\n                <li><em>“Filter By”</em>: <code class=\"language-plaintext highlighter-rouge\">select columns</code>\n                  <ul>\n                    <li><em>“enter column numbers to keep”</em>: <code class=\"language-plaintext highlighter-rouge\">1</code></li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n            <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <em>“Insert Filter Tabular Input Lines”</em>\n              <ul>\n                <li><em>“Filter By”</em>: <code class=\"language-plaintext highlighter-rouge\">regex replace value in column</code>\n                  <ul>\n                    <li><em>“enter column number to replace”</em>: <code class=\"language-plaintext highlighter-rouge\">1</code></li>\n                    <li><em>“regex pattern”</em>: <code class=\"language-plaintext highlighter-rouge\">^[^|]+[|]([^| ]+).*$</code></li>\n                    <li><em>“replacement expression”</em>: <code class=\"language-plaintext highlighter-rouge\">\\1</code></li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>What’s the difference between a FASTA and Tabular output?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <ol>\n      <li>FASTA Output: Typically used to report identified peptide or protein sequences, which are useful for building or updating sequence databases, for downstream sequence analysis, or for re-searching against the sequences.\nTabular Output: Used for presenting various information related to identified peptides or proteins, such as accession numbers, scores, abundance values, and other attributes. Tabular output facilitates data analysis, comparisons, and custom data processing.</li>\n    </ol>\n\n  </blockquote>\n\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title> Querying protein accession numbers and peptide sequences of confident microbial PSMs (from SGPS) with Query Tabular </hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/query_tabular/query_tabular/3.3.0\" title=\"Query Tabular tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Query Tabular</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 3.3.0)</span> with the following parameters:\n      <ul>\n        <li>In <em>“Database Table”</em>:\n          <ul>\n            <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <em>“Insert Database Table”</em>\n              <ul>\n                <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Tabular Dataset for Table”</em>: <code class=\"language-plaintext highlighter-rouge\">out_file1</code> (output of <strong>Filter</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n                <li>In <em>“Filter Dataset Input”</em>:\n                  <ul>\n                    <li>In <em>“Filter Tabular Input Lines”</em>:\n                      <ul>\n                        <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <em>“Insert Filter Tabular Input Lines”</em>\n                          <ul>\n                            <li><em>“Filter By”</em>: <code class=\"language-plaintext highlighter-rouge\">skip leading lines</code>\n                              <ul>\n                                <li><em>“Skip lines”</em>: <code class=\"language-plaintext highlighter-rouge\">1</code></li>\n                              </ul>\n                            </li>\n                          </ul>\n                        </li>\n                        <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <em>“Insert Filter Tabular Input Lines”</em>\n                          <ul>\n                            <li><em>“Filter By”</em>: <code class=\"language-plaintext highlighter-rouge\">prepend a line number column</code></li>\n                          </ul>\n                        </li>\n                      </ul>\n                    </li>\n                  </ul>\n                </li>\n                <li>In <em>“Table Options”</em>:\n                  <ul>\n                    <li><em>“Specify Name for Table”</em>: <code class=\"language-plaintext highlighter-rouge\">psms</code></li>\n                    <li><em>“Specify Column Names (comma-separated list)”</em>: <code class=\"language-plaintext highlighter-rouge\">ln,id,Proteins,Sequence</code></li>\n                    <li><em>“Only load the columns you have named into database”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n                    <li>In <em>“Table Index”</em>:\n                      <ul>\n                        <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <em>“Insert Table Index”</em>\n                          <ul>\n                            <li><em>“Index on Columns”</em>: <code class=\"language-plaintext highlighter-rouge\">ln</code></li>\n                          </ul>\n                        </li>\n                      </ul>\n                    </li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n            <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <em>“Insert Database Table”</em>\n              <ul>\n                <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Tabular Dataset for Table”</em>: <code class=\"language-plaintext highlighter-rouge\">out_file1</code> (output of <strong>Filter</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n                <li>In <em>“Filter Dataset Input”</em>:\n                  <ul>\n                    <li>In <em>“Filter Tabular Input Lines”</em>:\n                      <ul>\n                        <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <em>“Insert Filter Tabular Input Lines”</em>\n                          <ul>\n                            <li><em>“Filter By”</em>: <code class=\"language-plaintext highlighter-rouge\">skip leading lines</code>\n                              <ul>\n                                <li><em>“Skip lines”</em>: <code class=\"language-plaintext highlighter-rouge\">1</code></li>\n                              </ul>\n                            </li>\n                          </ul>\n                        </li>\n                        <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <em>“Insert Filter Tabular Input Lines”</em>\n                          <ul>\n                            <li><em>“Filter By”</em>: <code class=\"language-plaintext highlighter-rouge\">prepend a line number column</code></li>\n                          </ul>\n                        </li>\n                        <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <em>“Insert Filter Tabular Input Lines”</em>\n                          <ul>\n                            <li><em>“Filter By”</em>: <code class=\"language-plaintext highlighter-rouge\">normalize list columns, replicates row for each item in list</code>\n                              <ul>\n                                <li><em>“enter column numbers to normalize”</em>: <code class=\"language-plaintext highlighter-rouge\">3</code></li>\n                              </ul>\n                            </li>\n                          </ul>\n                        </li>\n                      </ul>\n                    </li>\n                  </ul>\n                </li>\n                <li>In <em>“Table Options”</em>:\n                  <ul>\n                    <li><em>“Specify Name for Table”</em>: <code class=\"language-plaintext highlighter-rouge\">prots</code></li>\n                    <li><em>“Specify Column Names (comma-separated list)”</em>: <code class=\"language-plaintext highlighter-rouge\">ln,id,prot</code></li>\n                    <li><em>“Only load the columns you have named into database”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n                    <li>In <em>“Table Index”</em>:\n                      <ul>\n                        <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <em>“Insert Table Index”</em>\n                          <ul>\n                            <li><em>“This is a unique index”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n                            <li><em>“Index on Columns”</em>: <code class=\"language-plaintext highlighter-rouge\">prot,ln</code></li>\n                          </ul>\n                        </li>\n                      </ul>\n                    </li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n            <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <em>“Insert Database Table”</em>\n              <ul>\n                <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Tabular Dataset for Table”</em>: <code class=\"language-plaintext highlighter-rouge\">output</code> (output of <strong>Filter Tabular</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n                <li>In <em>“Table Options”</em>:\n                  <ul>\n                    <li><em>“Specify Name for Table”</em>: <code class=\"language-plaintext highlighter-rouge\">Uniprot</code></li>\n                    <li><em>“Specify Column Names (comma-separated list)”</em>: <code class=\"language-plaintext highlighter-rouge\">prot</code></li>\n                    <li>In <em>“Table Index”</em>:\n                      <ul>\n                        <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <em>“Insert Table Index”</em>\n                          <ul>\n                            <li><em>“Index on Columns”</em>: <code class=\"language-plaintext highlighter-rouge\">prot</code></li>\n                          </ul>\n                        </li>\n                      </ul>\n                    </li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n        <li><em>“SQL Query to generate tabular output”</em>: <code class=\"language-plaintext highlighter-rouge\">SELECT id,Proteins,Sequence FROM psms WHERE psms.ln NOT IN (SELECT distinct prots.ln FROM prots JOIN Uniprot ON prots.prot = Uniprot.prot) ORDER BY psms.ln</code></li>\n        <li><em>“include query result column headers”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title> Cutting out peptide sequences from Query Tabular with Cut </hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"Cut1\" title=\"Cut tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Cut</strong></span> with the following parameters:\n      <ul>\n        <li><em>“Cut columns”</em>: <code class=\"language-plaintext highlighter-rouge\">c3</code></li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“From”</em>: <code class=\"language-plaintext highlighter-rouge\">output</code> (output of <strong>Query Tabular</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title> Grouping distinct (unique) peptides from SGPS with Group </hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"Grouping1\" title=\"Group tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Group</strong></span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Select data”</em>: <code class=\"language-plaintext highlighter-rouge\">out_file1</code> (output of <strong>Cut</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n        <li><em>“Group by column”</em>: <code class=\"language-plaintext highlighter-rouge\">c1</code></li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h2 id=\"perform-peptide-discovery-with-maxquant\">Perform peptide discovery with <strong>MaxQuant</strong></h2>\n<p>MaxQuant is an MS-based proteomics platform that is capable of processing raw data and provides improved mass precision and high precursor mass accuracy (HPMA), which resulted in increased protein identification and more in-depth proteomic analysis. Raw MS/MS spectra will be searched against the reduced MetaNovo-generated database (~21.2k sequences). More information about analysis using MaxQuant is available, including <a href=\"https://gxy.io/GTN:T00218\">Label-free data analysis</a> and <a href=\"https://gxy.io/GTN:T00220\">MaxQuant and MSstats for the analysis of TMT data</a>.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title> Peptide discovery using MaxQuant </hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/galaxyp/maxquant/maxquant/2.0.3.0+galaxy0\" title=\"MaxQuant tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>MaxQuant</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 2.0.3.0+galaxy0)</span> with the following parameters:\n      <ul>\n        <li>In <em>“Input Options”</em>:\n          <ul>\n            <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“FASTA files”</em>: <code class=\"language-plaintext highlighter-rouge\">output</code> (Input dataset)</li>\n          </ul>\n        </li>\n        <li>In <em>“Search Options”</em>:\n          <ul>\n            <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Specify an experimental design template (if needed). For detailed instructions see the help text.”</em>: <code class=\"language-plaintext highlighter-rouge\">output</code> (Input dataset)</li>\n            <li><em>“minimum peptide length”</em>: <code class=\"language-plaintext highlighter-rouge\">8</code></li>\n            <li><em>“Match between runs”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n            <li><em>“Maximum peptide length for unspecific searches”</em>: <code class=\"language-plaintext highlighter-rouge\">50</code></li>\n          </ul>\n        </li>\n        <li>In <em>“Protein quantification”</em>:\n          <ul>\n            <li><em>“Use only unmodified peptides”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code>\n              <ul>\n                <li><em>“Modifications used in protein quantification”</em>: <code class=\"language-plaintext highlighter-rouge\">Oxidation (M)</code></li>\n              </ul>\n            </li>\n            <li>In <em>“LFQ Options”</em>:\n              <ul>\n                <li><em>“iBAQ (calculates absolute protein abundances by normalizing to copy number and not protein mass)”</em>: <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n        <li>In <em>“Parameter Group”</em>:\n          <ul>\n            <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <em>“Insert Parameter Group”</em>\n              <ul>\n                <li><i class=\"far fa-folder\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-collection</span> <em>“Infiles”</em>: <code class=\"language-plaintext highlighter-rouge\">output</code> (Input dataset collection)</li>\n                <li><em>“fixed modifications”</em>: <code class=\"language-plaintext highlighter-rouge\">Carbamidomethyl (C)</code></li>\n                <li><em>“variable modifications”</em>: <code class=\"language-plaintext highlighter-rouge\">Oxidation (M)</code></li>\n                <li><em>“enzyme”</em>: <code class=\"language-plaintext highlighter-rouge\">Trypsin/P</code></li>\n                <li><em>“Quantitation Methods”</em>: <code class=\"language-plaintext highlighter-rouge\">reporter ion MS2</code>\n                  <ul>\n                    <li><em>“isobaric labeling”</em>: <code class=\"language-plaintext highlighter-rouge\">TMT11plex</code></li>\n                    <li><em>“Filter by PIF”</em>: <code class=\"language-plaintext highlighter-rouge\">True</code></li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n        <li><em>“Generate PTXQC (proteomics quality control pipeline) report? (experimental setting)”</em>: <code class=\"language-plaintext highlighter-rouge\">False</code></li>\n        <li>In <em>“Output Options”</em>:\n          <ul>\n            <li><em>“Select the desired outputs.”</em>: <code class=\"language-plaintext highlighter-rouge\">Protein Groups</code> <code class=\"language-plaintext highlighter-rouge\">mqpar.xml</code> <code class=\"language-plaintext highlighter-rouge\">Peptides</code> <code class=\"language-plaintext highlighter-rouge\">MSMS</code> <code class=\"language-plaintext highlighter-rouge\">msms scans</code> <code class=\"language-plaintext highlighter-rouge\">summary</code> <code class=\"language-plaintext highlighter-rouge\">MaxQuant and PTXQC log</code> <code class=\"language-plaintext highlighter-rouge\">yaml config file</code></li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol class=\"solution\">\n    <li>What is the Experimental Design file for MaxQuant?\n      <blockquote>\n\n        <solution-title></solution-title>\n\n        <ol>\n          <li>In MaxQuant, the <strong>Experimental Design</strong> file is used to specify the experimental conditions, sample groups, and the relationships between different samples in a proteomics experiment. This file is a crucial component of the MaxQuant analysis process because it helps the software correctly organize and analyze the mass spectrometry data. The <strong>Experimental Design</strong> file typically has a “.txt” extension and is a tab-delimited text file. Here’s what you might include in an Experimental Design file for MaxQuant: <strong>Sample Names</strong> (You specify the names of each sample in your experiment. These names should be consistent with the naming conventions used in your raw data files.), <strong>Experimental Conditions</strong> (You define the experimental conditions or treatment groups associated with each sample. For example, you might have control and treated groups, and you would assign the appropriate condition to each sample.), <strong>Replicates</strong> (You indicate the replicates for each sample, which is important for assessing the statistical significance of your results. Replicates are typically denoted by numeric values (e.g., “1,” “2,” “3”) or by unique identifiers (e.g., “Replicate A,” “Replicate B”)), <strong>Labels</strong> (If you’re using isobaric labeling methods like TMT (Tandem Mass Tag) or iTRAQ (Isobaric Tags for Relative and Absolute Quantitation), you specify the labels associated with each sample. This is important for quantification.), <strong>Other Metadata</strong> (You can include additional metadata relevant to your experiment, such as the biological source, time points, or any other information that helps describe the samples and experimental conditions.)</li>\n        </ol>\n\n      </blockquote>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h2 id=\"using-text-manipulation-tools-to-manage-microbial-outputs-from-maxquant\">Using Text Manipulation Tools to Manage Microbial Outputs from MaxQuant</h2>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title> Selecting microbial peptides from MaxQuant with Select </hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"Grep1\" title=\"Select tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Select</strong></span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Select lines from”</em>: <code class=\"language-plaintext highlighter-rouge\">peptides</code> (output of <strong>MaxQuant</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n        <li><em>“that”</em>: <code class=\"language-plaintext highlighter-rouge\">NOT Matching</code></li>\n        <li><em>“the pattern”</em>: <code class=\"language-plaintext highlighter-rouge\">(_HUMAN)|(_REVERSED)|(CON)|(con)</code></li>\n        <li><em>“Keep header line”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title> Cutting out microbial peptide sequences with Cut </hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"Cut1\" title=\"Cut tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Cut</strong></span> with the following parameters:\n      <ul>\n        <li><em>“Cut columns”</em>: <code class=\"language-plaintext highlighter-rouge\">c1</code></li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“From”</em>: <code class=\"language-plaintext highlighter-rouge\">out_file1</code> (output of <strong>Select</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title> Remove header line from MaxQuant peptide output with Remove beginning </hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"Remove beginning1\" title=\"Remove beginning tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Remove beginning</strong></span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“from”</em>: <code class=\"language-plaintext highlighter-rouge\">out_file1</code> (output of <strong>Cut</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title> Grouping distinct (unique) peptide sequences from MaxQuant with Group </hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"Grouping1\" title=\"Group tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Group</strong></span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Select data”</em>: <code class=\"language-plaintext highlighter-rouge\">out_file1</code> (output of <strong>Remove beginning</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n        <li><em>“Group by column”</em>: <code class=\"language-plaintext highlighter-rouge\">c1</code></li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>How case-sensitive is the Group tool? Can I only group by column values, and not row values?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <ol>\n      <li>You can make it case sensitive, by default it is not. The tool here does column grouping only.</li>\n    </ol>\n\n  </blockquote>\n\n</blockquote>\n\n<h2 id=\"process-sgps-and-maxquant-peptides-to-compile-one-list-of-unique-microbial-peptides\">Process SGPS and MaxQuant peptides to compile one list of unique microbial peptides</h2>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title> Concatenate SGPS and MaxQuant peptides into a singular database with Concatenate datasets </hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_cat/0.1.1\" title=\"Concatenate datasets tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Concatenate datasets</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.1.1)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-copy\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-files</span> <em>“Datasets to concatenate”</em>: <code class=\"language-plaintext highlighter-rouge\">out_file1</code> (output of <strong>Group</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>), <code class=\"language-plaintext highlighter-rouge\">out_file1</code> (output of <strong>Group</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title> Group the peptides from SGPS and MaxQuant to remove duplicates with Group </hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"Grouping1\" title=\"Group tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Group</strong></span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Select data”</em>: <code class=\"language-plaintext highlighter-rouge\">out_file1</code> (output of <strong>Concatenate datasets</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n        <li><em>“Group by column”</em>: <code class=\"language-plaintext highlighter-rouge\">c1</code></li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h1 id=\"conclusion\">Conclusion</h1>\n<p>By following this tutorial, you have effectively conducted a search of your MS/MS data against the compact database and successfully retrieved reliable microbial peptides. After identifying these microbial peptides with the assistance of MaxQuant and SearchGUI, the next step is to verify the presence of these peptides. This compiled list of unique peptides will serve as the input for PepQuery to validate the confident identification of microbial peptides with the help of the verification workflow.</p>\n"],"ref_slides":[],"hands_on":true,"slides":false,"mod_date":"2024-02-12 12:37:40 +0000","pub_date":"2024-02-06 15:43:02 +0000","version":2,"api":"https://training.galaxyproject.org/training-material/api/topics/proteomics/tutorials/clinical-mp-2-discovery/tutorial.json","tools":["Cut1","Filter1","Grep1","Grouping1","Remove beginning1","toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_cat/0.1.1","toolshed.g2.bx.psu.edu/repos/devteam/fasta_to_tabular/fasta2tab/1.1.0","toolshed.g2.bx.psu.edu/repos/galaxyp/fasta_merge_files_and_filter_unique_sequences/fasta_merge_files_and_filter_unique_sequences/1.2.0","toolshed.g2.bx.psu.edu/repos/galaxyp/maxquant/maxquant/2.0.3.0+galaxy0","toolshed.g2.bx.psu.edu/repos/galaxyp/msconvert/msconvert/3.0.20287.2","toolshed.g2.bx.psu.edu/repos/galaxyp/peptideshaker/fasta_cli/4.0.41+galaxy1","toolshed.g2.bx.psu.edu/repos/galaxyp/peptideshaker/peptide_shaker/2.0.33+galaxy1","toolshed.g2.bx.psu.edu/repos/galaxyp/peptideshaker/search_gui/4.0.41+galaxy1","toolshed.g2.bx.psu.edu/repos/iuc/filter_tabular/filter_tabular/3.3.0","toolshed.g2.bx.psu.edu/repos/iuc/query_tabular/query_tabular/3.3.0"],"supported_servers":{"exact":[{"url":"https://usegalaxy.cz/","name":"UseGalaxy.cz","usegalaxy":false},{"url":"https://usegalaxy.eu","name":"UseGalaxy.eu","usegalaxy":true},{"url":"https://usegalaxy.org","name":"UseGalaxy.org (Main)","usegalaxy":true},{"url":"https://usegalaxy.org.au","name":"UseGalaxy.org.au","usegalaxy":true}],"inexact":[]},"topic_name_human":"Proteomics","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[{"name":"text_processing","owner":"bgruening","revisions":"d698c222f354","tool_panel_section_label":"Text Manipulation","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"fasta_to_tabular","owner":"devteam","revisions":"7e801ab2b70e","tool_panel_section_label":"FASTA/FASTQ","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"fasta_merge_files_and_filter_unique_sequences","owner":"galaxyp","revisions":"f546e7278f04","tool_panel_section_label":"FASTA/FASTQ","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"maxquant","owner":"galaxyp","revisions":"9c52362ae7bb","tool_panel_section_label":"Proteomics","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"msconvert","owner":"galaxyp","revisions":"6153e8ada1ee","tool_panel_section_label":"Convert Formats","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"peptideshaker","owner":"galaxyp","revisions":"3ec27b4cee7c","tool_panel_section_label":"Proteomics","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"peptideshaker","owner":"galaxyp","revisions":"3ec27b4cee7c","tool_panel_section_label":"Proteomics","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"peptideshaker","owner":"galaxyp","revisions":"3ec27b4cee7c","tool_panel_section_label":"Proteomics","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"filter_tabular","owner":"iuc","revisions":"557ec8d7087d","tool_panel_section_label":"Text Manipulation","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"query_tabular","owner":"iuc","revisions":"cf34c344508d","tool_panel_section_label":"Text Manipulation","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"}]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools:\n- name: text_processing\n  owner: bgruening\n  revisions: d698c222f354\n  tool_panel_section_label: Text Manipulation\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: fasta_to_tabular\n  owner: devteam\n  revisions: 7e801ab2b70e\n  tool_panel_section_label: FASTA/FASTQ\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: fasta_merge_files_and_filter_unique_sequences\n  owner: galaxyp\n  revisions: f546e7278f04\n  tool_panel_section_label: FASTA/FASTQ\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: maxquant\n  owner: galaxyp\n  revisions: 9c52362ae7bb\n  tool_panel_section_label: Proteomics\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: msconvert\n  owner: galaxyp\n  revisions: 6153e8ada1ee\n  tool_panel_section_label: Convert Formats\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: peptideshaker\n  owner: galaxyp\n  revisions: 3ec27b4cee7c\n  tool_panel_section_label: Proteomics\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: peptideshaker\n  owner: galaxyp\n  revisions: 3ec27b4cee7c\n  tool_panel_section_label: Proteomics\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: peptideshaker\n  owner: galaxyp\n  revisions: 3ec27b4cee7c\n  tool_panel_section_label: Proteomics\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: filter_tabular\n  owner: iuc\n  revisions: 557ec8d7087d\n  tool_panel_section_label: Text Manipulation\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: query_tabular\n  owner: iuc\n  revisions: cf34c344508d\n  tool_panel_section_label: Text Manipulation\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n","tours":false,"video":false,"slides_recordings":false,"translations":{"tutorial":[],"slides":[],"video":false},"license":"CC-BY-4.0","type":"tutorial","contributors":[{"name":"Subina Mehta","email":"subinamehta@gmail.com","twitter":"Subina_Mehta","linkedin":"subinamehta","matrix":"subinamehta:matrix.org","orcid":"0000-0001-9818-0537","joined":"2018-06","id":"subinamehta","url":"https://training.galaxyproject.org/training-material/api/contributors/subinamehta.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/subinamehta/"},{"name":"Katherine Do","joined":"2023-08","id":"katherine-d21","url":"https://training.galaxyproject.org/training-material/api/contributors/katherine-d21.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/katherine-d21/"},{"name":"Dechen Bhuming","joined":"2023-06","id":"dechendb","url":"https://training.galaxyproject.org/training-material/api/contributors/dechendb.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/dechendb/"},{"name":"Pratik Jagtap","email":"pjagtap@umn.edu","joined":"2017-09","orcid":"0000-0003-0984-0973","id":"pratikdjagtap","url":"https://training.galaxyproject.org/training-material/api/contributors/pratikdjagtap.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/pratikdjagtap/"},{"name":"Timothy J. Griffin","email":"tgriffin@umn.edu","github":false,"joined":"2017-09","orcid":"0000-0001-6801-2559","id":"timothygriffin","url":"https://training.galaxyproject.org/training-material/api/contributors/timothygriffin.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/timothygriffin/"}]}