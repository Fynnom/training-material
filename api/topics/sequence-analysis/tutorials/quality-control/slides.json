{"layout":"tutorial_slides","title":"Quality Control","zenodo_link":"https://doi.org/10.5281/zenodo.61771","questions":["How to control quality of NGS data?","What are the quality parameters to check for each dataset?","How to improve the quality of a sequence dataset?"],"objectives":["Manipulate FASTQ files","Control quality from a FASTQ file for short and long reads","Use FastQC/NanoPlot/PycoQC","Understand output","Use tools for quality correction"],"follow_up_training":[{"type":"internal","topic_name":"sequence-analysis","tutorials":["mapping"]}],"time_estimation":"1h","level":"Introductory","key_points":["Run quality control on every sequencing dataset before any other analyses","Choose QC parameters carefully","Re-run FastQC to check the impact of the quality control"],"contributors":["bebatut","abretaud","alexcorm","lleroi","r1corre","stephanierobin","gallantries"],"recordings":[{"captioners":["ennovytje","nagoue","hexylena"],"date":"2021-02-15","galaxy_version":"21.01","length":"40M","youtube_id":"BWonTPS4zB8","speakers":["heylf"]}],"js_requirements":{"mathjax":null,"mermaid":false},"short_id":"S00082","url":"/topics/sequence-analysis/tutorials/quality-control/slides.html","topic_name":"sequence-analysis","tutorial_name":"quality-control","dir":"topics/sequence-analysis/tutorials/quality-control","symlink":null,"id":"sequence-analysis/quality-control","ref_tutorials":["<p>During sequencing, the nucleotide bases in a DNA or RNA sample (library) are determined by the sequencer. For each fragment in the library, a sequence is generated, also called a <strong>read</strong>, which is simply a succession of nucleotides.</p>\n\n<p>Modern sequencing technologies can generate a massive number of sequence reads in a single experiment. However, no sequencing technology is perfect, and each instrument will generate different types and amount of errors, such as incorrect nucleotides being called. These wrongly called bases are due to the technical limitations of each sequencing platform.</p>\n\n<p>Therefore, it is necessary to understand, identify and exclude error-types that may impact the interpretation of downstream analysis.\nSequence quality control is therefore an essential first step in your analysis. Catching errors early saves time later on.</p>\n\n<blockquote class=\"agenda\">\n  <agenda-title></agenda-title>\n\n  <p>In this tutorial, we will deal with:</p>\n\n<ol id=\"markdown-toc\">\n  <li><a href=\"#inspect-a-raw-sequence-file\" id=\"markdown-toc-inspect-a-raw-sequence-file\">Inspect a raw sequence file</a></li>\n  <li><a href=\"#assess-quality-with-fastqe----short-reads-only\" id=\"markdown-toc-assess-quality-with-fastqe----short-reads-only\">Assess quality with FASTQE üß¨üòé - short reads only</a></li>\n  <li><a href=\"#assess-quality-with-fastqc---short--long-reads\" id=\"markdown-toc-assess-quality-with-fastqc---short--long-reads\">Assess quality with FastQC - short &amp; long reads</a>    <ol>\n      <li><a href=\"#per-base-sequence-quality\" id=\"markdown-toc-per-base-sequence-quality\">Per base sequence quality</a></li>\n      <li><a href=\"#per-sequence-quality-scores\" id=\"markdown-toc-per-sequence-quality-scores\">Per sequence quality scores</a></li>\n      <li><a href=\"#per-base-sequence-content\" id=\"markdown-toc-per-base-sequence-content\">Per base sequence content</a></li>\n      <li><a href=\"#per-sequence-gc-content\" id=\"markdown-toc-per-sequence-gc-content\">Per sequence GC content</a></li>\n      <li><a href=\"#sequence-duplication-levels\" id=\"markdown-toc-sequence-duplication-levels\">Sequence Duplication Levels</a></li>\n      <li><a href=\"#over-represented-sequences\" id=\"markdown-toc-over-represented-sequences\">Over-represented sequences</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#trim-and-filter---short-reads\" id=\"markdown-toc-trim-and-filter---short-reads\">Trim and filter - short reads</a></li>\n  <li><a href=\"#processing-multiple-datasets\" id=\"markdown-toc-processing-multiple-datasets\">Processing multiple datasets</a>    <ol>\n      <li><a href=\"#process-paired-end-data\" id=\"markdown-toc-process-paired-end-data\">Process paired-end data</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#assess-quality-with-nanoplot---long-reads-only\" id=\"markdown-toc-assess-quality-with-nanoplot---long-reads-only\">Assess quality with Nanoplot - Long reads only</a>    <ol>\n      <li><a href=\"#histogram-of-read-lengths\" id=\"markdown-toc-histogram-of-read-lengths\">Histogram of read lengths</a></li>\n      <li><a href=\"#read-lengths-vs-average-read-quality-plot-using-dots\" id=\"markdown-toc-read-lengths-vs-average-read-quality-plot-using-dots\">Read lengths vs Average read quality plot using dots</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#assess-quality-with-pycoqc---nanopore-only\" id=\"markdown-toc-assess-quality-with-pycoqc---nanopore-only\">Assess quality with PycoQC - Nanopore only</a>    <ol>\n      <li><a href=\"#basecalled-reads-length\" id=\"markdown-toc-basecalled-reads-length\">Basecalled reads length</a></li>\n      <li><a href=\"#basecalled-reads-length-vs-reads-phred-quality\" id=\"markdown-toc-basecalled-reads-length-vs-reads-phred-quality\">Basecalled reads length vs reads PHRED quality</a></li>\n      <li><a href=\"#output-over-experiment-time\" id=\"markdown-toc-output-over-experiment-time\">Output over experiment time</a></li>\n      <li><a href=\"#channel-activity-over-time\" id=\"markdown-toc-channel-activity-over-time\">Channel activity over time</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#conclusion\" id=\"markdown-toc-conclusion\">Conclusion</a></li>\n</ol>\n\n</blockquote>\n\n<h1 id=\"inspect-a-raw-sequence-file\">Inspect a raw sequence file</h1>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Data upload</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Create a new history for this tutorial and give it a proper name</p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-creating-a-new-history\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-creating-a-new-history\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Creating a new history</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <p>Click the <i class=\"fas fa-plus\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">new-history</span> icon at the top of the history panel:</p>   <p><img src=\"/training-material/shared/images/history_create_new.svg\" alt=\"UI for creating new history\" /></p>   <!-- the original drawing can be found here https://docs.google.com/drawings/d/1cCBrLAo4kDGic5QyB70rRiWJAKTenTU8STsKDaLcVU8/edit?usp=sharing --> </blockquote>\n      <p><!--END_SNIPPET--></p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-renaming-a-history\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-renaming-a-history\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Renaming a history</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ol>   <li>Click on <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> (<strong>Edit</strong>) next to the history name (which by default is ‚ÄúUnnamed history‚Äù)</li>   <li>Type the new name</li>   <li>Click on <strong>Save</strong></li> </ol>   <p>If you do not have the <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> (<strong>Edit</strong>) next to the history name:</p>   <ol>   <li>Click on <strong>Unnamed history</strong> (or the current name of the history) (<strong>Click to rename history</strong>) at the top of your history panel</li>   <li>Type the new name</li>   <li>Press <kbd>Enter</kbd></li> </ol> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li>\n      <p>Import the file <code class=\"language-plaintext highlighter-rouge\">female_oral2.fastq-4143.gz</code> from <a href=\"https://zenodo.org/record/3977236\">Zenodo</a> or from the data library (ask your instructor)\nThis is a microbiome sample from a snake <span class=\"citation\"><a href=\"#StJacques2021\">Jacques <i>et al.</i> 2021</a></span>.</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>https://zenodo.org/record/3977236/files/female_oral2.fastq-4143.gz\n</code></pre></div>      </div>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-importing-via-links\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-importing-via-links\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Importing via links</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Copy the link location</li>   <li>     <p>Click <i class=\"fas fa-upload\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-upload</span> <strong>Upload Data</strong> at the top of the tool panel</p>   </li>   <li>Select <i class=\"fa fa-edit\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-wf-edit</span> <strong>Paste/Fetch Data</strong></li>   <li>     <p>Paste the link(s) into the text field</p>   </li>   <li>     <p>Press <strong>Start</strong></p>   </li>   <li><strong>Close</strong> the window</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-importing-data-from-a-data-library\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-importing-data-from-a-data-library\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Importing data from a data library</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <p>As an alternative to uploading the data from a URL or your computer, the files may also have been made available from a <em>shared data library</em>:</p>   <ol>   <li>Go into <strong>Shared data</strong> (top panel) then <strong>Data libraries</strong></li>   <li>Navigate to  the correct folder as indicated by your instructor.     <ul>       <li>On most Galaxies tutorial data will be provided in a folder named <strong>GTN - Material ‚Äì&gt; Topic Name -&gt; Tutorial Name</strong>.</li>     </ul>   </li>   <li>Select the desired files</li>   <li>Click on <strong>Add to History</strong> <i class=\"fas fa-caret-down\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-dropdown</span> near the top and select <strong>as Datasets</strong> from the dropdown menu</li>   <li>     <p>In the pop-up window, choose</p>     <ul>       <li><em>‚ÄúSelect history‚Äù</em>: the history you want to import the data to (or create a new one)</li>     </ul>   </li>   <li>Click on <strong>Import</strong></li> </ol> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li>\n      <p>Rename the imported dataset to <code class=\"language-plaintext highlighter-rouge\">Reads</code>.</p>\n    </li>\n  </ol>\n</blockquote>\n\n<p>We just imported a file into Galaxy. This file is similar to the data we could get directly from a sequencing facility: a <a href=\"https://en.wikipedia.org/wiki/FASTQ_format\">FASTQ file</a>.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Inspect the FASTQ file</hands-on-title>\n\n  <ol>\n    <li>Inspect the file by clicking on the <i class=\"far fa-eye\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-eye</span> (eye) icon</li>\n  </ol>\n\n</blockquote>\n\n<p>Although it looks complicated (and maybe it is), the FASTQ format is easy to understand with a little decoding.</p>\n\n<p>Each read, representing a fragment of the library, is encoded by 4 lines:</p>\n\n<table>\n  <thead>\n    <tr>\n      <th>Line</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>1</td>\n      <td>Always begins with <code class=\"language-plaintext highlighter-rouge\">@</code> followed by the information about the read</td>\n    </tr>\n    <tr>\n      <td>2</td>\n      <td>The actual nucleic sequence</td>\n    </tr>\n    <tr>\n      <td>3</td>\n      <td>Always begins with a <code class=\"language-plaintext highlighter-rouge\">+</code> and contains sometimes the same info in line 1</td>\n    </tr>\n    <tr>\n      <td>4</td>\n      <td>Has a string of characters which represent the quality scores associated with each base of the nucleic sequence; must have the same number of characters as line 2</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>So for example, the first sequence in our file is:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>@M00970:337:000000000-BR5KF:1:1102:17745:1557 1:N:0:CGCAGAAC+ACAGAGTT\nGTGCCAGCCGCCGCGGTAGTCCGACGTGGCTGTCTCTTATACACATCTCCGAGCCCACGAGACCGAAGAACATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAGAAGCAAATGACGATTCAAGAAAGAAAAAAACACAGAATACTAACAATAAGTCATAAACATCATCAACATAAAAAAGGAAATACACTTACAACACATATCAATATCTAAAATAAATGATCAGCACACAACATGACGATTACCACACATGTGTACTACAAGTCAACTA\n+\nGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGFGGGFGGGGGGAFFGGFGGGGGGGGFGGGGGGGGGGGGGGFGGG+38+35*311*6,,31=******441+++0+0++0+*1*2++2++0*+*2*02*/***1*+++0+0++38++00++++++++++0+0+2++*+*+*+*+*****+0**+0**+***+)*.***1**//*)***)/)*)))*)))*),)0(((-((((-.(4(,,))).,(())))))).)))))))-))-(\n</code></pre></div></div>\n\n<p>It means that the fragment named <code class=\"language-plaintext highlighter-rouge\">@M00970</code> corresponds to the DNA sequence <code class=\"language-plaintext highlighter-rouge\">GTGCCAGCCGCCGCGGTAGTCCGACGTGGCTGTCTCTTATACACATCTCCGAGCCCACGAGACCGAAGAACATCTCGTATGCCGTCTTCTGCTTGAAAAAAAAAAAAAAAAAAAACAAAAAAAAAAAAAGAAGCAAATGACGATTCAAGAAAGAAAAAAACACAGAATACTAACAATAAGTCATAAACATCATCAACATAAAAAAGGAAATACACTTACAACACATATCAATATCTAAAATAAATGATCAGCACACAACATGACGATTACCACACATGTGTACTACAAGTCAACTA</code> and this sequence has been sequenced with a quality <code class=\"language-plaintext highlighter-rouge\">GGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGGFGGGFGGGGGGAFFGGFGGGGGGGGFGGGGGGGGGGGGGGFGGG+38+35*311*6,,31=******441+++0+0++0+*1*2++2++0*+*2*02*/***1*+++0+0++38++00++++++++++0+0+2++*+*+*+*+*****+0**+0**+***+)*.***1**//*)***)/)*)))*)))*),)0(((-((((-.(4(,,))).,(())))))).)))))))-))-(</code>.</p>\n\n<!--SNIPPET-->\n<blockquote class=\"details\">   <div class=\"box-title details-title\" id=\"details-quality-scores\"><button class=\"gtn-boxify-button details\" type=\"button\" aria-controls=\"details-quality-scores\" aria-expanded=\"true\"><i class=\"fas fa-info-circle\" aria-hidden=\"true\"></i> <span>Details: Quality Scores</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <p>But what does this quality score mean?</p>   <p>The quality score for each sequence is a string of characters, one for each base of the nucleotide sequence, used to characterize the probability of misidentification of each base. The score is encoded using the ASCII character table (with <a href=\"https://en.wikipedia.org/wiki/FASTQ_format#Encoding\">some historical differences</a>):</p>   <p>To save space, the sequencer records an <a href=\"http://drive5.com/usearch/manual/quality_score.html\">ASCII character</a> to represent scores 0-42. For example 10 corresponds to ‚Äú+‚Äù and 40 corresponds to ‚ÄúI‚Äù. FastQC knows how to translate this. This is often called ‚ÄúPhred‚Äù scoring.</p>   <p><img src=\"/training-material/topics/sequence-analysis/faqs/images/fastq-quality-encoding.png\" alt=\"Encoding of the quality score with ASCII characters for different Phred encoding. The ascii code sequence is shown at the top with symbols for 33 to 64, upper case letters, more symbols, and then lowercase letters. Sanger maps from 33 to 73 while solexa is shifted, starting at 59 and going to 104. Illumina 1.3 starts at 54 and goes to 104, Illumina 1.5 is shifted three scores to the right but still ends at 104. Illumina 1.8+ goes back to the Sanger except one single score wider. Illumina\" /></p>   <p>So there is an ASCII character associated with each nucleotide, representing its <a href=\"https://en.wikipedia.org/wiki/Phred_quality_score\">Phred quality score</a>, the probability of an incorrect base call:</p>   <table>   <thead>     <tr>       <th>Phred Quality Score</th>       <th>Probability of incorrect base call</th>       <th>Base call accuracy</th>     </tr>   </thead>   <tbody>     <tr>       <td>10</td>       <td>1 in 10</td>       <td>90%</td>     </tr>     <tr>       <td>20</td>       <td>1 in 100</td>       <td>99%</td>     </tr>     <tr>       <td>30</td>       <td>1 in 1000</td>       <td>99.9%</td>     </tr>     <tr>       <td>40</td>       <td>1 in 10,000</td>       <td>99.99%</td>     </tr>     <tr>       <td>50</td>       <td>1 in 100,000</td>       <td>99.999%</td>     </tr>     <tr>       <td>60</td>       <td>1 in 1,000,000</td>       <td>99.9999%</td>     </tr>   </tbody> </table>   <p>What does 0-42 represent? These numbers, when plugged into a formula, tell us the probability of an error for that base. This is the formula, where Q is our quality score (0-42) and P is the probability of an error:</p>   <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>Q = -10 log10(P)<br /></code></pre></div></div>   <p>Using this formula, we can calculate that a quality score of 40 means only 0.00010 probability of an error!</p> </blockquote>\n<p><!--END_SNIPPET--></p>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>Which ASCII character corresponds to the worst Phred score for Illumina 1.8+?</li>\n    <li>What is the Phred quality score of the 3rd nucleotide of the 1st sequence?</li>\n    <li>What is the accuracy of this 3rd nucleotide?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <ol>\n      <li>The worst Phred score is the smallest one, so 0. For Illumina 1.8+, it corresponds to the <code class=\"language-plaintext highlighter-rouge\">!</code> character.</li>\n      <li>The 3rd nucleotide of the 1st sequence has a ASCII character <code class=\"language-plaintext highlighter-rouge\">G</code>, which correspond to a score of 38.</li>\n      <li>The corresponding nucleotide <code class=\"language-plaintext highlighter-rouge\">G</code> has an accuracy of almost 99.99%</li>\n    </ol>\n\n  </blockquote>\n</blockquote>\n\n<blockquote class=\"comment\">\n  <comment-title></comment-title>\n  <p>The current lllumina (1.8+) uses Sanger format (Phred+33). If you are working with older datasets you may encounter the older scoring schemes. <strong>FastQC</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>, a tool we will use later in this tutorial, can be used to try to determine what type of quality encoding is used (through assessing the range of Phred values seen in the FASTQ).</p>\n</blockquote>\n\n<p>When looking at the file in Galaxy, it looks like most the nucleotides have a high score (<code class=\"language-plaintext highlighter-rouge\">G</code> corresponding to a score 38). Is it true for all sequences? And along the full sequence length?</p>\n\n<h1 id=\"assess-quality-with-fastqe----short-reads-only\">Assess quality with FASTQE üß¨üòé - short reads only</h1>\n\n<p>To take a look at sequence quality along all sequences, we can use <a href=\"https://fastqe.com/\">FASTQE</a>. It is an open-source tool that provides a simple and fun way to quality control raw sequence data and print them as emoji. You can use it to give a quick impression of whether your data has any problems of which you should be aware before doing any further analysis.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Quality check</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/fastqe/fastqe/0.2.6+galaxy2\" title=\"FASTQE tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>FASTQE</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.2.6+galaxy2)</span> with the following parameters\n      <ul>\n        <li><i class=\"far fa-copy\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-files</span> <em>‚ÄúFastQ data‚Äù</em>: <code class=\"language-plaintext highlighter-rouge\">Reads</code></li>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>‚ÄúScore types to show‚Äù</em>: <code class=\"language-plaintext highlighter-rouge\">Mean</code></li>\n      </ul>\n    </li>\n    <li>Inspect the generated HTML file</li>\n  </ol>\n\n</blockquote>\n\n<p>Rather than looking at quality scores for each individual read, FASTQE looks at quality collectively across all reads within a sample and can calculate the mean for each nucleotide position along the length of the reads. Below shows the mean values for this dataset.</p>\n\n<figure id=\"figure-1\" style=\"max-width: 90%;\"><img src=\"../../images/quality-control/fastqe-mean-before.png\" alt=\"FASTQE before. \" width=\"817\" height=\"207\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/quality-control/fastqe-mean-before.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 1</strong>:</span> FASTQE mean scores</figcaption></figure>\n\n<p>You can see the score for each <a href=\"https://github.com/fastqe/fastqe#scale\">emoji in fastqe‚Äôs documentation</a>. The emojis below, with Phred scores less than 20, are the ones we hope we don‚Äôt see much.</p>\n\n<table>\n  <thead>\n    <tr>\n      <th>Phred Quality Score</th>\n      <th>ASCII code</th>\n      <th>Emoji</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>0</td>\n      <td>!</td>\n      <td>üö´</td>\n    </tr>\n    <tr>\n      <td>1</td>\n      <td>‚Äù</td>\n      <td>‚ùå</td>\n    </tr>\n    <tr>\n      <td>2</td>\n      <td>#</td>\n      <td>üë∫</td>\n    </tr>\n    <tr>\n      <td>3</td>\n      <td>$</td>\n      <td>üíî</td>\n    </tr>\n    <tr>\n      <td>4</td>\n      <td>%</td>\n      <td>üôÖ</td>\n    </tr>\n    <tr>\n      <td>5</td>\n      <td>&amp;</td>\n      <td>üëæ</td>\n    </tr>\n    <tr>\n      <td>6</td>\n      <td>‚Äô</td>\n      <td>üëø</td>\n    </tr>\n    <tr>\n      <td>7</td>\n      <td>(</td>\n      <td>üíÄ</td>\n    </tr>\n    <tr>\n      <td>8</td>\n      <td>)</td>\n      <td>üëª</td>\n    </tr>\n    <tr>\n      <td>9</td>\n      <td>*</td>\n      <td>üôà</td>\n    </tr>\n    <tr>\n      <td>10</td>\n      <td>+</td>\n      <td>üôâ</td>\n    </tr>\n    <tr>\n      <td>11</td>\n      <td>,</td>\n      <td>üôä</td>\n    </tr>\n    <tr>\n      <td>12</td>\n      <td>-</td>\n      <td>üêµ</td>\n    </tr>\n    <tr>\n      <td>13</td>\n      <td>.</td>\n      <td>üòø</td>\n    </tr>\n    <tr>\n      <td>14</td>\n      <td>/</td>\n      <td>üòæ</td>\n    </tr>\n    <tr>\n      <td>15</td>\n      <td>0</td>\n      <td>üôÄ</td>\n    </tr>\n    <tr>\n      <td>16</td>\n      <td>1</td>\n      <td>üí£</td>\n    </tr>\n    <tr>\n      <td>17</td>\n      <td>2</td>\n      <td>üî•</td>\n    </tr>\n    <tr>\n      <td>18</td>\n      <td>3</td>\n      <td>üò°</td>\n    </tr>\n    <tr>\n      <td>19</td>\n      <td>4</td>\n      <td>üí©</td>\n    </tr>\n  </tbody>\n</table>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <p>What is the lowest mean score in this dataset?</p>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <p>The lowest score in this dataset is üòø 13.</p>\n  </blockquote>\n</blockquote>\n\n<h1 id=\"assess-quality-with-fastqc---short--long-reads\">Assess quality with FastQC - short &amp; long reads</h1>\n\n<p>An additional or alternative way we can check sequence quality is with <a href=\"https://www.bioinformatics.babraham.ac.uk/projects/fastqc/\">FastQC</a>. It provides a modular set of analyses which you can use to check whether your data has any problems of which you should be aware before doing any further analysis.  We can use it, for example, to assess whether there are known adapters present in the data. We‚Äôll run it on the FASTQ file.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Quality check</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.73+galaxy0\" title=\"FASTQC tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>FASTQC</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.73+galaxy0)</span> with the following parameters\n      <ul>\n        <li><i class=\"far fa-copy\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-files</span> <em>‚ÄúRaw read data from your current history‚Äù</em>: <code class=\"language-plaintext highlighter-rouge\">Reads</code></li>\n      </ul>\n    </li>\n    <li>Inspect the generated HTML file</li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <p>Which Phred encoding is used in the FASTQ file for these sequences?</p>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <p>The Phred scores are encoded using <code class=\"language-plaintext highlighter-rouge\">Sanger / Illumina 1.9</code> (<code class=\"language-plaintext highlighter-rouge\">Encoding</code> in the top table).</p>\n  </blockquote>\n</blockquote>\n\n<h2 id=\"per-base-sequence-quality\">Per base sequence quality</h2>\n\n<p>With FastQC we can use the per base sequence quality plot to check the base quality of the reads, similar to what we did with FASTQE.</p>\n\n<figure id=\"figure-2\" style=\"max-width: 90%;\"><img src=\"../../images/quality-control/per_base_sequence_quality-before.png\" alt=\"Per base sequence quality. \" width=\"1005\" height=\"600\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/quality-control/per_base_sequence_quality-before.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 2</strong>:</span> Per base sequence quality</figcaption></figure>\n\n<p>On the x-axis are the base position in the read. In this example, the sample contains reads that are up to 296 bp long.</p>\n\n<blockquote class=\"details\">\n  <details-title>Non uniform x-axis</details-title>\n\n  <p>The x-axis is not always uniform. When you have long reads, some binning is applied to keep things compact. We can see that in our sample. It starts out with individual 1-10 bases. After that, bases are binned across a window a certain number of bases wide. Data binning means grouping and is a data pre-processing technique used to reduce the effects of minor observation errors. The number of base positions binned together depends on the length of the read. With reads &gt;50bp, the latter part of the plot will report aggregate statistics for 5bp windows. Shorter reads will have smaller windows and longer reads larger windows. Binning can be removed when running FastQC by setting the paramter ‚ÄúDisable grouping of bases for reads &gt;50bp‚Äù to Yes.</p>\n</blockquote>\n\n<p>For each position, a boxplot is drawn with:</p>\n\n<ul>\n  <li>the median value, represented by the central red line</li>\n  <li>the inter-quartile range (25-75%), represented by the yellow box</li>\n  <li>the 10% and 90% values in the upper and lower whiskers</li>\n  <li>the mean quality, represented by the blue line</li>\n</ul>\n\n<p>The y-axis shows the quality scores. The higher the score, the better the base call. The background of the graph divides the y-axis into very good quality scores (green), scores of reasonable quality (orange), and reads of poor quality (red).</p>\n\n<p>It is normal with all Illumina sequencers for the median quality score to start out lower over the first 5-7 bases and to then rise. The quality of reads on most platforms will drop at the end of the read. This is often due to signal decay or phasing during the sequencing run. The recent developments in chemistry applied to sequencing has improved this somewhat, but reads are now longer than ever.</p>\n\n<blockquote class=\"details\">\n  <details-title>Signal decay and phasing</details-title>\n\n  <ul>\n    <li>Signal decay</li>\n  </ul>\n\n  <p>The fluorescent signal intensity decays with each cycle of the sequencing process. Due to the degrading fluorophores, a proportion of the strands in the cluster are not being elongated. The proportion of the signal being emitted continues to decrease with each cycle, yielding to a decrease of quality scores at the 3‚Äô end of the read.</p>\n\n  <ul>\n    <li>Phasing</li>\n  </ul>\n\n  <p>The signal starts to blur with the increase of number of cycles because the cluster looses synchronicity. As the cycles progress, some strands get random failures of nucleotides to incorporate due to:</p>\n\n  <ul>\n    <li>Incomplete removal of the 3‚Äô terminators and fluorophores</li>\n    <li>Incorporation of nucleotides without effective 3‚Äô terminators</li>\n  </ul>\n\n  <p>This leads to a decrease in quality scores at the 3‚Äô end of the read.</p>\n</blockquote>\n\n<blockquote class=\"details\">\n  <details-title>Other sequence quality profiles</details-title>\n\n  <p>These are some per base sequence quality profiles that can indicate issues with the sequencing.</p>\n\n  <ul>\n    <li>\n      <p>Overclustering</p>\n\n      <p>Sequencing facilities can overcluster the flow cells. It results in small distances between clusters and an overlap in the signals. Two clusters can be interpreted as a single cluster with mixed fluorescent signals being detected, decreasing signal purity. It generates lower quality scores across the entire read.</p>\n    </li>\n    <li>\n      <p>Instrumentation breakdown</p>\n\n      <p>Some issues can occasionally happen with the sequencing instruments during a run. Any sudden drop in quality or a large percentage of low quality reads across the read could indicate a problem at the facility. Some examples of such issues:</p>\n\n      <ul>\n        <li>\n          <p>Manifold burst</p>\n\n          <p><a href=\"../../images/quality-control/per_base_sequence_quality_manifold_burst.png\" rel=\"noopener noreferrer\"><img src=\"../../images/quality-control/per_base_sequence_quality_manifold_burst.png\" alt=\"Manifold burst. \" width=\"737\" height=\"551\" loading=\"lazy\" /></a></p>\n        </li>\n        <li>\n          <p>Cycles loss</p>\n\n          <p><a href=\"../../images/quality-control/per_base_sequence_quality_cycle_loss.png\" rel=\"noopener noreferrer\"><img src=\"../../images/quality-control/per_base_sequence_quality_cycle_loss.png\" alt=\"Cycles loss. \" width=\"1010\" height=\"764\" loading=\"lazy\" /></a></p>\n        </li>\n        <li>\n          <p>Read 2 failure</p>\n\n          <p><a href=\"../../images/quality-control/per_base_sequence_quality_read2_failure.png\" rel=\"noopener noreferrer\"><img src=\"../../images/quality-control/per_base_sequence_quality_read2_failure.png\" alt=\"Cycles loss. \" width=\"535\" height=\"379\" loading=\"lazy\" /></a></p>\n        </li>\n      </ul>\n\n      <p>With such data, the sequencing facility should be contacted for discussion. Often, a resequencing then is needed (and from our experience also offered by the company).</p>\n    </li>\n  </ul>\n\n</blockquote>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>How does the mean quality score change along the sequence?</li>\n    <li>Is this tendency seen in all sequences?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <ol>\n      <li>The mean quality score (blue line) drops about midway though these sequences. It is common for the mean quality to drop towards the end of the sequences, as the sequencers are incorporating more incorrect nucleotides at the end. However, in this sample there is a very large drop in quality from the middle onwards.</li>\n      <li>The box plots are getting wider from position ~100.  It means a lot of sequences have their score dropping from the middle of the sequence. After 100 nucleotides, more than 10% of the sequences have scores below 20.</li>\n    </ol>\n\n  </blockquote>\n</blockquote>\n\n<p>When the median quality is below a Phred score of ~20, we should consider trimming away bad quality bases from the sequence. We will explain that process in the Trim and filter section.</p>\n\n<h3 id=\"adapter-content\">Adapter Content</h3>\n\n<figure id=\"figure-3\" style=\"max-width: 90%;\"><img src=\"../../images/quality-control/adapter_content-before.png\" alt=\"Adapter Content. \" width=\"975\" height=\"600\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/quality-control/adapter_content-before.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 3</strong>:</span> Adapter Content</figcaption></figure>\n\n<p>The plot shows the cumulative percentage of reads with the different adapter sequences at each position. Once an adapter sequence is seen in a read it  is counted as being present right through to the end of the read so the percentage increases with the read length. FastQC can detect some adapters by default (e.g. Illumina, Nextera), for others we could provide a contaminants file as an input to the FastQC tool.</p>\n\n<p>Ideally Illumina sequence data should not have any adapter sequence present. But with long reads, some of the library inserts are shorter than the read length resulting in read-through to the adapter at the 3‚Äô end of the read. This microbiome sample has relatively long reads and we can see Nextera dapater has been detected.</p>\n\n<blockquote class=\"details\">\n  <details-title>Other adapter content profiles</details-title>\n\n  <p>Adapter content may also be detected with RNA-Seq libraries where the distribution of library insert sizes is varied and likely to include some short inserts.</p>\n\n  <p><a href=\"../../images/quality-control/adapter_content_rna_seq.png\" rel=\"noopener noreferrer\"><img src=\"../../images/quality-control/adapter_content_rna_seq.png\" alt=\"Adapter Content. \" width=\"1110\" height=\"600\" loading=\"lazy\" /></a></p>\n\n</blockquote>\n\n<p>We can run an trimming tool such as Cutadapt to remove this adapter. We will explain that process in the filter and trim section.</p>\n\n<blockquote class=\"tip\">\n  <tip-title>Take a shortcut</tip-title>\n\n  <p>The following sections go into detail about some of the other plots generated by FastQC. Note that some plots/modules may give warnings but be normal\nfor the type of data you‚Äôre working with, as discussed below and <a href=\"https://rtsf.natsci.msu.edu/genomics/tech-notes/fastqc-tutorial-and-faq/\">in the FASTQC FAQ</a>.\nThe other plots give us information to more deeply understand the quality of the data, and to see if changes could be made in the lab to get higher-quality data in the future.\nThese sections are <strong>optional</strong>, and if you would like to skip these you can:</p>\n  <ul>\n    <li>Jump straight to the <a href=\"#trim-and-filter---short-reads\">next section</a> to learn about trimming paired-end data</li>\n  </ul>\n</blockquote>\n\n<h3 id=\"per-tile-sequence-quality\">Per tile sequence quality</h3>\n\n<p>This plot enables you to look at the quality scores from each tile across all of your bases to see if there was a loss in quality associated with only one part of the flowcell. The plot shows the deviation from the average quality for each flowcell tile. The hotter colours indicate that reads in the given tile have worse qualities for that position than reads in other tiles. With this sample, you can see that certain tiles show consistently poor quality, especially from ~100bp onwards. A good plot should be blue all over.</p>\n\n<figure id=\"figure-4\" style=\"max-width: 90%;\"><img src=\"../../images/quality-control/per_tile_sequence_quality-before.png\" alt=\"Per tile sequence quality. \" width=\"1005\" height=\"600\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/quality-control/per_tile_sequence_quality-before.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 4</strong>:</span> Per tile sequence quality</figcaption></figure>\n\n<p>This plot will only appear for Illumina library which retains its original sequence identifiers. Encoded in these is the flowcell tile from which each read came.</p>\n\n<blockquote class=\"details\">\n  <details-title>Other tile quality profiles</details-title>\n\n  <p>In some cases, the chemicals used during sequencing becoming a bit exhausted over the time and the last tiles got worst chemicals which makes the sequencing reactions a bit error-prone. The ‚ÄúPer tile sequence quality‚Äù graph will then have some horizontal lines like this:</p>\n\n  <p><a href=\"../../images/quality-control/per_tile_sequence_quality_horizontal_lines.png\" rel=\"noopener noreferrer\"><img src=\"../../images/quality-control/per_tile_sequence_quality_horizontal_lines.png\" alt=\"Per tile sequence quality with horizontal lines. \" width=\"1515\" height=\"600\" loading=\"lazy\" /></a></p>\n\n</blockquote>\n\n<h2 id=\"per-sequence-quality-scores\">Per sequence quality scores</h2>\n\n<p>It plots the average quality score over the full length of all reads on the x-axis and gives the total number of reads with this score on the y-axis:</p>\n\n<figure id=\"figure-5\" style=\"max-width: 90%;\"><img src=\"../../images/quality-control/per_sequence_quality_scores-before.png\" alt=\"Per sequence quality scores. \" width=\"800\" height=\"600\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/quality-control/per_sequence_quality_scores-before.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 5</strong>:</span> Per sequence quality scores</figcaption></figure>\n\n<p>The distribution of average read quality should be tight peak in the upper range of the plot. It can also report if a subset of the sequences have universally low quality values: it can happen because some sequences are poorly imaged (on the edge of the field of view etc), however these should represent only a small percentage of the total sequences.</p>\n\n<h2 id=\"per-base-sequence-content\">Per base sequence content</h2>\n\n<figure id=\"figure-6\" style=\"max-width: 90%;\"><img src=\"../../images/quality-control/per_base_sequence_content-before.png\" alt=\"Per base sequence content. \" width=\"1005\" height=\"600\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/quality-control/per_base_sequence_content-before.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 6</strong>:</span> Per base sequence content for a DNA library</figcaption></figure>\n\n<p>‚ÄúPer Base Sequence Content‚Äù plots the percentage of each of the four nucleotides (T, C, A, G) at each position across all reads in the input sequence file. As for the per base sequence quality, the x-axis is non-uniform.</p>\n\n<p>In a random library we would expect that there would be little to no difference between the four bases. The proportion of each of the four bases should remain relatively constant over the length of the read with <code class=\"language-plaintext highlighter-rouge\">%A=%T</code> and <code class=\"language-plaintext highlighter-rouge\">%G=%C</code>, and the lines in this plot should run parallel with each other. This is amplicon data, where 16S DNA is PCR amplified and sequenced, so we‚Äôd expect this plot to have some bias and not show a random distribution.</p>\n\n<blockquote class=\"details\">\n  <details-title>Biases by library type</details-title>\n\n  <p>It‚Äôs worth noting that some library types will always produce biased sequence composition, normally at the start of the read. Libraries produced by priming using random hexamers (including nearly all RNA-Seq libraries), and those which were fragmented using transposases, will contain an intrinsic bias in the positions at which reads start (the first 10-12 bases). This bias does not involve a specific sequence, but instead provides enrichment of a number of different K-mers at the 5‚Äô end of the reads. Whilst this is a true technical bias, it isn‚Äôt something which can be corrected by trimming and in most cases doesn‚Äôt seem to adversely affect the downstream analysis. It will, however, produce a warning or error in this module.</p>\n\n  <p><a href=\"../../images/quality-control/per_base_sequence_content_rnaseq.png\" rel=\"noopener noreferrer\"><img src=\"../../images/quality-control/per_base_sequence_content_rnaseq.png\" alt=\"Per base sequence content for RNA-seq data. \" width=\"800\" height=\"600\" loading=\"lazy\" /></a></p>\n\n  <p>ChIP-seq data can also encounter read start sequence biases in this plot if fragmenting with transposases. With bisulphite converted data, e.g. HiC data, a separation of G from C and A from T is expected:</p>\n\n  <p><a href=\"../../images/quality-control/per_base_sequence_content_bisulphite.png\" rel=\"noopener noreferrer\"><img src=\"../../images/quality-control/per_base_sequence_content_bisulphite.png\" alt=\"Per base sequence content for Bisulphite data. \" width=\"1305\" height=\"600\" loading=\"lazy\" /></a></p>\n\n  <p>At the end, there is an overall shift in the sequence composition. If the shift correlates with a loss of sequencing quality, it can be suspected that miscalls are made with a more even sequence bias than bisulphite converted libraries.  Trimming the sequences fixed this problem, but if this hadn‚Äôt been done it would have had a dramatic effect on the methylation calls which were made.</p>\n</blockquote>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <p>Why is there a warning for the per-base sequence content graphs?</p>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <p>In the beginning of sequences, the sequence content per base is not really good and the percentages are not equal, as expected for 16S amplicon data.</p>\n\n  </blockquote>\n</blockquote>\n\n<h2 id=\"per-sequence-gc-content\">Per sequence GC content</h2>\n\n<figure id=\"figure-7\" style=\"max-width: 90%;\"><img src=\"../../images/quality-control/per_sequence_gc_content-before.png\" alt=\"Per sequence GC content. \" width=\"800\" height=\"600\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/quality-control/per_sequence_gc_content-before.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 7</strong>:</span> Per sequence GC content</figcaption></figure>\n\n<p>This plot displays the number of reads vs. percentage of bases G and C per read. It is compared to a theoretical distribution assuming an uniform GC content for all reads, expected for whole genome shotgun sequencing, where the central peak corresponds to the overall GC content of the underlying genome. Since the GC content of the genome is not known, the modal GC content is calculated from the observed data and used to build a reference distribution.</p>\n\n<p>An unusually-shaped distribution could indicate a contaminated library or some other kind of biased subset. A shifted normal distribution indicates some systematic bias, which is independent of base position. If there is a systematic bias which creates a shifted normal distribution then this won‚Äôt be flagged as an error by the module since it doesn‚Äôt know what your genome‚Äôs GC content should be.</p>\n\n<p>But there are also other situations in which an unusually-shaped distribution may occur. For example, with RNA sequencing there may be a greater or lesser distribution of mean GC content among transcripts causing the observed plot to be wider or narrower than an ideal normal distribution.</p>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <p>Why is there a fail for the per sequence GC content graphs?</p>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <p>There are multiple peaks. This can be indicative of unexpected contamination, such as adapter, rRNA or overrepresented sequences. Or it may be normal if it is amplicon data or you have highly abundant RNA-seq transcripts.</p>\n  </blockquote>\n</blockquote>\n\n<h3 id=\"sequence-length-distribution\">Sequence length distribution</h3>\n\n<p>This plot shows the distribution of fragment sizes in the file which was analysed. In many cases this will produce a simple plot showing a peak only at one size, but for variable length FASTQ files this will show the relative amounts of each different size of sequence fragment. Our plot shows variable length as we trimmed the data. The biggest peak is at 296bp but there is a second large peak at ~100bp. So even though our sequences range up to 296bp in length, a lot of the good-quality sequences are shorter. This corresponds with the drop we saw in the sequence quality at ~100bp and the red stripes starting at this position in the per tile sequence quality plot.</p>\n\n<figure id=\"figure-8\" style=\"max-width: 90%;\"><img src=\"../../images/quality-control/sequence_length_distribution-before.png\" alt=\"Sequence length distribution. \" width=\"800\" height=\"600\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/quality-control/sequence_length_distribution-before.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 8</strong>:</span> Sequence length distribution</figcaption></figure>\n\n<p>Some high-throughput sequencers generate sequence fragments of uniform length, but others can contain reads of widely varying lengths. Even within uniform length libraries some pipelines will trim sequences to remove poor quality base calls from the end or the first \\(n\\) bases if they match the first \\(n\\) bases of the adapter up to 90% (by default), with sometimes \\(n = 1\\).</p>\n\n<h2 id=\"sequence-duplication-levels\">Sequence Duplication Levels</h2>\n\n<p>The graph shows in blue the percentage of reads of a given sequence in the file which are present a given number of times in the file:</p>\n\n<figure id=\"figure-9\" style=\"max-width: 90%;\"><img src=\"../../images/quality-control/sequence_duplication_levels-before.png\" alt=\"Sequence Duplication Levels. \" width=\"800\" height=\"600\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/quality-control/sequence_duplication_levels-before.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 9</strong>:</span> Sequence Duplication Levels</figcaption></figure>\n\n<p>In a diverse library most sequences will occur only once in the final set. A low level of duplication may indicate a very high level of coverage of the target sequence, but a high level of duplication is more likely to indicate some kind of enrichment bias.</p>\n\n<p>Two sources of duplicate reads can be found:</p>\n<ul>\n  <li>\n    <p>PCR duplication in which library fragments have been over-represented due to biased PCR enrichment</p>\n\n    <p>It is a concern because PCR duplicates misrepresent the true proportion of sequences in the input.</p>\n  </li>\n  <li>\n    <p>Truly over-represented sequences such as very abundant transcripts in an RNA-Seq library or in amplicon data (like this sample)</p>\n\n    <p>It is an expected case and not of concern because it does faithfully represent the input.</p>\n  </li>\n</ul>\n\n<blockquote class=\"details\">\n  <details-title>More details about duplication</details-title>\n\n  <p>FastQC counts the degree of duplication for every sequence in a library and creates a plot showing the relative number of sequences with different degrees of duplication. There are two lines on the plot:</p>\n  <ul>\n    <li>Blue line: distribution of the duplication levels for the full sequence set</li>\n    <li>Red line: distribution for the de-duplicated sequences with the proportions of the deduplicated set which come from different duplication levels in the original data.</li>\n  </ul>\n\n  <p>For whole genome shotgun data it is expected that nearly 100% of your reads will be unique (appearing only 1 time in the sequence data). Most sequences should fall into the far left of the plot in both the red and blue lines. This indicates a highly diverse library that was not over sequenced. If the sequencing depth is extremely high (e.g. &gt; 100x the size of the genome) some inevitable sequence duplication can appear: there are in theory only a finite number of completely unique sequence reads which can be obtained from any given input DNA sample.</p>\n\n  <p>More specific enrichments of subsets, or the presence of low complexity contaminants will tend to produce spikes towards the right of the plot. These high duplication peaks will most often appear in the blue trace as they make up a high proportion of the original library, but usually disappear in the red trace as they make up an insignificant proportion of the deduplicated set. If peaks persist in the red trace then this suggests that there are a large number of different highly duplicated sequences which might indicate either a contaminant set or a very severe technical duplication.</p>\n\n  <p>It is usually the case for RNA sequencing where there is some very highly abundant transcripts and some lowly abundant. It is expected that duplicate reads will be observed for high abundance transcripts:</p>\n\n  <p><a href=\"../../images/quality-control/sequence_duplication_levels_rna_seq.png\" rel=\"noopener noreferrer\"><img src=\"../../images/quality-control/sequence_duplication_levels_rna_seq.png\" alt=\"Sequence Duplication Levels for RNA-seq. \" width=\"800\" height=\"600\" loading=\"lazy\" /></a></p>\n\n</blockquote>\n\n<h2 id=\"over-represented-sequences\">Over-represented sequences</h2>\n\n<p>A normal high-throughput library will contain a diverse set of sequences, with no individual sequence making up a tiny fraction of the whole. Finding that a single sequence is very over-represented in the set either means that it is highly biologically significant, or indicates that the library is contaminated, or not as diverse as expected.</p>\n\n<p>FastQC lists all of the sequence which make up more than 0.1% of the total. For each over-represented sequence FastQC will look for matches in a database of common contaminants and will report the best hit it finds. Hits must be at least 20bp in length and have no more than 1 mismatch. Finding a hit doesn‚Äôt necessarily mean that this is the source of the contamination, but may point you in the right direction. It‚Äôs also worth pointing out that many adapter sequences are very similar to each other so you may get a hit reported which isn‚Äôt technically correct, but which has a very similar sequence to the actual match.</p>\n\n<p>RNA sequencing data may have some transcripts that are so abundant that they register as over-represented sequence. With DNA sequencing data no single sequence should be present at a high enough frequency to be listed, but we can sometimes see a small percentage of adapter reads.</p>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <p>How could we find out what the overrepreseented sequences are?</p>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <p>We can BLAST overrepresented sequences to see what they are. In this case, if we take the top overrepresented sequence</p>\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>&gt;overrep_seq1\nGTGTCAGCCGCCGCGGTAGTCCGACGTGGCTGTCTCTTATACACATCTCC\n</code></pre></div>    </div>\n    <p>and use <a href=\"https://blast.ncbi.nlm.nih.gov/Blast.cgi\">blastn</a> against the default Nucleotide (nr/nt) database we don‚Äôt get any hits. But if we use <a href=\"https://www.ncbi.nlm.nih.gov/tools/vecscreen/\">VecScreen</a> we see it is the Nextera adapter.</p>\n    <figure id=\"figure-10\" style=\"max-width: 90%;\"><img src=\"../../images/quality-control/vecscreen-nextera.png\" alt=\"VecScreen. \" width=\"976\" height=\"310\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/quality-control/vecscreen-nextera.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 10</strong>:</span> Nextera adapter</figcaption></figure>\n  </blockquote>\n</blockquote>\n\n<blockquote class=\"details\">\n  <details-title>More details about other FastQC plots</details-title>\n\n  <h4 id=\"per-base-n-content\">Per base N content</h4>\n\n  <figure id=\"figure-11\" style=\"max-width: 90%;\"><img src=\"../../images/quality-control/per_base_n_content-before.png\" alt=\"Per base N content. \" width=\"1005\" height=\"600\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/quality-control/per_base_n_content-before.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 11</strong>:</span> Per base N content</figcaption></figure>\n\n  <p>If a sequencer is unable to make a base call with sufficient confidence, it will write an ‚ÄúN‚Äù instead of a conventional base call. This plot displays the percentage of base calls at each position or bin for which an N was called.</p>\n\n  <p>It‚Äôs not unusual to see a very high proportion of Ns appearing in a sequence, especially near the end of a sequence. But this curve should never rises noticeably above zero. If it does this indicates a problem occurred during the sequencing run. In the example below, an error caused the instrument to be unable to call a base for approximately 20% of the reads at position 29:</p>\n\n  <p><a href=\"../../images/quality-control/per_base_n_content_error.png\" rel=\"noopener noreferrer\"><img src=\"../../images/quality-control/per_base_n_content_error.png\" alt=\"Per base N content. \" width=\"800\" height=\"600\" loading=\"lazy\" /></a></p>\n\n  <h4 id=\"kmer-content\">Kmer Content</h4>\n\n  <p>This plot not output by default. As stated in the tool form, if you want this module it needs to be enabled using a custom Submodule and limits file. With this module, FastQC does a generic analysis of all of the short nucleotide sequences of length k (kmer, with k = 7 by default) starting at each position along the read in the library to find those which do not have an even coverage through the length of your reads. Any given kmer should be evenly represented across the length of the read.</p>\n\n  <p>FastQC will report the list of kmers which appear at specific positions with a greater frequency than expected. This can be due to different sources of bias in the library, including the presence of read-through adapter sequences building up on the end of the sequences. The presence of any overrepresented sequences in the library (such as adapter dimers) causes the kmer plot to be dominated by the kmer from these sequences. Any biased kmer due to other interesting biases may be then diluted and not easy to see.</p>\n\n  <p>The following example is from a high-quality DNA-Seq library. The biased kmers nearby the start of the read likely are due to slight sequence dependent efficiency of DNA shearing or a result of random priming:</p>\n\n  <figure id=\"figure-12\" style=\"max-width: 90%;\"><img src=\"../../images/quality-control/kmer_content.png\" alt=\"Kmer Content. \" width=\"800\" height=\"600\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/quality-control/kmer_content.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 12</strong>:</span> Kmer content</figcaption></figure>\n\n  <p>This module can be very difficult to interpret. The adapter content plot and overrepesented sequences table are easier to interpret and may give you enough information without needing this plot. RNA-seq libraries may have highly represented kmers that are derived from highly expressed sequences. To learn more about this plot, please check the <a href=\"http://www.bioinformatics.babraham.ac.uk/projects/fastqc/Help/3%20Analysis%20Modules/11%20Kmer%20Content.html\">FastQC Kmer Content documentation</a>.</p>\n\n</blockquote>\n\n<p>We tried to explain here there different FastQC reports and some use cases. More about this and also some common next-generation sequencing problems can be found on <a href=\"https://sequencing.qcfail.com/\">QCFAIL.com</a></p>\n\n<blockquote class=\"details\">\n  <details-title>Specific problem for alternate library types</details-title>\n\n  <h4 id=\"smallmicro-rna\">Small/micro RNA</h4>\n\n  <p>In small RNA libraries, we typically have a relatively small set of unique, short sequences. Small RNA libraries are not randomly sheared before adding sequencing adapters to their ends: all the reads for specific classes of microRNAs will be identical. It will result in:</p>\n\n  <ul>\n    <li>Extremely biased per base sequence content</li>\n    <li>Extremely narrow distribution of GC content</li>\n    <li>Very high sequence duplication levels</li>\n    <li>Abundance of overrepresented sequences</li>\n    <li>Read-through into adapters</li>\n  </ul>\n\n  <h4 id=\"amplicon\">Amplicon</h4>\n\n  <p>Amplicon libraries are prepared by PCR amplification of a specific target. For example, the V4 hypervariable region of the bacterial 16S rRNA gene. All reads from this type of library are expected to be nearly identical. It will result in:</p>\n\n  <ul>\n    <li>Extremely biased per base sequence content</li>\n    <li>Extremely narrow distribution of GC content</li>\n    <li>Very high sequence duplication levels</li>\n    <li>Abundance of overrepresented sequences</li>\n  </ul>\n\n  <h4 id=\"bisulfite-or-methylation-sequencing\">Bisulfite or Methylation sequencing</h4>\n\n  <p>With Bisulfite or methylation sequencing, the majority of the cytosine (C) bases are converted to thymine (T). It will result in:</p>\n\n  <ul>\n    <li>Biased per base sequence content</li>\n    <li>Biased per sequence GC content</li>\n  </ul>\n\n  <h4 id=\"adapter-dimer-contamination\">Adapter dimer contamination</h4>\n\n  <p>Any library type may contain a very small percentage of adapter dimer (i.e. no insert) fragments. They are more likely to be found in amplicon libraries constructed entirely by PCR (by formation of PCR primer-dimers) than in DNA-Seq or RNA-Seq libraries constructed by adapter ligation. If a sufficient fraction of the library is adapter dimer it will become noticeable in the FastQC report:</p>\n\n  <ul>\n    <li>Drop in per base sequence quality after base 60</li>\n    <li>Possible bi-modal distribution of per sequence quality scores</li>\n    <li>Distinct pattern observed in per bases sequence content up to base 60</li>\n    <li>Spike in per sequence GC content</li>\n    <li>Overrepresented sequence matching adapter</li>\n    <li>Adapter content &gt; 0% starting at base 1</li>\n  </ul>\n\n</blockquote>\n\n<blockquote class=\"comment\">\n  <comment-title>Bad quality sequences</comment-title>\n  <p>If the quality of the reads is not good, we should always first check what is wrong and think about it: it may come from the type of sequencing or what we sequenced (high quantity of overrepresented sequences in transcriptomics data, biased percentage of bases in HiC data).</p>\n\n  <p>You can also ask the sequencing facility about it, especially if the quality is really bad: the quality treatments can not solve everything. If too many bad quality bases are cut away, the corresponding reads then will be filtered out and you lose them.</p>\n</blockquote>\n\n<h1 id=\"trim-and-filter---short-reads\">Trim and filter - short reads</h1>\n\n<p>The quality drops in the middle of these sequences. This could cause bias in downstream analyses with these potentially incorrectly called nucleotides. Sequences must be treated to reduce bias in downstream analysis. Trimming can help to increase the number of reads the aligner or assembler are able to succesfully use, reducing the number of reads that are unmapped or unassembled. In general, quality treatments include:</p>\n\n<ol>\n  <li>Trimming/cutting/masking sequences\n    <ul>\n      <li>from low quality score regions</li>\n      <li>beginning/end of sequence</li>\n      <li>removing adapters</li>\n    </ul>\n  </li>\n  <li>Filtering of sequences\n    <ul>\n      <li>with low mean quality score</li>\n      <li>too short</li>\n      <li>with too many ambiguous (N) bases</li>\n    </ul>\n  </li>\n</ol>\n\n<p>To accomplish this task we will use <a href=\"https://cutadapt.readthedocs.io/en/stable/guide.html\">Cutadapt</a> <span class=\"citation\"><a href=\"#marcel2011cutadapt\">Marcel 2011</a></span>, a tool that enhances sequence quality by automating adapter trimming as well as quality control.  We will:</p>\n\n<ul>\n  <li>Trim low-quality bases from the ends. Quality trimming is done before any adapter trimming. We will set the quality threshold as 20, a commonly used threshold, see more <a href=\"https://gatk.broadinstitute.org/hc/en-us/articles/360035531872-Phred-scaled-quality-scores\">in GATK‚Äôs Phred Score FAQ</a>.</li>\n  <li>Trim adapter with Cutadapt. For that we need to supply the sequence of the adapter. In this sample, Nextera is the adapter that was detected. We can find the sequence of the Nextera adapter on the <a href=\"https://support.illumina.com/bulletins/2016/12/what-sequences-do-i-use-for-adapter-trimming.html\">Illumina website here</a> <code class=\"language-plaintext highlighter-rouge\">CTGTCTCTTATACACATCT</code>. We will trim that sequence from the 3‚Äô end of the reads.</li>\n  <li>Filter out sequences with length &lt; 20 after trimming</li>\n</ul>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Improvement of sequence quality</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/3.4+galaxy2\" title=\"Cutadapt tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Cutadapt</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 3.4+galaxy2)</span> with the following parameters\n      <ul>\n        <li><em>‚ÄúSingle-end or Paired-end reads?‚Äù</em>: <code class=\"language-plaintext highlighter-rouge\">Single-end</code>\n          <ul>\n            <li>\n              <p><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>‚ÄúReads in FASTQ format‚Äù</em>: <code class=\"language-plaintext highlighter-rouge\">Reads</code> (Input dataset)</p>\n\n              <blockquote class=\"tip\">\n                <tip-title>Files not selectable?</tip-title>\n                <p>If your FASTQ file cannot be selected, you might check whether the format is FASTQ with Sanger-scaled quality values (<code class=\"language-plaintext highlighter-rouge\">fastqsanger.gz</code>). You can edit the data type by clicking on the pencil symbol.</p>\n              </blockquote>\n            </li>\n          </ul>\n        </li>\n        <li>In <em>‚ÄúRead 1 Options‚Äù</em>:\n          <ul>\n            <li><em>‚ÄúInsert 3‚Äô (End) Adapters‚Äù</em>:\n              <ul>\n                <li><em>‚ÄúSource‚Äù</em>: <code class=\"language-plaintext highlighter-rouge\">Enter custom sequence</code></li>\n                <li><em>‚ÄúEnter custom 3‚Äô adapter sequence‚Äù</em>: <code class=\"language-plaintext highlighter-rouge\">CTGTCTCTTATACACATCT</code></li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n        <li>In <em>‚ÄúFilter Options‚Äù</em>\n          <ul>\n            <li><em>‚ÄúMinimum length‚Äù</em>: <code class=\"language-plaintext highlighter-rouge\">20</code></li>\n          </ul>\n        </li>\n        <li>In <em>‚ÄúRead Modification Options‚Äù</em>\n          <ul>\n            <li><em>‚ÄúQuality cutoff‚Äù</em>: <code class=\"language-plaintext highlighter-rouge\">20</code></li>\n          </ul>\n        </li>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>‚ÄúOutputs selector‚Äù</em>: <code class=\"language-plaintext highlighter-rouge\">Report</code></li>\n      </ul>\n    </li>\n    <li>\n      <p>Inspect the generated txt file (<code class=\"language-plaintext highlighter-rouge\">Report</code>)</p>\n\n      <blockquote class=\"question\">\n        <question-title></question-title>\n\n        <ol>\n          <li>What % reads contain adapter?</li>\n          <li>What % reads have been trimmed because of bad quality?</li>\n          <li>What % reads have been removed because they were too short?</li>\n        </ol>\n\n        <blockquote class=\"solution\">\n          <solution-title></solution-title>\n          <ol>\n            <li>56.8% reads contain adapter (<code class=\"language-plaintext highlighter-rouge\">Reads with adapters:</code>)</li>\n            <li>35.1% reads have been trimmed because of bad quality (<code class=\"language-plaintext highlighter-rouge\">Quality-trimmed:</code>)</li>\n            <li>0 % reads were removed because they were too short</li>\n          </ol>\n        </blockquote>\n      </blockquote>\n    </li>\n  </ol>\n</blockquote>\n\n<blockquote class=\"details\">\n  <details-title>Trimming with Cutadapt</details-title>\n\n  <p>One of the biggest advantage of Cutadapt compared to other trimming tools (e.g. TrimGalore!) is that it has a good <a href=\"https://cutadapt.readthedocs.io\">documentation</a> explaining how the tool works in detail.</p>\n\n  <p>Cutadapt quality trimming algorithm consists of three simple steps:</p>\n\n  <ol>\n    <li>Subtract the chosen threshold value from the quality value of each position</li>\n    <li>Compute a partial sum of these differences from the end of the sequence to each position\n(as long as the partial sum is negative)</li>\n    <li>Cut at the minimum value of the partial sum</li>\n  </ol>\n\n  <p>In the following example, we assume that the 3‚Äô end is to be quality-trimmed with a threshold of 10 and we have the following quality values</p>\n\n  <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>42 40 26 27 8 7 11 4 2 3\n</code></pre></div>  </div>\n\n  <ol>\n    <li>\n      <p>Subtract the threshold</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> 32 30 16 17 -2 -3 1 -6 -8 -7\n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Add up the numbers, starting from the 3‚Äô end (partial sums) and stop early if the sum is greater than zero</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> (70) (38) 8 -8 -25 -23 -20, -21 -15 -7\n</code></pre></div>      </div>\n\n      <p>The numbers in parentheses are not computed (because 8 is greater than zero), but shown here for completeness.</p>\n    </li>\n    <li>\n      <p>Choose the position of the minimum (<code class=\"language-plaintext highlighter-rouge\">-25</code>) as the trimming position</p>\n    </li>\n  </ol>\n\n  <p>Therefore, the read is trimmed to the first four bases, which have quality values</p>\n\n  <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>42 40 26 27\n</code></pre></div>  </div>\n\n  <p>Note that therefore, positions with a quality value larger than the chosen threshold are also removed if they are embedded in regions with lower quality (the partial sum is decreasing if the quality values are smaller than the threshold). The advantage of this procedure is that it is robust against a small number of positions with a quality higher than the threshold.</p>\n\n  <p>Alternatives to this procedure would be:</p>\n\n  <ul>\n    <li>Cut after the first position with a quality smaller than the threshold</li>\n    <li>\n      <p>Sliding window approach</p>\n\n      <p>The sliding window approach checks that the average quality of each sequence window of specified length is larger than the threshold. Note that in contrast to cutadapt‚Äôs approach, this approach has one more parameter and the robustness depends of the length of the window (in combination with the quality threshold). Both approaches are implemented in Trimmomatic.</p>\n    </li>\n  </ul>\n</blockquote>\n\n<p>We can examine our trimmed data with FASTQE and/or FastQC.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Checking quality after trimming</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/fastqe/fastqe/0.2.6+galaxy2\" title=\"FASTQE tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>FASTQE</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.2.6+galaxy2)</span>: Re-run <strong>FASTQE</strong> with the following parameters\n      <ul>\n        <li><i class=\"far fa-copy\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-files</span> <em>‚ÄúFastQ data‚Äù</em>: <code class=\"language-plaintext highlighter-rouge\">Cutadapt Read 1 Output</code></li>\n        <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>‚ÄúScore types to show‚Äù</em>: <code class=\"language-plaintext highlighter-rouge\">Mean</code></li>\n      </ul>\n    </li>\n    <li>\n      <p>Inspect the new FASTQE report</p>\n\n      <blockquote class=\"question\">\n        <question-title></question-title>\n\n        <p>Compare the FASTQE output to the previous one before trimming above. Has sequence quality been improved?</p>\n\n        <!--SNIPPET-->\n        <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-using-the-window-manager-to-view-multiple-datasets\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-using-the-window-manager-to-view-multiple-datasets\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Using the Window Manager to view multiple datasets</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <p>If you would like to view two or more datasets at once, you can use the <strong>Window Manager</strong> feature in Galaxy:</p>   <ol>   <li><strong>Click</strong> on the <em>Window Manager</em> icon <i class=\"fas fa-th\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-scratchbook</span> on the top menu bar.     <ul>       <li>You should see a little checkmark on the icon now</li>     </ul>   </li>   <li><strong>View</strong> <i class=\"far fa-eye\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-eye</span> a dataset by clicking on the eye icon <i class=\"far fa-eye\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-eye</span> to view the output     <ul>       <li>You should see the output in a window overlayed over Galaxy</li>       <li>You can resize this window by dragging the bottom-right corner</li>     </ul>   </li>   <li><strong>Click</strong> outside the file to exit the Window Manager</li>   <li><strong>View</strong> <i class=\"far fa-eye\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-eye</span> a second dataset from your history     <ul>       <li>You should now see a second window with the new dataset</li>       <li>This makes it easier to compare the two outputs</li>     </ul>   </li>   <li>Repeat this for as many files as you would like to compare</li>   <li>You can turn off the <strong>Window Manager</strong> <i class=\"fas fa-th\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-scratchbook</span> by clicking on the icon again</li> </ol> </blockquote>\n        <p><!--END_SNIPPET--></p>\n\n        <blockquote class=\"solution\">\n          <solution-title></solution-title>\n          <p>Yes, the quality score emojis look better (happier) now.</p>\n\n          <figure id=\"figure-13\" style=\"max-width: 90%;\"><img src=\"../../images/quality-control/fastqe-mean-before.png\" alt=\"FASTQE before. \" width=\"817\" height=\"207\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/quality-control/fastqe-mean-before.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 13</strong>:</span> Before trimming</figcaption></figure>\n\n          <figure id=\"figure-14\" style=\"max-width: 90%;\"><img src=\"../../images/quality-control/fastqe-mean-after.png\" alt=\"FASTQE after. \" width=\"1420\" height=\"344\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/quality-control/fastqe-mean-after.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 14</strong>:</span> After trimming</figcaption></figure>\n\n        </blockquote>\n      </blockquote>\n    </li>\n  </ol>\n</blockquote>\n\n<p>With FASTQE we can see we improved the quality of the bases in the dataset.</p>\n\n<p>We can also, or instead, check the quality-controlled data with FastQC.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Checking quality after trimming</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.73+galaxy0\" title=\"FASTQC tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>FASTQC</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.73+galaxy0)</span> with the following parameters\n      <ul>\n        <li><i class=\"far fa-copy\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-files</span> <em>‚ÄúShort read data from your current history‚Äù</em>: <code class=\"language-plaintext highlighter-rouge\">Cutadapt Read 1 Output</code></li>\n      </ul>\n    </li>\n    <li>Inspect the generated HTML file</li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n  <ol>\n    <li>Does the per base sequence quality look better?</li>\n    <li>Is the adapter gone?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <ol>\n      <li>Yes. The vast majority of the bases have a quality score above 20 now.</li>\n    </ol>\n    <figure id=\"figure-15\" style=\"max-width: 90%;\"><img src=\"../../images/quality-control/per_base_sequence_quality-after.png\" alt=\"Per base sequence quality. \" width=\"1005\" height=\"600\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/quality-control/per_base_sequence_quality-after.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 15</strong>:</span> Per base sequence quality</figcaption></figure>\n\n    <ol>\n      <li>Yes. No adapter is detected now.\n<a href=\"../../images/quality-control/adapter_content-after.png\" rel=\"noopener noreferrer\"><img src=\"../../images/quality-control/adapter_content-after.png\" alt=\"Adapter Content. \" width=\"960\" height=\"600\" loading=\"lazy\" /></a></li>\n    </ol>\n\n  </blockquote>\n</blockquote>\n\n<p>With FastQC we can see we improved the quality of the bases in the dataset and removed the adapter.</p>\n\n<blockquote class=\"details\">\n  <details-title>Other FastQC plots after trimming</details-title>\n\n  <p><a href=\"../../images/quality-control/per_tile_sequence_quality-after.png\" rel=\"noopener noreferrer\"><img src=\"../../images/quality-control/per_tile_sequence_quality-after.png\" alt=\"Per tile sequence quality. \" width=\"1005\" height=\"600\" loading=\"lazy\" /></a>\nWe have some red stripes as we‚Äôve trimmed those regions from the reads.</p>\n\n  <p><a href=\"../../images/quality-control/per_sequence_quality_scores-after.png\" rel=\"noopener noreferrer\"><img src=\"../../images/quality-control/per_sequence_quality_scores-after.png\" alt=\"Per sequence quality scores. \" width=\"800\" height=\"600\" loading=\"lazy\" /></a>\nWe now have one peak of high quality instead of one high and one lower quality that we had previously.</p>\n\n  <p><a href=\"../../images/quality-control/per_base_sequence_content-after.png\" rel=\"noopener noreferrer\"><img src=\"../../images/quality-control/per_base_sequence_content-after.png\" alt=\"Per base sequence content. \" width=\"1005\" height=\"600\" loading=\"lazy\" /></a>\nWe don‚Äôt have equal representation of the bases as before as this is amplicon data.</p>\n\n  <p><a href=\"../../images/quality-control/per_sequence_gc_content-after.png\" rel=\"noopener noreferrer\"><img src=\"../../images/quality-control/per_sequence_gc_content-after.png\" alt=\"Per sequence GC content. \" width=\"800\" height=\"600\" loading=\"lazy\" /></a>\nWe now have a single main GC peak due to removing the adapter.</p>\n\n  <p><a href=\"../../images/quality-control/per_base_n_content-after.png\" rel=\"noopener noreferrer\"><img src=\"../../images/quality-control/per_base_n_content-after.png\" alt=\"Per base N content. \" width=\"1005\" height=\"600\" loading=\"lazy\" /></a>\nThis is the same as before as we don‚Äôt have any Ns in these reads.</p>\n\n  <p><a href=\"../../images/quality-control/sequence_length_distribution-after.png\" rel=\"noopener noreferrer\"><img src=\"../../images/quality-control/sequence_length_distribution-after.png\" alt=\"Sequence length distribution. \" width=\"800\" height=\"600\" loading=\"lazy\" /></a>\nWe now have multiple peaks and a range of lengths, instead of the single peak with had before trimming when all sequences were the same length.</p>\n\n  <p><a href=\"../../images/quality-control/sequence_duplication_levels-after.png\" rel=\"noopener noreferrer\"><img src=\"../../images/quality-control/sequence_duplication_levels-after.png\" alt=\"Sequence Duplication Levels. \" width=\"800\" height=\"600\" loading=\"lazy\" /></a></p>\n  <blockquote class=\"question\">\n    <question-title></question-title>\n\n    <p>What does the top overrepresented sequence <code class=\"language-plaintext highlighter-rouge\">GTGTCAGCCGCCGCGGTAGTCCGACGTGG</code> correspond to?</p>\n\n    <blockquote class=\"solution\">\n      <solution-title></solution-title>\n      <p>If we take the top overrepresented sequence</p>\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>&gt;overrep_seq1_after\nGTGTCAGCCGCCGCGGTAGTCCGACGTGG\n</code></pre></div>      </div>\n      <p>and use <a href=\"https://blast.ncbi.nlm.nih.gov/Blast.cgi\">blastn</a> against the default Nucleotide (nr/nt) database we see the top hits are to 16S rRNA genes. This makes sense as this is 16S amplicon data, where the 16S gene is PCR amplified.</p>\n    </blockquote>\n  </blockquote>\n</blockquote>\n\n<h1 id=\"processing-multiple-datasets\">Processing multiple datasets</h1>\n\n<h2 id=\"process-paired-end-data\">Process paired-end data</h2>\n\n<p>With paired-end sequencing, the fragments are sequenced from both sides. This approach results in two reads per fragment, with the first read in forward orientation and the second read in reverse-complement orientation. With this technique, we have the advantage to get more information about each DNA fragment compared to reads sequenced by only single-end sequencing:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    ------&gt;                       [single-end]\n\n    ----------------------------- [fragment]\n\n    ------&gt;               &lt;------ [paired-end]\n</code></pre></div></div>\n<p>The distance between both reads is known and therefore is additional information that can improve read mapping.</p>\n\n<p>Paired-end sequencing generates 2 FASTQ files:</p>\n<ul>\n  <li>One file with the sequences corresponding to <strong>forward</strong> orientation of all the fragments</li>\n  <li>One file with the sequences corresponding to <strong>reverse</strong> orientation of all the fragments</li>\n</ul>\n\n<p>Usually we recognize these two files which belong to one sample by the name which has the same identifier for the reads but a different extension, e.g. <code class=\"language-plaintext highlighter-rouge\">sampleA_R1.fastq</code> for the forward reads and <code class=\"language-plaintext highlighter-rouge\">sampleA_R2.fastq</code> for the reverse reads. It can also be <code class=\"language-plaintext highlighter-rouge\">_f</code> or <code class=\"language-plaintext highlighter-rouge\">_1</code> for the forward reads and <code class=\"language-plaintext highlighter-rouge\">_r</code> or <code class=\"language-plaintext highlighter-rouge\">_2</code> for the reverse reads.</p>\n\n<p>The data we analyzed in the previous step was single-end data so we will import a paired-end RNA-seq dataset to use. We will run FastQC and aggregate the two reports with MultiQC <span class=\"citation\"><a href=\"#ewels2016multiqc\">Ewels <i>et al.</i> 2016</a></span>.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Assessing the quality of paired-end reads</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Import the paired-end reads <code class=\"language-plaintext highlighter-rouge\">GSM461178_untreat_paired_subset_1.fastq</code> and <code class=\"language-plaintext highlighter-rouge\">GSM461178_untreat_paired_subset_2.fastq</code> from <a href=\"https://zenodo.org/record/61771\">Zenodo</a> or from the data library (ask your instructor)</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>https://zenodo.org/record/61771/files/GSM461178_untreat_paired_subset_1.fastq\nhttps://zenodo.org/record/61771/files/GSM461178_untreat_paired_subset_2.fastq\n</code></pre></div>      </div>\n    </li>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.73+galaxy0\" title=\"FASTQC tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>FASTQC</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.73+galaxy0)</span> with both datasets:\n      <ul>\n        <li><i class=\"far fa-copy\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-files</span> <em>‚ÄúRaw read data from your current history‚Äù</em>: both the uploaded datasets.</li>\n      </ul>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-select-multiple-datasets\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-select-multiple-datasets\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Select multiple datasets</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ol>   <li>Click on <i class=\"far fa-copy\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-files</span> <strong>Multiple datasets</strong></li>   <li>Select several files by keeping the <kbd>Ctrl</kbd> (or <kbd>COMMAND</kbd>) key pressed and clicking on the files of interest</li> </ol> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc/1.9+galaxy1\" title=\"MultiQC tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>MultiQC</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 1.9+galaxy1)</span> with the following parameters to aggregate the FastQC reports of both forward and reverse reads\n      <ul>\n        <li>In <em>‚ÄúResults‚Äù</em>\n          <ul>\n            <li><em>‚ÄúWhich tool was used generate logs?‚Äù</em>: <code class=\"language-plaintext highlighter-rouge\">FastQC</code></li>\n            <li>In <em>‚ÄúFastQC output‚Äù</em>\n              <ul>\n                <li><em>‚ÄúType of FastQC output?‚Äù</em>: <code class=\"language-plaintext highlighter-rouge\">Raw data</code></li>\n                <li><i class=\"far fa-copy\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-files</span> <em>‚ÄúFastQC output‚Äù</em>: <code class=\"language-plaintext highlighter-rouge\">Raw data</code> files (output of both <strong>FastQC</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li>Inspect the webpage output from MultiQC.</li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>What do you think about the quality of the sequences?</li>\n    <li>What should we do?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <ol>\n      <li>The quality of the sequences seems worse for the reverse reads than for the forward reads:\n        <ul>\n          <li>Per Sequence Quality Scores: distribution more on the left, i.e. a lower mean quality of the sequences</li>\n          <li>Per base sequence quality: less smooth curve and stronger decrease at the end with a mean value below 28</li>\n          <li>Per Base Sequence Content: stronger bias at the beginning and no clear distinction between C-G and A-T groups</li>\n        </ul>\n\n        <p>The other indicators (adapters, duplication levels, etc) are similar.</p>\n      </li>\n      <li>We should trim the end of the sequences and filter them with <strong>Cutadapt</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span></li>\n    </ol>\n\n  </blockquote>\n</blockquote>\n\n<p>With paired-end reads the average quality scores for forward reads will almost always be higher than for reverse reads.</p>\n\n<p>After trimming, reverse reads will be shorter because of their quality and then will be eliminated during the filtering step. If one of the reverse reads is removed, its corresponding forward read should be removed too. Otherwise we will get different number of reads in both files and in different order, and order is important for the next steps. Therefore <strong>it is important to treat the forward and reverse reads together for trimming and filtering</strong>.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Improving the quality of paired-end data</hands-on-title>\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/3.4+galaxy2\" title=\"Cutadapt tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Cutadapt</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 3.4+galaxy2)</span> with the following parameters\n      <ul>\n        <li><em>‚ÄúSingle-end or Paired-end reads?‚Äù</em>: <code class=\"language-plaintext highlighter-rouge\">Paired-end</code>\n          <ul>\n            <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>‚ÄúFASTQ/A file #1‚Äù</em>: <code class=\"language-plaintext highlighter-rouge\">GSM461178_untreat_paired_subset_1.fastq</code> (Input dataset)</li>\n            <li>\n              <p><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>‚ÄúFASTQ/A file #2‚Äù</em>: <code class=\"language-plaintext highlighter-rouge\">GSM461178_untreat_paired_subset_2.fastq</code> (Input dataset)</p>\n\n              <p>The order is important here!</p>\n            </li>\n            <li>\n              <p>In <em>Read 1 Options</em> or <em>Read 2 Options</em></p>\n\n              <p>No adapters were found in these datasets. When you process your own data and you know which adapter sequences were used during library preparation, you should provide their sequences here.</p>\n            </li>\n          </ul>\n        </li>\n        <li>In <em>‚ÄúFilter Options‚Äù</em>\n          <ul>\n            <li><em>‚ÄúMinimum length‚Äù</em>: <code class=\"language-plaintext highlighter-rouge\">20</code></li>\n          </ul>\n        </li>\n        <li>In <em>‚ÄúRead Modification Options‚Äù</em>\n          <ul>\n            <li><em>‚ÄúQuality cutoff‚Äù</em>: <code class=\"language-plaintext highlighter-rouge\">20</code></li>\n          </ul>\n        </li>\n        <li>In <em>‚ÄúOutput Options‚Äù</em>\n          <ul>\n            <li><em>‚ÄúReport‚Äù</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <p>Inspect the generated txt file (<code class=\"language-plaintext highlighter-rouge\">Report</code>)</p>\n\n      <blockquote class=\"question\">\n        <question-title></question-title>\n\n        <ol>\n          <li>How many basepairs has been removed from the reads because of bad quality?</li>\n          <li>How many sequence pairs have been removed because they were too short?</li>\n        </ol>\n\n        <blockquote class=\"solution\">\n          <solution-title></solution-title>\n          <ol>\n            <li>44,164 bp (<code class=\"language-plaintext highlighter-rouge\">Quality-trimmed:</code>) for the forward reads and 138,638 bp for the reverse reads.</li>\n            <li>1,376 sequences have been removed because at least one read was shorter than the length cutoff (322 when only the forward reads were analyzed).</li>\n          </ol>\n        </blockquote>\n      </blockquote>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>In addition to the report, Cutadapt generates 2 files:</p>\n<ul>\n  <li>Read 1 with the trimmed and filtered forward reads</li>\n  <li>Read 2 with the trimmed and filtered reverse reads</li>\n</ul>\n\n<p>These datasets can be used for the downstream analysis, e.g. mapping.</p>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>What kind of alignment is used for finding adapters in reads?</li>\n    <li>What is the criterion to choose the best adapter alignment?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <ol>\n      <li>Semi-global alignment, i.e., only the overlapping part of the read and the adapter sequence is used for scoring.</li>\n      <li>An alignment with maximum overlap is computed that has the smallest number of mismatches and indels.</li>\n    </ol>\n\n  </blockquote>\n</blockquote>\n\n<h1 id=\"assess-quality-with-nanoplot---long-reads-only\">Assess quality with Nanoplot - Long reads only</h1>\n\n<p>In case of long reads, we can check sequence quality with <a href=\"https://github.com/wdecoster/NanoPlot/\">Nanoplot</a> (<span class=\"citation\"><a href=\"#10.1093/bioinformatics/bty149\">De Coster <i>et al.</i> 2018</a></span>). It provides basic statistics with nice plots for a fast quality control overview.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Quality check of long reads</hands-on-title>\n  <ol>\n    <li>\n      <p>Create a new history for this part and give it a proper name</p>\n    </li>\n    <li>\n      <p>Import the PacBio HiFi reads <code class=\"language-plaintext highlighter-rouge\">m64011_190830_220126.Q20.subsample.fastq.gz</code> from <a href=\"https://zenodo.org/record/5730295\">Zenodo</a></p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>https://zenodo.org/records/5730295/files/m64011_190830_220126.Q20.subsample.fastq.gz\n</code></pre></div>      </div>\n    </li>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/nanoplot/nanoplot/1.41.0+galaxy0\" title=\"Nanoplot tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Nanoplot</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 1.41.0+galaxy0)</span> with the following parameters\n      <ul>\n        <li><i class=\"far fa-copy\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-files</span> <em>‚Äúfiles‚Äù</em>: <code class=\"language-plaintext highlighter-rouge\">m64011_190830_220126.Q20.subsample.fastq.gz</code></li>\n        <li><em>‚ÄúOptions for customizing the plots created‚Äù</em>\n          <ul>\n            <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>‚ÄúSpecify the bivariate format of the plots.‚Äù</em>: <code class=\"language-plaintext highlighter-rouge\">dot</code>, <code class=\"language-plaintext highlighter-rouge\">kde</code></li>\n            <li><i class=\"fas fa-filter\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-select</span> <em>‚ÄúShow the N50 mark in the read length histogram.‚Äù</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li>Inspect the generated HTML file</li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <p>What is the mean Qscore ?</p>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <p>The Qscore is around Q32.\nIn case of PacBio CLR and Nanopore, it‚Äôs around Q12 and close to Q31 for Illumina (NovaSeq 6000).</p>\n    <figure id=\"figure-16\" style=\"max-width: 90%;\"><img src=\"../../images/quality-control/qscore-illumina-pacbio-nanopore.png\" alt=\"Plot of Qscore between Illumina, PacBio and Nanopore. \" width=\"638\" height=\"456\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/quality-control/qscore-illumina-pacbio-nanopore.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 16</strong>:</span> Comparison of Qscore between Illumina, PacBio and Nanopore</figcaption></figure>\n\n    <p>Definition: Qscores is the average per-base error probability, expressed on the log (Phred) scale</p>\n  </blockquote>\n\n  <p>What is the median, mean and N50?</p>\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <p>The median, the mean read length and the N50 as well are close to 18,000bp.\nFor PacBio HiFi reads, the majority of the reads are generally near this value as the library preparation includes a size selection step.\nFor other technologies like PacBio CLR and Nanopore, it is larger and mostly depends on the quality of your DNA extraction.</p>\n  </blockquote>\n</blockquote>\n\n<h2 id=\"histogram-of-read-lengths\">Histogram of read lengths</h2>\n\n<p>This plot shows the distribution of fragment sizes in the file that was analyzed.\nUnlike most of Illumina runs, long reads have a variable length and this will show the relative amounts of each different size of sequence fragment.\nIn this example, the distribution of read length is centered near 18kbp but the results can be very different depending of your experiment.</p>\n\n<figure id=\"figure-17\" style=\"max-width: 90%;\"><img src=\"../../images/quality-control/HistogramReadlength.png\" alt=\"Histogram of read lengths. \" width=\"657\" height=\"450\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/quality-control/HistogramReadlength.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 17</strong>:</span> Histogram of read length</figcaption></figure>\n\n<h2 id=\"read-lengths-vs-average-read-quality-plot-using-dots\">Read lengths vs Average read quality plot using dots</h2>\n\n<p>This plot shows the distribution of fragment sizes according to the Qscore in the file which was analysed.\nIn general, there is no link between read length and read quality but this representation allows to visualize both information into a single plot and detect possible aberrations.\nIn runs with a lot of short reads the shorter reads are sometimes of lower quality than the rest.</p>\n\n<figure id=\"figure-18\" style=\"max-width: 90%;\"><img src=\"../../images/quality-control/LengthvsQualityScatterPlot_dot.png\" alt=\"Read lengths vs Average read quality plot using dots. \" width=\"631\" height=\"450\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/quality-control/LengthvsQualityScatterPlot_dot.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 18</strong>:</span> Histogram of read length</figcaption></figure>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n  <p>Looking at ‚ÄúRead lengths vs Average read quality plot using dots plot‚Äù. Did you notice something unusual with the Qscore? Can you explain it?</p>\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <p>There is no reads under Q20.\nThe qualification for HiFi reads is:</p>\n    <ul>\n      <li>A minimal number of 3 subreads</li>\n      <li>A read Qscore &gt;=20</li>\n    </ul>\n    <figure id=\"figure-19\" style=\"max-width: 90%;\"><img src=\"../../images/quality-control/pacbio-css-hifi-sequencing.png\" alt=\"PacBio HiFi sequencing. \" width=\"636\" height=\"636\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/quality-control/pacbio-css-hifi-sequencing.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 19</strong>:</span> PacBio HiFi sequencing</figcaption></figure>\n  </blockquote>\n</blockquote>\n\n<blockquote class=\"comment\">\n  <comment-title>Try it on!</comment-title>\n  <p>Do the quality control with <strong>FastQC</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> on <code class=\"language-plaintext highlighter-rouge\">m64011_190830_220126.Q20.subsample.fastq.gz</code> and compare the results!</p>\n</blockquote>\n\n<h1 id=\"assess-quality-with-pycoqc---nanopore-only\">Assess quality with PycoQC - Nanopore only</h1>\n\n<p><a href=\"https://github.com/tleonardi/pycoQC\">PycoQC</a> (<span class=\"citation\"><a href=\"#Leger2019\">Leger and Leonardi 2019</a></span>) is a data visualisation and quality control tool for nanopore data. In contrast to FastQC/Nanoplot it needs a specific sequencing_summary.txt file generated by Oxford nanopore basecallers such as Guppy or the older albacore basecaller.</p>\n\n<p>One of the strengths of PycoQC is that it is interactive and highly customizable, e.g., plots can be cropped, you can zoom in and out, sub-select areas and export figures.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Quality check of Nanopore reads</hands-on-title>\n  <ol>\n    <li>\n      <p>Create a new history for this part and give it a proper name</p>\n    </li>\n    <li>\n      <p>Import the nanopore reads <code class=\"language-plaintext highlighter-rouge\">nanopore_basecalled-guppy.fastq.gz</code> and <code class=\"language-plaintext highlighter-rouge\">sequencing_summary.txt</code> from <a href=\"https://zenodo.org/record/5730295\">Zenodo</a></p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>https://zenodo.org/records/5730295/files/nanopore_basecalled-guppy.fastq.gz\nhttps://zenodo.org/records/5730295/files/sequencing_summary.txt\n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/pycoqc/pycoqc/2.5.2+galaxy0\" title=\"PycoQC tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>PycoQC</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 2.5.2+galaxy0)</span> with the following parameters</p>\n\n      <ul>\n        <li><i class=\"far fa-copy\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-files</span> <em>‚ÄúA sequencing_summary file ‚Äú</em>: <code class=\"language-plaintext highlighter-rouge\">sequencing_summary.txt</code></li>\n      </ul>\n    </li>\n    <li>\n      <p>Inspect the webpage output from PycoQC</p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <p>How many reads do you have in total?</p>\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <p>~270k reads in total (see the Basecall summary table, ‚ÄúAll reads‚Äù)\nFor most of basecalling profiles, Guppy will assign reads as ‚ÄúPass‚Äù if the read Qscore is at least equal to 7.</p>\n  </blockquote>\n\n  <p>What is the median, minimum and maximum read length, what is the N50?</p>\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <p>The median read length and the N50 can be found for all as well as for all passed reads, i.e., reads that passed Guppy quality settings (Qscore &gt;= 7), in the basecall summary table.\nFor the minimum (195bp) and maximum (256kbp) read lengths, it can be found with the read lengths plot.</p>\n  </blockquote>\n</blockquote>\n\n<h2 id=\"basecalled-reads-length\">Basecalled reads length</h2>\n\n<p>As for FastQC and Nanoplot, this plot shows the distribution of fragment sizes in the file that was analyzed.\nAs for PacBio CLR/HiFi, long reads have a variable length and this will show the relative amounts of each different size of sequence fragment.\nIn this example, the distribution of read length is quite dispersed with a minimum read length for the passed reads around 200bp and a maximum length ~150,000bp.</p>\n\n<figure id=\"figure-20\" style=\"max-width: 90%;\"><img src=\"../../images/quality-control/basecalled_reads_length-pycoqc.png\" alt=\"Basecalled reads length. \" width=\"974\" height=\"500\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/quality-control/basecalled_reads_length-pycoqc.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 20</strong>:</span> Basecalled reads length</figcaption></figure>\n\n<h3 id=\"basecalled-reads-phred-quality\">Basecalled reads PHRED quality</h3>\n\n<p>This plot shows the distribution of the Qscores (Q) for each read. This score aims to give a global quality score for each read.\nThe exact definition of Qscores is: the average per-base error probability, expressed on the log (Phred) scale.\nIn case of Nanopore data, the distribution is generally centered around 10 or 12.\nFor old runs, the distribution can be lower, as basecalling models are less precise than recent models.</p>\n\n<figure id=\"figure-21\" style=\"max-width: 90%;\"><img src=\"../../images/quality-control/basecalled_reads_PHRED_quality-pycoqc.png\" alt=\"Basecalled reads PHRED quality. \" width=\"974\" height=\"500\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/quality-control/basecalled_reads_PHRED_quality-pycoqc.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 21</strong>:</span> Basecalled reads PHRED quality</figcaption></figure>\n\n<h2 id=\"basecalled-reads-length-vs-reads-phred-quality\">Basecalled reads length vs reads PHRED quality</h2>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n  <p>What do the mean quality and the quality distribution of the run look like?</p>\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <p>The majority of the reads have a Qscore between 8 and 11 which is standard for Nanopore data.\nBeware that for the same data, the basecaller used (Albacor, Guppy, Bonito), the model (fast, hac, sup) and the tool version can give different results.</p>\n  </blockquote>\n</blockquote>\n\n<p>As for NanoPlot, this representation give a 2D visualisation of read Qscore according to the length.</p>\n\n<figure id=\"figure-22\" style=\"max-width: 90%;\"><img src=\"../../images/quality-control/basecalled_reads_length_vs_reads_PHRED_quality-pycoqc.png\" alt=\"Basecalled reads length vs reads PHRED quality. \" width=\"974\" height=\"600\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/quality-control/basecalled_reads_length_vs_reads_PHRED_quality-pycoqc.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 22</strong>:</span> Basecalled reads length vs reads PHRED quality</figcaption></figure>\n\n<h2 id=\"output-over-experiment-time\">Output over experiment time</h2>\n\n<p>This representation gives information about sequenced reads over the time for a single run:</p>\n\n<ul>\n  <li>Each pic indicates a new loading of the flow cell (3 + the first load).</li>\n  <li>The contribution in total reads for each ‚Äúrefuel‚Äù.</li>\n  <li>The production of reads is decreasing over time:\n    <ul>\n      <li>Most of the material (DNA/RNA) is sequenced</li>\n      <li>Saturation of pores</li>\n      <li>Material/pores degradation</li>\n      <li>‚Ä¶</li>\n    </ul>\n  </li>\n</ul>\n\n<p>In this example, the contribution of each refueling is very low, and it can be considered as a bad run.\nThe ‚ÄúCummulative‚Äù plot area (light blue) indicates that 50% of all reads and almost 50% of all bases were produced in the first 5h of the 25h experiment.\nAlthough it is normal that yield decreases over time a decrease like this is not a good sign.</p>\n\n<figure id=\"figure-23\" style=\"max-width: 90%;\"><img src=\"../../images/quality-control/output_over_experiment_time-pycoqc.png\" alt=\"Output over experiment time. \" width=\"974\" height=\"500\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/quality-control/output_over_experiment_time-pycoqc.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 23</strong>:</span> Output over experiment time</figcaption></figure>\n\n<blockquote class=\"details\">\n  <details-title>Other \"Output over experiment time\" profile</details-title>\n\n  <p>In this example, the data production over the time only slightly decreased over the 12h with a continuous increasing of cumulative data.\nThis absence of a decreasing curve at the end of the run indicate that there is still biological material on the flow cell. The run was ended before all was sequenced.\nIt‚Äôs an excellent run, even can be considered as exceptional.</p>\n\n  <p><a href=\"../../images/quality-control/output_over_experiment_time-pycoqc-good.png\" rel=\"noopener noreferrer\"><img src=\"../../images/quality-control/output_over_experiment_time-pycoqc-good.png\" alt=\"Output over experiment time good profile. \" width=\"974\" height=\"500\" loading=\"lazy\" /></a></p>\n\n</blockquote>\n\n<h3 id=\"read-length-over-experiment-time\">Read length over experiment time</h3>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n  <p>Did the read length change over time? What could the reason be?</p>\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <p>In the current example the read length increases over the time of the sequencing run.\nOne explanation is that the adapter density is higher for lots of short fragments and therefore the chance of a shorter fragment to attach to a pore is higher. Also, shorter molecules may move faster over the chip.\nOver time, however, the shorter fragments are becoming rarer and thus more long fragments attach to pores and are sequenced.</p>\n  </blockquote>\n</blockquote>\n\n<p>The read length over experiment time should be stable.\nIt can slightly increase over the time as short fragments tend to be over-sequenced at the beginning and are less present over the time.</p>\n\n<figure id=\"figure-24\" style=\"max-width: 90%;\"><img src=\"../../images/quality-control/read_length_over_experiment_time-pycoqc.png\" alt=\"Read length over experiment time. \" width=\"974\" height=\"500\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/quality-control/read_length_over_experiment_time-pycoqc.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 24</strong>:</span> Read length over experiment time</figcaption></figure>\n\n<h2 id=\"channel-activity-over-time\">Channel activity over time</h2>\n\n<p>It gives an overview of available pores, pore usage during the experiment, inactive pores and shows if the loading of the flow cell is good (almost all pores are used).\nIn this case, the vast majority of channels/pores are inactive (white) throughout the sequencing run, so the run can be considered as bad.</p>\n\n<p>You would hope for a plot that it is dark near the X-axis, and with higher Y-values (increasing time) doesn‚Äôt get too light/white.\nDepending if you chose ‚ÄúReads‚Äù or ‚ÄúBases‚Äù on the left the colour indicates either number of bases or reads per time interval</p>\n\n<figure id=\"figure-25\" style=\"max-width: 90%;\"><img src=\"../../images/quality-control/channel_activity_over_time-pycoqc.png\" alt=\"Channel activity over time. \" width=\"974\" height=\"600\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/quality-control/channel_activity_over_time-pycoqc.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 25</strong>:</span> Channel activity over time</figcaption></figure>\n\n<blockquote class=\"details\">\n  <details-title>Other \"Channel activity over time\" profile</details-title>\n\n  <p>In this example, almost all pores are active all along the run (yellow/red profile) which indicate an excellent run.</p>\n\n  <p><a href=\"../../images/quality-control/channel_activity_over_time-pycoqc-good.png\" rel=\"noopener noreferrer\"><img src=\"../../images/quality-control/channel_activity_over_time-pycoqc-good.png\" alt=\"Channel activity over time good profile. \" width=\"974\" height=\"600\" loading=\"lazy\" /></a></p>\n\n</blockquote>\n\n<blockquote class=\"comment\">\n  <comment-title>Try it out!</comment-title>\n  <p>Do the quality control with <strong>FastQC</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> and/or <strong>Nanoplot</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> on <code class=\"language-plaintext highlighter-rouge\">nanopore_basecalled-guppy.fastq.gz</code> and compare the results!</p>\n</blockquote>\n\n<h1 id=\"conclusion\">Conclusion</h1>\n\n<p>In this tutorial we checked the quality of FASTQ files to ensure that their data looks good before inferring any further information.\nThis step is the usual first step for analyses such as RNA-Seq, ChIP-Seq, or any other OMIC analysis relying on NGS data.\nQuality control steps are similar for any type of sequencing data:</p>\n\n<ul>\n  <li>Quality assessment with tools like:\n    <ul>\n      <li><em>Short Reads</em>: <span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/fastqe/fastqe/0.2.6+galaxy2\" title=\"FASTQE tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>FASTQE</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.2.6+galaxy2)</span></li>\n      <li><em>Short+Long</em>: <span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.73+galaxy0\" title=\"FASTQC tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>FASTQC</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.73+galaxy0)</span></li>\n      <li><em>Long Reads</em>:  <span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/nanoplot/nanoplot/1.41.0+galaxy0\" title=\"Nanoplot tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Nanoplot</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 1.41.0+galaxy0)</span></li>\n      <li><em>Nanopore only</em>: <span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/pycoqc/pycoqc/2.5.2+galaxy0\" title=\"PycoQC tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>PycoQC</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 2.5.2+galaxy0)</span></li>\n    </ul>\n  </li>\n  <li>Trimming and filtering for <strong>short reads</strong> with a tool like <strong>Cutadapt</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span></li>\n</ul>\n"],"ref_slides":["# Why Quality Control?\n\n???\n\nPotential audience poll ideas:\n\n- Sequenced something or assembled a genome or transcriptome?\n- Can guess why we need to do QC on our data?\n\nComments:\n\n- Process of removing low quality sequences that might corrupt downstream analyses\n- Some assemblers like Spades have an auto-correction process and ask for raw data\n\n---\n\n### Where is my data coming from?\n\n![Cartoon of different types of sequencing and where they appear in the genome. Bisulfite and ChIP-Seq have arrows pointing to nucleosomes. DNaseq-seq points to the region between nucleosomes. Hi-C and ChIA-PET point to the long range chromatin interactions. RNA-Seq points to a subset of the genome showing a promoter and transcribed region.](../../images/ecker_2012.png)\n\n<small>[*Ecker et al, Nature, 2012*](https://www.ncbi.nlm.nih.gov/pubmed/22955614)</small>\n\n???\n\n- Many sequencing techniques\n- [Huge diversity in protocols](https://www.illumina.com/science/sequencing-method-explorer.html)\n- Knowledge about source of data (+expectations of how it looks) is important in QC process\n- What is/isn't normal for your data\n\nSegue: Might be concerned about different processing for each\n\n---\n\n### From experiments to data\n\n![RNA Seq, Exome Seq, ChIP-Seq, and DNA-Seq all point to a large sequencing box and produce files. Then come bioinformatic analysis, namely quality control, on all of the different types.](../../images/from_exp_to_data.png)\n\nQuality control = First step of the bioinformatics analyses\n\n???\n\n- But no matter what technique used, same file format\n- Always should go through QC\n\nSegue: So let's look at how that data is stored\n\n---\n\n### Sequences: FASTA\n\n```\n>Identifier1 (comment)\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n>Identifier2 (comment)\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\nXX\n```\n\n???\n\n- familiar if you've seen genomic data before\n- Starts with greater-than sign\n- Then an identifier with no spaces\n- Everything after a space is a comment\n- Newline\n- Everything up to next greater-than is sequence data (wrapping unnecessary)\n\nSegue: But this is just sequence, and we have data from a sequencer, which includes quality\n\n---\n\n### Sequences: FASTQ\n\n```\n@Identifier1 (comment)\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n+\nQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ\n@Identifier2 (comment)\nXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXXX\n+\nQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQQ\n```\n\n???\n\n- Four lines\n- @ + identifier on first line, just like fasta\n- sequence\n- +\n- quality score characters\n\nSegue: so what do the quality chars mean?\n\n---\n\n### Quality score\n\nMeasure of the quality of the identification of the nucleobases <br>generated by automated DNA sequencing\n\n<small>\n\nPhred Quality Score | Probability of incorrect base call | Base call accuracy\n--- | --- | ---\n10 | 1 in 10 | 90%\n20 | 1 in 100 | 99%\n30 | 1 in 1000 | 99.9%\n40 | 1 in 10,000 | 99.99%\n50 | 1 in 100,000 | 99.999%\n60 | 1 in 1,000,000 | 99.9999%\n\n</small>\n\n???\n\n- Logarithmic scale\n\n---\n\n### Quality score\n\n![Graph of quality score vs probability of misidentification. There are two lines, red shows -10log(p) while solexa has a different formula](../../images/quality_score.png)\n\n???\n\n- Solexa uses slightly different measure\n\n---\n\n### Quality score encoding\n\n![Encoding of the quality score with ASCII characters for different Phred encoding. The ascii code sequence is shown at the top with symbols for 33 to 64, upper case letters, more symbols, and then lowercase letters. Sanger maps from 33 to 73 while solexa is shifted, starting at 59 and going to 104. Illumina 1.3 starts at 54 and goes to 104, Illumina 1.5 is shifted three scores to the right but still ends at 104. Illumina 1.8+ goes back to the Sanger except one single score wider. Illumina](../../../sequence-analysis/images/fastq-quality-encoding.png)\n\n???\n\n- Earlier saw sequence + quality were same length of text\n- Each score encoded as a single character\n- Uses ASCII (common computer encoding, maps numbers to characters)\n- Each technology has a different mapping\n- Mostly see illumina 1.8 these days, others only if historical\n\n---\n\n## PacBio HiFi *vs* CLR\n\n![Comparison between PacBio HiFi and CLR sequencing methods](../../images/quality-control/pacbio_hifi_vs_clr.png)\n\n- **HiFi (CCS)**: 99%+ accurate read achieved by multiple passes of the polymerase over a **single molecule**\n- **CLR**: 90% accurate read from **multiples molecules**\n\n???\n\n- HiFi read is the result of a consensus of subreads from the same molecule (i.e. multiple pass over the same molecule). It's imply to have shorter sequences to allow multiple pass on a single molecule by the polymerase.\n- CLR read come from a single pass from a single molecule. It's allow to have longer reads but with a lower read quality. Warning: Absence of encoded quality since Sequel I into fastq files with CLR.\n\n---\n\n## Identifying Potential Quality Issues\n\n---\n\n## FastQC\n\nA versatile tool for short and long reads quality control\n\n---\n\n### FastQC\n\n![Screenshot of FastQC report, showing the table of contents with green checks on nearly every result, and the base statistics and per-base sequence quality graphs shown.](../../../sequence-analysis/images/fastqc-report.png)\n\n???\n\n- Analyses your fastq files\n- Has many modules\n- They report on different aspects of the sequence\n\n- Modules include:\n  - Basic Statistics\n  - Per base sequence quality\n  - Per sequence quality scores\n  - Per base sequence content\n  - Per base GC content\n  - Per sequence GC content\n  - Per base N content\n  - Sequence Length Distribution\n  - Sequence Duplication Levels\n  - Overrepresented sequences\n  - Kmer Content\n\n---\n\n### Quality score: Per-base\n\n![Fastqc quality score plot, most results are in the green region but the box portion of the box and whisker plot start to dip into the yellow, medium quality (less than 30) region near 34+ base position in read. The whiskers begin extending to the red region (less than 20) by base 31 and get progressively worse.](../../../sequence-analysis/images/per_base_sequence_quality_good.png)\n\n<i class=\"fa fa-thumbs-up\"></i> Good quality score\n\n---\n\n### Per-base Quality\n\n![Fastqc quality score plot, most results are in the green region up until 30. The whiskers extend to the yellow region from the start, and after base 30 get progressively worse, goign to the worst possible score by the end. The boxes cover the yellow region by base 40.](../../images/per_base_sequence_quality_bad.png)\n\n<i class=\"fa fa-thumbs-down\"></i> Bad quality score\n\n---\n\n### Per-base Quality - Nanopore\n\n![A graph for Nanopore reads (R9.4) basecalled with guppy. Almost all bases are in the red region below 20.](../../images/per_base_sequence_quality_nanopore.png)\n\n<i class=\"far fa-thumbs-up\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">congratulations</span> Good quality score\n\n???\n\n- Nanopore reads have an higher error rate, around 5% while it's ~0.5% for Illumina\n- Q10 -> Q14 with recent versions of Guppy\n- Q20+ with new sequencing kit by the end of 2021 (new chemistry)\n\n---\n\n### Per-base Quality - PacBio HiFi\n\n![A graph for PacBio HiFi reads. All reads are in the green region and quality score are encoded up to 92.](../../images/per_base_sequence_quality_pacbio_hifi_good.png)\n\n<i class=\"far fa-thumbs-up\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">congratulations</span> Good quality score\n\n???\n\n- PacBio encodes quality with a higher range than Illumina to increase precision in base quality assessment\n---\n\n### Per-base Quality - PacBio CLR\n\n![A graph for PacBio CLR reads. It's empty as quality is set to 0 for all bases!](../../images/per_base_sequence_quality_pacbio_clr.png)\n\nQuality information is \"absent\" for CLR reads since Sequel I. Quality for each base is automatically set to 0 (i.e. \"!\")!\n\n---\n\n### Per-sequence Quality\n\n![A per-sequence quality showing quality score distribution histogram with average quality per read plotted. Most reads pile up around quality 30, but another peak appears at 17. very few reads have quality less than 10.](../../images/per_sequence_quality.png)\n\n???\n\n- For Illumina, the pic should be near 30\n- For Nanopore, the pic is generally between 10 and 12. It depends on pore (R9 vs R10) and basecaller version and models (fast, hac, sup).\n- For PacBio HiFi, the pic should be near 90.\n\n---\n\n### Per-tile Quality\n\n![A heatmap with several red and green squares, but overall largely blue.](../../images/per_tile_quality.png)\n\n???\nIn Illumina libraries, the original sequence identifier is retained. Encoded in these is the flowcell tile from which each read came.\n\nThere might be transient problems such as bubbles going through the flowcell, or more permanent problems such as smudges on the flowcell, or debris inside the flowcell lane.\n\nThis graph will only appear with Illumina libraries which retain their original sequence identifiers. The graph allows to check the quality scores from each tile across all bases, to see if there was a loss in quality associated with only one portion of the flowcell. The plot shows the deviation from the average quality for each tile. The colours are on a cold to hot scale, with cold colours being positions where the quality was at or below the average for that base in the run, and hot colours to indicate that a tile had worse quality reads than other tiles for that base. In the example below you can see that certain tiles show consistently poor quality. A good plot should be blue all over.\n\n---\n\n### Per-base Sequence Content\n\n![A line chart mapping sequence content across all bases with % of the four nucleotides plotted. The graph starts off very jagged and stabilises by base 12.](../../images/per_base_sequence_content.png)\n\n???\nThe per-base sequence content highlights the proportion of each base in each position of a sequence for which each of the four DNA bases have been called. In a random library there would be little to no difference between the different bases of a sequence run. The relative amount of each base should reflect the overall amount of these bases, but in any case they should not be hugely imbalanced from one another. It is worth noting that some types of libraries will always produce biased sequence composition, normally at the start of the read. Libraries produced by priming with random hexamers (including nearly all RNA-Seq libraries) and those which were fragmented using transposases, inherit an intrinsic bias in the positions at which the reads start. This bias does not concern an absolute sequence, but instead provides an enrichment of a number of different K-mers at the 5‚Äô end of the reads. Whilst this is a true technical bias, it isn‚Äôt something which can be corrected by trimming and in most cases doesn‚Äôt seem to adversely affect the downstream analysis. It will however produce a warning or error in this module.\n\nThere are a number of common scenarios for these issues:\n\n- Over-represented sequences\n- Biased fragmentation\n- Biased composition libraries\n- Aggressive adapter trimming\n\n---\n\n### Per-sequence GC content\n\n![A line chart showing mean GC content and threoretical distribution as largely overlapping peaks.](../../images/per_sequence_GC_content.png)\n\n???\nThe GC content distribution of most samples should follow a normal distribution. In some cases, a bi-modal distribution can be observed, especially for metagenomic data sets. An unusually shaped distribution could indicate a contaminated library or some other kinds of biased subset. A normal distribution which is shifted indicates some systematic bias which is independent of base position. Such a systematic bias creating a shifted normal distribution won‚Äôt be flagged as an error, since the tool cannot guess what the provided genome‚Äôs GC content should be.\n\nIssues in the GC content distribution usually indicate a problem with the library. Sharp peaks on an otherwise smooth distribution are normally the result of a specific contaminant (adapter dimers for example), which may well be picked up by the over-represented sequences module. Broader peaks may represent contamination with a different species.\n\n---\n\n### Per-base N content\n\n![A line graph of N content across all bases. It shows several peaks to 65 at specific positions and goes to 100 near the end.](../../images/per_base_N_content.png)\n\n???\nSequences can contain the ambiguous base N for positions that could not be identified as a particular base. A high number of Ns can be a sign for a low quality sequence or even dataset. If no quality scores are available, the sequence quality can be inferred from the percent of Ns found in a sequence or dataset.\n\nIf a sequencer is unable to make a base call with sufficient confidence then it will normally substitute an N rather than a conventional base call. It‚Äôs not unusual to see a very low proportion of Ns appearing in a sequence, especially nearer the end of a sequence. However, if this proportion rises above a few percent it suggests that the analysis pipeline was unable to interpret the data well enough to make valid base calls.\n\n---\n\n### Sequence length distribution\n\n![A graph with a single peak at 75, and 0 outside of this region.](../../images/sequence_length_distribution.png)\n\n???\nSome high throughput sequencers generate sequence fragments of uniform length, while others can output reads of wildly varying lengths. The length distribution can be then used as quality measure. You would expect a normal distribution for the best result. However, most sequencing results show a slowly increasing and then a steep falling distribution.\n\nFastQC generates a graph showing the distribution of fragment sizes in the file which was analysed. In many cases this will produce a simple graph showing a peak only at one size, but for variable length FASTQ files this will show the relative amounts of each different size of sequence fragment.\n\nThis module will raise a warning if all sequences are not the same length. This module will raise an error if any of the sequences have zero length.\n\n---\n\n### Sequence length distribution - PacBio / Nanopore\n\n![A graph with a main peak around 15,000bp for PacBio HiFi run.](../../images/sequence_length_distribution_long-reads.png)\n\n???\n\nFor long reads, the distribution is much more important and depends on the fragment size selection, primers, DNA weight and quality, etc\n\n---\n\n### Duplicated sequences\n\n![Two line graphs, deduplicated sequences in red, and total sequences in blue. They start off near 100 and go rapidly to zero by sequence duplication level 2 and 3.](../../images/sequence_duplication_levels.png)\n\n???\nThis quality check module counts the degree of duplication for every sequence in the library, and creates a plot showing the relative number of sequences with different degrees of duplication:\n- the blue line represents the full sequence set, showing how its duplication levels are distributed;\n- the red line represents the de-duplicated sequences, plotting the proportions of deduplicated sequence sets which come from different duplication levels in the original data.\n\nIn genomic projects, sequence duplication is investigated. Duplicated sequences can arise when there are too few fragments present at any stage prior to sequencing.\n\nThis module issues a warning if non-unique sequences make up for more than 20% of the total sequences. An error is raised instead if non-unique sequences make up for more than 50% of the total.\n\n---\n\n### Tag sequences: Adapter contamination\n\n![The graph shows a line at zero for the five possible datasets.](../../images/adapter_content.png)\n\n???\nTag sequences are artifacts at the ends of sequence reads such as multiplex identifiers, adapters, and primer sequences that were introduced during pre-amplification with primer-based methods. The base frequencies across the reads present an easy way to check for tag sequences. If the distribution seems uneven (high frequencies for certain bases over several positions), it could indicate some residual tag sequences. This doesn‚Äôt indicate a problem as such - just that the sequences will need to be adapter trimmed before proceeding with any downstream analysis.\n\nTo investigate tag or adapter content, FastQC generates a plot showing a cumulative percentage count of the proportion of the library which has seen each of the adapter sequences at each position. Once a sequence has been seen in a read it is counted as being present right through to the end of the read so the percentages you see will only increase as the read length goes on.\n\n---\n\n### Tag sequences: K-mer content\n\n![several peaks are visible on the log2 obs/exp graph of different k-mers at different positions in the read.](../../images/kmer_content.png)\n\n???\nAnother way to find tag sequences is to look at the K-mer content, and find those which do not have even coverage through the length of your reads and could correspond to tag sequences.\n\nK-mers with positionally biased enrichment are reported. The top 6 most biased K-mer are additionally plotted to show their distribution.\n\nOver-represented K-mers will appear as sharp spikes at a single point in the sequence, deviating from what should be a progressive or broad enrichment.\n\n---\n\n## NanoPlot\n\nA quality control tool for long reads (Nanopore/PacBio)\n\n---\n\n### NanoPlot report\n\n![Header of a NanoPlot html report ](../../images/nanoplot_report.png)\n\nQscores (Qx): it is the average per-base error probability, expressed on the log (Phred) scale\n\n???\n\n- Analyses your fastq/bam files\n- Reports on different aspects of the reads\n\n- Modules include:\n  - Summary Statistics\n    - Mean / Median / N50 reads length\n    - Mean / Median / N50 reads quality\n    - Number of reads\n    - Total of bases generated\n  - Plots (depends on parameters)\n    - Histogram of read lengths\n    - Yield by length\n    - Read lengths vs Average read quality\n\n---\n\n### Read length *vs* Read quality score (Qscores)\n\n![Distribution for HiFi reads with a default filter >= Q20 ](../../images/LengthvsQualityScatterPlot_dot.png)\n\nEach dot represents a read. In the case of PacBio HiFi, the minimum Qscore is fixed to 20 which explains the absence of any dot under this score.\n\n???\n\nThis plot give a 2D visualisation of quality score for reads according to reads length. It allows to detect bias quickly and easily.\n\n---\n\n### Histogram of read length\n\n![Distribution around 15 / 20kb in HiFi mode ](../../images/HistogramReadlength.png)\n\n???\n\nIt's a similar representation as FastQC sequence length distribution.\nThe length distribution can then be used as quality measure, as you would expect a normal distribution for the best result.\nAlso, at least for PacBio HiFi, the pic should be centered near 15kb.\n\n---\n\n### Run yield by Length\n\n![Yield for HiFi run ](../../images/Yield_By_Length.png)\n\nThis plot shows the total number of bases read in the run, as a function of the length of the read that contained them. The Y-axis is scaled based on the quantity of data in the fastq/a that was analyzed (20Gbp in this example).\n\n???\n\n- Very long reads represent only a small part of the total bases pairs generated.\n- In case of HiFi reads, the contribution of long reads starts to decrease after 10kb and 50% of the data correspond to the N50.\n- Used to evaluate the contribution of each size fraction\n\n---\n\n## PycoQC\n\nAn interactive quality control tool for basecalled Nanopore data\n\n???\n\n- Analyse your run after basecalling\n- Has many modules\n- Dynamics plot\n- They report on different aspects of the sequence\n\n- Modules include:\n  - Basic Statistics\n  - Basecalled reads length\n  - Basecalled reads PHRED quality\n  - Basecalled reads length vs reads PHRED quality\n  - Output reads over experiment time\n  - Read length over experiment time\n  - Read quality over experiment time\n  - Channel activity over time\n  - Number of reads per barcode (optional)\n\n---\n\n### General and basecalled summary\n\n![General summary about a Nanopore run from PycoQC. It includes general information about the run itself (duration, channels, run ids and barcode in case of barcoded runs).](../../images/general_run_summary-pycoqc.png)\n![General summary about the reads.](../../images/basecall_summary-pycoqc.png)\n\n???\n\nThe 2 tables give general information about the run itself like the duration of the run, the number of active channels (pores), run ids and number of barcodes if necessary.\nIt also provides information about the reads themself, like the total reads, bases, N50, median and median PHRED score.\nReads with a Qscore >= 7 (default with Guppy) are marked as \"Pass\"\n\n---\n\n### Basecalled reads length\n\n![A graph with a read length distribution between 200bp and 150kbp.](../../images/basecalled_reads_length-pycoqc.png)\n\n---\n\n### Basecalled reads PHRED quality (Qscores)\n\n![A graph of PHRED quality (Qscore) with a distribution centered around 10.](../../images/basecalled_reads_PHRED_quality-pycoqc.png)\n\nReminder: Qscores is the average per-base error probability, expressed on the log (Phred) scale\n\n---\n\n### Basecalled reads length *vs* reads PHRED quality (Qscores)\n\n![Standard distribution for Nanopore reads.](../../images/basecalled_reads_length_vs_reads_PHRED_quality-pycoqc.png)\n\n???\n\nAs for NanoPlot, this representation give a 2D visualisation of quality score for reads according to reads length.\nIt allows to detect bias quickly and easily.\n\n---\n\n### Output over experiment time\n\n![Sequenced reads over time for a single run.](../../images/output_over_experiment_time-pycoqc.png)\n\n???\n\nThis representation gives information about sequenced reads over the time.\n- Each pic indicates a new loading of the flow cell (3 + the first load).\n- The contribution in total reads for each \"refuel\".\n- The production of reads is decreasing over time:\n  - Most of material (DNA/RNA) is sequenced\n  - Saturation of pores\n  - Material degradation\n  - ...\n- In this example, the contribution of refuling is very low and it can be considered as a bad run.\n\nUnlike all other technologies, with Nanopore you can refuel the flow cell with biological material without needing to make another run.\n\n---\n\n### Read length over experiment time\n\n![Read length during an experiment.](../../images/read_length_over_experiment_time-pycoqc.png)\n\n???\n\nThe read length over experiment time should be stable.\nIt can slightly increase over the time as short fragments tend to be over-sequenced at the beginning and are less present over the time.\n\n---\n\n### Read quality over experiment time\n\n![Read quality over the time.](../../images/read_quality_over_experiment_time-pycoqc.png)\n\n???\n\nThe read quality should be stable over the time.\n\n---\n\n### Channel activity over time\n\n![View of the activity of each pore from the flow cell over the time.](../../images/channel_activity_over_time-pycoqc.png)\n\n???\n\nIt gives an overview of available pores, pore usage during the experiment and shows if the loading of the flow cell is good (almost all pores are used).\nIn this case, the run can be considered bad as the number of used pores is decreasing over the time.\n\n---\n\n## Improving the quality of sequences\n\n- Filtering of sequences\n    - with small mean quality score\n    - too small\n    - with too many N bases\n    - based on their GC content\n    - ...\n- Cutting/Trimming sequences\n    - from low quality score parts\n    - tails\n    - ...\n\n???\n\n- Trimming is not always recommended (e.g. see Spades documentation)\n"],"hands_on":true,"slides":true,"mod_date":"2024-05-29 14:28:52 +0000","pub_date":"2016-10-04 13:22:53 +0000","version":121,"workflows":[{"workflow":"quality_control.ga","tests":true,"url":"https://training.galaxyproject.org/training-material/topics/sequence-analysis/tutorials/quality-control/workflows/quality_control.ga","path":"topics/sequence-analysis/tutorials/quality-control/workflows/quality_control.ga","wfid":"sequence-analysis-quality-control","wfname":"quality_control","trs_endpoint":"https://training.galaxyproject.org/training-material/api/ga4gh/trs/v2/tools/sequence-analysis-quality-control/versions/quality_control","license":null,"creators":[],"name":"GTN - Sequence Analyses - Quality Control (imported from uploaded file)","title":"GTN - Sequence Analyses - Quality Control (imported from uploaded file)","test_results":{"eu":{"summary":{"num_errors":0,"num_failures":0,"num_skips":0,"num_tests":1},"tests":[{"data":{"end_datetime":"2023-05-19T17:08:59.654933","inputs":"---\nreads_1:\n  class: File\n  location: https://zenodo.org/record/61771/files/GSM461178_untreat_paired_subset_1.fastq\nreads_2:\n  class: File\n  location: https://zenodo.org/record/61771/files/GSM461178_untreat_paired_subset_2.fastq\n","invocation_details":{"details":{"error_message":"","history_id":"2f1f9fa04aab9b59","history_state":"ok","invocation_id":"1375254bd7688d41","invocation_state":"scheduled","workflow_id":"8d2820cd545d11e7"},"steps":{"0. reads_1":{"action":null,"id":"09aab9ccfa6260cb","job_id":null,"jobs":[],"model_class":"WorkflowInvocationStep","order_index":0,"output_collections":{},"outputs":{"output":{"id":"4838ba20a6d86765ff25d30589db09fe","src":"hda","uuid":"3835c7cb-1707-4e6f-85d2-6f1ad5c31bc4"}},"state":"scheduled","subworkflow":null,"subworkflow_invocation_id":null,"update_time":"2023-05-19T14:59:03.317312","workflow_step_id":"41e0f8150fe3cff2","workflow_step_label":"reads_1","workflow_step_uuid":"3ba96dd1-e62d-4c22-b5b9-92a03e9b0c46"},"1. reads_2":{"action":null,"id":"53088303de376bb8","job_id":null,"jobs":[],"model_class":"WorkflowInvocationStep","order_index":1,"output_collections":{},"outputs":{"output":{"id":"4838ba20a6d867656914ebcc68e736a5","src":"hda","uuid":"9968668a-3051-4e02-aa3d-4997838a0985"}},"state":"scheduled","subworkflow":null,"subworkflow_invocation_id":null,"update_time":"2023-05-19T14:59:03.317318","workflow_step_id":"ada35db989250a9c","workflow_step_label":"reads_2","workflow_step_uuid":"11e6b420-32a1-431d-8eb4-b707a1e9b2df"},"2. Unnamed step":{"action":null,"id":"d94b4b21ddc3e0c3","job_id":"11ac94870d0bb33a2a3328a31b8b1d2e","jobs":[{"command_line":"ln -s '/data/dnb08/galaxy_db/files/3/8/3/dataset_3835c7cb-1707-4e6f-85d2-6f1ad5c31bc4.dat' 'GSM461178_untreat_paired_subset_1_fastq' && mkdir -p '/data/jwd01/main/060/059/60059402/working/dataset_a0107efb-9924-481b-99eb-5e7c74c4c697_files' && fastqc --outdir '/data/jwd01/main/060/059/60059402/working/dataset_a0107efb-9924-481b-99eb-5e7c74c4c697_files'    --quiet --extract  --kmers 7 -f 'fastq' 'GSM461178_untreat_paired_subset_1_fastq'  && cp '/data/jwd01/main/060/059/60059402/working/dataset_a0107efb-9924-481b-99eb-5e7c74c4c697_files'/*/fastqc_data.txt output.txt && cp '/data/jwd01/main/060/059/60059402/working/dataset_a0107efb-9924-481b-99eb-5e7c74c4c697_files'/*\\.html output.html","command_version":null,"create_time":"2023-05-19T14:59:03.313089","dependencies":[{"cacheable":false,"dependency_resolver":{"auto_init":true,"auto_install":false,"can_uninstall_dependencies":true,"ensure_channels":"conda-forge,bioconda","model_class":"CondaDependencyResolver","prefix":"/usr/local/tools/_conda","read_only":false,"resolver_type":"conda","resolves_simple_dependencies":true,"use_local":false,"versionless":false},"dependency_type":"conda","environment_path":"/usr/local/tools/_conda/envs/__fastqc@0.11.8","exact":true,"model_class":"MergedCondaDependency","name":"fastqc","version":"0.11.8"}],"exit_code":0,"external_id":"43535387","galaxy_version":"23.0","history_id":"2f1f9fa04aab9b59","id":"11ac94870d0bb33a2a3328a31b8b1d2e","inputs":{"input_file":{"id":"4838ba20a6d86765ff25d30589db09fe","src":"hda","uuid":"3835c7cb-1707-4e6f-85d2-6f1ad5c31bc4"}},"job_messages":[],"job_metrics":[{"name":"hostname","plugin":"hostname","raw_value":"vgcnbwc-worker-c125m425-1589.novalocal","title":"hostname","value":"vgcnbwc-worker-c125m425-1589.novalocal"},{"name":"galaxy_slots","plugin":"core","raw_value":"8.0000000","title":"Cores Allocated","value":"8"},{"name":"galaxy_memory_mb","plugin":"core","raw_value":"31129.0000000","title":"Memory Allocated (MB)","value":"31129"},{"name":"start_epoch","plugin":"core","raw_value":"1684508692.0000000","title":"Job Start Time","value":"2023-05-19 17:04:52"},{"name":"end_epoch","plugin":"core","raw_value":"1684508707.0000000","title":"Job End Time","value":"2023-05-19 17:05:07"},{"name":"runtime_seconds","plugin":"core","raw_value":"15.0000000","title":"Job Runtime (Wall Clock)","value":"15 seconds"},{"name":"cpuacct.usage","plugin":"cgroup","raw_value":"12194724984.0000000","title":"CPU Time","value":"12.194724984 seconds"},{"name":"memory.failcnt","plugin":"cgroup","raw_value":"0E-7","title":"Failed to allocate memory count","value":0.0},{"name":"memory.limit_in_bytes","plugin":"cgroup","raw_value":"32749125632.0000000","title":"Memory limit on cgroup (MEM)","value":"30.5 GB"},{"name":"memory.max_usage_in_bytes","plugin":"cgroup","raw_value":"357576704.0000000","title":"Max memory usage (MEM)","value":"341.0 MB"},{"name":"memory.memsw.limit_in_bytes","plugin":"cgroup","raw_value":"9223372036854771712.0000000","title":"Memory limit on cgroup (MEM+SWP)","value":"8.0 EB"},{"name":"memory.memsw.max_usage_in_bytes","plugin":"cgroup","raw_value":"357576704.0000000","title":"Max memory usage (MEM+SWP)","value":"341.0 MB"},{"name":"memory.oom_control.oom_kill_disable","plugin":"cgroup","raw_value":"1.0000000","title":"OOM Control enabled","value":"No"},{"name":"memory.oom_control.under_oom","plugin":"cgroup","raw_value":"0E-7","title":"Was OOM Killer active?","value":"No"},{"name":"memory.soft_limit_in_bytes","plugin":"cgroup","raw_value":"0E-7","title":"Memory softlimit on cgroup","value":"0 bytes"}],"job_stderr":"","job_stdout":"","model_class":"Job","output_collections":{},"outputs":{"html_file":{"id":"4838ba20a6d867651957556f6b54741b","src":"hda","uuid":"a0107efb-9924-481b-99eb-5e7c74c4c697"},"text_file":{"id":"4838ba20a6d86765967c147adffa4ae2","src":"hda","uuid":"8aadb0d6-4752-43b3-9a70-b58359fe1659"}},"params":{"__input_ext":"\"fastqsanger\"","__workflow_invocation_uuid__":"\"a085c588f65511ed82b7001e67d2ec02\"","adapters":null,"chromInfo":"\"/opt/galaxy/tool-data/shared/ucsc/chrom/?.len\"","contaminants":null,"dbkey":"\"?\"","kmers":"\"7\"","limits":null,"min_length":null,"nogroup":"false"},"state":"ok","stderr":"","stdout":"","tool_id":"toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.72+galaxy1","tool_stderr":"","tool_stdout":"","traceback":null,"update_time":"2023-05-19T15:05:09.851510","user_email":"hxr@informatik.uni-freiburg.de"}],"model_class":"WorkflowInvocationStep","order_index":2,"output_collections":{},"outputs":{"html_file":{"id":"4838ba20a6d867651957556f6b54741b","src":"hda","uuid":"a0107efb-9924-481b-99eb-5e7c74c4c697"},"text_file":{"id":"4838ba20a6d86765967c147adffa4ae2","src":"hda","uuid":"8aadb0d6-4752-43b3-9a70-b58359fe1659"}},"state":"scheduled","subworkflow":null,"subworkflow_invocation_id":null,"update_time":"2023-05-19T15:05:09.811263","workflow_step_id":"4b6834f9ae6537d8","workflow_step_label":null,"workflow_step_uuid":"026332e1-70ba-4705-b75e-d228fafacc92"},"3. Unnamed step":{"action":null,"id":"c5c312487856832c","job_id":"11ac94870d0bb33a14ad54e496e129b6","jobs":[{"command_line":"ln -f -s '/data/dnb08/galaxy_db/files/3/8/3/dataset_3835c7cb-1707-4e6f-85d2-6f1ad5c31bc4.dat' 'GSM461178_untreat_paired_subset_1_fastq.fq' &&    cutadapt  -j ${GALAXY_SLOTS:-1}          --output='out1.fq'  --error-rate=0.1 --times=1 --overlap=3         --minimum-length=20   --quality-cutoff=20   'GSM461178_untreat_paired_subset_1_fastq.fq'  > report.txt","command_version":"1.16","create_time":"2023-05-19T14:59:03.399654","dependencies":[],"exit_code":0,"external_id":"43535389","galaxy_version":"23.0","history_id":"2f1f9fa04aab9b59","id":"11ac94870d0bb33a14ad54e496e129b6","inputs":{"input_1":{"id":"4838ba20a6d86765ff25d30589db09fe","src":"hda","uuid":"3835c7cb-1707-4e6f-85d2-6f1ad5c31bc4"}},"job_messages":[],"job_metrics":[{"name":"hostname","plugin":"hostname","raw_value":"vgcnbwc-worker-c125m425-6547.novalocal","title":"hostname","value":"vgcnbwc-worker-c125m425-6547.novalocal"},{"name":"galaxy_slots","plugin":"core","raw_value":"5.0000000","title":"Cores Allocated","value":"5"},{"name":"galaxy_memory_mb","plugin":"core","raw_value":"19456.0000000","title":"Memory Allocated (MB)","value":"19456"},{"name":"start_epoch","plugin":"core","raw_value":"1684508382.0000000","title":"Job Start Time","value":"2023-05-19 16:59:42"},{"name":"end_epoch","plugin":"core","raw_value":"1684508412.0000000","title":"Job End Time","value":"2023-05-19 17:00:12"},{"name":"runtime_seconds","plugin":"core","raw_value":"30.0000000","title":"Job Runtime (Wall Clock)","value":"30 seconds"},{"name":"cpuacct.usage","plugin":"cgroup","raw_value":"7314785524.0000000","title":"CPU Time","value":"7.314785524 seconds"},{"name":"memory.failcnt","plugin":"cgroup","raw_value":"0E-7","title":"Failed to allocate memory count","value":0.0},{"name":"memory.limit_in_bytes","plugin":"cgroup","raw_value":"20401094656.0000000","title":"Memory limit on cgroup (MEM)","value":"19.0 GB"},{"name":"memory.max_usage_in_bytes","plugin":"cgroup","raw_value":"251256832.0000000","title":"Max memory usage (MEM)","value":"239.6 MB"},{"name":"memory.memsw.limit_in_bytes","plugin":"cgroup","raw_value":"9223372036854771712.0000000","title":"Memory limit on cgroup (MEM+SWP)","value":"8.0 EB"},{"name":"memory.memsw.max_usage_in_bytes","plugin":"cgroup","raw_value":"251256832.0000000","title":"Max memory usage (MEM+SWP)","value":"239.6 MB"},{"name":"memory.oom_control.oom_kill_disable","plugin":"cgroup","raw_value":"1.0000000","title":"OOM Control enabled","value":"No"},{"name":"memory.oom_control.under_oom","plugin":"cgroup","raw_value":"0E-7","title":"Was OOM Killer active?","value":"No"},{"name":"memory.soft_limit_in_bytes","plugin":"cgroup","raw_value":"0E-7","title":"Memory softlimit on cgroup","value":"0 bytes"}],"job_stderr":"","job_stdout":"","model_class":"Job","output_collections":{},"outputs":{"out1":{"id":"4838ba20a6d8676528f2966e438993df","src":"hda","uuid":"5096388f-425a-42a1-b99e-4f0174665371"},"report":{"id":"4838ba20a6d8676504b9c2c33c839b66","src":"hda","uuid":"b9909c1d-09b1-47ec-9135-48915855c294"}},"params":{"__input_ext":"\"input\"","__workflow_invocation_uuid__":"\"a085c588f65511ed82b7001e67d2ec02\"","adapter_options":"{\"count\": \"1\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"overlap\": \"3\"}","chromInfo":"\"/opt/galaxy/tool-data/shared/ucsc/chrom/?.len\"","dbkey":"\"?\"","filter_options":"{\"discard\": false, \"discard_untrimmed\": false, \"mask_adapter\": false, \"max\": \"0\", \"max_n\": null, \"min\": \"20\", \"no_trim\": false, \"pair_filter\": \"any\"}","library":"{\"__current_case__\": 0, \"input_1\": {\"values\": [{\"id\": 137417465, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"cut\": \"0\", \"front_adapters\": []}, \"type\": \"single\"}","output_options":"{\"info_file\": false, \"report\": true, \"rest_file\": false, \"too_long_file\": false, \"too_short_file\": false, \"untrimmed_file\": false, \"wildcard_file\": false}","read_mod_options":"{\"length\": \"0\", \"length_tag\": \"\", \"nextseq_trim\": \"0\", \"prefix\": \"\", \"quality_cutoff\": \"20\", \"strip_suffix\": \"\", \"suffix\": \"\", \"trim_n\": false}"},"state":"ok","stderr":"","stdout":"","tool_id":"toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/1.16.3","tool_stderr":"","tool_stdout":"","traceback":null,"update_time":"2023-05-19T15:00:22.417608","user_email":"hxr@informatik.uni-freiburg.de"}],"model_class":"WorkflowInvocationStep","order_index":3,"output_collections":{},"outputs":{"out1":{"id":"4838ba20a6d8676528f2966e438993df","src":"hda","uuid":"5096388f-425a-42a1-b99e-4f0174665371"},"report":{"id":"4838ba20a6d8676504b9c2c33c839b66","src":"hda","uuid":"b9909c1d-09b1-47ec-9135-48915855c294"}},"state":"scheduled","subworkflow":null,"subworkflow_invocation_id":null,"update_time":"2023-05-19T15:00:21.982154","workflow_step_id":"17cb0d9cde915ee1","workflow_step_label":null,"workflow_step_uuid":"ddd70253-72b8-4a5e-8025-56a579b01975"},"4. Unnamed step":{"action":null,"id":"a380f2e9cccfcc65","job_id":"11ac94870d0bb33aae939aa0a3d41382","jobs":[{"command_line":"ln -s '/data/dnb08/galaxy_db/files/9/9/6/dataset_9968668a-3051-4e02-aa3d-4997838a0985.dat' 'GSM461178_untreat_paired_subset_2_fastq' && mkdir -p '/data/jwd05e/main/060/059/60059404/working/dataset_3bc9888e-ec3f-4ae0-b61c-db19dec8e43e_files' && fastqc --outdir '/data/jwd05e/main/060/059/60059404/working/dataset_3bc9888e-ec3f-4ae0-b61c-db19dec8e43e_files'    --quiet --extract  --kmers 7 -f 'fastq' 'GSM461178_untreat_paired_subset_2_fastq'  && cp '/data/jwd05e/main/060/059/60059404/working/dataset_3bc9888e-ec3f-4ae0-b61c-db19dec8e43e_files'/*/fastqc_data.txt output.txt && cp '/data/jwd05e/main/060/059/60059404/working/dataset_3bc9888e-ec3f-4ae0-b61c-db19dec8e43e_files'/*\\.html output.html","command_version":null,"create_time":"2023-05-19T14:59:03.488111","dependencies":[{"cacheable":false,"dependency_resolver":{"auto_init":true,"auto_install":false,"can_uninstall_dependencies":true,"ensure_channels":"conda-forge,bioconda","model_class":"CondaDependencyResolver","prefix":"/usr/local/tools/_conda","read_only":false,"resolver_type":"conda","resolves_simple_dependencies":true,"use_local":false,"versionless":false},"dependency_type":"conda","environment_path":"/usr/local/tools/_conda/envs/__fastqc@0.11.8","exact":true,"model_class":"MergedCondaDependency","name":"fastqc","version":"0.11.8"}],"exit_code":0,"external_id":"43535386","galaxy_version":"23.0","history_id":"2f1f9fa04aab9b59","id":"11ac94870d0bb33aae939aa0a3d41382","inputs":{"input_file":{"id":"4838ba20a6d867656914ebcc68e736a5","src":"hda","uuid":"9968668a-3051-4e02-aa3d-4997838a0985"}},"job_messages":[],"job_metrics":[{"name":"hostname","plugin":"hostname","raw_value":"vgcnbwc-worker-c125m425-1589.novalocal","title":"hostname","value":"vgcnbwc-worker-c125m425-1589.novalocal"},{"name":"galaxy_slots","plugin":"core","raw_value":"8.0000000","title":"Cores Allocated","value":"8"},{"name":"galaxy_memory_mb","plugin":"core","raw_value":"31129.0000000","title":"Memory Allocated (MB)","value":"31129"},{"name":"start_epoch","plugin":"core","raw_value":"1684508676.0000000","title":"Job Start Time","value":"2023-05-19 17:04:36"},{"name":"end_epoch","plugin":"core","raw_value":"1684508692.0000000","title":"Job End Time","value":"2023-05-19 17:04:52"},{"name":"runtime_seconds","plugin":"core","raw_value":"16.0000000","title":"Job Runtime (Wall Clock)","value":"16 seconds"},{"name":"cpuacct.usage","plugin":"cgroup","raw_value":"13539752576.0000000","title":"CPU Time","value":"13.539752576 seconds"},{"name":"memory.failcnt","plugin":"cgroup","raw_value":"0E-7","title":"Failed to allocate memory count","value":0.0},{"name":"memory.limit_in_bytes","plugin":"cgroup","raw_value":"32749125632.0000000","title":"Memory limit on cgroup (MEM)","value":"30.5 GB"},{"name":"memory.max_usage_in_bytes","plugin":"cgroup","raw_value":"411770880.0000000","title":"Max memory usage (MEM)","value":"392.7 MB"},{"name":"memory.memsw.limit_in_bytes","plugin":"cgroup","raw_value":"9223372036854771712.0000000","title":"Memory limit on cgroup (MEM+SWP)","value":"8.0 EB"},{"name":"memory.memsw.max_usage_in_bytes","plugin":"cgroup","raw_value":"411770880.0000000","title":"Max memory usage (MEM+SWP)","value":"392.7 MB"},{"name":"memory.oom_control.oom_kill_disable","plugin":"cgroup","raw_value":"1.0000000","title":"OOM Control enabled","value":"No"},{"name":"memory.oom_control.under_oom","plugin":"cgroup","raw_value":"0E-7","title":"Was OOM Killer active?","value":"No"},{"name":"memory.soft_limit_in_bytes","plugin":"cgroup","raw_value":"0E-7","title":"Memory softlimit on cgroup","value":"0 bytes"}],"job_stderr":"","job_stdout":"","model_class":"Job","output_collections":{},"outputs":{"html_file":{"id":"4838ba20a6d867650e70120b79b974b3","src":"hda","uuid":"3bc9888e-ec3f-4ae0-b61c-db19dec8e43e"},"text_file":{"id":"4838ba20a6d867656a6422c26474bdc5","src":"hda","uuid":"edecc2ea-fa52-4947-9c41-f5956870688a"}},"params":{"__input_ext":"\"fastqsanger\"","__workflow_invocation_uuid__":"\"a085c588f65511ed82b7001e67d2ec02\"","adapters":null,"chromInfo":"\"/opt/galaxy/tool-data/shared/ucsc/chrom/?.len\"","contaminants":null,"dbkey":"\"?\"","kmers":"\"7\"","limits":null,"min_length":null,"nogroup":"false"},"state":"ok","stderr":"","stdout":"","tool_id":"toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.72+galaxy1","tool_stderr":"","tool_stdout":"","traceback":null,"update_time":"2023-05-19T15:04:54.529461","user_email":"hxr@informatik.uni-freiburg.de"}],"model_class":"WorkflowInvocationStep","order_index":4,"output_collections":{},"outputs":{"html_file":{"id":"4838ba20a6d867650e70120b79b974b3","src":"hda","uuid":"3bc9888e-ec3f-4ae0-b61c-db19dec8e43e"},"text_file":{"id":"4838ba20a6d867656a6422c26474bdc5","src":"hda","uuid":"edecc2ea-fa52-4947-9c41-f5956870688a"}},"state":"scheduled","subworkflow":null,"subworkflow_invocation_id":null,"update_time":"2023-05-19T15:04:54.499181","workflow_step_id":"fc590094641a1ae9","workflow_step_label":null,"workflow_step_uuid":"f48fa351-4a73-4daa-b993-2210274ae84d"},"5. Unnamed step":{"action":null,"id":"6a0711aa69933475","job_id":"11ac94870d0bb33abd6fe235967051f6","jobs":[{"command_line":"ln -f -s '/data/dnb08/galaxy_db/files/3/8/3/dataset_3835c7cb-1707-4e6f-85d2-6f1ad5c31bc4.dat' 'GSM461178_untreat_paired_subset_1_fastq.fq' &&  ln -f -s '/data/dnb08/galaxy_db/files/9/9/6/dataset_9968668a-3051-4e02-aa3d-4997838a0985.dat' 'GSM461178_untreat_paired_subset_2_fastq.fq' &&   cutadapt  -j ${GALAXY_SLOTS:-1}                  --output='out1.fq' --paired-output='out2.fq'  --error-rate=0.1 --times=1 --overlap=3         --minimum-length=20 --pair-filter=any   --quality-cutoff=20   'GSM461178_untreat_paired_subset_1_fastq.fq' 'GSM461178_untreat_paired_subset_2_fastq.fq'  > report.txt","command_version":"1.16","create_time":"2023-05-19T14:59:03.590819","dependencies":[{"cacheable":false,"dependency_resolver":{"auto_init":true,"auto_install":false,"can_uninstall_dependencies":true,"ensure_channels":"conda-forge,bioconda","model_class":"CondaDependencyResolver","prefix":"/usr/local/tools/_conda","read_only":false,"resolver_type":"conda","resolves_simple_dependencies":true,"use_local":false,"versionless":false},"dependency_type":"conda","environment_path":"/usr/local/tools/_conda/envs/__cutadapt@1.16","exact":true,"model_class":"MergedCondaDependency","name":"cutadapt","version":"1.16"}],"exit_code":0,"external_id":"43535388","galaxy_version":"23.0","history_id":"2f1f9fa04aab9b59","id":"11ac94870d0bb33abd6fe235967051f6","inputs":{"input_1":{"id":"4838ba20a6d86765ff25d30589db09fe","src":"hda","uuid":"3835c7cb-1707-4e6f-85d2-6f1ad5c31bc4"},"input_2":{"id":"4838ba20a6d867656914ebcc68e736a5","src":"hda","uuid":"9968668a-3051-4e02-aa3d-4997838a0985"}},"job_messages":[],"job_metrics":[{"name":"hostname","plugin":"hostname","raw_value":"vgcnbwc-worker-c125m425-6547.novalocal","title":"hostname","value":"vgcnbwc-worker-c125m425-6547.novalocal"},{"name":"galaxy_slots","plugin":"core","raw_value":"5.0000000","title":"Cores Allocated","value":"5"},{"name":"galaxy_memory_mb","plugin":"core","raw_value":"19456.0000000","title":"Memory Allocated (MB)","value":"19456"},{"name":"start_epoch","plugin":"core","raw_value":"1684508356.0000000","title":"Job Start Time","value":"2023-05-19 16:59:16"},{"name":"end_epoch","plugin":"core","raw_value":"1684508381.0000000","title":"Job End Time","value":"2023-05-19 16:59:41"},{"name":"runtime_seconds","plugin":"core","raw_value":"25.0000000","title":"Job Runtime (Wall Clock)","value":"25 seconds"},{"name":"cpuacct.usage","plugin":"cgroup","raw_value":"8873728303.0000000","title":"CPU Time","value":"8.873728303 seconds"},{"name":"memory.failcnt","plugin":"cgroup","raw_value":"0E-7","title":"Failed to allocate memory count","value":0.0},{"name":"memory.limit_in_bytes","plugin":"cgroup","raw_value":"20401094656.0000000","title":"Memory limit on cgroup (MEM)","value":"19.0 GB"},{"name":"memory.max_usage_in_bytes","plugin":"cgroup","raw_value":"362237952.0000000","title":"Max memory usage (MEM)","value":"345.5 MB"},{"name":"memory.memsw.limit_in_bytes","plugin":"cgroup","raw_value":"9223372036854771712.0000000","title":"Memory limit on cgroup (MEM+SWP)","value":"8.0 EB"},{"name":"memory.memsw.max_usage_in_bytes","plugin":"cgroup","raw_value":"362237952.0000000","title":"Max memory usage (MEM+SWP)","value":"345.5 MB"},{"name":"memory.oom_control.oom_kill_disable","plugin":"cgroup","raw_value":"1.0000000","title":"OOM Control enabled","value":"No"},{"name":"memory.oom_control.under_oom","plugin":"cgroup","raw_value":"0E-7","title":"Was OOM Killer active?","value":"No"},{"name":"memory.soft_limit_in_bytes","plugin":"cgroup","raw_value":"0E-7","title":"Memory softlimit on cgroup","value":"0 bytes"}],"job_stderr":"","job_stdout":"","model_class":"Job","output_collections":{},"outputs":{"out1":{"id":"4838ba20a6d867658b181ea162b2bff2","src":"hda","uuid":"5647f1a7-5cfe-4e7e-8a12-733901cbbc2f"},"out2":{"id":"4838ba20a6d8676511267a23c1bb707d","src":"hda","uuid":"7936d330-0e1e-43d9-abc8-e01e2e8ce871"},"report":{"id":"4838ba20a6d86765b7823a727e8a67cd","src":"hda","uuid":"d3748a3d-cb92-4c98-a590-d687c708ddc8"}},"params":{"__input_ext":"\"input\"","__workflow_invocation_uuid__":"\"a085c588f65511ed82b7001e67d2ec02\"","adapter_options":"{\"count\": \"1\", \"error_rate\": \"0.1\", \"match_read_wildcards\": false, \"no_indels\": false, \"overlap\": \"3\"}","chromInfo":"\"/opt/galaxy/tool-data/shared/ucsc/chrom/?.len\"","dbkey":"\"?\"","filter_options":"{\"discard\": false, \"discard_untrimmed\": false, \"mask_adapter\": false, \"max\": \"0\", \"max_n\": null, \"min\": \"20\", \"no_trim\": false, \"pair_filter\": \"any\"}","library":"{\"__current_case__\": 1, \"input_1\": {\"values\": [{\"id\": 137417465, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 137417509, \"src\": \"hda\"}]}, \"r1\": {\"adapters\": [], \"anywhere_adapters\": [], \"cut\": \"0\", \"front_adapters\": []}, \"r2\": {\"adapters2\": [], \"anywhere_adapters2\": [], \"cut2\": \"0\", \"front_adapters2\": []}, \"type\": \"paired\"}","output_options":"{\"info_file\": false, \"report\": true, \"rest_file\": false, \"too_long_file\": false, \"too_short_file\": false, \"untrimmed_file\": false, \"wildcard_file\": false}","read_mod_options":"{\"length\": \"0\", \"length_tag\": \"\", \"nextseq_trim\": \"0\", \"prefix\": \"\", \"quality_cutoff\": \"20\", \"strip_suffix\": \"\", \"suffix\": \"\", \"trim_n\": false}"},"state":"ok","stderr":"","stdout":"","tool_id":"toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/1.16.3","tool_stderr":"","tool_stdout":"","traceback":null,"update_time":"2023-05-19T14:59:42.633522","user_email":"hxr@informatik.uni-freiburg.de"}],"model_class":"WorkflowInvocationStep","order_index":5,"output_collections":{},"outputs":{"out1":{"id":"4838ba20a6d867658b181ea162b2bff2","src":"hda","uuid":"5647f1a7-5cfe-4e7e-8a12-733901cbbc2f"},"out2":{"id":"4838ba20a6d8676511267a23c1bb707d","src":"hda","uuid":"7936d330-0e1e-43d9-abc8-e01e2e8ce871"},"report":{"id":"4838ba20a6d86765b7823a727e8a67cd","src":"hda","uuid":"d3748a3d-cb92-4c98-a590-d687c708ddc8"}},"state":"scheduled","subworkflow":null,"subworkflow_invocation_id":null,"update_time":"2023-05-19T14:59:42.614406","workflow_step_id":"1c99f44f251d0c5a","workflow_step_label":null,"workflow_step_uuid":"5ff1e523-c42b-42cd-8857-84d7d83802f8"},"6. Unnamed step":{"action":null,"id":"c0e9eb97be074ab9","job_id":"11ac94870d0bb33a3e4f5384f33fb7c3","jobs":[{"command_line":"die() { echo \"$@\" 1>&2 ; exit 1; } &&  mkdir multiqc_WDir &&   mkdir multiqc_WDir/fastqc_0 &&    mkdir 'multiqc_WDir/fastqc_0/data_0' &&  mkdir 'multiqc_WDir/fastqc_0/data_0/file_0' && ln -s '/data/dnb08/galaxy_db/files/8/a/a/dataset_8aadb0d6-4752-43b3-9a70-b58359fe1659.dat' 'multiqc_WDir/fastqc_0/data_0/file_0/fastqc_data.txt' && mkdir 'multiqc_WDir/fastqc_0/data_0/file_1' && ln -s '/data/dnb08/galaxy_db/files/e/d/e/dataset_edecc2ea-fa52-4947-9c41-f5956870688a.dat' 'multiqc_WDir/fastqc_0/data_0/file_1/fastqc_data.txt' &&  multiqc multiqc_WDir --filename \"report\"","command_version":null,"create_time":"2023-05-19T14:59:03.693709","dependencies":[{"cacheable":false,"dependency_resolver":{"auto_init":true,"auto_install":false,"can_uninstall_dependencies":true,"ensure_channels":"conda-forge,bioconda","model_class":"CondaDependencyResolver","prefix":"/usr/local/tools/_conda","read_only":false,"resolver_type":"conda","resolves_simple_dependencies":true,"use_local":false,"versionless":false},"dependency_type":"conda","environment_path":"/usr/local/tools/_conda/envs/__multiqc@1.9","exact":true,"model_class":"MergedCondaDependency","name":"multiqc","version":"1.9"}],"exit_code":0,"external_id":"43535462","galaxy_version":"23.0","history_id":"2f1f9fa04aab9b59","id":"11ac94870d0bb33a3e4f5384f33fb7c3","inputs":{"results_0|software_cond|output_0|input":{"id":"4838ba20a6d86765967c147adffa4ae2","src":"hda","uuid":"8aadb0d6-4752-43b3-9a70-b58359fe1659"},"results_0|software_cond|output_0|input1":{"id":"4838ba20a6d86765967c147adffa4ae2","src":"hda","uuid":"8aadb0d6-4752-43b3-9a70-b58359fe1659"},"results_0|software_cond|output_0|input2":{"id":"4838ba20a6d867656a6422c26474bdc5","src":"hda","uuid":"edecc2ea-fa52-4947-9c41-f5956870688a"}},"job_messages":[],"job_metrics":[{"name":"hostname","plugin":"hostname","raw_value":"vgcnbwc-worker-c36m225-7634.novalocal","title":"hostname","value":"vgcnbwc-worker-c36m225-7634.novalocal"},{"name":"galaxy_slots","plugin":"core","raw_value":"1.0000000","title":"Cores Allocated","value":"1"},{"name":"galaxy_memory_mb","plugin":"core","raw_value":"11673.0000000","title":"Memory Allocated (MB)","value":"11673"},{"name":"start_epoch","plugin":"core","raw_value":"1684508719.0000000","title":"Job Start Time","value":"2023-05-19 17:05:19"},{"name":"end_epoch","plugin":"core","raw_value":"1684508927.0000000","title":"Job End Time","value":"2023-05-19 17:08:47"},{"name":"runtime_seconds","plugin":"core","raw_value":"208.0000000","title":"Job Runtime (Wall Clock)","value":"3 minutes"},{"name":"cpuacct.usage","plugin":"cgroup","raw_value":"15451533789.0000000","title":"CPU Time","value":"15.451533789 seconds"},{"name":"memory.failcnt","plugin":"cgroup","raw_value":"0E-7","title":"Failed to allocate memory count","value":0.0},{"name":"memory.limit_in_bytes","plugin":"cgroup","raw_value":"12348030976.0000000","title":"Memory limit on cgroup (MEM)","value":"11.5 GB"},{"name":"memory.max_usage_in_bytes","plugin":"cgroup","raw_value":"243441664.0000000","title":"Max memory usage (MEM)","value":"232.2 MB"},{"name":"memory.memsw.limit_in_bytes","plugin":"cgroup","raw_value":"9223372036854771712.0000000","title":"Memory limit on cgroup (MEM+SWP)","value":"8.0 EB"},{"name":"memory.memsw.max_usage_in_bytes","plugin":"cgroup","raw_value":"243441664.0000000","title":"Max memory usage (MEM+SWP)","value":"232.2 MB"},{"name":"memory.oom_control.oom_kill_disable","plugin":"cgroup","raw_value":"1.0000000","title":"OOM Control enabled","value":"No"},{"name":"memory.oom_control.under_oom","plugin":"cgroup","raw_value":"0E-7","title":"Was OOM Killer active?","value":"No"},{"name":"memory.soft_limit_in_bytes","plugin":"cgroup","raw_value":"0E-7","title":"Memory softlimit on cgroup","value":"0 bytes"}],"job_stderr":"","job_stdout":"","model_class":"Job","output_collections":{"stats":{"id":"b2ed5bced30ea70a","src":"hdca"}},"outputs":{"__new_primary_file_stats|fastqc__":{"id":"4838ba20a6d8676552151abe856ca468","src":"hda","uuid":"a0afcc44-22b6-4019-938e-4c8b313de6ea"},"__new_primary_file_stats|general_stats__":{"id":"4838ba20a6d867656f4643c70fbd40cc","src":"hda","uuid":"d41e3789-24ea-4080-868b-0edab34c49a6"},"__new_primary_file_stats|sources__":{"id":"4838ba20a6d8676518ad2e8586cc7f6b","src":"hda","uuid":"b697c224-e6d6-4f53-a3df-16fe5ca4444c"},"html_report":{"id":"4838ba20a6d867657c9b5bfe8c22949d","src":"hda","uuid":"a42df514-e2c2-4f72-a9b8-e065ef58237f"}},"params":{"__input_ext":"\"txt\"","__workflow_invocation_uuid__":"\"a085c588f65511ed82b7001e67d2ec02\"","chromInfo":"\"/opt/galaxy/tool-data/shared/ucsc/chrom/?.len\"","comment":"\"\"","dbkey":"\"?\"","export":"false","flat":"false","results":"[{\"__index__\": 0, \"software_cond\": {\"__current_case__\": 8, \"output\": [{\"__index__\": 0, \"input\": {\"values\": [{\"id\": 137417582, \"src\": \"hda\"}, {\"id\": 137417586, \"src\": \"hda\"}]}, \"type\": \"data\"}], \"software\": \"fastqc\"}}]","saveLog":"false","title":"\"\""},"state":"ok","stderr":"[WARNING]         multiqc : MultiQC Version v1.14 now available!\n[INFO   ]         multiqc : This is MultiQC v1.9\n[INFO   ]         multiqc : Template    : default\n[INFO   ]         multiqc : Searching   : /data/jwd05e/main/060/059/60059406/working/multiqc_WDir\n[INFO   ]          fastqc : Found 2 reports\n[INFO   ]         multiqc : Compressing plot data\n[INFO   ]         multiqc : Report      : report.html\n[INFO   ]         multiqc : Data        : report_data\n[INFO   ]         multiqc : MultiQC complete\n","stdout":"","tool_id":"toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc/1.9+galaxy1","tool_stderr":"[WARNING]         multiqc : MultiQC Version v1.14 now available!\n[INFO   ]         multiqc : This is MultiQC v1.9\n[INFO   ]         multiqc : Template    : default\n[INFO   ]         multiqc : Searching   : /data/jwd05e/main/060/059/60059406/working/multiqc_WDir\n[INFO   ]          fastqc : Found 2 reports\n[INFO   ]         multiqc : Compressing plot data\n[INFO   ]         multiqc : Report      : report.html\n[INFO   ]         multiqc : Data        : report_data\n[INFO   ]         multiqc : MultiQC complete\n","tool_stdout":"","traceback":null,"update_time":"2023-05-19T15:08:50.825299","user_email":"hxr@informatik.uni-freiburg.de"}],"model_class":"WorkflowInvocationStep","order_index":6,"output_collections":{"stats":{"id":"b2ed5bced30ea70a","src":"hdca"}},"outputs":{"html_report":{"id":"4838ba20a6d867657c9b5bfe8c22949d","src":"hda","uuid":"a42df514-e2c2-4f72-a9b8-e065ef58237f"}},"state":"scheduled","subworkflow":null,"subworkflow_invocation_id":null,"update_time":"2023-05-19T15:08:50.808688","workflow_step_id":"40e61d72c5cedf2a","workflow_step_label":null,"workflow_step_uuid":"abf34a41-0150-42fc-b56a-a29eb92c24c3"}}},"problem_log":"No log for this engine type.","start_datetime":"2023-05-19T16:55:58.620842","status":"success"},"doc":"Test sample data for Sequence-analyses:Quality-control","has_data":true,"id":"quality_control.ga_0","test_type":"galaxy_workflow"}],"version":"0.1"}},"modified":"2024-06-15 00:05:38 +0000","mermaid":"flowchart TD\n  0[\"‚ÑπÔ∏è Input Dataset\\nreads_2\"];\n  style 0 stroke:#2c3143,stroke-width:4px;\n  1[\"‚ÑπÔ∏è Input Dataset\\nreads_1\"];\n  style 1 stroke:#2c3143,stroke-width:4px;\n  2[\"FastQC\"];\n  0 -->|output| 2;\n  1f4fad7b-11e7-4ec5-b73d-835080c47e70[\"Output\\nreads_2_fastqc\"];\n  2 --> 1f4fad7b-11e7-4ec5-b73d-835080c47e70;\n  style 1f4fad7b-11e7-4ec5-b73d-835080c47e70 stroke:#2c3143,stroke-width:4px;\n  3[\"Cutadapt\"];\n  1 -->|output| 3;\n  12a1bc96-cfdd-4ed8-b062-433833e09aee[\"Output\\nreads_1_cutadapt\"];\n  3 --> 12a1bc96-cfdd-4ed8-b062-433833e09aee;\n  style 12a1bc96-cfdd-4ed8-b062-433833e09aee stroke:#2c3143,stroke-width:4px;\n  4[\"FastQC\"];\n  1 -->|output| 4;\n  12e19f0b-102a-4470-9bc8-e362bb4e2c91[\"Output\\nreads_1_fastqc\"];\n  4 --> 12e19f0b-102a-4470-9bc8-e362bb4e2c91;\n  style 12e19f0b-102a-4470-9bc8-e362bb4e2c91 stroke:#2c3143,stroke-width:4px;\n  5[\"Cutadapt\"];\n  1 -->|output| 5;\n  0 -->|output| 5;\n  b7c138cc-10d0-4bd0-b960-a3b5e60f29cd[\"Output\\nreads_cutadapt\"];\n  5 --> b7c138cc-10d0-4bd0-b960-a3b5e60f29cd;\n  style b7c138cc-10d0-4bd0-b960-a3b5e60f29cd stroke:#2c3143,stroke-width:4px;\n  6[\"MultiQC\"];\n  4 -->|text_file| 6;\n  2 -->|text_file| 6;\n  fa7f541d-b9be-4283-afa1-8398d89f345e[\"Output\\nmultiqc\"];\n  6 --> fa7f541d-b9be-4283-afa1-8398d89f345e;\n  style fa7f541d-b9be-4283-afa1-8398d89f345e stroke:#2c3143,stroke-width:4px;"}],"api":"https://training.galaxyproject.org/training-material/api/topics/sequence-analysis/tutorials/quality-control/tutorial.json","tools":["toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.72+galaxy1","toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.73+galaxy0","toolshed.g2.bx.psu.edu/repos/iuc/fastqe/fastqe/0.2.6+galaxy2","toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc/1.9+galaxy1","toolshed.g2.bx.psu.edu/repos/iuc/nanoplot/nanoplot/1.41.0+galaxy0","toolshed.g2.bx.psu.edu/repos/iuc/pycoqc/pycoqc/2.5.2+galaxy0","toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/1.16.3","toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/3.4+galaxy2"],"supported_servers":{"exact":[{"url":"https://usegalaxy.eu","name":"UseGalaxy.eu","usegalaxy":true},{"url":"https://usegalaxy.org","name":"UseGalaxy.org (Main)","usegalaxy":true},{"url":"https://usegalaxy.org.au","name":"UseGalaxy.org.au","usegalaxy":true}],"inexact":[{"url":"https://galaxy.mesocentre.uca.fr","name":"Galaxy@AuBi","usegalaxy":false},{"url":"https://usegalaxy.cz/","name":"UseGalaxy.cz","usegalaxy":false},{"url":"https://usegalaxy.fr/","name":"UseGalaxy.fr","usegalaxy":false}]},"topic_name_human":"Sequence analysis","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[{"name":"fastqc","owner":"devteam","revisions":"e7b2202befea","tool_panel_section_label":"FASTA/FASTQ","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"fastqc","owner":"devteam","revisions":"3d0c7bdf12f5","tool_panel_section_label":"FASTA/FASTQ","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"fastqe","owner":"iuc","revisions":"89d299153577","tool_panel_section_label":"FASTA/FASTQ","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"multiqc","owner":"iuc","revisions":"75c93c70d094","tool_panel_section_label":"Quality Control","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"nanoplot","owner":"iuc","revisions":"0f1c34698076","tool_panel_section_label":"Nanopore","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"pycoqc","owner":"iuc","revisions":"fae03f3d4bf7","tool_panel_section_label":"Nanopore","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"cutadapt","owner":"lparsons","revisions":"660cffd8d92a","tool_panel_section_label":"FASTA/FASTQ","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"cutadapt","owner":"lparsons","revisions":"44e2cc14f75b","tool_panel_section_label":"FASTA/FASTQ","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"}]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools:\n- name: fastqc\n  owner: devteam\n  revisions: e7b2202befea\n  tool_panel_section_label: FASTA/FASTQ\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: fastqc\n  owner: devteam\n  revisions: 3d0c7bdf12f5\n  tool_panel_section_label: FASTA/FASTQ\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: fastqe\n  owner: iuc\n  revisions: 89d299153577\n  tool_panel_section_label: FASTA/FASTQ\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: multiqc\n  owner: iuc\n  revisions: 75c93c70d094\n  tool_panel_section_label: Quality Control\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: nanoplot\n  owner: iuc\n  revisions: 0f1c34698076\n  tool_panel_section_label: Nanopore\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: pycoqc\n  owner: iuc\n  revisions: fae03f3d4bf7\n  tool_panel_section_label: Nanopore\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: cutadapt\n  owner: lparsons\n  revisions: 660cffd8d92a\n  tool_panel_section_label: FASTA/FASTQ\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: cutadapt\n  owner: lparsons\n  revisions: 44e2cc14f75b\n  tool_panel_section_label: FASTA/FASTQ\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n","tours":false,"video":false,"slides_recordings":[{"captioners":["ennovytje","nagoue","hexylena"],"date":"2021-02-15","galaxy_version":"21.01","length":"40M","youtube_id":"BWonTPS4zB8","speakers":["heylf"]}],"translations":{"tutorial":[],"slides":[],"video":false},"license":"CC-BY-4.0","type":"tutorial","logo":"GTN","requirements":null,"redirect_from":["/short/sequence-analysis/quality-control/slides","/short/S00082"]}