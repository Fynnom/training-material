{"layout":"tutorial_slides","title":"Mapping","zenodo_link":"https://doi.org/10.5281/zenodo.61771","questions":["What is mapping (alignment)?","What is the BAM format?","How can we view aligned sequences?"],"objectives":["Understand the basic concept of mapping","Learn about factors influencing alignment","See a genome browser used to better understand your aligned data"],"time_estimation":"1h","key_points":["Mapping is not trivial","There are many mapping tools, best choice depends on your data","Choice of mapper can affect downstream results","Know your data!","Genome browsers can be used to view aligned reads"],"requirements":[{"type":"internal","topic_name":"sequence-analysis","tutorials":["quality-control"]}],"follow_up_training":[{"type":"internal","topic_name":"transcriptomics","tutorials":["ref-based"]},{"type":"internal","topic_name":"epigenetics","tutorials":["formation_of_super-structures_on_xi"]}],"level":"Introductory","edam_ontology":["topic_0102"],"contributors":["joachimwolff","shiltemann","EngyNasr","gallardoalba","gallantries"],"recordings":[{"captioners":["blankenberg"],"date":"2021-02-15","galaxy_version":"21.01","length":"10M","youtube_id":"7FhHb8EV3EU","speakers":["pvanheus"]}],"js_requirements":{"mathjax":null,"mermaid":false},"short_id":"S00081","url":"/topics/sequence-analysis/tutorials/mapping/slides.html","topic_name":"sequence-analysis","tutorial_name":"mapping","dir":"topics/sequence-analysis/tutorials/mapping","symlink":null,"id":"sequence-analysis/mapping","ref_tutorials":["<p>Sequencing produces a collection of sequences without genomic context. We do not know to which part of the genome the sequences correspond to. Mapping the reads of an experiment to a reference genome is a key step in modern genomic data analysis. With the mapping the reads are assigned to a specific location in the genome and insights like the expression level of genes can be gained.</p>\n\n<p>The reads do not come with position information, so we do not know what part of the genome they came from. We need to use the sequence of the read itself to find the corresponding region in the reference sequence. But the reference sequence can be quite long (~3 billion bases for human), making it a daunting task to find a matching region. Since our reads are short, there may be several, equally likely places in the reference sequence from which they could have been read. This is especially true for repetitive regions.</p>\n\n<p>In principle, we could do a BLAST analysis to figure out where the sequenced pieces fit best in the known genome. We would need to do that for each of the millions of reads in our sequencing data. Aligning millions of short sequences this way may, however, take a couple of weeks. And we do not care about the exact base to base correspondence (alignment). What we are interested in is “where these reads came from”. This approach is called <strong>mapping</strong>.</p>\n\n<p>In the following, we will process a dataset with the mapper <strong>Bowtie2</strong> and we will visualize the data with the program <strong>IGV</strong>.</p>\n\n<blockquote class=\"agenda\">\n  <agenda-title></agenda-title>\n\n  <p>In this tutorial, we will deal with:</p>\n\n<ol id=\"markdown-toc\">\n  <li><a href=\"#prepare-the-data\" id=\"markdown-toc-prepare-the-data\">Prepare the data</a></li>\n  <li><a href=\"#map-reads-on-a-reference-genome\" id=\"markdown-toc-map-reads-on-a-reference-genome\">Map reads on a reference genome</a></li>\n  <li><a href=\"#inspection-of-a-bam-file\" id=\"markdown-toc-inspection-of-a-bam-file\">Inspection of a BAM file</a></li>\n  <li><a href=\"#visualization-using-a-genome-browser\" id=\"markdown-toc-visualization-using-a-genome-browser\">Visualization using a Genome Browser</a>    <ol>\n      <li><a href=\"#igv\" id=\"markdown-toc-igv\">IGV</a></li>\n      <li><a href=\"#jbrowse\" id=\"markdown-toc-jbrowse\">JBrowse</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#conclusion\" id=\"markdown-toc-conclusion\">Conclusion</a></li>\n</ol>\n\n</blockquote>\n\n<h1 id=\"prepare-the-data\">Prepare the data</h1>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Data upload</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Create a new history for this tutorial and give it a proper name</p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-creating-a-new-history\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-creating-a-new-history\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Creating a new history</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <p>Click the <i class=\"fas fa-plus\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">new-history</span> icon at the top of the history panel:</p>   <p><img src=\"/training-material/shared/images/history_create_new.svg\" alt=\"UI for creating new history\" /></p>   <!-- the original drawing can be found here https://docs.google.com/drawings/d/1cCBrLAo4kDGic5QyB70rRiWJAKTenTU8STsKDaLcVU8/edit?usp=sharing --> </blockquote>\n      <p><!--END_SNIPPET--></p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-renaming-a-history\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-renaming-a-history\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Renaming a history</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ol>   <li>Click on <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> (<strong>Edit</strong>) next to the history name (which by default is “Unnamed history”)</li>   <li>Type the new name</li>   <li>Click on <strong>Save</strong></li> </ol>   <p>If you do not have the <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> (<strong>Edit</strong>) next to the history name:</p>   <ol>   <li>Click on <strong>Unnamed history</strong> (or the current name of the history) (<strong>Click to rename history</strong>) at the top of your history panel</li>   <li>Type the new name</li>   <li>Press <kbd>Enter</kbd></li> </ol> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li>\n      <p>Import <code class=\"language-plaintext highlighter-rouge\">wt_H3K4me3_read1.fastq.gz</code> and <code class=\"language-plaintext highlighter-rouge\">wt_H3K4me3_read2.fastq.gz</code> from <a href=\"https://zenodo.org/record/1324070\">Zenodo</a> or from the data library (ask your instructor)</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>https://zenodo.org/record/1324070/files/wt_H3K4me3_read1.fastq.gz\nhttps://zenodo.org/record/1324070/files/wt_H3K4me3_read2.fastq.gz\n</code></pre></div>      </div>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-importing-via-links\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-importing-via-links\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Importing via links</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Copy the link location</li>   <li>     <p>Click <i class=\"fas fa-upload\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-upload</span> <strong>Upload Data</strong> at the top of the tool panel</p>   </li>   <li>Select <i class=\"fa fa-edit\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-wf-edit</span> <strong>Paste/Fetch Data</strong></li>   <li>     <p>Paste the link(s) into the text field</p>   </li>   <li>     <p>Press <strong>Start</strong></p>   </li>   <li><strong>Close</strong> the window</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-importing-data-from-a-data-library\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-importing-data-from-a-data-library\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Importing data from a data library</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <p>As an alternative to uploading the data from a URL or your computer, the files may also have been made available from a <em>shared data library</em>:</p>   <ol>   <li>Go into <strong>Shared data</strong> (top panel) then <strong>Data libraries</strong></li>   <li>Navigate to  the correct folder as indicated by your instructor.     <ul>       <li>On most Galaxies tutorial data will be provided in a folder named <strong>GTN - Material –&gt; Topic Name -&gt; Tutorial Name</strong>.</li>     </ul>   </li>   <li>Select the desired files</li>   <li>Click on <strong>Add to History</strong> <i class=\"fas fa-caret-down\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-dropdown</span> near the top and select <strong>as Datasets</strong> from the dropdown menu</li>   <li>     <p>In the pop-up window, choose</p>     <ul>       <li><em>“Select history”</em>: the history you want to import the data to (or create a new one)</li>     </ul>   </li>   <li>Click on <strong>Import</strong></li> </ol> </blockquote>\n      <p><!--END_SNIPPET--></p>\n\n      <p>As default, Galaxy takes the link as name, so rename them.</p>\n    </li>\n    <li>\n      <p>Rename the files to <code class=\"language-plaintext highlighter-rouge\">reads_1</code> and <code class=\"language-plaintext highlighter-rouge\">reads_2</code></p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-renaming-a-dataset\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-renaming-a-dataset\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Renaming a dataset</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Click on the <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> <strong>pencil icon</strong> for the dataset to edit its attributes</li>   <li>In the central panel, change the <strong>Name</strong> field</li>   <li>Click the <strong>Save</strong> button</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>We just imported in Galaxy FASTQ files corresponding to paired-end data as we could get directly from a sequencing facility.</p>\n\n<p>During sequencing, errors are introduced, such as incorrect nucleotides being called. Sequencing errors might bias the analysis and can lead to a misinterpretation of the data. The first step for any type of sequencing data is always to check their quality.</p>\n\n<p>There is a dedicated tutorial for <a href=\"/training-material/topics/sequence-analysis/tutorials/quality-control/tutorial.html\">quality control</a> of sequencing data. We will not repeat the steps there. You should follow the <a href=\"/training-material/topics/sequence-analysis/tutorials/quality-control/tutorial.html\">tutorial</a> and apply it to your data before going further.</p>\n\n<h1 id=\"map-reads-on-a-reference-genome\">Map reads on a reference genome</h1>\n\n<p>Read mapping is the process to align the reads on a reference genomes. A mapper takes as input a reference genome and a set of reads. Its aim is to align each read in the set of reads on the reference genome, allowing mismatches, indels and clipping of some short fragments on the two ends of the reads:</p>\n\n<figure id=\"figure-1\" style=\"max-width: 90%;\"><img src=\"../../images/mapping/mapping.png\" alt=\"Explanation of mapping. \" width=\"782\" height=\"455\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/mapping/mapping.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 1</strong>:</span> Illustration of the mapping process. The input consists of a set of reads and a reference genome. In the middle, it gives the results of mapping: the locations of the reads on the reference genome. The first read is aligned at position 100 and the alignment has two mismatches. The second read is aligned at position 114. It is a local alignment with clippings on the left and right. The third read is aligned at position 123. It consists of a 2-base insertion and a 1-base deletion.</figcaption></figure>\n\n<p>We need a reference genome to map the reads on.</p>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>What is a reference genome?</li>\n    <li>For each model organism, several possible reference genomes may be available (e.g. <code class=\"language-plaintext highlighter-rouge\">hg19</code> and <code class=\"language-plaintext highlighter-rouge\">hg38</code> for human). What do they correspond to?</li>\n    <li>Which reference genome should we use?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <ol>\n      <li>A reference genome (or reference assembly) is a set of nucleic acid sequences assembled as a representative example of a species’ genetic material. As they are often assembled from the sequencing of different individuals, they do not accurately represent the set of genes of any single organism, but a mosaic of different nucleic acid sequences from each individual.</li>\n      <li>As the cost of DNA sequencing falls, and new full genome sequencing technologies emerge, more genome sequences continue to be generated. Using these new sequences, new alignments are built and the reference genomes improved (fewer gaps, fixed misrepresentations in the sequence, etc). The different reference genomes correspond to the different released versions (called “builds”).</li>\n      <li>This data comes from the ChIP-seq of mice, so we will use mm10 (<em>Mus musculus</em>).</li>\n    </ol>\n  </blockquote>\n</blockquote>\n\n<p>Currently, there are over 60 different mappers, and their number is growing. In this tutorial, we will use <a href=\"http://bowtie-bio.sourceforge.net/bowtie2/\">Bowtie2</a>, a fast and memory-efficient open-source tool particularly good at aligning sequencing reads of about 50 up to 1,000s of bases to relatively long genomes.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Mapping with Bowtie2</hands-on-title>\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0\" title=\"Bowtie2 tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Bowtie2</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 2.4.2+galaxy0)</span> with the following parameters\n      <ul>\n        <li><em>“Is this single or paired library”</em>: <code class=\"language-plaintext highlighter-rouge\">Paired-end</code>\n          <ul>\n            <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“FASTA/Q file #1”</em>: <code class=\"language-plaintext highlighter-rouge\">reads_1</code></li>\n            <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“FASTA/Q file #2”</em>: <code class=\"language-plaintext highlighter-rouge\">reads_2</code></li>\n            <li>\n              <p><em>“Do you want to set paired-end options?”</em>: <code class=\"language-plaintext highlighter-rouge\">No</code></p>\n\n              <p>You should have a look at the parameters there, specially the mate orientation if you know it. They can improve the quality of the paired-end mapping.</p>\n            </li>\n          </ul>\n        </li>\n        <li><em>“Will you select a reference genome from your history or use a built-in index?”</em>: <code class=\"language-plaintext highlighter-rouge\">Use a built-in genome index</code>\n          <ul>\n            <li><em>“Select reference genome”</em>: <code class=\"language-plaintext highlighter-rouge\">Mouse (Mus musculus): mm10</code></li>\n          </ul>\n        </li>\n        <li>\n          <p><em>“Select analysis mode”</em>: <code class=\"language-plaintext highlighter-rouge\">Default setting only</code></p>\n\n          <p>You should have a look at the non default parameters and try to understand them. They can have an impact on the mapping and improving it.</p>\n        </li>\n        <li><em>“Save the bowtie2 mapping statistics to the history”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n      </ul>\n    </li>\n    <li>Inspect the <code class=\"language-plaintext highlighter-rouge\">mapping stats</code> file by clicking on the <i class=\"far fa-eye\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-eye</span> (eye) icon</li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>What information is provided here?</li>\n    <li>How many reads have been mapped exactly 1 time?</li>\n    <li>How many reads have been mapped more than 1 time? How is it possible? What should we do with them?</li>\n    <li>How many pair of reads have not been mapped? What are the causes?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <ol>\n      <li>The information given here is a quantity one. We can see how many sequences are aligned. It does not tell us something about the quality.</li>\n      <li>~90% reads have been aligned exactly 1 time</li>\n      <li>~7% reads have been aligned concordantly &gt;1 times. These are called multi-mapped reads. It can happen because of repetitions in the reference genome (multiple copies of a gene for example), particularly when the reads are small. It is difficult to decide where these sequences come from and therefore most of the pipelines ignore them. Always check the statistics there to be sure of not discarding too much information in any downstream analyses.</li>\n      <li>~3% pair of reads have not been mapped because\n        <ul>\n          <li>both reads in the pair aligned but their positions do not concord with pair of reads (<code class=\"language-plaintext highlighter-rouge\">aligned discordantly 1 time</code>)</li>\n          <li>reads of these pairs are multi-mapped (<code class=\"language-plaintext highlighter-rouge\">aligned &gt;1 times</code> in <code class=\"language-plaintext highlighter-rouge\">pairs aligned 0 times concordantly or discordantly</code>)</li>\n          <li>one read of these pairs are mapped but not the paired read (<code class=\"language-plaintext highlighter-rouge\">aligned exactly 1 time</code> in <code class=\"language-plaintext highlighter-rouge\">pairs aligned 0 times concordantly or discordantly</code>)</li>\n          <li>the rest are not mapped at all</li>\n        </ul>\n      </li>\n    </ol>\n  </blockquote>\n</blockquote>\n\n<p>Checking the mapping statistics is an important step to do before continuing any analyses. There are several potential sources for errors in mapping, including (but not limited to):</p>\n\n<ul>\n  <li><strong>Polymerase Chain Reaction (PCR) artifacts</strong>: Many high-throughput sequencing (HTS) methods involve one or multiple PCR steps. PCR errors will show as mismatches in the alignment, and especially errors in early PCR rounds will show up in multiple reads, falsely suggesting genetic variation in the sample. A related error would be PCR duplicates, where the same read pair occurs multiple times, skewing coverage calculations in the alignment.</li>\n  <li><strong>Sequencing errors</strong>: The sequencing machine can make an erroneous call either for physical reasons (e.g. oil on an Illumina slide) or due to properties of the sequenced DNA (e.g., homopolymers). As sequencing errors are often random, they can be filtered out as singleton reads during variant calling.</li>\n  <li><strong>Mapping errors</strong>: The mapping algorithm can map a read to the wrong location in the reference. This often happens around repeats or other low-complexity regions.</li>\n</ul>\n\n<p>So if the mapping statistics are not good, you should investigate the cause of these errors before going further in your analyses.</p>\n\n<p>After that, you should have a look at the reads and inspect the BAM file where the read mappings are stored.</p>\n\n<h1 id=\"inspection-of-a-bam-file\">Inspection of a BAM file</h1>\n\n<p>A BAM (<a href=\"https://en.wikipedia.org/wiki/SAM_(file_format)\">Binary Alignment Map</a>) file is a compressed binary file storing the read sequences, whether they have been aligned to a reference sequence (e.g. a chromosome), and if so, the position on the reference sequence at which they have been aligned.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Inspect a BAM/SAM file</hands-on-title>\n\n  <ol>\n    <li>Inspect the <i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> output of <strong>Bowtie2</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span></li>\n  </ol>\n\n</blockquote>\n\n<p>A BAM file (or a SAM file, the non-compressed version) consists of:</p>\n\n<ul>\n  <li>A header section (the lines starting with <code class=\"language-plaintext highlighter-rouge\">@</code>) containing metadata particularly the chromosome names and lengths (lines starting with the <code class=\"language-plaintext highlighter-rouge\">@SQ</code> symbol)</li>\n  <li>\n    <p>An alignment section consisting of a table with 11 mandatory fields, as well as a variable number of optional fields:</p>\n\n    <table>\n      <thead>\n        <tr>\n          <th>Col</th>\n          <th>Field</th>\n          <th>Type</th>\n          <th>Brief Description</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>1</td>\n          <td>QNAME</td>\n          <td>String</td>\n          <td>Query template NAME</td>\n        </tr>\n        <tr>\n          <td>2</td>\n          <td>FLAG</td>\n          <td>Integer</td>\n          <td>Bitwise FLAG</td>\n        </tr>\n        <tr>\n          <td>3</td>\n          <td>RNAME</td>\n          <td>String</td>\n          <td>References sequence NAME</td>\n        </tr>\n        <tr>\n          <td>4</td>\n          <td>POS</td>\n          <td>Integer</td>\n          <td>1- based leftmost mapping POSition</td>\n        </tr>\n        <tr>\n          <td>5</td>\n          <td>MAPQ</td>\n          <td>Integer</td>\n          <td>MAPping Quality</td>\n        </tr>\n        <tr>\n          <td>6</td>\n          <td>CIGAR</td>\n          <td>String</td>\n          <td>CIGAR String</td>\n        </tr>\n        <tr>\n          <td>7</td>\n          <td>RNEXT</td>\n          <td>String</td>\n          <td>Ref. name of the mate/next read</td>\n        </tr>\n        <tr>\n          <td>8</td>\n          <td>PNEXT</td>\n          <td>Integer</td>\n          <td>Position of the mate/next read</td>\n        </tr>\n        <tr>\n          <td>9</td>\n          <td>TLEN</td>\n          <td>Integer</td>\n          <td>Observed Template LENgth</td>\n        </tr>\n        <tr>\n          <td>10</td>\n          <td>SEQ</td>\n          <td>String</td>\n          <td>Segment SEQuence</td>\n        </tr>\n        <tr>\n          <td>11</td>\n          <td>QUAL</td>\n          <td>String</td>\n          <td>ASCII of Phred-scaled base QUALity+33</td>\n        </tr>\n      </tbody>\n    </table>\n  </li>\n</ul>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>Which information do you find in a SAM/BAM file?</li>\n    <li>What is the additional information compared to a FASTQ file?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <ol>\n      <li>Sequences and quality information, like a FASTQ</li>\n      <li>Mapping information, Location of the read on the chromosome, Mapping quality, etc</li>\n    </ol>\n  </blockquote>\n</blockquote>\n\n<p>The BAM file includes a lot of information about each read, particularly the quality of mapping.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Summary of mapping quality</hands-on-title>\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy2\" title=\"Samtools Stats tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Samtools Stats</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 2.0.2+galaxy2)</span> with the following parameters\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“BAM file”</em>: <code class=\"language-plaintext highlighter-rouge\">aligned reads</code> (output of <strong>Bowtie2</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n        <li><em>“Use reference sequence”</em>: <code class=\"language-plaintext highlighter-rouge\">Locally cached/Use a built-in genome</code>\n          <ul>\n            <li><em>“Using genome”</em>: <code class=\"language-plaintext highlighter-rouge\">Mouse (Mus musculus): mm10 Full</code></li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li>Inspect the <i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <code class=\"language-plaintext highlighter-rouge\">Stats</code> file</li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>What is the proportion of mismatches in the mapped reads when aligned to the reference genome?</li>\n    <li>What does the error rate represent?</li>\n    <li>What is the average quality? How is it represented?</li>\n    <li>What is the insert size average?</li>\n    <li>How many reads have a mapping quality score below 20?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <ol>\n      <li>There are ~21,900 mismatches for ~4,753,900 bases mapped which on average produces ~0.005 mismatches per mapped bases.</li>\n      <li>The error rate is the proportion of mismatches per mapped bases, so the ratio computed right before.</li>\n      <li>The average quality is the mean quality score of the mapping. It is a Phred score like the one used in the FASTQ file for each nucleotide. But here the score is not per nucleotide, but per read and it represents the probability of mapping quality.</li>\n      <li>The insert size is the distance between the two reads in the pairs.</li>\n      <li>To get the info:\n        <ol>\n          <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/devteam/bamtools_filter/bamFilter/2.5.2+galaxy2\" title=\"Filter BAM tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Filter BAM</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 2.5.2+galaxy2)</span> with a filter to keep only the reads with a mapping quality &gt;= 20</li>\n          <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.5\" title=\"Samtools Stats tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Samtools Stats</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 2.0.5)</span> on the output of <strong>Filter</strong></li>\n        </ol>\n\n        <p>Before filtering: 95,412 reads and after filtering: 89,664 reads.</p>\n      </li>\n    </ol>\n  </blockquote>\n</blockquote>\n\n<h1 id=\"visualization-using-a-genome-browser\">Visualization using a Genome Browser</h1>\n\n<h2 id=\"igv\">IGV</h2>\n\n<p>The Integrative Genomics Viewer (IGV) is a high-performance visualization tool for interactive exploration of large, integrated genomic datasets. It supports a wide variety of data types, including array-based and next-generation sequence data, and genomic annotations. In the following, we will use it to visualize the mapped reads.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Visualization of the reads in IGV</hands-on-title>\n\n  <p>There are two ways to run it:</p>\n\n  <ol>\n    <li>If you have IGV installed (or want to install it):\n      <ol>\n        <li>Install <a href=\"https://software.broadinstitute.org/software/igv/download\">IGV</a></li>\n        <li>Launch IGV on your computer</li>\n        <li>Expand the <i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> output of <strong>Bowtie2</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span></li>\n        <li>Click on the <code class=\"language-plaintext highlighter-rouge\">local</code> in <code class=\"language-plaintext highlighter-rouge\">display with IGV</code> to load the reads into the IGV browser</li>\n      </ol>\n    </li>\n    <li>If you do not have IGV\n      <ol>\n        <li>Click on the <code class=\"language-plaintext highlighter-rouge\">Mouse mm10</code> (or correct organism) in <code class=\"language-plaintext highlighter-rouge\">display with IGV</code> to load the reads into the IGV browser</li>\n      </ol>\n    </li>\n    <li>Zoom on the <code class=\"language-plaintext highlighter-rouge\">chr2:98,666,236-98,667,473</code></li>\n  </ol>\n</blockquote>\n\n<p>The reads have a direction: they are mapped to the forward or reverse strand, respectively. When hovering over a read, extra information is displayed</p>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>What could it mean if a bar in the coverage view is colored?</li>\n    <li>What could be the reason why a read is white instead of grey?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <ol>\n      <li>If a nucleotide differs from the reference sequence in more than 20% of quality weighted reads, IGV colors the bar in proportion to the read count of each base.</li>\n      <li>They have a mapping quality equal to zero. Interpretation of this mapping quality depends on the mapping aligner as some commonly used aligners use this convention to mark a read with multiple alignments. In such a case, the read also maps to another location with equally good placement. It is also possible that the read could not be uniquely placed but the other placements do not necessarily give equally good quality hits.</li>\n    </ol>\n  </blockquote>\n</blockquote>\n\n<blockquote class=\"comment\">\n  <comment-title>Tips for IGV</comment-title>\n  <ol>\n    <li>Because the number of reads over a region can be quite large, the IGV browser by default only displays the reads that fall into a small window. This behaviour can be changed in the IGV from <code class=\"language-plaintext highlighter-rouge\">view &gt; Preferences &gt; Alignments</code>.</li>\n    <li>\n      <p>If the genome of your interest is not there check if it is available via <strong>More…</strong>. If this is not the case, you can add it manually via the menu <strong>Genomes</strong> -&gt; <strong>Load Genome from…</strong></p>\n\n      <p><img src=\"../../images/igv_select_genome.png\" alt=\"Select genome in IGV\" title=\"Select genome in IGV\" /></p>\n    </li>\n  </ol>\n\n  <p>A general description of the user interface of the IGV browser is available here: <a href=\"/training-material/topics/introduction/tutorials/igv-introduction/tutorial.html\">IGV Browser description</a></p>\n</blockquote>\n\n<h2 id=\"jbrowse\">JBrowse</h2>\n\n<p><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse/1.16.11+galaxy0\" title=\"JBrowse tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>JBrowse</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 1.16.11+galaxy0)</span> is an alternative, web-based genome browser. Whereas IGV is a piece of software you must download and run, JBrowse instances are websites hosted online that provide an interface to browse genomics data. We’ll use it to visualise the mapped reads.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Visualization of the reads in JBrowse</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse/1.16.11+galaxy1\" title=\"JBrowse tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>JBrowse</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 1.16.11+galaxy1)</span> browser, with the following parameters:\n      <ul>\n        <li><em>“Reference genome to display”</em>: Use a built-in genome\n          <ul>\n            <li><em>“Select a reference genome”</em>: <code class=\"language-plaintext highlighter-rouge\">mm10</code></li>\n          </ul>\n        </li>\n        <li><em>“JBrowse-in-Galaxy Action”</em>: <code class=\"language-plaintext highlighter-rouge\">New JBrowse Instance</code></li>\n        <li><em>“Insert Track Group”</em>:\n          <ul>\n            <li><em>“Insert Annotation Track”</em>:\n              <ul>\n                <li><em>“Track Type”</em>: BAM Pileups</li>\n                <li><em>“BAM Track Data”</em>: <code class=\"language-plaintext highlighter-rouge\">aligned reads</code> (output of <strong>Bowtie2</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n                <li><em>“Autogenerate SNP Track”</em>: Yes</li>\n                <li><em>“Track Visibility”</em>: On for new users</li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li>Visualise the dataset <i class=\"far fa-eye\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-eye</span></li>\n    <li>Zoom on the <code class=\"language-plaintext highlighter-rouge\">chr2:98,666,236-98,667,473</code></li>\n  </ol>\n</blockquote>\n\n<blockquote class=\"comment\">\n  <comment-title>Slow</comment-title>\n  <p>This can take about a minute or two to run, depending on your training instance’s resources. It takes time as the server builds up a small website for you, and pre-processes the reference genome into a more efficient format. If you wanted to share this with your colleagues, you could download this dataset and directly place it on your webserver.</p>\n</blockquote>\n\n<p>The reads have a direction: they are mapped to the forward or reverse strand, respectively. When clicking on a read, extra information is displayed</p>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>What do the teardrop shape and line mean in the autogenerated SNP track?</li>\n    <li>What do differently coloured reads mean?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <ol>\n      <li>If enough reads have a different value, then it is marked with a teardrop icon. The coverage plot is marked in height with the percentage of reads with a different call at that position</li>\n      <li>\n        <p>Colour Codes:</p>\n\n        <table>\n          <thead>\n            <tr>\n              <th>Colour</th>\n              <th>Meaning</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td><i style=\"background:#ec8b8b\">     </i> Original red</td>\n              <td>Forward strand</td>\n            </tr>\n            <tr>\n              <td><i style=\"background:#8f8fd8\">     </i> Original blue</td>\n              <td>Reverse strand</td>\n            </tr>\n            <tr>\n              <td><i style=\"background:#d11919\">     </i> Hard red</td>\n              <td>Forward strand, missing mate</td>\n            </tr>\n            <tr>\n              <td><i style=\"background:#1919d1\">     </i> Hard Blue</td>\n              <td>Reverse strand, missing mate</td>\n            </tr>\n            <tr>\n              <td><i style=\"background:#ecc8c8\">     </i> Light red</td>\n              <td>Forward strand not proper</td>\n            </tr>\n            <tr>\n              <td><i style=\"background:#bebed8\">     </i> Light blue</td>\n              <td>Reverse strand, not proper</td>\n            </tr>\n            <tr>\n              <td><i style=\"background:#000000\">     </i> Black</td>\n              <td>Forward, diff chr</td>\n            </tr>\n            <tr>\n              <td><i style=\"background:#969696\">     </i> Grey</td>\n              <td>Reverse, diff chr</td>\n            </tr>\n            <tr>\n              <td><i style=\"background:#999999\">     </i> Grey</td>\n              <td>No strand</td>\n            </tr>\n          </tbody>\n        </table>\n      </li>\n    </ol>\n  </blockquote>\n</blockquote>\n\n<h1 id=\"conclusion\">Conclusion</h1>\n\n<p>After quality control, mapping is an important step of most analyses of sequencing data (RNA-Seq, ChIP-Seq, etc) to determine where in the genome our reads originated from and use this information for downstream analyses.</p>\n"],"ref_slides":["# Example NGS pipeline\n\n![High level view of a typical NGS workflow](../../images/mapping/variant_calling_workflow.png)\n\nA high level view of a typical NGS bioinformatics workflow\n\n???\n- Mapping step occurs if a reference genome is available for the organism of interest\n  - else: de-novo assembly\n- Variant calling step is just an example, after mapping can do many steps\n  - Structural Variants / Fusion genes\n  - Differential Gene expression\n  - Alternative Splicing\n  - ..\n\n---\n\n# What is mapping?\n\n.pull-left[\n![Mapping vs assembly](../../images/mapping/mapping_assembly.png)\n]\n\n.pull-right[\n- Short reads must be combined into longer fragments\n\n- **Mapping:** use a reference genome as a guide\n\n- **De-novo assembly:** without reference genome\n]\n\n???\n- Mapping is also referred to as *alignment*\n- Short reads produced by sequencer must be combined into larger contigs\n  - e.g. reconstruct the chromosomes\n  - mapping uses a reference genome as a guide\n  - can subsequently find where our sample differs from reference (variants)\n\n\n- This tutorial only deals with mapping/alignment\n- There are other tutorials available for de-novo assembly\n\n\n\n---\nclass: top\n\n# Sequence alignment\n\n- Determine position of short read on the reference genome\n  ```\n  Reference: . . . A A C G C C T T . . .\n\n  Read:            A G G G G C C T T\n  ```\n\n???\n- Consider situation where we must map this (short) read to this (long) reference\n  - e.g. human genome ~ 3.2 billion base pairs\n- We scan the reference genome until we find an area that's similar to our read\n- This area looks pretty similar, but not quite identical..\n\n---\nclass: top\n\n# Sequence alignment\n\n- Determine position of short read on the reference genome\n  ```\n  Reference: . . . A A - C G C C T T . . .              | = match\n  .                | : - : | | | | |                    : = mismatch\n  Read:            A G G G G C C T T                    - = gap\n  ```\n\n???\nBut if we introduce gaps and allow for some mismatches in bases, this matches\nup pretty well..\n\n--\n\n- Read could align to multiple places\n  .center[.image-50[![Illustration of multi-mapped read](../../images/mapping/multimap.png)]]\n\n\n- How to handle multi-mapped reads? Depends on tool:\n  - Map to best region (but what is \"best\"? And what about ties?)\n  - Map to all regions\n  - Map to one region randomly\n  - Discard read\n\n\n- How do we determine *best* region?\n  - Assign ***alignment score*** to every mapping\n\n???\n\nSome reads may map to multiple locations\n - repeat regions, short reads, highly variable regions, sequencing errors, ..\n\nWe want a way to determine *best* alignment if none are perfect matches..\n\n---\nclass: top\n\n# Alignment Scoring (basics)\n\n- **Reward** for a match (e.g. +10), **penalty** for a mismatch (e.g. -5)\n- **Penalty** for gaps\n   - *Linear:* every gap same penalty (e.g. -5)\n   - *Affine:* gap open vs gap extend (e.g. -5 and -1)\n\n\n- Different tools use different scoring values (and give different results)\n\n\n.center[\n.image-25[![Screenshot of a sequence scoring game where two sequences are being aligned across the top (GGCTGG and GAGG) and the per-base and cumulative scores from left to right.](../../images/mapping/scoring_example.png)]\n\n**Example** (with affine gap penalty)\n]\n\n???\n- Each locus get scored independently (first row of scores in example)\n- Scores from all loci are added up (cumulative score row)\n- Final score for entire alignment in this example is 19\n\n- These reward and penalty values are just examples and will vary\n\n---\nclass: top\n\n# Alignment Scoring (advanced)\n\n- **Base quality**\n    - Mismatch of low-confidence base: lower penalty\n    - Mismatch of high-confidence base: higher penalty\n\n\n- **Transitions vs transversions**\n  - Transitions about 2x as frequent as transversions\n\n\n.center[\n.image-50[ ![Transitions vs transversions](../../images/mapping/ti_tv.png) ]\n.image-25[ ![Example scoring matrix](../../images/mapping/ti_tv_scoring.png) ]\n]\n\n\n- Knowledge about sequencing platform and biases\n  - Optimize for read length, error rate, homopolymer accuracy, etc..\n\n\n.footnote[More information about mapping algorithms: [10.1089/cmb.2012.0022](https://doi.org/10.1089/cmb.2012.0022)]\n\n???\nMany more complexities may be considered, different tools make different choices\n\nTransitions are more likely to occur in real sequences, so may give lower penalty than transversions\n\n**Transitions** are interchanges of two-ring purines (A G) or of one-ring pyrimidines (C T): they therefore involve bases of similar shape.\n\n**Transversions** are interchanges of purine for pyrimidine bases, which therefore involve exchange of one-ring and two-ring structures.\n\n![Transitions and transversions](../../images/mapping/transition_transversion.gif)\n\n\n---\n\n# Looks easy but..\n\n---\nclass: top\n\n# Sequence Alignment\n\n```\nReference: AAA CAGTGA GAA\nObserved:  AAA TCTCT  GAA\n```\n\n???\nSuppose we want to map this read (bottom) to this reference sequence (top)\n\n\n---\nclass: top\n\n# Sequence Alignment\n\n```\nReference: AAA CAGTGA GAA\nObserved:  AAA TCTCT  GAA\n```\n\n<table style=\"width:100%; table-layout: fixed; font-size:0.8em\">\n<th>Alignment</th><th></th>\n\n<tr><td><pre>\nAAA-CAGTGAGAA\n|||-|--|::|||\nAAATC--TCTGAA\n</pre></td>\n<td>Maybe like this?</td>\n</tr>\n</table>\n\n???\nThis is one possibility, is it the only one?\n\n---\nclass: top\n\n# Sequence Alignment\n\n```\nReference: AAA CAGTGA GAA\nObserved:  AAA TCTCT  GAA\n```\n\n<table style=\"width:100%; table-layout:fixed; font-size:0.8em;\">\n<th>Alignment</th><th></th>\n\n<tr><td><pre>\nAAA-CAGTGAGAA\n|||-|--|::|||\nAAATC--TCTGAA\n</pre></td>\n<td>Maybe like this?</td>\n</tr>\n\n<tr><td><pre>\nAAACAGTGAGAA\n|||-::|::|||\nAAA-TCTCTGAA\n</pre></td>\n<td> Or this? </td>\n</tr>\n\n</table>\n\n???\nThis is also a possible alignment. Not easy to say which is better.\n\n---\nclass: top\n\n# Sequence Alignment\n\n```\nReference: AAA CAGTGA GAA\nObserved:  AAA TCTCT  GAA\n```\n\n<table style=\"width:100%; table-layout:fixed; font-size:0.8em\">\n<th>Alignment</th><th></th>\n\n<tr><td><pre>\nAAA-CAGTGAGAA\n|||-|--|::|||\nAAATC--TCTGAA\n</pre></td>\n<td>Maybe like this?</td>\n</tr>\n\n<tr><td><pre>\nAAACAGTGAGAA\n|||-::|::|||\nAAA-TCTCTGAA\n</pre></td>\n<td> Or this? </td>\n</tr>\n\n<tr><td><pre>\nAAACAGTGAGAA\n|||:-:|::|||\nAAAT-CTCTGAA\n\n</pre></td>\n<td>Or..? </td>\n</tr>\n\n</table>\n\n???\nAnd a third option\n\n---\nclass: top\n\n# Sequence Alignment\n\n```\nReference: AAA CAGTGA GAA\nObserved:  AAA TCTCT  GAA\n```\n\n<table style=\"width:100%; table-layout:fixed; font-size:0.8em\">\n<th>Alignment</th><th></th>\n\n<tr><td><pre>\nAAA-CAGTGAGAA\n|||-|--|::|||\nAAATC--TCTGAA\n</pre></td>\n<td>Maybe like this?</td>\n</tr>\n\n<tr><td><pre>\nAAACAGTGAGAA\n|||-::|::|||\nAAA-TCTCTGAA\n</pre></td>\n<td> Or this? </td>\n</tr>\n\n<tr><td><pre>\nAAACAGTGAGAA\n|||:-:|::|||\nAAAT-CTCTGAA\n\n</pre></td>\n<td>Or..? </td>\n</tr>\n\n<tr><td><pre>\nAAACAGTCA-----GAA\n|||-----------|||\nAAA------TCTCTGAA\n</pre></td>\n<td> What about this? </td>\n</tr>\n</table>\n\n???\nThere is no one right way to do alignment\n  - Hard to say which of these is \"better\" or \"worse\"\n  - Just different choices, but all valid\n\nMapping is a non-trivial problem!\n\n---\nclass: top\n\n# Sequence Alignment\n\n```\nReference: AAA CAGTGA GAA\nObserved:  AAA TCTCT  GAA\n```\n\n<table style=\"width:100%; table-layout:fixed; font-size:0.8em\">\n<th>Alignment</th><th>Tool</th>\n\n<tr><td><pre>\nAAA-CAGTGAGAA\n|||-|--|::|||\nAAATC--TCTGAA\n</pre></td>\n<td>Novoalign</td>\n</tr>\n\n<tr><td><pre>\nAAACAGTGAGAA\n|||-::|::|||\nAAA-TCTCTGAA\n</pre></td>\n<td> Ssaha2 </td>\n</tr>\n\n<tr><td><pre>\nAAACAGTGAGAA\n|||:-:|::|||\nAAAT-CTCTGAA\n\n</pre></td>\n<td> BWA </td>\n</tr>\n\n<tr><td><pre>\nAAACAGTCA-----GAA\n|||-----------|||\nAAA------TCTCTGAA\n</pre></td>\n<td> Complete Genomics </td>\n</tr>\n</table>\n\n\n???\nWe didn't just make these up, these real aligners gave these different results\n\n---\nclass: top\n\n# Sequence Alignment\n\n```\nReference: AAA CAGTGA GAA\nObserved:  AAA TCTCT  GAA\n```\n\n<table style=\"width:100%; table-layout:fixed; font-size:0.8em\">\n<th>Alignment</th><th>Variant calls</th>\n\n<tr><td><pre>\nAAA-CAGTGAGAA\n|||-|--|::|||\nAAATC--TCTGAA\n</pre></td>\n<td><pre>\nins T\ndel AG\nsub GA -> CT\n</pre></td>\n</tr>\n\n<tr><td><pre>\nAAACAGTGAGAA\n|||-::|::|||\nAAA-TCTCTGAA\n</pre></td>\n<td><pre>\ndel C\nsub AG -> TC\nsub GA -> CT\n</pre></td>\n</tr>\n\n<tr><td><pre>\nAAACAGTGAGAA\n|||:-:|::|||\nAAAT-CTCTGAA\n\n</pre></td>\n<td><pre>\nsnp C -> T\ndel A\nsnp G -> C\nsub GA -> CT\n</pre></td>\n</tr>\n\n<tr><td><pre>\nAAACAGTGA-----GAA\n|||-----------|||\nAAA------TCTCTGAA\n</pre></td>\n<td><pre>\ndel CAGTGA\nins TCTCT\n</pre></td>\n</tr>\n</table>\n\n\n???\n**Important:** Mapping can affect downstream analysis!\n\nThese different mappings led to different variants, and hard to tell they are equivalent.\n\n---\n\n# Try it yourself!\n\n- Lego time! Who wants to volunteer?\n\n- Or try this [online sequence alignment game](http://web.archive.org/web/20200411075748/https://teacheng.illinois.edu/SequenceAlignment/):\n<!-- using webarchive version because game seems broken, once fixed we can update the link back to: http://teacheng.illinois.edu/SequenceAlignment/ -->\n\n.image-75[![Recording of alignment game](../../images/mapping/alignment.gif)]\n\n.footnote[https://tinyurl.com/sequence-alignment]\n\n???\nCan have learners play around with this alignment game now\n\nOr use Lego bricks, each nucleotide a different colour\n\n\n\n---\n\n## Paired-end sequencing\n\n- **Sequencing:** Cut longer fragments of DNA, sequence only the ends\n\n  .center[.image-90[![Paired-end reads](../../images/mapping/pairedend_read.png)]]\n\n- **Mapping:** known distance between reads improves accuracy\n\n  .center[.image-75[![Mapping of paired-end reads](../../images/mapping/pairedend_mapping.png)]]\n\n???\n\n- The fragments are too long to sequence entirely, but we can sequence\nthe ends.\n- Then we have the added information of how far apart these two reads must map\n- This improves our mapping\n\n- For example for multi-mapped reads, or repeats (next slide)\n\n\n---\nclass: top\n\n## Repeats\n\n- Multi-mapped reads (e.g. because of repeats) may now be resolved\n\n- **Single-end:**\n\n  ![Cartoon with a reference genome and two repeats marked. Two blue boxes representing a single-ended read map equally well to both repeats.](../../images/mapping/repeats_se.png)\n\n???\nIn the case of repeats, a single-end read alone would not have be enough\nfor unique mapping..\n\n--\n\n- **Paired-end:**\n\n  ![Cartoon with a reference genome and two repeats marked. Now the two blue boxes are linked and one of them is red, representing a forward/reverse pair of a paired-end read. The mapping is no longer ambiguous and you can know which repeat the blue box belongs to, as the red box maps upstream.](../../images/mapping/repeats_pe.png)\n\n???\nBut with the additional information provided by\npaired-end protocol (distance to mate), this can now be resolved..\n\n---\nclass: top\n\n# InDels (Insertions / Deletions)\n\n- Discordant insert size may indicate insertion or deletion between reads\n\n- **Deletions:** Longer mapping distance than expected\n\n  .image-75[![Deletion between two paired reads](../../images/mapping/pairedend_deletion.png)]\n\n--\n\n- **Insertions:** Shorter mapping distance than expected\n\n  .image-75[![Insertions beteween two paired reads](../../images/mapping/pairedend_insertion.png)]\n\n???\n\n- Unexpected mapping distance between two reads in a pair may indicate a variant.\n\n- Exact location of variant unknown unless more reads covering the area\n  - Only know it it somewhere between the two reads\n\n\n\n**FAQ:** \"What about mate-pair sequencing?\"\n - Same concept as paired-end\n - Much longer distance between ends\n - Very different library prep\n - Useful for detection of larger Structural Variations (SVs) / Fusion Genes\n    - longer than expected distance between mates: deletion in sample\n    - shorter than expected distance beetween mates: insertion in sample\n    - unexpected orientation of one mate: inversion in sample\n\n\n---\nclass: top\n\n## Paired-end FASTQ files\n\n- Sequencer produces two FASTQ files:\n  - **Forward** reads (usually **`_1`** or **`_R1`** in file name)\n  - **Reverse** reads (usually **`_2`** or **`_R2`** in file name)\n\n\n  ![Paired-end reads as two separate FASTQ files](../../images/mapping/pairedend_fastq.png)\n\n\n???\nWhen you have paired-end data, you will usually get 2 files.\n - File names identical except for e.g. `_1`/`_2` or `_R1`/`_R2`\n - First file contains all the forward reads (\"left\" sides of pairs)\n - Other file contains all the reverse reads\n\n\nPairing also visible in read names\n  - `/1` `/2` at end or `1:` and `2:` in read ID\n\n--\n- Sometimes: One **interleaved** (or **interlaced**) FASTQ file\n  - Most tools require 2 separate files\n  - <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> De-interlace tools in Galaxy for conversion\n\n\n???\nSometimes data can be in a single **interleaved file** (aka **interlaced**)\n - alternating forward and reverse read\n - de-interlace tools in Galaxy to convert this to two separate files\n   - because many tools require two separate files\n\n\n---\nclass: top\n\n## Paired-end FASTQ files\n\n- Order of reads matters!\n  - **`N`<sup>th</sup>** read in forward file <i class=\"fa fa-arrows-h\" aria-hidden=\"true\"></i>\n**`N`<sup>th</sup>** read in reverse file\n  - Much faster than determining pairing by read names alone\n\n\n- ***Always trim and filter together!***\n\n\n???\nMost tools blindly assume that first read in forward file is paired with first read in reverse file etc\n\nOtherwise too slow\n  - for every read, worst case have to scan all reads in other file\n  - for files with millions of reads, that is millions ^ millions\n\n\nWhen trimming and filtering, if a read is removed from one file, its mate must be removed from other one too!\n\n**Always trim together in paired-end mode!**\n\n--\n\n.pull-left[\n.red[\n```\n@PAIR-1 forward\nGGGTGATGGCCGCTGCCGATGGCGTCAAAT\n+\n))%255CCF>>>>>>CCCCCCC65`IIII%\n```\n]\n.orange[\n```\n@PAIR-2 forward\nGATTTGGGGTTCAAAGCAGTATCGATCAA\n+\n!''3((((^^d+))%%%++)(%%%%).1)\n```\n]\n.blue[\n```\n@PAIR-3 forward\nTCGCACTCAACGCCCTGCATATGACAAGAC\n+\nA64;##=#B9=AAAAAAAAAA9#:AB95%^\n```\n]\n\n**`mysample_R1.fastq`**\n]\n\n.pull-right[\n<i class=\"fa fa-arrows-h\" style=\"position:absolute;font-size:3em;left:8em;\"></i>\n.red[\n```\n@PAIR-1 reverse\nAAGTTACCCTTAACAACTTAAGGGTTTTCA\n+\nfffddf`feedB`IABa)^%YBBBRTT\\^d\n```\n]\n<i class=\"fa fa-arrows-h\" style=\"position:absolute;font-size:3em;left:8em;\"></i>\n.orange[\n```\n@PAIR-2 reverse\nAGCAGAAGTCGATGATAATACGCGTCGTTT\n+\nIIIIIII^^IIId`?III%IIIGII>IIII\n```\n]<i class=\"fa fa-arrows-h\" style=\"position:absolute;font-size:3em;left:8em;\"></i>\n.blue[\n```\n@PAIR-3 reverse\nAATCCATTTGTTCAACTCACAGTTTACCGT\n+\n9C;=;=<9@4868>9:67AA<9>65<=>59\n```\n]\n**`mysample_R2.fastq`**\n]\n\n???\n\n\n- Nth read in forward file belongs in a pair with Nth read in reverse file\n- So red reads in this slide form a pair, orange ones, etc\n\n\n---\nclass: top\n\n## Paired-end FASTQ files\n\n- Order of reads matters!\n  - **`N`<sup>th</sup>** read in forward file <i class=\"fa fa-arrows-h\" aria-hidden=\"true\"></i>\n**`N`<sup>th</sup>** read in reverse file\n  - Much faster than determining pairing by read names alone\n\n\n- ***Always trim and filter together!***\n\n.pull-left[\n<i class=\"fa fa-arrows-h\" style=\"position:absolute;font-size:3em;left:8em;\"></i>\n.red[\n```\n@PAIR-1 forward\nGGGTGATGGCCGCTGCCGATGGCGTCAAAT\n+\n))%255CCF>>>>>>CCCCCCC65`IIII%\n```\n]\n.left[<i class=\"fa fa-cut\" style=\"width:15%;position:absolute;font-size:5em;\"></i>]\n<i class=\"fa fa-arrows-h\" style=\"position:absolute;font-size:3em;left:8em;\"></i>\n.orange[\n```\n@PAIR-2 forward\nGATTTGGGGTTCAAAGCAGTATCGATCAA\n+\n!''3((((^^d+))%%%++)(%%%%).1)\n```\n]\n<i class=\"fa fa-arrows-h\" style=\"position:absolute;font-size:3em;left:8em;\"></i>\n.blue[\n```\n@PAIR-3 forward\nTCGCACTCAACGCCCTGCATATGACAAGAC\n+\nA64;##=#B9=AAAAAAAAAA9#:AB95%^\n```\n]\n\n**`mysample_R1.fastq`**\n]\n.pull-right[\n.red[\n```\n@PAIR-1 reverse\nAAGTTACCCTTAACAACTTAAGGGTTTTCA\n+\nfffddf`feedB`IABa)^%YBBBRTT\\^d\n```\n]\n.orange[\n```\n@PAIR-2 reverse\nAGCAGAAGTCGATGATAATACGCGTCGTTT\n+\nIIIIIII^^IIId`?III%IIIGII>IIII\n```\n]\n.blue[\n```\n@PAIR-3 reverse\nAATCCATTTGTTCAACTCACAGTTTACCGT\n+\n9C;=;=<9@4868>9:67AA<9>65<=>59\n```\n]\n**`mysample_R2.fastq`**\n]\n\n???\n\n- Important to always provide both files to trimming and filtering tools together\n- If a read in one file gets removed (e.g. because it is below quality threshold), but it's mate is not, the pairing between the two files is no longer correct.\n\n- If one half of pair is trimmed, the other\n - also removed, or\n - put into separate \"singletons\" FASTQ file that some mappers can use\n\n- FAQ:\" why not look at read names to determine pairing?\"\n  - analysis would be much slower if for every read must scan (max) entire other file for mate, since often millions or reads (for whole-genome sequencing).\n---\nclass: top\n\n## Paired-end FASTQ files\n\n- Order of reads matters!\n  - **`N`<sup>th</sup>** read in forward file <i class=\"fa fa-arrows-h\" aria-hidden=\"true\"></i>\n**`N`<sup>th</sup>** read in reverse file\n  - Much faster than determining pairing by read names alone\n\n\n- ***Always trim and filter together!***\n\n.pull-left[\n<i class=\"fa fa-arrows-h\" style=\"position:absolute;font-size:3em;left:8em;\"></i>\n.red[\n```\n@PAIR-1 forward\nGGGTGATGGCCGCTGCCGATGGCGTCAAAT\n+\n))%255CCF>>>>>>CCCCCCC65`IIII%\n```\n]\n<i class=\"fa fa-frown-o\" style=\"position:absolute;font-size:3em;left:8em;\"></i>\n.blue[\n```\n@PAIR-3 forward\nTCGCACTCAACGCCCTGCATATGACAAGAC\n+\nA64;##=#B9=AAAAAAAAAA9#:AB95%^\n```\n]\n<i class=\"fa fa-frown-o\" style=\"position:absolute;font-size:3em;left:8em;\"></i>\n.green[\n```\n@PAIR-4 forward\nAAACTTCGTAGGTCCATTTGACAGCGTGCA\n+\n6664%!!III^(=%3333^^d^d:#32333\n```\n]\n**`mysample_R1.fastq`**\n]\n.pull-right[\n.red[\n```\n@PAIR-1 reverse\nAAGTTACCCTTAACAACTTAAGGGTTTTCA\n+\nfffddf`feedB`IABa)^%YBBBRTT\\^d\n```\n]\n.orange[\n```\n@PAIR-2 reverse\nAGCAGAAGTCGATGATAATACGCGTCGTTT\n+\nIIIIIII^^IIId`?III%IIIGII>IIII\n```\n]\n.blue[\n```\n@PAIR-3 reverse\nAATCCATTTGTTCAACTCACAGTTTACCGT\n+\n9C;=;=<9@4868>9:67AA<9>65<=>59\n```\n]\n**`mysample_R2.fastq`**\n]\n\n\n\n???\nBy cutting the yellow read only from the forward reads file, but leaving the other side of pair in the other file, an incorrect pairing is now assumed by downstream tools\n\n---\n\n## Choosing an Aligner\n\n- Each tool makes **different choices** during alignment\n  - Choice of aligner may **affect downstream results**\n  - Default options may not be best for your data!\n\n\n- Best tool for your data **depends on many factors**\n  - Type of experiment (e.g. DNA, RNA, Bisulphite)\n  - Sequencing platform\n  - Compute resources vs sensitivity\n  - Read characteristics (paired/single end, read length)\n\n\n.center[\n.image-40[![Mapping RNA](../../images/mapping/spliced_mapper.png)]\n]\n.footnote[**Figure:** mapping of RNA-seq reads is different than DNA-seq]\n\n\n???\nChoice of mapper depends on your experiment\n - Some mappers are good for DNA but not RNA\n - Some mappers do well in highly rearranged genomes (e.g. cancer), others less so\n - Some mappers do well on some platforms but worse on others\n   - e.g. Oxford Nanopore with its long reads but high error rates\n\n\nOr other factors\n - STAR needs a LOT of RAM\n - Do you need results fast? or accurate? (e.g. medical setting)\n\n\nFAQ: \"Why not map RNA reads to the transcriptome?\"\n - you can, and it is done, but then cannot find novel genes or alternative splicing\n\n\nFAQ: \"Why not BLAST or BLAT?\"\n- optimized for longer sequences\n- not base quality aware\n- too slow\n\n\n---\n\n# Know your data!\n\n\n*“... there is no tool that outperforms all of the others in\nall the tests. Therefore, the end user should clearly\nspecify [their] needs in order to choose the tool that\nprovides the best results.”* - Hatem et al BMC Bioinformatics 2013, 14:184\n\n\n.footnote[ [DOI: 10.1186/1471-2105-14-184](https://doi.org/10.1186/1471-2105-14-184) ]\n\n???\n\nKnow the data you are working with and pick the right mapper and parameters for the job!\n\nNot an easy task..\n\n---\nclass: top\n\n## Mapping tools\n\n![Timeline of mapping tools](../../images/mapping/ngs_read_mappers_timeline.jpeg)\n\n\n.footnote[60+ different mappers, many comparison papers. Figure from [10.1093/bioinformatics/bts605](https://doi.org/10.1093/bioinformatics/bts605) ]\n\n???\n\nMany different tools available\n\nDifferent strengths and weaknesses, comparison table in link\n\n---\nclass: top\n\n# Mapping tools\n\n\n**Mapping tool**   |   **Uses**   | **Characteristics**\n--- | --- | ---\nHISAT2 | DNA/RNA | Short reads. Based on [GCSA](https://doi.org/10.1109/TCBB.2013.2297101). [Reference](https://www.nature.com/articles/s41587-019-0201-4).\nRNASTAR | RNA | Short reads. Extremely fast. High sensitive and accuracy. Based on Maximal Mappable Prefixes (MMPs). [Reference](https://pubmed.ncbi.nlm.nih.gov/23104886/).\nBWA-MEM2 | DNA | Short reads. Twice as faster as BWA-MEM. Memory efficient. Based on [Burrows-Wheeler](https://academic.oup.com/bioinformatics/article/25/14/1754/225615). [Reference](https://arxiv.org/abs/1907.12931).\nMinimap2 | DNA/RNA | Long reads (PacBio and ONT).  Extremely fast. Based on [DALIGN](https://link.springer.com/chapter/10.1007/978-3-662-44753-6_5) and [MHAP](https://www.nature.com/articles/nbt.3238). [Reference](https://doi.org/10.1093/bioinformatics/bty191).\nBismark | DNA/RNA | Short reads. Bisulfite treated sequencing. Based on [GCSA](https://doi.org/10.1109/TCBB.2013.2297101). [Reference](https://pubmed.ncbi.nlm.nih.gov/21493656/).\nBBMap | DNA/RNA | Short and long reads (PacBio and ONT). Memory demanding. [Reference](https://bib.irb.hr/datoteka/773708.Josip_Maric_diplomski.pdf).\nWhisper 2 | DNA | Short reads. Indel sensitive. Variant-calling oriented. [Reference](https://academic.oup.com/bioinformatics/article/35/12/2043/5165374).\nS-conLSH | DNA | Long reads (ONT). High sensitivity and accuracy. [Reference](https://bmcbioinformatics.biomedcentral.com/articles/10.1186/s12859-020-03918-3).\n\n---\n\n# File Formats\n\n---\n\n# SAM/BAM file format\n\n![Example of SAM file format](../../images/bam_file.png \"SAM/BAM file\")\n\n**SAM:** **S**equence **A**lignment **M**ap\n\n**BAM:** Binary (compressed) SAM; not human-readable\n\n---\n\n# SAM/BAM file format\n\n![More detailed view of SAM format](../../images/bam_file_explained.png \"SAM/BAM file detail\")\n\n\n- Original read information (from FASTQ) plus mapping information\n  - Position on reference, alignment, quality score, uniqueness, ..\n\n???\nAlignment given in CIGAR string.\n - in screenshot \"37M\" means 37 matches\n - in screenshot \"18M2D19M\" means 18 matches, then 2 deletions, then 19 matches\n\n---\nclass: top\n\n# Genome Browsers\n\n- Visualise aligned reads (BAM files)\n\n![IGV Genome Browser](../../images/mapping/igv_animation.gif)\n\n.footnote[This is [IGV (Integrative Genome Browser)](https://software.broadinstitute.org/software/igv/) DOI: [10.1038/nbt.1754](https://doi.org/10.1038/nbt.1754)]\n\n???\n- Can zoom in and out, drag left and right, explore your sample\n- Zoom in for more information, mismatches, read information\n- Many different genome browsers exist\n\n---\nclass: top\n\n# Genome Browsers in Galaxy\n\n- [JBrowse](https://jbrowse.org/) <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> Genome Browser as Galaxy tool\n\n.image-90[![Screenshot of JBrowse in the Galaxy Interface showing transcripts, various box plots, heatmaps, sequencing depth and variation plots.](../../images/mapping/jbrowse.png)]\n\n.footnote[[JBrowse.org](https://jbrowse.org) DOI: [10.1186/s13059-016-0924-1](https://doi.org/10.1186/s13059-016-0924-1)]\n\n???\n\nJbrowse tool builds up a small website for you, and pre-processes the reference genome into a more efficient format. If you wanted to share this with your colleagues, you could download this dataset and directly place it on your webserver.\n\n---\nclass: top\n\n# Genome Browsers in Galaxy\n\n- **External Genome Browsers** in Galaxy\n  - BAM datasets in Galaxy have display links\n  - [UCSC Genome Browser](https://genome-euro.ucsc.edu/cgi-bin/hgTracks), [Ensemble](https://www.ensembl.org), [IGV](https://software.broadinstitute.org/software/igv/), [IGB](https://bioviz.org/), [BAM.iobo](https://bam.iobio.io/home)\n\n\n  ![Display application links in Galaxy](../../images/mapping/igv_link.png)\n\n\n- Two different links for **IGV**\n  - **local:**\n     - Start IGV on your machine first\n     - Then click link to automatically load data from Galaxy\n  - **[Reference genome name]** (*\"Human hg19\"* in screenshot)\n     - Downloads and starts IGV for you\n     - Requires [Java web start](https://java.com/en/download/faq/java_webstart.xml) be installed on your machine\n\n???\nIn the mapping hands-on tutorial you will use JBrowse and IGV\n\n"],"hands_on":true,"slides":true,"mod_date":"2024-05-29 14:28:52 +0000","pub_date":"2016-10-04 14:08:30 +0000","version":56,"workflows":[{"workflow":"mapping-jbrowse.ga","tests":false,"url":"https://training.galaxyproject.org/training-material/topics/sequence-analysis/tutorials/mapping/workflows/mapping-jbrowse.ga","path":"topics/sequence-analysis/tutorials/mapping/workflows/mapping-jbrowse.ga","wfid":"sequence-analysis-mapping","wfname":"mapping-jbrowse","trs_endpoint":"https://training.galaxyproject.org/training-material/api/ga4gh/trs/v2/tools/sequence-analysis-mapping/versions/mapping-jbrowse","license":null,"creators":[],"name":"GTN - Sequence Analyses - Mapping - Jbrowse (imported from uploaded file)","title":"GTN - Sequence Analyses - Mapping - Jbrowse (imported from uploaded file)","test_results":null,"modified":"2024-06-24 07:44:29 +0000","mermaid":"flowchart TD\n  0[\"ℹ️ Input Dataset\\nreads_1\"];\n  style 0 stroke:#2c3143,stroke-width:4px;\n  1[\"ℹ️ Input Dataset\\nreads_2\"];\n  style 1 stroke:#2c3143,stroke-width:4px;\n  2[\"FastQC\"];\n  0 -->|output| 2;\n  3[\"FastQC\"];\n  1 -->|output| 3;\n  4[\"Trim Galore!\"];\n  0 -->|output| 4;\n  1 -->|output| 4;\n  5[\"MultiQC\"];\n  3 -->|text_file| 5;\n  2 -->|text_file| 5;\n  6[\"Bowtie2\"];\n  4 -->|trimmed_reads_pair1| 6;\n  4 -->|trimmed_reads_pair2| 6;\n  cb22563a-fece-4b63-9d85-ff5817edb5c3[\"Output\\nbowtie2_mapping_stats\"];\n  6 --> cb22563a-fece-4b63-9d85-ff5817edb5c3;\n  style cb22563a-fece-4b63-9d85-ff5817edb5c3 stroke:#2c3143,stroke-width:4px;\n  7[\"Samtools stats\"];\n  6 -->|output| 7;\n  490620d4-f083-4999-bb33-73a2a1f736b4[\"Output\\nbam_stats_1\"];\n  7 --> 490620d4-f083-4999-bb33-73a2a1f736b4;\n  style 490620d4-f083-4999-bb33-73a2a1f736b4 stroke:#2c3143,stroke-width:4px;\n  8[\"JBrowse\"];\n  6 -->|output| 8;"},{"workflow":"mapping.ga","tests":true,"url":"https://training.galaxyproject.org/training-material/topics/sequence-analysis/tutorials/mapping/workflows/mapping.ga","path":"topics/sequence-analysis/tutorials/mapping/workflows/mapping.ga","wfid":"sequence-analysis-mapping","wfname":"mapping","trs_endpoint":"https://training.galaxyproject.org/training-material/api/ga4gh/trs/v2/tools/sequence-analysis-mapping/versions/mapping","license":null,"creators":[],"name":"GTN - Sequence Analyses - Mapping (imported from uploaded file)","title":"GTN - Sequence Analyses - Mapping (imported from uploaded file)","test_results":{"eu":{"summary":{"num_errors":0,"num_failures":0,"num_skips":0,"num_tests":1},"tests":[{"data":{"end_datetime":"2023-05-19T16:33:47.079379","inputs":"---\nreads_1:\n  class: File\n  location: https://zenodo.org/record/1324070/files/wt_H3K4me3_read1.fastq.gz\nreads_2:\n  class: File\n  location: https://zenodo.org/record/1324070/files/wt_H3K4me3_read2.fastq.gz\n","invocation_details":{"details":{"error_message":"","history_id":"2e96b0bf6abd6b74","history_state":"ok","invocation_id":"6284e34d09b1b06d","invocation_state":"scheduled","workflow_id":"507e9a109418ad9c"},"steps":{"0. reads_1":{"action":null,"id":"239cd24984e05a43","job_id":null,"jobs":[],"model_class":"WorkflowInvocationStep","order_index":0,"output_collections":{},"outputs":{"output":{"id":"4838ba20a6d86765ce9b5492a01ba912","src":"hda","uuid":"689bd625-8e53-484d-a369-e8f88e298ae8"}},"state":"scheduled","subworkflow":null,"subworkflow_invocation_id":null,"update_time":"2023-05-19T14:30:12.217904","workflow_step_id":"a07c7d9026192889","workflow_step_label":"reads_1","workflow_step_uuid":"71f77373-c9b8-441c-bbf3-b168fbb69220"},"1. reads_2":{"action":null,"id":"1da8d9ea66ac45a3","job_id":null,"jobs":[],"model_class":"WorkflowInvocationStep","order_index":1,"output_collections":{},"outputs":{"output":{"id":"4838ba20a6d8676511241aa0be025fbe","src":"hda","uuid":"654f0d1a-35d6-4c17-863b-1ed725a10d3c"}},"state":"scheduled","subworkflow":null,"subworkflow_invocation_id":null,"update_time":"2023-05-19T14:30:12.217908","workflow_step_id":"8b783f04ae56b16d","workflow_step_label":"reads_2","workflow_step_uuid":"3da9f126-0edf-4243-88f7-e1d1528840f6"},"2. Unnamed step":{"action":null,"id":"d11da588620ce6e9","job_id":"11ac94870d0bb33adde30cbebfc7b5aa","jobs":[{"command_line":"ln -s '/data/dnb08/galaxy_db/files/6/8/9/dataset_689bd625-8e53-484d-a369-e8f88e298ae8.dat' 'wt_H3K4me3_read1_fastq_gz.gz' && mkdir -p '/data/jwd05e/main/060/058/60058034/working/dataset_efc9b134-bbc0-4a68-9655-0ee02cf880af_files' && fastqc --outdir '/data/jwd05e/main/060/058/60058034/working/dataset_efc9b134-bbc0-4a68-9655-0ee02cf880af_files'    --quiet --extract  --kmers 7 -f 'fastq' 'wt_H3K4me3_read1_fastq_gz.gz'  && cp '/data/jwd05e/main/060/058/60058034/working/dataset_efc9b134-bbc0-4a68-9655-0ee02cf880af_files'/*/fastqc_data.txt output.txt && cp '/data/jwd05e/main/060/058/60058034/working/dataset_efc9b134-bbc0-4a68-9655-0ee02cf880af_files'/*\\.html output.html","command_version":null,"create_time":"2023-05-19T14:30:12.209933","dependencies":[{"cacheable":false,"dependency_resolver":{"auto_init":true,"auto_install":false,"can_uninstall_dependencies":true,"ensure_channels":"conda-forge,bioconda","model_class":"CondaDependencyResolver","prefix":"/usr/local/tools/_conda","read_only":false,"resolver_type":"conda","resolves_simple_dependencies":true,"use_local":false,"versionless":false},"dependency_type":"conda","environment_path":"/usr/local/tools/_conda/envs/__fastqc@0.11.8","exact":true,"model_class":"MergedCondaDependency","name":"fastqc","version":"0.11.8"}],"exit_code":0,"external_id":"43534317","galaxy_version":"23.0","history_id":"2e96b0bf6abd6b74","id":"11ac94870d0bb33adde30cbebfc7b5aa","inputs":{"input_file":{"id":"4838ba20a6d86765ce9b5492a01ba912","src":"hda","uuid":"689bd625-8e53-484d-a369-e8f88e298ae8"}},"job_messages":[],"job_metrics":[{"name":"hostname","plugin":"hostname","raw_value":"vgcnbwc-worker-c125m425-1589.novalocal","title":"hostname","value":"vgcnbwc-worker-c125m425-1589.novalocal"},{"name":"galaxy_slots","plugin":"core","raw_value":"8.0000000","title":"Cores Allocated","value":"8"},{"name":"galaxy_memory_mb","plugin":"core","raw_value":"31129.0000000","title":"Memory Allocated (MB)","value":"31129"},{"name":"start_epoch","plugin":"core","raw_value":"1684506662.0000000","title":"Job Start Time","value":"2023-05-19 16:31:02"},{"name":"end_epoch","plugin":"core","raw_value":"1684506713.0000000","title":"Job End Time","value":"2023-05-19 16:31:53"},{"name":"runtime_seconds","plugin":"core","raw_value":"51.0000000","title":"Job Runtime (Wall Clock)","value":"51 seconds"},{"name":"cpuacct.usage","plugin":"cgroup","raw_value":"12375662744.0000000","title":"CPU Time","value":"12.375662744 seconds"},{"name":"memory.failcnt","plugin":"cgroup","raw_value":"0E-7","title":"Failed to allocate memory count","value":0.0},{"name":"memory.limit_in_bytes","plugin":"cgroup","raw_value":"32749125632.0000000","title":"Memory limit on cgroup (MEM)","value":"30.5 GB"},{"name":"memory.max_usage_in_bytes","plugin":"cgroup","raw_value":"268595200.0000000","title":"Max memory usage (MEM)","value":"256.2 MB"},{"name":"memory.memsw.limit_in_bytes","plugin":"cgroup","raw_value":"9223372036854771712.0000000","title":"Memory limit on cgroup (MEM+SWP)","value":"8.0 EB"},{"name":"memory.memsw.max_usage_in_bytes","plugin":"cgroup","raw_value":"268595200.0000000","title":"Max memory usage (MEM+SWP)","value":"256.2 MB"},{"name":"memory.oom_control.oom_kill_disable","plugin":"cgroup","raw_value":"1.0000000","title":"OOM Control enabled","value":"No"},{"name":"memory.oom_control.under_oom","plugin":"cgroup","raw_value":"0E-7","title":"Was OOM Killer active?","value":"No"},{"name":"memory.soft_limit_in_bytes","plugin":"cgroup","raw_value":"0E-7","title":"Memory softlimit on cgroup","value":"0 bytes"}],"job_stderr":"","job_stdout":"","model_class":"Job","output_collections":{},"outputs":{"html_file":{"id":"4838ba20a6d8676572288659e6a2bd0b","src":"hda","uuid":"efc9b134-bbc0-4a68-9655-0ee02cf880af"},"text_file":{"id":"4838ba20a6d86765100e931edbfb8029","src":"hda","uuid":"718a2f6a-6747-4754-a9da-60a98a6c5957"}},"params":{"__input_ext":"\"fastqsanger.gz\"","__workflow_invocation_uuid__":"\"9ef558e0f65111eda6f2001e67d2ec02\"","adapters":null,"chromInfo":"\"/opt/galaxy/tool-data/shared/ucsc/chrom/?.len\"","contaminants":null,"dbkey":"\"?\"","kmers":"\"7\"","limits":null,"min_length":null,"nogroup":"false"},"state":"ok","stderr":"","stdout":"","tool_id":"toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.72+galaxy1","tool_stderr":"","tool_stdout":"","traceback":null,"update_time":"2023-05-19T14:31:54.552522","user_email":"hxr@informatik.uni-freiburg.de"}],"model_class":"WorkflowInvocationStep","order_index":2,"output_collections":{},"outputs":{"html_file":{"id":"4838ba20a6d8676572288659e6a2bd0b","src":"hda","uuid":"efc9b134-bbc0-4a68-9655-0ee02cf880af"},"text_file":{"id":"4838ba20a6d86765100e931edbfb8029","src":"hda","uuid":"718a2f6a-6747-4754-a9da-60a98a6c5957"}},"state":"scheduled","subworkflow":null,"subworkflow_invocation_id":null,"update_time":"2023-05-19T14:31:54.529698","workflow_step_id":"1e8dd70f0c41cadf","workflow_step_label":null,"workflow_step_uuid":"f9d0ea7d-f2e3-41b2-bc11-4d40665a4439"},"3. Unnamed step":{"action":null,"id":"76778945e7e793e5","job_id":"11ac94870d0bb33af53ebe6a5976a7e4","jobs":[{"command_line":"ln -s '/data/dnb08/galaxy_db/files/6/5/4/dataset_654f0d1a-35d6-4c17-863b-1ed725a10d3c.dat' 'wt_H3K4me3_read2_fastq_gz.gz' && mkdir -p '/data/jwd02f/main/060/058/60058035/working/dataset_5f25fcad-3405-4aa3-a343-8eb710d98761_files' && fastqc --outdir '/data/jwd02f/main/060/058/60058035/working/dataset_5f25fcad-3405-4aa3-a343-8eb710d98761_files'    --quiet --extract  --kmers 7 -f 'fastq' 'wt_H3K4me3_read2_fastq_gz.gz'  && cp '/data/jwd02f/main/060/058/60058035/working/dataset_5f25fcad-3405-4aa3-a343-8eb710d98761_files'/*/fastqc_data.txt output.txt && cp '/data/jwd02f/main/060/058/60058035/working/dataset_5f25fcad-3405-4aa3-a343-8eb710d98761_files'/*\\.html output.html","command_version":null,"create_time":"2023-05-19T14:30:12.324932","dependencies":[{"cacheable":false,"dependency_resolver":{"auto_init":true,"auto_install":false,"can_uninstall_dependencies":true,"ensure_channels":"conda-forge,bioconda","model_class":"CondaDependencyResolver","prefix":"/usr/local/tools/_conda","read_only":false,"resolver_type":"conda","resolves_simple_dependencies":true,"use_local":false,"versionless":false},"dependency_type":"conda","environment_path":"/usr/local/tools/_conda/envs/__fastqc@0.11.8","exact":true,"model_class":"MergedCondaDependency","name":"fastqc","version":"0.11.8"}],"exit_code":0,"external_id":"43534318","galaxy_version":"23.0","history_id":"2e96b0bf6abd6b74","id":"11ac94870d0bb33af53ebe6a5976a7e4","inputs":{"input_file":{"id":"4838ba20a6d8676511241aa0be025fbe","src":"hda","uuid":"654f0d1a-35d6-4c17-863b-1ed725a10d3c"}},"job_messages":[],"job_metrics":[{"name":"hostname","plugin":"hostname","raw_value":"vgcnbwc-worker-c125m425-1589.novalocal","title":"hostname","value":"vgcnbwc-worker-c125m425-1589.novalocal"},{"name":"galaxy_slots","plugin":"core","raw_value":"8.0000000","title":"Cores Allocated","value":"8"},{"name":"galaxy_memory_mb","plugin":"core","raw_value":"31129.0000000","title":"Memory Allocated (MB)","value":"31129"},{"name":"start_epoch","plugin":"core","raw_value":"1684506662.0000000","title":"Job Start Time","value":"2023-05-19 16:31:02"},{"name":"end_epoch","plugin":"core","raw_value":"1684506721.0000000","title":"Job End Time","value":"2023-05-19 16:32:01"},{"name":"runtime_seconds","plugin":"core","raw_value":"59.0000000","title":"Job Runtime (Wall Clock)","value":"59 seconds"},{"name":"cpuacct.usage","plugin":"cgroup","raw_value":"13599783917.0000000","title":"CPU Time","value":"13.599783917 seconds"},{"name":"memory.failcnt","plugin":"cgroup","raw_value":"0E-7","title":"Failed to allocate memory count","value":0.0},{"name":"memory.limit_in_bytes","plugin":"cgroup","raw_value":"32749125632.0000000","title":"Memory limit on cgroup (MEM)","value":"30.5 GB"},{"name":"memory.max_usage_in_bytes","plugin":"cgroup","raw_value":"231440384.0000000","title":"Max memory usage (MEM)","value":"220.7 MB"},{"name":"memory.memsw.limit_in_bytes","plugin":"cgroup","raw_value":"9223372036854771712.0000000","title":"Memory limit on cgroup (MEM+SWP)","value":"8.0 EB"},{"name":"memory.memsw.max_usage_in_bytes","plugin":"cgroup","raw_value":"231440384.0000000","title":"Max memory usage (MEM+SWP)","value":"220.7 MB"},{"name":"memory.oom_control.oom_kill_disable","plugin":"cgroup","raw_value":"1.0000000","title":"OOM Control enabled","value":"No"},{"name":"memory.oom_control.under_oom","plugin":"cgroup","raw_value":"0E-7","title":"Was OOM Killer active?","value":"No"},{"name":"memory.soft_limit_in_bytes","plugin":"cgroup","raw_value":"0E-7","title":"Memory softlimit on cgroup","value":"0 bytes"}],"job_stderr":"","job_stdout":"","model_class":"Job","output_collections":{},"outputs":{"html_file":{"id":"4838ba20a6d8676521dd17a9b62d385f","src":"hda","uuid":"5f25fcad-3405-4aa3-a343-8eb710d98761"},"text_file":{"id":"4838ba20a6d8676577d1d2d4d95b125f","src":"hda","uuid":"0a0a3867-f5f7-4690-9776-09274436e562"}},"params":{"__input_ext":"\"fastqsanger.gz\"","__workflow_invocation_uuid__":"\"9ef558e0f65111eda6f2001e67d2ec02\"","adapters":null,"chromInfo":"\"/opt/galaxy/tool-data/shared/ucsc/chrom/?.len\"","contaminants":null,"dbkey":"\"?\"","kmers":"\"7\"","limits":null,"min_length":null,"nogroup":"false"},"state":"ok","stderr":"","stdout":"","tool_id":"toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.72+galaxy1","tool_stderr":"","tool_stdout":"","traceback":null,"update_time":"2023-05-19T14:32:05.448601","user_email":"hxr@informatik.uni-freiburg.de"}],"model_class":"WorkflowInvocationStep","order_index":3,"output_collections":{},"outputs":{"html_file":{"id":"4838ba20a6d8676521dd17a9b62d385f","src":"hda","uuid":"5f25fcad-3405-4aa3-a343-8eb710d98761"},"text_file":{"id":"4838ba20a6d8676577d1d2d4d95b125f","src":"hda","uuid":"0a0a3867-f5f7-4690-9776-09274436e562"}},"state":"scheduled","subworkflow":null,"subworkflow_invocation_id":null,"update_time":"2023-05-19T14:32:05.428308","workflow_step_id":"7c2802e0bfd4ecd0","workflow_step_label":null,"workflow_step_uuid":"faa4b55f-0b0c-4696-b61e-f281007aa8a1"},"4. Unnamed step":{"action":null,"id":"1504cb0a755f30bb","job_id":"11ac94870d0bb33a0920faa96345e33f","jobs":[{"command_line":"ln -s '/data/dnb08/galaxy_db/files/6/8/9/dataset_689bd625-8e53-484d-a369-e8f88e298ae8.dat' input_1.fastq.gz &&  ln -s '/data/dnb08/galaxy_db/files/6/5/4/dataset_654f0d1a-35d6-4c17-863b-1ed725a10d3c.dat' input_2.fastq.gz &&  trim_galore  --phred33    --output_dir ./      --paired      input_1.fastq.gz input_2.fastq.gz   && if [ -f input_1_trimmed.fq.gz ] ; then mv input_1_trimmed.fq.gz input_1_trimmed.fq ; fi && if [ -f input_1_val_1.fq.gz ] ; then mv input_1_val_1.fq.gz input_1_val_1.fq ; fi && if [ -f input_2_val_2.fq.gz ] ; then mv input_2_val_2.fq.gz input_2_val_2.fq ; fi && if [ -f input_1_unpaired_1.fq.gz ] ; then mv input_1_unpaired_1.fq.gz input_1_unpaired_1.fq ; fi && if [ -f input_2_unpaired_2.fq.gz ] ; then mv input_2_unpaired_2.fq.gz input_2_unpaired_2.fq ; fi","command_version":"Quality-/Adapter-/RRBS-Trimming\n                               (powered by Cutadapt)\n                                  version 0.4.3\n\n                             Last update: 07 12 2016","create_time":"2023-05-19T14:30:12.446388","dependencies":[{"cacheable":false,"dependency_resolver":{"auto_init":true,"auto_install":false,"can_uninstall_dependencies":true,"ensure_channels":"conda-forge,bioconda","model_class":"CondaDependencyResolver","prefix":"/usr/local/tools/_conda","read_only":false,"resolver_type":"conda","resolves_simple_dependencies":true,"use_local":false,"versionless":false},"dependency_type":"conda","environment_path":"/usr/local/tools/_conda/envs/__trim-galore@0.4.3","exact":true,"model_class":"MergedCondaDependency","name":"trim-galore","version":"0.4.3"}],"exit_code":0,"external_id":"43534319","galaxy_version":"23.0","history_id":"2e96b0bf6abd6b74","id":"11ac94870d0bb33a0920faa96345e33f","inputs":{"input_mate1":{"id":"4838ba20a6d86765ce9b5492a01ba912","src":"hda","uuid":"689bd625-8e53-484d-a369-e8f88e298ae8"},"input_mate2":{"id":"4838ba20a6d8676511241aa0be025fbe","src":"hda","uuid":"654f0d1a-35d6-4c17-863b-1ed725a10d3c"}},"job_messages":[],"job_metrics":[{"name":"hostname","plugin":"hostname","raw_value":"vgcnbwc-worker-c36m100-8763.novalocal","title":"hostname","value":"vgcnbwc-worker-c36m100-8763.novalocal"},{"name":"galaxy_slots","plugin":"core","raw_value":"5.0000000","title":"Cores Allocated","value":"5"},{"name":"galaxy_memory_mb","plugin":"core","raw_value":"19456.0000000","title":"Memory Allocated (MB)","value":"19456"},{"name":"start_epoch","plugin":"core","raw_value":"1684506638.0000000","title":"Job Start Time","value":"2023-05-19 16:30:38"},{"name":"end_epoch","plugin":"core","raw_value":"1684506671.0000000","title":"Job End Time","value":"2023-05-19 16:31:11"},{"name":"runtime_seconds","plugin":"core","raw_value":"33.0000000","title":"Job Runtime (Wall Clock)","value":"33 seconds"},{"name":"cpuacct.usage","plugin":"cgroup","raw_value":"15323583745.0000000","title":"CPU Time","value":"15.323583745 seconds"},{"name":"memory.failcnt","plugin":"cgroup","raw_value":"0E-7","title":"Failed to allocate memory count","value":0.0},{"name":"memory.limit_in_bytes","plugin":"cgroup","raw_value":"20401094656.0000000","title":"Memory limit on cgroup (MEM)","value":"19.0 GB"},{"name":"memory.max_usage_in_bytes","plugin":"cgroup","raw_value":"216088576.0000000","title":"Max memory usage (MEM)","value":"206.1 MB"},{"name":"memory.memsw.limit_in_bytes","plugin":"cgroup","raw_value":"9223372036854771712.0000000","title":"Memory limit on cgroup (MEM+SWP)","value":"8.0 EB"},{"name":"memory.memsw.max_usage_in_bytes","plugin":"cgroup","raw_value":"216088576.0000000","title":"Max memory usage (MEM+SWP)","value":"206.1 MB"},{"name":"memory.oom_control.oom_kill_disable","plugin":"cgroup","raw_value":"1.0000000","title":"OOM Control enabled","value":"No"},{"name":"memory.oom_control.under_oom","plugin":"cgroup","raw_value":"0E-7","title":"Was OOM Killer active?","value":"No"},{"name":"memory.soft_limit_in_bytes","plugin":"cgroup","raw_value":"0E-7","title":"Memory softlimit on cgroup","value":"0 bytes"}],"job_stderr":"","job_stdout":"","model_class":"Job","output_collections":{},"outputs":{"trimmed_reads_pair1":{"id":"4838ba20a6d86765439b06bcf8677007","src":"hda","uuid":"64981dba-44f7-4768-8b63-e63defba2ecf"},"trimmed_reads_pair2":{"id":"4838ba20a6d867658f72f66dd1d7e6cc","src":"hda","uuid":"0764cea4-72ed-4a8c-93b2-88bd066afc4e"}},"params":{"__input_ext":"\"input\"","__workflow_invocation_uuid__":"\"9ef558e0f65111eda6f2001e67d2ec02\"","chromInfo":"\"/opt/galaxy/tool-data/shared/ucsc/chrom/?.len\"","dbkey":"\"?\"","params":"{\"__current_case__\": 0, \"settingsType\": \"default\"}","rrbs":"{\"__current_case__\": 0, \"settingsType\": \"default\"}","singlePaired":"{\"__current_case__\": 1, \"input_mate1\": {\"values\": [{\"id\": 137415404, \"src\": \"hda\"}]}, \"input_mate2\": {\"values\": [{\"id\": 137415461, \"src\": \"hda\"}]}, \"sPaired\": \"paired\", \"three_prime_clip_R1\": null, \"three_prime_clip_R2\": null, \"trim1\": false, \"trimming\": {\"__current_case__\": 0, \"trimming_select\": \"\"}}"},"state":"ok","stderr":"Path to Cutadapt set as: 'cutadapt' (default)\nCutadapt seems to be working fine (tested command 'cutadapt --version')\n\n\nAUTO-DETECTING ADAPTER TYPE\n===========================\nAttempting to auto-detect adapter type from the first 1 million sequences of the first file (>> input_1.fastq.gz <<)\n\nFound perfect matches for the following adapter sequences:\nAdapter type\tCount\tSequence\tSequences analysed\tPercentage\nIllumina\t2\tAGATCGGAAGAGC\t50000\t0.00\nsmallRNA\t0\tTGGAATTCTCGG\t50000\t0.00\nNextera\t0\tCTGTCTCTTATA\t50000\t0.00\nUsing Illumina adapter for trimming (count: 2). Second best hit was smallRNA (count: 0)\n\nWriting report to './input_1.fastq.gz_trimming_report.txt'\n\nSUMMARISING RUN PARAMETERS\n==========================\nInput filename: input_1.fastq.gz\nTrimming mode: paired-end\nTrim Galore version: 0.4.3\nCutadapt version: 1.13\nQuality Phred score cutoff: 20\nQuality encoding type selected: ASCII+33\nAdapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)\nMaximum trimming error rate: 0.1 (default)\nMinimum required adapter overlap (stringency): 1 bp\nMinimum required sequence length for both reads before a sequence pair gets removed: 20 bp\nOutput file(s) will be GZIP compressed\n\nWriting final adapter and quality trimmed output to input_1_trimmed.fq.gz\n\n\n  >>> Now performing quality (cutoff 20) and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file input_1.fastq.gz <<< \nThis is cutadapt 1.13 with Python 3.6.1\nCommand line parameters: -f fastq -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC input_1.fastq.gz\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.85 s (17 us/read; 3.52 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                  50,000\nReads with adapters:                    14,011 (28.0%)\nReads written (passing filters):        50,000 (100.0%)\n\nTotal basepairs processed:     2,550,000 bp\nQuality-trimmed:                  34,012 bp (1.3%)\nTotal written (filtered):      2,495,795 bp (97.9%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 14011 times.\n\nNo. of allowed errors:\n0-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 27.3%\n  C: 33.3%\n  G: 24.8%\n  T: 14.6%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n1\t9379\t12500.0\t0\t9379\n2\t3646\t3125.0\t0\t3646\n3\t791\t781.2\t0\t791\n4\t134\t195.3\t0\t134\n5\t33\t48.8\t0\t33\n6\t9\t12.2\t0\t9\n7\t3\t3.1\t0\t3\n8\t1\t0.8\t0\t1\n9\t1\t0.2\t0\t0 1\n10\t3\t0.0\t1\t0 3\n11\t1\t0.0\t1\t1\n15\t1\t0.0\t1\t1\n16\t1\t0.0\t1\t0 1\n19\t1\t0.0\t1\t1\n27\t1\t0.0\t1\t0 1\n28\t1\t0.0\t1\t0 1\n32\t1\t0.0\t1\t0 1\n36\t1\t0.0\t1\t0 1\n43\t1\t0.0\t1\t0 1\n49\t1\t0.0\t1\t0 1\n50\t1\t0.0\t1\t0 1\n\n\nRUN STATISTICS FOR INPUT FILE: input_1.fastq.gz\n=============================================\n50000 sequences processed in total\nThe length threshold of paired-end sequences gets evaluated later on (in the validation step)\n\nWriting report to './input_2.fastq.gz_trimming_report.txt'\n\nSUMMARISING RUN PARAMETERS\n==========================\nInput filename: input_2.fastq.gz\nTrimming mode: paired-end\nTrim Galore version: 0.4.3\nCutadapt version: 1.13\nQuality Phred score cutoff: 20\nQuality encoding type selected: ASCII+33\nAdapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)\nMaximum trimming error rate: 0.1 (default)\nMinimum required adapter overlap (stringency): 1 bp\nMinimum required sequence length for both reads before a sequence pair gets removed: 20 bp\nOutput file(s) will be GZIP compressed\n\nWriting final adapter and quality trimmed output to input_2_trimmed.fq.gz\n\n\n  >>> Now performing quality (cutoff 20) and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file input_2.fastq.gz <<< \nThis is cutadapt 1.13 with Python 3.6.1\nCommand line parameters: -f fastq -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC input_2.fastq.gz\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.91 s (18 us/read; 3.30 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                  50,000\nReads with adapters:                    13,787 (27.6%)\nReads written (passing filters):        50,000 (100.0%)\n\nTotal basepairs processed:     2,550,000 bp\nQuality-trimmed:                 120,340 bp (4.7%)\nTotal written (filtered):      2,410,008 bp (94.5%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 13787 times.\n\nNo. of allowed errors:\n0-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 27.6%\n  C: 32.8%\n  G: 24.6%\n  T: 15.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n1\t9236\t12500.0\t0\t9236\n2\t3546\t3125.0\t0\t3546\n3\t827\t781.2\t0\t827\n4\t131\t195.3\t0\t131\n5\t36\t48.8\t0\t36\n6\t3\t12.2\t0\t3\n7\t2\t3.1\t0\t2\n9\t1\t0.2\t0\t0 1\n11\t2\t0.0\t1\t1 1\n15\t1\t0.0\t1\t1\n19\t1\t0.0\t1\t1\n42\t1\t0.0\t1\t0 1\n\n\nRUN STATISTICS FOR INPUT FILE: input_2.fastq.gz\n=============================================\n50000 sequences processed in total\nThe length threshold of paired-end sequences gets evaluated later on (in the validation step)\n\nValidate paired-end files input_1_trimmed.fq.gz and input_2_trimmed.fq.gz\nfile_1: input_1_trimmed.fq.gz, file_2: input_2_trimmed.fq.gz\n\n\n>>>>> Now validing the length of the 2 paired-end infiles: input_1_trimmed.fq.gz and input_2_trimmed.fq.gz <<<<<\nWriting validated paired-end read 1 reads to input_1_val_1.fq.gz\nWriting validated paired-end read 2 reads to input_2_val_2.fq.gz\n\nTotal number of sequences analysed: 50000\n\nNumber of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 1639 (3.28%)\n\nDeleting both intermediate output files input_1_trimmed.fq.gz and input_2_trimmed.fq.gz\n\n====================================================================================================\n\n\ngzip: stdout: Broken pipe\n","stdout":"1.13\n","tool_id":"toolshed.g2.bx.psu.edu/repos/bgruening/trim_galore/trim_galore/0.4.3.1","tool_stderr":"Path to Cutadapt set as: 'cutadapt' (default)\nCutadapt seems to be working fine (tested command 'cutadapt --version')\n\n\nAUTO-DETECTING ADAPTER TYPE\n===========================\nAttempting to auto-detect adapter type from the first 1 million sequences of the first file (>> input_1.fastq.gz <<)\n\nFound perfect matches for the following adapter sequences:\nAdapter type\tCount\tSequence\tSequences analysed\tPercentage\nIllumina\t2\tAGATCGGAAGAGC\t50000\t0.00\nsmallRNA\t0\tTGGAATTCTCGG\t50000\t0.00\nNextera\t0\tCTGTCTCTTATA\t50000\t0.00\nUsing Illumina adapter for trimming (count: 2). Second best hit was smallRNA (count: 0)\n\nWriting report to './input_1.fastq.gz_trimming_report.txt'\n\nSUMMARISING RUN PARAMETERS\n==========================\nInput filename: input_1.fastq.gz\nTrimming mode: paired-end\nTrim Galore version: 0.4.3\nCutadapt version: 1.13\nQuality Phred score cutoff: 20\nQuality encoding type selected: ASCII+33\nAdapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)\nMaximum trimming error rate: 0.1 (default)\nMinimum required adapter overlap (stringency): 1 bp\nMinimum required sequence length for both reads before a sequence pair gets removed: 20 bp\nOutput file(s) will be GZIP compressed\n\nWriting final adapter and quality trimmed output to input_1_trimmed.fq.gz\n\n\n  >>> Now performing quality (cutoff 20) and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file input_1.fastq.gz <<< \nThis is cutadapt 1.13 with Python 3.6.1\nCommand line parameters: -f fastq -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC input_1.fastq.gz\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.85 s (17 us/read; 3.52 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                  50,000\nReads with adapters:                    14,011 (28.0%)\nReads written (passing filters):        50,000 (100.0%)\n\nTotal basepairs processed:     2,550,000 bp\nQuality-trimmed:                  34,012 bp (1.3%)\nTotal written (filtered):      2,495,795 bp (97.9%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 14011 times.\n\nNo. of allowed errors:\n0-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 27.3%\n  C: 33.3%\n  G: 24.8%\n  T: 14.6%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n1\t9379\t12500.0\t0\t9379\n2\t3646\t3125.0\t0\t3646\n3\t791\t781.2\t0\t791\n4\t134\t195.3\t0\t134\n5\t33\t48.8\t0\t33\n6\t9\t12.2\t0\t9\n7\t3\t3.1\t0\t3\n8\t1\t0.8\t0\t1\n9\t1\t0.2\t0\t0 1\n10\t3\t0.0\t1\t0 3\n11\t1\t0.0\t1\t1\n15\t1\t0.0\t1\t1\n16\t1\t0.0\t1\t0 1\n19\t1\t0.0\t1\t1\n27\t1\t0.0\t1\t0 1\n28\t1\t0.0\t1\t0 1\n32\t1\t0.0\t1\t0 1\n36\t1\t0.0\t1\t0 1\n43\t1\t0.0\t1\t0 1\n49\t1\t0.0\t1\t0 1\n50\t1\t0.0\t1\t0 1\n\n\nRUN STATISTICS FOR INPUT FILE: input_1.fastq.gz\n=============================================\n50000 sequences processed in total\nThe length threshold of paired-end sequences gets evaluated later on (in the validation step)\n\nWriting report to './input_2.fastq.gz_trimming_report.txt'\n\nSUMMARISING RUN PARAMETERS\n==========================\nInput filename: input_2.fastq.gz\nTrimming mode: paired-end\nTrim Galore version: 0.4.3\nCutadapt version: 1.13\nQuality Phred score cutoff: 20\nQuality encoding type selected: ASCII+33\nAdapter sequence: 'AGATCGGAAGAGC' (Illumina TruSeq, Sanger iPCR; auto-detected)\nMaximum trimming error rate: 0.1 (default)\nMinimum required adapter overlap (stringency): 1 bp\nMinimum required sequence length for both reads before a sequence pair gets removed: 20 bp\nOutput file(s) will be GZIP compressed\n\nWriting final adapter and quality trimmed output to input_2_trimmed.fq.gz\n\n\n  >>> Now performing quality (cutoff 20) and adapter trimming in a single pass for the adapter sequence: 'AGATCGGAAGAGC' from file input_2.fastq.gz <<< \nThis is cutadapt 1.13 with Python 3.6.1\nCommand line parameters: -f fastq -e 0.1 -q 20 -O 1 -a AGATCGGAAGAGC input_2.fastq.gz\nTrimming 1 adapter with at most 10.0% errors in single-end mode ...\nFinished in 0.91 s (18 us/read; 3.30 M reads/minute).\n\n=== Summary ===\n\nTotal reads processed:                  50,000\nReads with adapters:                    13,787 (27.6%)\nReads written (passing filters):        50,000 (100.0%)\n\nTotal basepairs processed:     2,550,000 bp\nQuality-trimmed:                 120,340 bp (4.7%)\nTotal written (filtered):      2,410,008 bp (94.5%)\n\n=== Adapter 1 ===\n\nSequence: AGATCGGAAGAGC; Type: regular 3'; Length: 13; Trimmed: 13787 times.\n\nNo. of allowed errors:\n0-9 bp: 0; 10-13 bp: 1\n\nBases preceding removed adapters:\n  A: 27.6%\n  C: 32.8%\n  G: 24.6%\n  T: 15.0%\n  none/other: 0.0%\n\nOverview of removed sequences\nlength\tcount\texpect\tmax.err\terror counts\n1\t9236\t12500.0\t0\t9236\n2\t3546\t3125.0\t0\t3546\n3\t827\t781.2\t0\t827\n4\t131\t195.3\t0\t131\n5\t36\t48.8\t0\t36\n6\t3\t12.2\t0\t3\n7\t2\t3.1\t0\t2\n9\t1\t0.2\t0\t0 1\n11\t2\t0.0\t1\t1 1\n15\t1\t0.0\t1\t1\n19\t1\t0.0\t1\t1\n42\t1\t0.0\t1\t0 1\n\n\nRUN STATISTICS FOR INPUT FILE: input_2.fastq.gz\n=============================================\n50000 sequences processed in total\nThe length threshold of paired-end sequences gets evaluated later on (in the validation step)\n\nValidate paired-end files input_1_trimmed.fq.gz and input_2_trimmed.fq.gz\nfile_1: input_1_trimmed.fq.gz, file_2: input_2_trimmed.fq.gz\n\n\n>>>>> Now validing the length of the 2 paired-end infiles: input_1_trimmed.fq.gz and input_2_trimmed.fq.gz <<<<<\nWriting validated paired-end read 1 reads to input_1_val_1.fq.gz\nWriting validated paired-end read 2 reads to input_2_val_2.fq.gz\n\nTotal number of sequences analysed: 50000\n\nNumber of sequence pairs removed because at least one read was shorter than the length cutoff (20 bp): 1639 (3.28%)\n\nDeleting both intermediate output files input_1_trimmed.fq.gz and input_2_trimmed.fq.gz\n\n====================================================================================================\n\n\ngzip: stdout: Broken pipe\n","tool_stdout":"1.13\n","traceback":null,"update_time":"2023-05-19T14:31:12.868610","user_email":"hxr@informatik.uni-freiburg.de"}],"model_class":"WorkflowInvocationStep","order_index":4,"output_collections":{},"outputs":{"trimmed_reads_pair1":{"id":"4838ba20a6d86765439b06bcf8677007","src":"hda","uuid":"64981dba-44f7-4768-8b63-e63defba2ecf"},"trimmed_reads_pair2":{"id":"4838ba20a6d867658f72f66dd1d7e6cc","src":"hda","uuid":"0764cea4-72ed-4a8c-93b2-88bd066afc4e"}},"state":"scheduled","subworkflow":null,"subworkflow_invocation_id":null,"update_time":"2023-05-19T14:31:12.847743","workflow_step_id":"0cdaaf28f2c92138","workflow_step_label":null,"workflow_step_uuid":"ba2566a8-447f-45ed-98d1-1fd1a5ba6ab4"},"5. Unnamed step":{"action":null,"id":"c06c2ed6eeedc161","job_id":"11ac94870d0bb33a0cd484c99b4bfb1e","jobs":[{"command_line":"die() { echo \"$@\" 1>&2 ; exit 1; } &&  mkdir multiqc_WDir &&   mkdir multiqc_WDir/fastqc_0 &&    mkdir 'multiqc_WDir/fastqc_0/data_0' &&  mkdir 'multiqc_WDir/fastqc_0/data_0/file_0' && ln -s '/data/dnb08/galaxy_db/files/0/a/0/dataset_0a0a3867-f5f7-4690-9776-09274436e562.dat' 'multiqc_WDir/fastqc_0/data_0/file_0/fastqc_data.txt' && mkdir 'multiqc_WDir/fastqc_0/data_0/file_1' && ln -s '/data/dnb08/galaxy_db/files/7/1/8/dataset_718a2f6a-6747-4754-a9da-60a98a6c5957.dat' 'multiqc_WDir/fastqc_0/data_0/file_1/fastqc_data.txt' &&  multiqc multiqc_WDir --filename \"report\"","command_version":null,"create_time":"2023-05-19T14:30:12.574335","dependencies":[],"exit_code":0,"external_id":"43534360","galaxy_version":"23.0","history_id":"2e96b0bf6abd6b74","id":"11ac94870d0bb33a0cd484c99b4bfb1e","inputs":{"results_0|software_cond|output_0|input":{"id":"4838ba20a6d8676577d1d2d4d95b125f","src":"hda","uuid":"0a0a3867-f5f7-4690-9776-09274436e562"},"results_0|software_cond|output_0|input1":{"id":"4838ba20a6d8676577d1d2d4d95b125f","src":"hda","uuid":"0a0a3867-f5f7-4690-9776-09274436e562"},"results_0|software_cond|output_0|input2":{"id":"4838ba20a6d86765100e931edbfb8029","src":"hda","uuid":"718a2f6a-6747-4754-a9da-60a98a6c5957"}},"job_messages":[],"job_metrics":[{"name":"hostname","plugin":"hostname","raw_value":"vgcnbwc-worker-c125m425-4973.novalocal","title":"hostname","value":"vgcnbwc-worker-c125m425-4973.novalocal"},{"name":"galaxy_slots","plugin":"core","raw_value":"1.0000000","title":"Cores Allocated","value":"1"},{"name":"galaxy_memory_mb","plugin":"core","raw_value":"11673.0000000","title":"Memory Allocated (MB)","value":"11673"},{"name":"start_epoch","plugin":"core","raw_value":"1684506732.0000000","title":"Job Start Time","value":"2023-05-19 16:32:12"},{"name":"end_epoch","plugin":"core","raw_value":"1684506804.0000000","title":"Job End Time","value":"2023-05-19 16:33:24"},{"name":"runtime_seconds","plugin":"core","raw_value":"72.0000000","title":"Job Runtime (Wall Clock)","value":"1 minute"},{"name":"cpuacct.usage","plugin":"cgroup","raw_value":"11111220478.0000000","title":"CPU Time","value":"11.111220478 seconds"},{"name":"memory.failcnt","plugin":"cgroup","raw_value":"0E-7","title":"Failed to allocate memory count","value":0.0},{"name":"memory.limit_in_bytes","plugin":"cgroup","raw_value":"21474836480.0000000","title":"Memory limit on cgroup (MEM)","value":"20.0 GB"},{"name":"memory.max_usage_in_bytes","plugin":"cgroup","raw_value":"246882304.0000000","title":"Max memory usage (MEM)","value":"235.4 MB"},{"name":"memory.memsw.limit_in_bytes","plugin":"cgroup","raw_value":"9223372036854771712.0000000","title":"Memory limit on cgroup (MEM+SWP)","value":"8.0 EB"},{"name":"memory.memsw.max_usage_in_bytes","plugin":"cgroup","raw_value":"246882304.0000000","title":"Max memory usage (MEM+SWP)","value":"235.4 MB"},{"name":"memory.oom_control.oom_kill_disable","plugin":"cgroup","raw_value":"1.0000000","title":"OOM Control enabled","value":"No"},{"name":"memory.oom_control.under_oom","plugin":"cgroup","raw_value":"0E-7","title":"Was OOM Killer active?","value":"No"},{"name":"memory.soft_limit_in_bytes","plugin":"cgroup","raw_value":"0E-7","title":"Memory softlimit on cgroup","value":"0 bytes"}],"job_stderr":"","job_stdout":"","model_class":"Job","output_collections":{"stats":{"id":"cfa32fe2043782fe","src":"hdca"}},"outputs":{"__new_primary_file_stats|fastqc__":{"id":"4838ba20a6d86765af3f1d3773b3e6e6","src":"hda","uuid":"3b7d0c75-6916-4fe8-b043-2f548a0b6178"},"__new_primary_file_stats|general_stats__":{"id":"4838ba20a6d86765eeebdf0f28fa6046","src":"hda","uuid":"25a75644-bd77-40a5-b740-fbc4cf4b2873"},"__new_primary_file_stats|sources__":{"id":"4838ba20a6d8676552f11ea459caefac","src":"hda","uuid":"707ab880-1526-47de-be63-f6466c1857ff"},"html_report":{"id":"4838ba20a6d86765ec54819e54cbe660","src":"hda","uuid":"a7901748-d8a1-40f0-a656-40796763ae98"}},"params":{"__input_ext":"\"txt\"","__workflow_invocation_uuid__":"\"9ef558e0f65111eda6f2001e67d2ec02\"","chromInfo":"\"/opt/galaxy/tool-data/shared/ucsc/chrom/?.len\"","comment":"\"\"","dbkey":"\"?\"","export":"false","flat":"false","results":"[{\"__index__\": 0, \"software_cond\": {\"__current_case__\": 8, \"output\": [{\"__index__\": 0, \"input\": {\"values\": [{\"id\": 137415695, \"src\": \"hda\"}, {\"id\": 137415693, \"src\": \"hda\"}]}, \"type\": \"data\"}], \"software\": \"fastqc\"}}]","saveLog":"false","title":"\"\""},"state":"ok","stderr":"[WARNING]         multiqc : MultiQC Version v1.14 now available!\n[INFO   ]         multiqc : This is MultiQC v1.9\n[INFO   ]         multiqc : Template    : default\n[INFO   ]         multiqc : Searching   : /data/jwd02f/main/060/058/60058037/working/multiqc_WDir\n[INFO   ]          fastqc : Found 2 reports\n[INFO   ]         multiqc : Compressing plot data\n[INFO   ]         multiqc : Report      : report.html\n[INFO   ]         multiqc : Data        : report_data\n[INFO   ]         multiqc : MultiQC complete\n","stdout":"","tool_id":"toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc/1.9","tool_stderr":"[WARNING]         multiqc : MultiQC Version v1.14 now available!\n[INFO   ]         multiqc : This is MultiQC v1.9\n[INFO   ]         multiqc : Template    : default\n[INFO   ]         multiqc : Searching   : /data/jwd02f/main/060/058/60058037/working/multiqc_WDir\n[INFO   ]          fastqc : Found 2 reports\n[INFO   ]         multiqc : Compressing plot data\n[INFO   ]         multiqc : Report      : report.html\n[INFO   ]         multiqc : Data        : report_data\n[INFO   ]         multiqc : MultiQC complete\n","tool_stdout":"","traceback":null,"update_time":"2023-05-19T14:33:25.724813","user_email":"hxr@informatik.uni-freiburg.de"}],"model_class":"WorkflowInvocationStep","order_index":5,"output_collections":{"stats":{"id":"cfa32fe2043782fe","src":"hdca"}},"outputs":{"html_report":{"id":"4838ba20a6d86765ec54819e54cbe660","src":"hda","uuid":"a7901748-d8a1-40f0-a656-40796763ae98"}},"state":"scheduled","subworkflow":null,"subworkflow_invocation_id":null,"update_time":"2023-05-19T14:33:25.705737","workflow_step_id":"076bed37af53db03","workflow_step_label":null,"workflow_step_uuid":"0f4492d6-2e63-466f-98e7-9f2921d4c039"},"6. Unnamed step":{"action":null,"id":"ac35c3e9e0f36f77","job_id":"11ac94870d0bb33a600088ef54ecdb6d","jobs":[{"command_line":"set -o | grep -q pipefail && set -o pipefail;   ln -f -s '/data/dnb08/galaxy_db/files/6/4/9/dataset_64981dba-44f7-4768-8b63-e63defba2ecf.dat' input_f.fastq.gz &&  ln -f -s '/data/dnb08/galaxy_db/files/0/7/6/dataset_0764cea4-72ed-4a8c-93b2-88bd066afc4e.dat' input_r.fastq.gz &&   bowtie2  -p ${GALAXY_SLOTS:-4}  -x '/data/db/reference_genomes/mm10/bowtie2_index/mm10'   -1 'input_f.fastq.gz' -2 'input_r.fastq.gz'                2> '/data/jwd02f/main/060/058/60058038/outputs/galaxy_dataset_b1360a80-c9bb-4fb9-ac3e-00aac0213e44.dat'  | samtools sort --no-PG -@${GALAXY_SLOTS:-2} -T \"${TMPDIR:-.}\" -O bam -o '/data/jwd02f/main/060/058/60058038/outputs/galaxy_dataset_014de858-c517-4e2a-a491-c14c99491b03.dat'","command_version":"/usr/local/tools/_conda/envs/mulled-v1-2c9d0d73d81f016cd458c97e185f638410841f3ecf7ae79158d90e0d58249513/bin/bowtie2-align-s version 2.4.2\n64-bit\nBuilt on default-bf91a638-95fa-4b77-97c5-abccd9855c3e\nMon Nov  2 17:36:36 UTC 2020\nCompiler: gcc version 7.5.0 (crosstool-NG 1.24.0.131_87df0e6_dirty) \nOptions: -O3 -msse2 -funroll-loops -g3 -fvisibility-inlines-hidden -std=c++17 -fmessage-length=0 -march=nocona -mtune=haswell -ftree-vectorize -fPIC -fstack-protector-strong -fno-plt -O2 -ffunction-sections -pipe -isystem /usr/local/tools/_conda/envs/mulled-v1-2c9d0d73d81f016cd458c97e185f638410841f3ecf7ae79158d90e0d58249513/include -fdebug-prefix-map=/opt/conda/conda-bld/bowtie2_1604337828546/work=/usr/local/src/conda/bowtie2-2.4.2 -fdebug-prefix-map=/usr/local/tools/_conda/envs/mulled-v1-2c9d0d73d81f016cd458c97e185f638410841f3ecf7ae79158d90e0d58249513=/usr/local/src/conda-prefix -DPOPCNT_CAPABILITY -DWITH_TBB -std=c++11 -DNO_SPINLOCK -DWITH_QUEUELOCK=1\nSizeof {int, long, long long, void*, size_t, off_t}: {4, 8, 8, 8, 8, 8}","create_time":"2023-05-19T14:30:12.695266","dependencies":[],"exit_code":0,"external_id":"43534339","galaxy_version":"23.0","history_id":"2e96b0bf6abd6b74","id":"11ac94870d0bb33a600088ef54ecdb6d","inputs":{"input_1":{"id":"4838ba20a6d86765439b06bcf8677007","src":"hda","uuid":"64981dba-44f7-4768-8b63-e63defba2ecf"},"input_2":{"id":"4838ba20a6d867658f72f66dd1d7e6cc","src":"hda","uuid":"0764cea4-72ed-4a8c-93b2-88bd066afc4e"}},"job_messages":[],"job_metrics":[{"name":"hostname","plugin":"hostname","raw_value":"vgcnbwc-worker-c125m425-4973.novalocal","title":"hostname","value":"vgcnbwc-worker-c125m425-4973.novalocal"},{"name":"galaxy_slots","plugin":"core","raw_value":"8.0000000","title":"Cores Allocated","value":"8"},{"name":"galaxy_memory_mb","plugin":"core","raw_value":"20480.0000000","title":"Memory Allocated (MB)","value":"20480"},{"name":"start_epoch","plugin":"core","raw_value":"1684506680.0000000","title":"Job Start Time","value":"2023-05-19 16:31:20"},{"name":"end_epoch","plugin":"core","raw_value":"1684506731.0000000","title":"Job End Time","value":"2023-05-19 16:32:11"},{"name":"runtime_seconds","plugin":"core","raw_value":"51.0000000","title":"Job Runtime (Wall Clock)","value":"51 seconds"},{"name":"cpuacct.usage","plugin":"cgroup","raw_value":"36889533091.0000000","title":"CPU Time","value":"36.889533091 seconds"},{"name":"memory.failcnt","plugin":"cgroup","raw_value":"0E-7","title":"Failed to allocate memory count","value":0.0},{"name":"memory.limit_in_bytes","plugin":"cgroup","raw_value":"21474836480.0000000","title":"Memory limit on cgroup (MEM)","value":"20.0 GB"},{"name":"memory.max_usage_in_bytes","plugin":"cgroup","raw_value":"6388858880.0000000","title":"Max memory usage (MEM)","value":"6.0 GB"},{"name":"memory.memsw.limit_in_bytes","plugin":"cgroup","raw_value":"9223372036854771712.0000000","title":"Memory limit on cgroup (MEM+SWP)","value":"8.0 EB"},{"name":"memory.memsw.max_usage_in_bytes","plugin":"cgroup","raw_value":"6388858880.0000000","title":"Max memory usage (MEM+SWP)","value":"6.0 GB"},{"name":"memory.oom_control.oom_kill_disable","plugin":"cgroup","raw_value":"1.0000000","title":"OOM Control enabled","value":"No"},{"name":"memory.oom_control.under_oom","plugin":"cgroup","raw_value":"0E-7","title":"Was OOM Killer active?","value":"No"},{"name":"memory.soft_limit_in_bytes","plugin":"cgroup","raw_value":"0E-7","title":"Memory softlimit on cgroup","value":"0 bytes"}],"job_stderr":"","job_stdout":"","model_class":"Job","output_collections":{},"outputs":{"mapping_stats":{"id":"4838ba20a6d867656446378f71ad820b","src":"hda","uuid":"b1360a80-c9bb-4fb9-ac3e-00aac0213e44"},"output":{"id":"4838ba20a6d86765af291d8ab2af5e96","src":"hda","uuid":"014de858-c517-4e2a-a491-c14c99491b03"}},"params":{"__input_ext":"\"input\"","__workflow_invocation_uuid__":"\"9ef558e0f65111eda6f2001e67d2ec02\"","analysis_type":"{\"__current_case__\": 0, \"analysis_type_selector\": \"simple\", \"presets\": \"no_presets\"}","chromInfo":"\"/opt/galaxy/tool-data/shared/ucsc/chrom/?.len\"","dbkey":"\"?\"","library":"{\"__current_case__\": 1, \"aligned_file\": false, \"input_1\": {\"values\": [{\"id\": 137415696, \"src\": \"hda\"}]}, \"input_2\": {\"values\": [{\"id\": 137415697, \"src\": \"hda\"}]}, \"paired_options\": {\"__current_case__\": 1, \"paired_options_selector\": \"no\"}, \"type\": \"paired\", \"unaligned_file\": false}","reference_genome":"{\"__current_case__\": 0, \"index\": \"mm10\", \"source\": \"indexed\"}","rg":"{\"__current_case__\": 3, \"rg_selector\": \"do_not_set\"}","sam_options":"{\"__current_case__\": 1, \"sam_options_selector\": \"no\"}","save_mapping_stats":"true"},"state":"ok","stderr":"[bam_sort_core] merging from 0 files and 8 in-memory blocks...\n","stdout":"","tool_id":"toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0","tool_stderr":"[bam_sort_core] merging from 0 files and 8 in-memory blocks...\n","tool_stdout":"","traceback":null,"update_time":"2023-05-19T14:32:13.080341","user_email":"hxr@informatik.uni-freiburg.de"}],"model_class":"WorkflowInvocationStep","order_index":6,"output_collections":{},"outputs":{"mapping_stats":{"id":"4838ba20a6d867656446378f71ad820b","src":"hda","uuid":"b1360a80-c9bb-4fb9-ac3e-00aac0213e44"},"output":{"id":"4838ba20a6d86765af291d8ab2af5e96","src":"hda","uuid":"014de858-c517-4e2a-a491-c14c99491b03"}},"state":"scheduled","subworkflow":null,"subworkflow_invocation_id":null,"update_time":"2023-05-19T14:32:13.062698","workflow_step_id":"de91ab1f4d5a7cd4","workflow_step_label":null,"workflow_step_uuid":"2d04b2e4-a2fe-4ce6-8894-5a752031171b"},"7. Unnamed step":{"action":null,"id":"83d212dd0df7f7f8","job_id":"11ac94870d0bb33a8145f91d85cf7ba7","jobs":[{"command_line":"samtools stats '/data/dnb08/galaxy_db/files/0/1/4/dataset_014de858-c517-4e2a-a491-c14c99491b03.dat' --coverage 1,1000,1    --GC-depth 20000.0 --insert-size 8000    --most-inserts 0.99 --trim-quality 0  --ref-seq '/data/db/reference_genomes/mm10/seq/mm10.fa' > '/data/jwd01/main/060/058/60058039/outputs/galaxy_dataset_9de6afbf-b266-439b-b405-215a8d1d90f4.dat'","command_version":"Version: 1.3.1 (using htslib 1.3.1)","create_time":"2023-05-19T14:30:12.801865","dependencies":[{"cacheable":false,"dependency_resolver":{"auto_init":true,"auto_install":false,"can_uninstall_dependencies":true,"ensure_channels":"conda-forge,bioconda","model_class":"CondaDependencyResolver","prefix":"/usr/local/tools/_conda","read_only":false,"resolver_type":"conda","resolves_simple_dependencies":true,"use_local":false,"versionless":false},"dependency_type":"conda","environment_path":"/usr/local/tools/_conda/envs/__samtools@1.3.1","exact":true,"model_class":"MergedCondaDependency","name":"samtools","version":"1.3.1"}],"exit_code":0,"external_id":"43534364","galaxy_version":"23.0","history_id":"2e96b0bf6abd6b74","id":"11ac94870d0bb33a8145f91d85cf7ba7","inputs":{"input_file":{"id":"4838ba20a6d86765af291d8ab2af5e96","src":"hda","uuid":"014de858-c517-4e2a-a491-c14c99491b03"}},"job_messages":[],"job_metrics":[{"name":"hostname","plugin":"hostname","raw_value":"vgcnbwc-worker-c28m475-1207.novalocal","title":"hostname","value":"vgcnbwc-worker-c28m475-1207.novalocal"},{"name":"galaxy_slots","plugin":"core","raw_value":"1.0000000","title":"Cores Allocated","value":"1"},{"name":"galaxy_memory_mb","plugin":"core","raw_value":"3891.0000000","title":"Memory Allocated (MB)","value":"3891"},{"name":"start_epoch","plugin":"core","raw_value":"1684506752.0000000","title":"Job Start Time","value":"2023-05-19 16:32:32"},{"name":"end_epoch","plugin":"core","raw_value":"1684506806.0000000","title":"Job End Time","value":"2023-05-19 16:33:26"},{"name":"runtime_seconds","plugin":"core","raw_value":"54.0000000","title":"Job Runtime (Wall Clock)","value":"54 seconds"},{"name":"cpuacct.usage","plugin":"cgroup","raw_value":"17841669661.0000000","title":"CPU Time","value":"17.841669661 seconds"},{"name":"memory.failcnt","plugin":"cgroup","raw_value":"0E-7","title":"Failed to allocate memory count","value":0.0},{"name":"memory.limit_in_bytes","plugin":"cgroup","raw_value":"4160749568.0000000","title":"Memory limit on cgroup (MEM)","value":"3.9 GB"},{"name":"memory.max_usage_in_bytes","plugin":"cgroup","raw_value":"1402118144.0000000","title":"Max memory usage (MEM)","value":"1.3 GB"},{"name":"memory.memsw.limit_in_bytes","plugin":"cgroup","raw_value":"9223372036854771712.0000000","title":"Memory limit on cgroup (MEM+SWP)","value":"8.0 EB"},{"name":"memory.memsw.max_usage_in_bytes","plugin":"cgroup","raw_value":"1402118144.0000000","title":"Max memory usage (MEM+SWP)","value":"1.3 GB"},{"name":"memory.oom_control.oom_kill_disable","plugin":"cgroup","raw_value":"1.0000000","title":"OOM Control enabled","value":"No"},{"name":"memory.oom_control.under_oom","plugin":"cgroup","raw_value":"0E-7","title":"Was OOM Killer active?","value":"No"},{"name":"memory.soft_limit_in_bytes","plugin":"cgroup","raw_value":"0E-7","title":"Memory softlimit on cgroup","value":"0 bytes"}],"job_stderr":"","job_stdout":"","model_class":"Job","output_collections":{},"outputs":{"output":{"id":"4838ba20a6d8676528f7337e9709f706","src":"hda","uuid":"9de6afbf-b266-439b-b405-215a8d1d90f4"}},"params":{"__input_ext":"\"bam\"","__workflow_invocation_uuid__":"\"9ef558e0f65111eda6f2001e67d2ec02\"","chromInfo":"\"/data/db/data_managers/mm10/len/mm10.len\"","coverage_max":"\"1000\"","coverage_min":"\"1\"","coverage_step":"\"1\"","dbkey":"\"mm10\"","filter_by_flags":"{\"__current_case__\": 1, \"filter_flags\": \"nofilter\"}","gc_depth":"\"20000.0\"","insert_size":"\"8000\"","most_inserts":"\"0.99\"","read_length":null,"remove_dups":"false","split_output":"{\"__current_case__\": 0, \"split_output_selector\": \"no\"}","trim_quality":"\"0\"","use_reference":"{\"__current_case__\": 0, \"reference_source\": {\"__current_case__\": 0, \"ref_file\": \"mm10full\", \"reference_source_selector\": \"cached\"}, \"use_ref_selector\": \"yes\"}"},"state":"ok","stderr":"","stdout":"","tool_id":"toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.1","tool_stderr":"","tool_stdout":"","traceback":null,"update_time":"2023-05-19T14:33:37.050310","user_email":"hxr@informatik.uni-freiburg.de"}],"model_class":"WorkflowInvocationStep","order_index":7,"output_collections":{},"outputs":{"output":{"id":"4838ba20a6d8676528f7337e9709f706","src":"hda","uuid":"9de6afbf-b266-439b-b405-215a8d1d90f4"}},"state":"scheduled","subworkflow":null,"subworkflow_invocation_id":null,"update_time":"2023-05-19T14:33:36.956022","workflow_step_id":"74a208880456b021","workflow_step_label":null,"workflow_step_uuid":"898dd71d-9b58-4286-a6ae-5403cb284341"},"8. Unnamed step":{"action":null,"id":"53b676dcfcf6d669","job_id":"11ac94870d0bb33a4dcd57b031359dae","jobs":[{"command_line":"cp '/data/jwd05e/main/060/058/60058040/configs/tmpr1btgj1_' '/data/jwd05e/main/060/058/60058040/outputs/galaxy_dataset_b3362212-c40a-470a-b0e0-89a4c7bc6d26.dat' && ln -s '/data/dnb08/galaxy_db/files/0/1/4/dataset_014de858-c517-4e2a-a491-c14c99491b03.dat' localbam.bam && ln -s '/data/dnb08/galaxy_db/files/_metadata_files/3/b/6/metadata_3b6f911b-633e-41e4-a35b-86b3615b2257.dat' localbam.bam.bai && cat '/data/jwd05e/main/060/058/60058040/configs/tmpr1btgj1_' && bamtools filter -script '/data/jwd05e/main/060/058/60058040/configs/tmpr1btgj1_' -in localbam.bam -out '/data/jwd05e/main/060/058/60058040/outputs/galaxy_dataset_11b4a85c-d4af-4e9d-9890-63e2517ff346.dat'","command_version":null,"create_time":"2023-05-19T14:30:12.913255","dependencies":[],"exit_code":0,"external_id":"43534362","galaxy_version":"23.0","history_id":"2e96b0bf6abd6b74","id":"11ac94870d0bb33a4dcd57b031359dae","inputs":{"input_bam":{"id":"4838ba20a6d86765af291d8ab2af5e96","src":"hda","uuid":"014de858-c517-4e2a-a491-c14c99491b03"}},"job_messages":[],"job_metrics":[{"name":"hostname","plugin":"hostname","raw_value":"vgcnbwc-worker-c36m225-7327.novalocal","title":"hostname","value":"vgcnbwc-worker-c36m225-7327.novalocal"},{"name":"galaxy_slots","plugin":"core","raw_value":"1.0000000","title":"Cores Allocated","value":"1"},{"name":"galaxy_memory_mb","plugin":"core","raw_value":"3891.0000000","title":"Memory Allocated (MB)","value":"3891"},{"name":"start_epoch","plugin":"core","raw_value":"1684506749.0000000","title":"Job Start Time","value":"2023-05-19 16:32:29"},{"name":"end_epoch","plugin":"core","raw_value":"1684506773.0000000","title":"Job End Time","value":"2023-05-19 16:32:53"},{"name":"runtime_seconds","plugin":"core","raw_value":"24.0000000","title":"Job Runtime (Wall Clock)","value":"24 seconds"},{"name":"cpuacct.usage","plugin":"cgroup","raw_value":"13735913869.0000000","title":"CPU Time","value":"13.735913869 seconds"},{"name":"memory.failcnt","plugin":"cgroup","raw_value":"0E-7","title":"Failed to allocate memory count","value":0.0},{"name":"memory.limit_in_bytes","plugin":"cgroup","raw_value":"4160749568.0000000","title":"Memory limit on cgroup (MEM)","value":"3.9 GB"},{"name":"memory.max_usage_in_bytes","plugin":"cgroup","raw_value":"218013696.0000000","title":"Max memory usage (MEM)","value":"207.9 MB"},{"name":"memory.memsw.limit_in_bytes","plugin":"cgroup","raw_value":"9223372036854771712.0000000","title":"Memory limit on cgroup (MEM+SWP)","value":"8.0 EB"},{"name":"memory.memsw.max_usage_in_bytes","plugin":"cgroup","raw_value":"218013696.0000000","title":"Max memory usage (MEM+SWP)","value":"207.9 MB"},{"name":"memory.oom_control.oom_kill_disable","plugin":"cgroup","raw_value":"1.0000000","title":"OOM Control enabled","value":"No"},{"name":"memory.oom_control.under_oom","plugin":"cgroup","raw_value":"0E-7","title":"Was OOM Killer active?","value":"No"},{"name":"memory.soft_limit_in_bytes","plugin":"cgroup","raw_value":"0E-7","title":"Memory softlimit on cgroup","value":"0 bytes"}],"job_stderr":"","job_stdout":"","model_class":"Job","output_collections":{},"outputs":{"out_file1":{"id":"4838ba20a6d8676586fc63a32e96cd1a","src":"hda","uuid":"11b4a85c-d4af-4e9d-9890-63e2517ff346"},"out_file2":{"id":"4838ba20a6d86765332d056e72acf04a","src":"hda","uuid":"b3362212-c40a-470a-b0e0-89a4c7bc6d26"}},"params":{"__input_ext":"\"bam\"","__workflow_invocation_uuid__":"\"9ef558e0f65111eda6f2001e67d2ec02\"","chromInfo":"\"/data/db/data_managers/mm10/len/mm10.len\"","conditions":"[{\"__index__\": 0, \"filters\": [{\"__index__\": 0, \"bam_property\": {\"__current_case__\": 14, \"bam_property_selector\": \"mapQuality\", \"bam_property_value\": \">=20\"}}]}]","dbkey":"\"mm10\"","rule_configuration":"{\"__current_case__\": 0, \"rules_selector\": false}"},"state":"ok","stderr":"","stdout":"\n\n\n        \n{\n    \"filters\": [\n        {\n            \"id\": \"1\",\n            \"mapQuality\": \">=20\"\n        }\n    ]\n}\n\n        ","tool_id":"toolshed.g2.bx.psu.edu/repos/devteam/bamtools_filter/bamFilter/2.4.1","tool_stderr":"","tool_stdout":"\n\n\n        \n{\n    \"filters\": [\n        {\n            \"id\": \"1\",\n            \"mapQuality\": \">=20\"\n        }\n    ]\n}\n\n        ","traceback":null,"update_time":"2023-05-19T14:32:55.076647","user_email":"hxr@informatik.uni-freiburg.de"}],"model_class":"WorkflowInvocationStep","order_index":8,"output_collections":{},"outputs":{"out_file1":{"id":"4838ba20a6d8676586fc63a32e96cd1a","src":"hda","uuid":"11b4a85c-d4af-4e9d-9890-63e2517ff346"},"out_file2":{"id":"4838ba20a6d86765332d056e72acf04a","src":"hda","uuid":"b3362212-c40a-470a-b0e0-89a4c7bc6d26"}},"state":"scheduled","subworkflow":null,"subworkflow_invocation_id":null,"update_time":"2023-05-19T14:32:55.059256","workflow_step_id":"4964c8b8ced0b316","workflow_step_label":null,"workflow_step_uuid":"9fca8663-299c-4a3e-9d21-c3f5b89936c9"},"9. Unnamed step":{"action":null,"id":"d10aa175eaaa29cb","job_id":"11ac94870d0bb33a4d625b480e3a88e5","jobs":[{"command_line":"samtools stats '/data/dnb08/galaxy_db/files/1/1/b/dataset_11b4a85c-d4af-4e9d-9890-63e2517ff346.dat' --coverage 1,1000,1    --GC-depth 20000.0 --insert-size 8000    --most-inserts 0.99 --trim-quality 0  --ref-seq '/data/db/reference_genomes/mm10/seq/mm10.fa' > '/data/jwd05e/main/060/058/60058041/outputs/galaxy_dataset_94cccd62-deee-4ce5-8952-739603b253f7.dat'","command_version":"Version: 1.3.1 (using htslib 1.3.1)","create_time":"2023-05-19T14:30:13.010837","dependencies":[],"exit_code":0,"external_id":"43534369","galaxy_version":"23.0","history_id":"2e96b0bf6abd6b74","id":"11ac94870d0bb33a4d625b480e3a88e5","inputs":{"input_file":{"id":"4838ba20a6d8676586fc63a32e96cd1a","src":"hda","uuid":"11b4a85c-d4af-4e9d-9890-63e2517ff346"}},"job_messages":[],"job_metrics":[{"name":"hostname","plugin":"hostname","raw_value":"vgcnbwc-worker-c28m475-1207.novalocal","title":"hostname","value":"vgcnbwc-worker-c28m475-1207.novalocal"},{"name":"galaxy_slots","plugin":"core","raw_value":"1.0000000","title":"Cores Allocated","value":"1"},{"name":"galaxy_memory_mb","plugin":"core","raw_value":"3891.0000000","title":"Memory Allocated (MB)","value":"3891"},{"name":"start_epoch","plugin":"core","raw_value":"1684506791.0000000","title":"Job Start Time","value":"2023-05-19 16:33:11"},{"name":"end_epoch","plugin":"core","raw_value":"1684506812.0000000","title":"Job End Time","value":"2023-05-19 16:33:32"},{"name":"runtime_seconds","plugin":"core","raw_value":"21.0000000","title":"Job Runtime (Wall Clock)","value":"21 seconds"},{"name":"cpuacct.usage","plugin":"cgroup","raw_value":"16061028698.0000000","title":"CPU Time","value":"16.061028698 seconds"},{"name":"memory.failcnt","plugin":"cgroup","raw_value":"0E-7","title":"Failed to allocate memory count","value":0.0},{"name":"memory.limit_in_bytes","plugin":"cgroup","raw_value":"4160749568.0000000","title":"Memory limit on cgroup (MEM)","value":"3.9 GB"},{"name":"memory.max_usage_in_bytes","plugin":"cgroup","raw_value":"199102464.0000000","title":"Max memory usage (MEM)","value":"189.9 MB"},{"name":"memory.memsw.limit_in_bytes","plugin":"cgroup","raw_value":"9223372036854771712.0000000","title":"Memory limit on cgroup (MEM+SWP)","value":"8.0 EB"},{"name":"memory.memsw.max_usage_in_bytes","plugin":"cgroup","raw_value":"199102464.0000000","title":"Max memory usage (MEM+SWP)","value":"189.9 MB"},{"name":"memory.oom_control.oom_kill_disable","plugin":"cgroup","raw_value":"1.0000000","title":"OOM Control enabled","value":"No"},{"name":"memory.oom_control.under_oom","plugin":"cgroup","raw_value":"0E-7","title":"Was OOM Killer active?","value":"No"},{"name":"memory.soft_limit_in_bytes","plugin":"cgroup","raw_value":"0E-7","title":"Memory softlimit on cgroup","value":"0 bytes"}],"job_stderr":"","job_stdout":"","model_class":"Job","output_collections":{},"outputs":{"output":{"id":"4838ba20a6d86765c665b3763e979c0a","src":"hda","uuid":"94cccd62-deee-4ce5-8952-739603b253f7"}},"params":{"__input_ext":"\"bam\"","__workflow_invocation_uuid__":"\"9ef558e0f65111eda6f2001e67d2ec02\"","chromInfo":"\"/data/db/data_managers/mm10/len/mm10.len\"","coverage_max":"\"1000\"","coverage_min":"\"1\"","coverage_step":"\"1\"","dbkey":"\"mm10\"","filter_by_flags":"{\"__current_case__\": 1, \"filter_flags\": \"nofilter\"}","gc_depth":"\"20000.0\"","insert_size":"\"8000\"","most_inserts":"\"0.99\"","read_length":null,"remove_dups":"false","split_output":"{\"__current_case__\": 0, \"split_output_selector\": \"no\"}","trim_quality":"\"0\"","use_reference":"{\"__current_case__\": 0, \"reference_source\": {\"__current_case__\": 0, \"ref_file\": \"mm10full\", \"reference_source_selector\": \"cached\"}, \"use_ref_selector\": \"yes\"}"},"state":"ok","stderr":"","stdout":"","tool_id":"toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.1","tool_stderr":"","tool_stdout":"","traceback":null,"update_time":"2023-05-19T14:33:32.811917","user_email":"hxr@informatik.uni-freiburg.de"}],"model_class":"WorkflowInvocationStep","order_index":9,"output_collections":{},"outputs":{"output":{"id":"4838ba20a6d86765c665b3763e979c0a","src":"hda","uuid":"94cccd62-deee-4ce5-8952-739603b253f7"}},"state":"scheduled","subworkflow":null,"subworkflow_invocation_id":null,"update_time":"2023-05-19T14:33:32.796651","workflow_step_id":"d00ffb828650fb93","workflow_step_label":null,"workflow_step_uuid":"cb1e8297-24f1-4553-8111-1a2a48bfc12a"}}},"problem_log":"No log for this engine type.","start_datetime":"2023-05-19T16:26:39.476426","status":"success"},"doc":"Test sample data for Sequence analysis:Mapping","has_data":true,"id":"mapping.ga_0","test_type":"galaxy_workflow"}],"version":"0.1"}},"modified":"2024-06-24 07:44:29 +0000","mermaid":"flowchart TD\n  0[\"ℹ️ Input Dataset\\nreads_1\"];\n  style 0 stroke:#2c3143,stroke-width:4px;\n  1[\"ℹ️ Input Dataset\\nreads_2\"];\n  style 1 stroke:#2c3143,stroke-width:4px;\n  2[\"FastQC\"];\n  0 -->|output| 2;\n  3[\"FastQC\"];\n  1 -->|output| 3;\n  4[\"Trim Galore!\"];\n  0 -->|output| 4;\n  1 -->|output| 4;\n  5[\"MultiQC\"];\n  3 -->|text_file| 5;\n  2 -->|text_file| 5;\n  6[\"Bowtie2\"];\n  4 -->|trimmed_reads_pair1| 6;\n  4 -->|trimmed_reads_pair2| 6;\n  d2674912-28a6-45f3-ac48-6635eabe47b7[\"Output\\nbowtie2_mapping_stats\"];\n  6 --> d2674912-28a6-45f3-ac48-6635eabe47b7;\n  style d2674912-28a6-45f3-ac48-6635eabe47b7 stroke:#2c3143,stroke-width:4px;\n  7[\"Stats\"];\n  6 -->|output| 7;\n  96de3c0c-4d7e-423b-8e9b-9a12a011d726[\"Output\\nbam_stats_1\"];\n  7 --> 96de3c0c-4d7e-423b-8e9b-9a12a011d726;\n  style 96de3c0c-4d7e-423b-8e9b-9a12a011d726 stroke:#2c3143,stroke-width:4px;\n  8[\"Filter\"];\n  6 -->|output| 8;\n  9[\"Stats\"];\n  8 -->|out_file1| 9;\n  9603a94a-dcd8-4c1f-89cd-bb31d8572783[\"Output\\nbam_stats_2\"];\n  9 --> 9603a94a-dcd8-4c1f-89cd-bb31d8572783;\n  style 9603a94a-dcd8-4c1f-89cd-bb31d8572783 stroke:#2c3143,stroke-width:4px;"}],"api":"https://training.galaxyproject.org/training-material/api/topics/sequence-analysis/tutorials/mapping/tutorial.json","tools":["toolshed.g2.bx.psu.edu/repos/bgruening/trim_galore/trim_galore/0.4.3.1","toolshed.g2.bx.psu.edu/repos/devteam/bamtools_filter/bamFilter/2.4.1","toolshed.g2.bx.psu.edu/repos/devteam/bamtools_filter/bamFilter/2.5.2+galaxy2","toolshed.g2.bx.psu.edu/repos/devteam/bowtie2/bowtie2/2.4.2+galaxy0","toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.72+galaxy1","toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.1","toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.2+galaxy2","toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.5","toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse/1.16.1+galaxy0","toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse/1.16.11+galaxy0","toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc/1.9","toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc/1.9+galaxy1"],"supported_servers":{"exact":[{"url":"https://usegalaxy.eu","name":"UseGalaxy.eu","usegalaxy":true},{"url":"https://usegalaxy.org","name":"UseGalaxy.org (Main)","usegalaxy":true},{"url":"https://usegalaxy.org.au","name":"UseGalaxy.org.au","usegalaxy":true}],"inexact":[{"url":"https://galaxy.mesocentre.uca.fr","name":"Galaxy@AuBi","usegalaxy":false},{"url":"https://galaxytrakr.org/","name":"GalaxyTrakr","usegalaxy":false},{"url":"https://usegalaxy.cz/","name":"UseGalaxy.cz","usegalaxy":false},{"url":"https://usegalaxy.fr/","name":"UseGalaxy.fr","usegalaxy":false},{"url":"https://usegalaxy.no/","name":"UseGalaxy.no","usegalaxy":false}]},"topic_name_human":"Sequence analysis","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[{"name":"trim_galore","owner":"bgruening","revisions":"949f01671246","tool_panel_section_label":"FASTA/FASTQ","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"bamtools_filter","owner":"devteam","revisions":"cb20f99fd45b","tool_panel_section_label":"SAM/BAM","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"bamtools_filter","owner":"devteam","revisions":"993b19f20c76","tool_panel_section_label":"SAM/BAM","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"bowtie2","owner":"devteam","revisions":"a6d65b0c67af","tool_panel_section_label":"Mapping","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"fastqc","owner":"devteam","revisions":"e7b2202befea","tool_panel_section_label":"FASTA/FASTQ","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"samtools_stats","owner":"devteam","revisions":"24c5d43cb545","tool_panel_section_label":"SAM/BAM","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"samtools_stats","owner":"devteam","revisions":"145f6d74ff5e","tool_panel_section_label":"SAM/BAM","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"samtools_stats","owner":"devteam","revisions":"fed4aa48ba09","tool_panel_section_label":"SAM/BAM","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"jbrowse","owner":"iuc","revisions":"1cfc579079a6","tool_panel_section_label":"Graph/Display Data","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"jbrowse","owner":"iuc","revisions":"4542035c1075","tool_panel_section_label":"Graph/Display Data","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"multiqc","owner":"iuc","revisions":"c1a4b5f3b432","tool_panel_section_label":"Quality Control","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"multiqc","owner":"iuc","revisions":"75c93c70d094","tool_panel_section_label":"Quality Control","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"}]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools:\n- name: trim_galore\n  owner: bgruening\n  revisions: 949f01671246\n  tool_panel_section_label: FASTA/FASTQ\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: bamtools_filter\n  owner: devteam\n  revisions: cb20f99fd45b\n  tool_panel_section_label: SAM/BAM\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: bamtools_filter\n  owner: devteam\n  revisions: 993b19f20c76\n  tool_panel_section_label: SAM/BAM\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: bowtie2\n  owner: devteam\n  revisions: a6d65b0c67af\n  tool_panel_section_label: Mapping\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: fastqc\n  owner: devteam\n  revisions: e7b2202befea\n  tool_panel_section_label: FASTA/FASTQ\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: samtools_stats\n  owner: devteam\n  revisions: 24c5d43cb545\n  tool_panel_section_label: SAM/BAM\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: samtools_stats\n  owner: devteam\n  revisions: 145f6d74ff5e\n  tool_panel_section_label: SAM/BAM\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: samtools_stats\n  owner: devteam\n  revisions: fed4aa48ba09\n  tool_panel_section_label: SAM/BAM\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: jbrowse\n  owner: iuc\n  revisions: 1cfc579079a6\n  tool_panel_section_label: Graph/Display Data\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: jbrowse\n  owner: iuc\n  revisions: 4542035c1075\n  tool_panel_section_label: Graph/Display Data\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: multiqc\n  owner: iuc\n  revisions: c1a4b5f3b432\n  tool_panel_section_label: Quality Control\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: multiqc\n  owner: iuc\n  revisions: 75c93c70d094\n  tool_panel_section_label: Quality Control\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n","tours":false,"video":false,"slides_recordings":[{"captioners":["blankenberg"],"date":"2021-02-15","galaxy_version":"21.01","length":"10M","youtube_id":"7FhHb8EV3EU","speakers":["pvanheus"]}],"translations":{"tutorial":[],"slides":[],"video":false},"license":"CC-BY-4.0","type":"tutorial","logo":"GTN","redirect_from":["/short/sequence-analysis/mapping/slides","/short/S00081"]}