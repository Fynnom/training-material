{"layout":"tutorial_slides","title":"Galaxy Webhooks","questions":["What are Galaxy Webhooks?","How to create them?"],"objectives":["Discover what Galaxy Webhooks are","Be able to create Webhooks","Be able to add a Galaxy Webhook in a Galaxy instance"],"time_estimation":"1h","key_points":["A Galaxy Webhook provides an easy way to customize the Galaxy UI with plugins","Right now there are 4 entry points: tool, workflow, masthead, history-menu","With a minimal amount of code you can extend Galaxy's user-interace."],"contributors":["blankclemens","martenson","bgruening"],"subtopic":"advanced","js_requirements":{"mathjax":null,"mermaid":false},"short_id":"S00055","url":"/topics/dev/tutorials/webhooks/slides.html","topic_name":"dev","tutorial_name":"webhooks","dir":"topics/dev/tutorials/webhooks","symlink":null,"id":"dev/webhooks","ref_tutorials":["<p>In this tutorial we are going to demonstrate how to add a webhook to the tool-execution endpoint. This is the web-page that appears\nafter you have executed a tool. As a more useful example we are going to ask <a href=\"http://phdcomics.com\">phdcomics</a> for a random comic that we can\ndisplay to entertain our users.</p>\n\n<p>At first letâ€™s create a config file that defines the name and the type of your webhook. The <code class=\"language-plaintext highlighter-rouge\">name</code> is <code class=\"language-plaintext highlighter-rouge\">phdcomics</code> and with the type we define the entry-points\nat which we modify the Galaxy user-interface. In our case we want to display an image at the <code class=\"language-plaintext highlighter-rouge\">tool</code> and <code class=\"language-plaintext highlighter-rouge\">workflow</code> entry-point.\nThe key <code class=\"language-plaintext highlighter-rouge\">activate</code> gives you control per-webhook to activate or deactivate it.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title></hands-on-title>\n\n  <ol>\n    <li>\n      <p>Create a file named <code class=\"language-plaintext highlighter-rouge\">config/phdcomics.yaml</code> with the following content:</p>\n\n      <div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>   <span class=\"na\">name</span><span class=\"pi\">:</span> <span class=\"s\">phdcomics</span>\n   <span class=\"na\">type</span><span class=\"pi\">:</span>\n     <span class=\"pi\">-</span> <span class=\"s\">tool</span>\n     <span class=\"pi\">-</span> <span class=\"s\">workflow</span>\n   <span class=\"na\">activate</span><span class=\"pi\">:</span> <span class=\"kc\">true</span>\n</code></pre></div>      </div>\n    </li>\n  </ol>\n</blockquote>\n\n<p>The next step is to define HTML/JS part which will control the part of the Galaxy UI. We create a new PHDComicsAppView view extended from Backbone.\nInside this view we define a simple <code class=\"language-plaintext highlighter-rouge\">div</code>-container with a button and a placeholder for our image called <code class=\"language-plaintext highlighter-rouge\">phdcomics-img</code>. You can add additional\nfunctionality to your view, for example getting a new image on button click. The essential functionality however is stored getRandomComic.\nThe big problem with phdcomics is that there is no nice API to retrive the comics, so we need to fallback to parse the HTML pages. We decided to do this\nin Python to demonstrate webhooks abilitity to call self-defined python functions. Please note the <code class=\"language-plaintext highlighter-rouge\">url = galaxyRoot + 'api/webhooks/phdcomics/get_data';</code>, which\ncalls an REST endpoint defined by use in the next step. The return value of this endpoint is retrived in JS and can be displayed or modified.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title></hands-on-title>\n\n  <ol>\n    <li>\n      <p>Create a file named <code class=\"language-plaintext highlighter-rouge\">static/script.js</code> with the following content:</p>\n\n      <div class=\"language-js highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    <span class=\"nf\">$</span><span class=\"p\">(</span><span class=\"nb\">document</span><span class=\"p\">).</span><span class=\"nf\">ready</span><span class=\"p\">(</span><span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n\n        <span class=\"kd\">var</span> <span class=\"nx\">galaxyRoot</span> <span class=\"o\">=</span> <span class=\"k\">typeof</span> <span class=\"nx\">Galaxy</span> <span class=\"o\">!=</span> <span class=\"dl\">'</span><span class=\"s1\">undefined</span><span class=\"dl\">'</span> <span class=\"p\">?</span> <span class=\"nx\">Galaxy</span><span class=\"p\">.</span><span class=\"nx\">root</span> <span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">/</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n\n        <span class=\"kd\">var</span> <span class=\"nx\">PHDComicsAppView</span> <span class=\"o\">=</span> <span class=\"nx\">Backbone</span><span class=\"p\">.</span><span class=\"nx\">View</span><span class=\"p\">.</span><span class=\"nf\">extend</span><span class=\"p\">({</span>\n            <span class=\"na\">el</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">#phdcomics</span><span class=\"dl\">'</span><span class=\"p\">,</span>\n\n            <span class=\"na\">appTemplate</span><span class=\"p\">:</span> <span class=\"nx\">_</span><span class=\"p\">.</span><span class=\"nf\">template</span><span class=\"p\">(</span>\n                <span class=\"dl\">'</span><span class=\"s1\">&lt;div id=\"phdcomics-header\"&gt;</span><span class=\"dl\">'</span> <span class=\"o\">+</span>\n                   <span class=\"dl\">'</span><span class=\"s1\">&lt;div id=\"phdcomics-name\"&gt;PHD Comics&lt;/div&gt;</span><span class=\"dl\">'</span> <span class=\"o\">+</span>\n                    <span class=\"dl\">'</span><span class=\"s1\">&lt;button id=\"phdcomics-random\"&gt;Random&lt;/button&gt;</span><span class=\"dl\">'</span> <span class=\"o\">+</span>\n                <span class=\"dl\">'</span><span class=\"s1\">&lt;/div&gt;</span><span class=\"dl\">'</span> <span class=\"o\">+</span>\n                <span class=\"dl\">'</span><span class=\"s1\">&lt;div id=\"phdcomics-img\"&gt;&lt;/div&gt;</span><span class=\"dl\">'</span>\n            <span class=\"p\">),</span>\n\n            <span class=\"na\">imgTemplate</span><span class=\"p\">:</span> <span class=\"nx\">_</span><span class=\"p\">.</span><span class=\"nf\">template</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">&lt;img src=\"&lt;%= src %&gt;\"\"&gt;</span><span class=\"dl\">'</span><span class=\"p\">),</span>\n\n            <span class=\"na\">events</span><span class=\"p\">:</span> <span class=\"p\">{</span>\n                <span class=\"dl\">'</span><span class=\"s1\">click #phdcomics-random</span><span class=\"dl\">'</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">getRandomComic</span><span class=\"dl\">'</span>\n            <span class=\"p\">},</span>\n\n            <span class=\"na\">initialize</span><span class=\"p\">:</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n                <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">render</span><span class=\"p\">();</span>\n            <span class=\"p\">},</span>\n\n            <span class=\"na\">render</span><span class=\"p\">:</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n                <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">$el</span><span class=\"p\">.</span><span class=\"nf\">html</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">appTemplate</span><span class=\"p\">());</span>\n                <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">$comicImg</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">#phdcomics-img</span><span class=\"dl\">'</span><span class=\"p\">);</span>\n                <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">getRandomComic</span><span class=\"p\">();</span>\n                <span class=\"k\">return</span> <span class=\"k\">this</span><span class=\"p\">;</span>\n            <span class=\"p\">},</span>\n\n            <span class=\"na\">getRandomComic</span><span class=\"p\">:</span> <span class=\"kd\">function</span><span class=\"p\">()</span> <span class=\"p\">{</span>\n                <span class=\"kd\">var</span> <span class=\"nx\">me</span> <span class=\"o\">=</span> <span class=\"k\">this</span><span class=\"p\">,</span>\n                    <span class=\"nx\">url</span> <span class=\"o\">=</span> <span class=\"nx\">galaxyRoot</span> <span class=\"o\">+</span> <span class=\"dl\">'</span><span class=\"s1\">api/webhooks/phdcomics/get_data</span><span class=\"dl\">'</span><span class=\"p\">;</span>\n\n                <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">$comicImg</span><span class=\"p\">.</span><span class=\"nf\">html</span><span class=\"p\">(</span><span class=\"nf\">$</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">&lt;div/&gt;</span><span class=\"dl\">'</span><span class=\"p\">,</span> <span class=\"p\">{</span>\n                    <span class=\"na\">id</span><span class=\"p\">:</span> <span class=\"dl\">'</span><span class=\"s1\">phdcomics-loader</span><span class=\"dl\">'</span>\n                <span class=\"p\">}));</span>\n\n                <span class=\"nx\">$</span><span class=\"p\">.</span><span class=\"nf\">getJSON</span><span class=\"p\">(</span><span class=\"nx\">url</span><span class=\"p\">,</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                    <span class=\"k\">if </span><span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">success</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                        <span class=\"nx\">me</span><span class=\"p\">.</span><span class=\"nf\">renderImg</span><span class=\"p\">(</span><span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">src</span><span class=\"p\">);</span>\n                    <span class=\"p\">}</span> <span class=\"k\">else</span> <span class=\"p\">{</span>\n                        <span class=\"nx\">console</span><span class=\"p\">.</span><span class=\"nf\">error</span><span class=\"p\">(</span><span class=\"dl\">'</span><span class=\"s1\">[ERROR] \"</span><span class=\"dl\">'</span> <span class=\"o\">+</span> <span class=\"nx\">url</span> <span class=\"o\">+</span> <span class=\"dl\">'</span><span class=\"s1\">\":</span><span class=\"se\">\\n</span><span class=\"dl\">'</span> <span class=\"o\">+</span> <span class=\"nx\">data</span><span class=\"p\">.</span><span class=\"nx\">error</span><span class=\"p\">);</span>\n                    <span class=\"p\">}</span>\n                <span class=\"p\">});</span>\n            <span class=\"p\">},</span>\n\n            <span class=\"na\">renderImg</span><span class=\"p\">:</span> <span class=\"kd\">function</span><span class=\"p\">(</span><span class=\"nx\">src</span><span class=\"p\">)</span> <span class=\"p\">{</span>\n                <span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nx\">$comicImg</span><span class=\"p\">.</span><span class=\"nf\">html</span><span class=\"p\">(</span><span class=\"k\">this</span><span class=\"p\">.</span><span class=\"nf\">imgTemplate</span><span class=\"p\">({</span><span class=\"na\">src</span><span class=\"p\">:</span> <span class=\"nx\">src</span><span class=\"p\">}));</span>\n            <span class=\"p\">}</span>\n        <span class=\"p\">});</span>\n\n        <span class=\"k\">new</span> <span class=\"nc\">PHDComicsAppView</span><span class=\"p\">();</span>\n    <span class=\"p\">});</span>\n</code></pre></div>      </div>\n    </li>\n  </ol>\n</blockquote>\n\n<p>The following hands-on will define an API endpoint that is called from the JS code of your webhook.\nMake sure you name the python function <code class=\"language-plaintext highlighter-rouge\">main</code> and that all third-party requirements are installed in your Galaxy virtual environment.\nPlease note that the <code class=\"language-plaintext highlighter-rouge\">main()</code> can consume <code class=\"language-plaintext highlighter-rouge\">params</code> from your client but also the Galaxy <code class=\"language-plaintext highlighter-rouge\">trans</code> object, which will give you access to the\nentire user-object, including histories and datasets.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title></hands-on-title>\n\n  <ol>\n    <li>\n      <p>Create a file named <code class=\"language-plaintext highlighter-rouge\">helper/__init__.py</code> with the following content:</p>\n\n      <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">import</span> <span class=\"n\">urllib</span>\n<span class=\"kn\">import</span> <span class=\"n\">re</span>\n<span class=\"kn\">import</span> <span class=\"n\">random</span>\n<span class=\"kn\">import</span> <span class=\"n\">logging</span>\n\n<span class=\"n\">log</span> <span class=\"o\">=</span> <span class=\"n\">logging</span><span class=\"p\">.</span><span class=\"nf\">getLogger</span><span class=\"p\">(</span><span class=\"n\">__name__</span><span class=\"p\">)</span>\n\n\n<span class=\"k\">def</span> <span class=\"nf\">main</span><span class=\"p\">(</span><span class=\"n\">trans</span><span class=\"p\">,</span> <span class=\"n\">webhook</span><span class=\"p\">,</span> <span class=\"n\">params</span><span class=\"p\">):</span>\n    <span class=\"n\">error</span> <span class=\"o\">=</span> <span class=\"sh\">''</span>\n    <span class=\"n\">comic_src</span> <span class=\"o\">=</span> <span class=\"sh\">''</span>\n\n    <span class=\"k\">try</span><span class=\"p\">:</span>\n        <span class=\"c1\"># Third-party dependencies\n</span>        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"kn\">from</span> <span class=\"n\">bs4</span> <span class=\"kn\">import</span> <span class=\"n\">BeautifulSoup</span>\n        <span class=\"k\">except</span> <span class=\"nb\">ImportError</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n            <span class=\"n\">log</span><span class=\"p\">.</span><span class=\"nf\">exception</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)</span>\n            <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"sh\">'</span><span class=\"s\">success</span><span class=\"sh\">'</span><span class=\"p\">:</span> <span class=\"bp\">False</span><span class=\"p\">,</span> <span class=\"sh\">'</span><span class=\"s\">error</span><span class=\"sh\">'</span><span class=\"p\">:</span> <span class=\"nf\">str</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)}</span>\n\n        <span class=\"c1\"># Get latest id\n</span>        <span class=\"k\">if</span> <span class=\"sh\">'</span><span class=\"s\">latest_id</span><span class=\"sh\">'</span> <span class=\"ow\">not</span> <span class=\"ow\">in</span> <span class=\"n\">webhook</span><span class=\"p\">.</span><span class=\"n\">config</span><span class=\"p\">.</span><span class=\"nf\">keys</span><span class=\"p\">():</span>\n            <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"sh\">'</span><span class=\"s\">https://phdcomics.com/gradfeed.php</span><span class=\"sh\">'</span>\n            <span class=\"n\">content</span> <span class=\"o\">=</span> <span class=\"n\">urllib</span><span class=\"p\">.</span><span class=\"nf\">urlopen</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">).</span><span class=\"nf\">read</span><span class=\"p\">()</span>\n            <span class=\"n\">soap</span> <span class=\"o\">=</span> <span class=\"nc\">BeautifulSoup</span><span class=\"p\">(</span><span class=\"n\">content</span><span class=\"p\">,</span> <span class=\"sh\">'</span><span class=\"s\">html.parser</span><span class=\"sh\">'</span><span class=\"p\">)</span>\n            <span class=\"n\">pattern</span> <span class=\"o\">=</span> <span class=\"sh\">'</span><span class=\"s\">(?:https://www\\.phdcomics\\.com/comics\\.php\\?f=)(\\d+)</span><span class=\"sh\">'</span>\n            <span class=\"n\">webhook</span><span class=\"p\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"sh\">'</span><span class=\"s\">latest_id</span><span class=\"sh\">'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"nf\">max</span><span class=\"p\">([</span>\n                <span class=\"nf\">int</span><span class=\"p\">(</span><span class=\"n\">re</span><span class=\"p\">.</span><span class=\"nf\">search</span><span class=\"p\">(</span><span class=\"n\">pattern</span><span class=\"p\">,</span> <span class=\"n\">link</span><span class=\"p\">.</span><span class=\"n\">text</span><span class=\"p\">).</span><span class=\"nf\">group</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">))</span>\n                <span class=\"k\">for</span> <span class=\"n\">link</span> <span class=\"ow\">in</span> <span class=\"n\">soap</span><span class=\"p\">.</span><span class=\"nf\">find_all</span><span class=\"p\">(</span><span class=\"sh\">'</span><span class=\"s\">link</span><span class=\"sh\">'</span><span class=\"p\">,</span> <span class=\"n\">text</span><span class=\"o\">=</span><span class=\"n\">re</span><span class=\"p\">.</span><span class=\"nf\">compile</span><span class=\"p\">(</span><span class=\"n\">pattern</span><span class=\"p\">))</span>\n            <span class=\"p\">])</span>\n\n        <span class=\"n\">random_id</span> <span class=\"o\">=</span> <span class=\"n\">random</span><span class=\"p\">.</span><span class=\"nf\">randint</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">webhook</span><span class=\"p\">.</span><span class=\"n\">config</span><span class=\"p\">[</span><span class=\"sh\">'</span><span class=\"s\">latest_id</span><span class=\"sh\">'</span><span class=\"p\">])</span>\n        <span class=\"n\">url</span> <span class=\"o\">=</span> <span class=\"sh\">'</span><span class=\"s\">https://www.phdcomics.com/comics/archive.php?comicid=%d</span><span class=\"sh\">'</span> <span class=\"o\">%</span> \\\n            <span class=\"n\">random_id</span>\n        <span class=\"n\">content</span> <span class=\"o\">=</span> <span class=\"n\">urllib</span><span class=\"p\">.</span><span class=\"nf\">urlopen</span><span class=\"p\">(</span><span class=\"n\">url</span><span class=\"p\">).</span><span class=\"nf\">read</span><span class=\"p\">()</span>\n        <span class=\"n\">soup</span> <span class=\"o\">=</span> <span class=\"nc\">BeautifulSoup</span><span class=\"p\">(</span><span class=\"n\">content</span><span class=\"p\">,</span> <span class=\"sh\">'</span><span class=\"s\">html.parser</span><span class=\"sh\">'</span><span class=\"p\">)</span>\n        <span class=\"n\">comic_img</span> <span class=\"o\">=</span> <span class=\"n\">soup</span><span class=\"p\">.</span><span class=\"nf\">find_all</span><span class=\"p\">(</span><span class=\"sh\">'</span><span class=\"s\">img</span><span class=\"sh\">'</span><span class=\"p\">,</span> <span class=\"nb\">id</span><span class=\"o\">=</span><span class=\"sh\">'</span><span class=\"s\">comic2</span><span class=\"sh\">'</span><span class=\"p\">)</span>\n\n        <span class=\"k\">try</span><span class=\"p\">:</span>\n            <span class=\"n\">comic_src</span> <span class=\"o\">=</span> <span class=\"n\">comic_img</span><span class=\"p\">[</span><span class=\"mi\">0</span><span class=\"p\">].</span><span class=\"n\">attrs</span><span class=\"p\">.</span><span class=\"nf\">get</span><span class=\"p\">(</span><span class=\"sh\">'</span><span class=\"s\">src</span><span class=\"sh\">'</span><span class=\"p\">)</span>\n        <span class=\"k\">except</span> <span class=\"nb\">IndexError</span><span class=\"p\">:</span>\n            <span class=\"n\">pattern</span> <span class=\"o\">=</span> <span class=\"sh\">'</span><span class=\"s\">&lt;img id=comic2 name=comic2 src=([\\w:\\/\\.]+)</span><span class=\"sh\">'</span>\n            <span class=\"n\">comic_src</span> <span class=\"o\">=</span> <span class=\"n\">re</span><span class=\"p\">.</span><span class=\"nf\">search</span><span class=\"p\">(</span><span class=\"n\">pattern</span><span class=\"p\">,</span> <span class=\"n\">content</span><span class=\"p\">).</span><span class=\"nf\">group</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">)</span>\n\n    <span class=\"k\">except</span> <span class=\"nb\">Exception</span> <span class=\"k\">as</span> <span class=\"n\">e</span><span class=\"p\">:</span>\n        <span class=\"n\">error</span> <span class=\"o\">=</span> <span class=\"nf\">str</span><span class=\"p\">(</span><span class=\"n\">e</span><span class=\"p\">)</span>\n\n    <span class=\"k\">return</span> <span class=\"p\">{</span><span class=\"sh\">'</span><span class=\"s\">success</span><span class=\"sh\">'</span><span class=\"p\">:</span> <span class=\"ow\">not</span> <span class=\"n\">error</span><span class=\"p\">,</span> <span class=\"sh\">'</span><span class=\"s\">error</span><span class=\"sh\">'</span><span class=\"p\">:</span> <span class=\"n\">error</span><span class=\"p\">,</span> <span class=\"sh\">'</span><span class=\"s\">src</span><span class=\"sh\">'</span><span class=\"p\">:</span> <span class=\"n\">comic_src</span><span class=\"p\">}</span>\n</code></pre></div>      </div>\n    </li>\n  </ol>\n</blockquote>\n\n<p>To make your webhook appealing you can also add custom CSS which you can use in your HTML/JS code.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title></hands-on-title>\n\n  <ol>\n    <li>\n      <p>Create a file named <code class=\"language-plaintext highlighter-rouge\">static/styles.css</code> with the following content:</p>\n\n      <div class=\"language-css highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    <span class=\"nf\">#phdcomics</span> <span class=\"p\">{</span>\n        <span class=\"nl\">border</span><span class=\"p\">:</span> <span class=\"m\">1px</span> <span class=\"nb\">solid</span> <span class=\"m\">#52697d</span><span class=\"p\">;</span>\n        <span class=\"nl\">text-align</span><span class=\"p\">:</span> <span class=\"nb\">center</span><span class=\"p\">;</span>\n        <span class=\"nl\">border-radius</span><span class=\"p\">:</span> <span class=\"m\">3px</span><span class=\"p\">;</span>\n        <span class=\"nl\">overflow</span><span class=\"p\">:</span> <span class=\"nb\">hidden</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"nf\">#phdcomics-header</span> <span class=\"p\">{</span>\n        <span class=\"nl\">background</span><span class=\"p\">:</span> <span class=\"m\">#52697d</span><span class=\"p\">;</span>\n        <span class=\"nl\">border-bottom</span><span class=\"p\">:</span> <span class=\"m\">1px</span> <span class=\"nb\">solid</span> <span class=\"m\">#52697d</span><span class=\"p\">;</span>\n        <span class=\"nl\">padding</span><span class=\"p\">:</span> <span class=\"m\">15px</span> <span class=\"m\">0</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"nf\">#phdcomics-name</span> <span class=\"p\">{</span>\n        <span class=\"nl\">color</span><span class=\"p\">:</span> <span class=\"m\">#fff</span><span class=\"p\">;</span>\n        <span class=\"nl\">padding-bottom</span><span class=\"p\">:</span> <span class=\"m\">10px</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"nf\">#phdcomics-header</span> <span class=\"nt\">button</span> <span class=\"p\">{</span>\n        <span class=\"nl\">color</span><span class=\"p\">:</span> <span class=\"m\">#fff</span><span class=\"p\">;</span>\n        <span class=\"nl\">font-size</span><span class=\"p\">:</span> <span class=\"m\">14px</span><span class=\"p\">;</span>\n        <span class=\"nl\">background-color</span><span class=\"p\">:</span> <span class=\"m\">#768fa5</span><span class=\"p\">;</span>\n        <span class=\"nl\">border</span><span class=\"p\">:</span> <span class=\"nb\">none</span><span class=\"p\">;</span>\n        <span class=\"nl\">border-radius</span><span class=\"p\">:</span> <span class=\"m\">7px</span><span class=\"p\">;</span>\n        <span class=\"nl\">box-shadow</span><span class=\"p\">:</span> <span class=\"m\">0</span> <span class=\"m\">5px</span> <span class=\"m\">#5c768c</span><span class=\"p\">;</span>\n        <span class=\"nl\">padding</span><span class=\"p\">:</span> <span class=\"m\">5px</span> <span class=\"m\">10px</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"nf\">#phdcomics-header</span> <span class=\"nt\">button</span><span class=\"nd\">:focus</span> <span class=\"p\">{</span>\n        <span class=\"nl\">outline</span><span class=\"p\">:</span> <span class=\"m\">0</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"nf\">#phdcomics-header</span> <span class=\"nt\">button</span><span class=\"nd\">:hover</span> <span class=\"p\">{</span>\n        <span class=\"nl\">background-color</span><span class=\"p\">:</span> <span class=\"m\">#67839b</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"nf\">#phdcomics-header</span> <span class=\"nt\">button</span><span class=\"nd\">:active</span> <span class=\"p\">{</span>\n        <span class=\"nl\">background-color</span><span class=\"p\">:</span> <span class=\"m\">#67839b</span><span class=\"p\">;</span>\n        <span class=\"nl\">box-shadow</span><span class=\"p\">:</span> <span class=\"m\">0</span> <span class=\"m\">0</span> <span class=\"m\">#5c768c</span><span class=\"p\">;</span>\n        <span class=\"nl\">transform</span><span class=\"p\">:</span> <span class=\"n\">translateY</span><span class=\"p\">(</span><span class=\"m\">5px</span><span class=\"p\">);</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"nf\">#phdcomics-img</span> <span class=\"p\">{</span>\n        <span class=\"nl\">background</span><span class=\"p\">:</span> <span class=\"m\">#fff</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"nf\">#phdcomics-img</span> <span class=\"nt\">img</span> <span class=\"p\">{</span>\n        <span class=\"nl\">padding</span><span class=\"p\">:</span> <span class=\"m\">10px</span><span class=\"p\">;</span>\n        <span class=\"nl\">max-width</span><span class=\"p\">:</span> <span class=\"m\">100%</span><span class=\"p\">;</span>\n        <span class=\"nl\">margin-bottom</span><span class=\"p\">:</span> <span class=\"m\">-4px</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"nf\">#phdcomics-loader</span> <span class=\"p\">{</span>\n        <span class=\"nl\">border</span><span class=\"p\">:</span> <span class=\"m\">5px</span> <span class=\"nb\">solid</span> <span class=\"m\">#f3f3f3</span><span class=\"p\">;</span>\n        <span class=\"nl\">border-top</span><span class=\"p\">:</span> <span class=\"m\">5px</span> <span class=\"nb\">solid</span> <span class=\"m\">#52697d</span><span class=\"p\">;</span>\n        <span class=\"nl\">border-radius</span><span class=\"p\">:</span> <span class=\"m\">50%</span><span class=\"p\">;</span>\n        <span class=\"nl\">width</span><span class=\"p\">:</span> <span class=\"m\">25px</span><span class=\"p\">;</span>\n        <span class=\"nl\">height</span><span class=\"p\">:</span> <span class=\"m\">25px</span><span class=\"p\">;</span>\n        <span class=\"nl\">animation</span><span class=\"p\">:</span> <span class=\"n\">spin</span> <span class=\"m\">1.5s</span> <span class=\"n\">linear</span> <span class=\"n\">infinite</span><span class=\"p\">;</span>\n        <span class=\"nl\">margin</span><span class=\"p\">:</span> <span class=\"m\">15px</span> <span class=\"nb\">auto</span><span class=\"p\">;</span>\n    <span class=\"p\">}</span>\n\n    <span class=\"k\">@keyframes</span> <span class=\"n\">spin</span> <span class=\"p\">{</span>\n        <span class=\"err\">0</span><span class=\"o\">%</span> <span class=\"p\">{</span> <span class=\"nl\">transform</span><span class=\"p\">:</span> <span class=\"n\">rotate</span><span class=\"p\">(</span><span class=\"m\">0deg</span><span class=\"p\">);</span> <span class=\"p\">}</span>\n        <span class=\"err\">100</span><span class=\"o\">%</span> <span class=\"p\">{</span> <span class=\"nl\">transform</span><span class=\"p\">:</span> <span class=\"n\">rotate</span><span class=\"p\">(</span><span class=\"m\">360deg</span><span class=\"p\">);</span> <span class=\"p\">}</span>\n    <span class=\"p\">}</span>\n</code></pre></div>      </div>\n    </li>\n  </ol>\n</blockquote>\n\n<p>Please make sure you have activated webhooks in your <code class=\"language-plaintext highlighter-rouge\">config/galaxy.yml</code> file by setting the <code class=\"language-plaintext highlighter-rouge\">webhooks_dir</code> to the path in which your <code class=\"language-plaintext highlighter-rouge\">phdcomics</code> folder is located.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title></hands-on-title>\n\n  <ol>\n    <li>Submit one tool and see if your webhook is working on the tool-submit page.</li>\n  </ol>\n\n</blockquote>\n\n<p>If successful it should look like this:</p>\n\n<p><a href=\"../../images/phdcomics.png\" rel=\"noopener noreferrer\"><img src=\"../../images/phdcomics.png\" alt=\"First view. \" width=\"1188\" height=\"897\" loading=\"lazy\" /></a></p>\n\n<h2 id=\"conclusion\">Conclusion</h2>\n\n<p>First of all, thank you for completing this tutorial. We have learned how to add webhooks to your Galaxy.</p>\n"],"ref_slides":["### What are Galaxy Webhooks?\r\n\r\nA system which can be used to attach new functionalities to predefined entry points in the Galaxy interface.\r\n\r\nAn accessible way to make isolated customisations to a Galaxy instance.\r\n\r\n---\r\n\r\n### Entry point: masthead\r\n\r\n![A person shaped icon in the Galaxy masthead is being hovered over and the popup reads \"Show Username\", presumably a custom webhook from a tutorial.](../../images/webhook_masthead.png)\r\n\r\n\r\nAdds item to the top menu.\r\n\r\n---\r\n\r\n### Entry point: tool/workflow submission\r\n\r\n![Screenshot of Galaxy with the job completion screen shown and a PhD comic image shown below.](../../images/webhook_tool.png)\r\n\r\nShown after tool or workflow execution.\r\n\r\n---\r\n\r\n### Entry point: tool-menu\r\n\r\nAdds an entry to the tool form menu.\r\n\r\n---\r\n\r\n### Entry point: history-menu\r\n\r\n![A section of the history menu is labelled Webhooks and shows a custom menu entry.](../../images/webhook_history.png)\r\n\r\nAdds an entry to the history menu.\r\n\r\n---\r\n\r\n### What is a webhook made of?\r\n\r\n- a config file in YAML format: `config/<NAME>.yml`\r\n- optional: A Python helper file with access to the Galaxy `trans` object\r\n  - `helper/__init__.py`\r\n  - provides an API call at `/api/webhooks/<WEBHOOK_NAME>/get_data`\r\n- optional: Additional `JS` and `CSS` code\r\n  - `static/script.js`\r\n  - `static/styles.css`\r\n\r\n---\r\n\r\n### Example configuration YAML\r\n\r\n```yaml\r\nname: trans_object\r\ntype:\r\n  - masthead\r\nactivate: true\r\n\r\nicon: fa-user\r\ntooltip: Show Username\r\n\r\nfunction: >\r\n  $.getJSON(\"/api/webhooks/trans_object/get_data\", function(data) {\r\n    alert('Username: ' + data.username);\r\n  });\r\n```\r\n\r\n---\r\n\r\n### Definition of the configuration options\r\n\r\nArgument | Description\r\n--- | ---\r\n`name` | Name of the Webhook (and API call)\r\n`type` | Entry point. `tool/workflow/masthead/history-menu`. More might be available in future\r\n`activate` | (De-)Activates the Webhook. `true/false`\r\n`icon` | Icon to show for a `masthead` plugin. Full list of available icons [here](https://fontawesome.com/icons)\r\n`tooltip` | Tooltip to show for `masthead` plugins\r\n`function` | JavaScript code to run when `masthead` button is clicked\r\n\r\n---\r\n\r\n### Example `__init__.py`\r\n\r\n```python\r\ndef main(trans, webhook):\r\n    if trans.user:\r\n        user = trans.user.username\r\n    else:\r\n        user = 'No user is logged in.'\r\n    return {'username': user}\r\n```\r\n\r\nThe return value can be read with a call to `/api/webhooks/WEBHOOK_NAME/get_data`\r\n---\r\n\r\n### Want to integrate Webhooks in your Galaxy instance?\r\n\r\n- Copy your Webhook to your Webhook directory on your Galaxy instance\r\n  - default: `config/plugins/webhooks`\r\n  - configurable via `webhooks_dir` in `galaxy.yml`\r\n- Restart Galaxy. While developing, changes at the `__init__.py` file will be active immediately\r\n\r\n---\r\n\r\n### Want to contribute?\r\n\r\n- Create Webhooks and share them with the world!\r\n  - on the [main Galaxy repository](https://github.com/galaxyproject/galaxy)\r\n- Improve the Webhooks implementation\r\n  - enhance existing entry points\r\n  - add additional ones ...\r\n- Improve the documentation or training material\r\n  - [Documentation](https://docs.galaxyproject.org/en/latest/admin/special_topics/webhooks.html)\r\n  - [Galaxy Training Network](https://training.galaxyproject.org]/training-material)\r\n\r\n---\r\n\r\n### Developing the Webhooks implementation\r\n\r\n- Webhooks initialisation: `lib/galaxy/webhooks/__init__.py`\r\n- JavaScript logic: `client/galaxy/scripts/mvc/webhooks.js`\r\n- Entry points\r\n  - `client/galaxy/scripts/mvc/tool/tool-form.js`\r\n  - `client/galaxy/scripts/mvc/tool/tool-form-composite.js`\r\n  - `client/galaxy/scripts/mvc/history/options-menu.js`\r\n  - `client/galaxy/scripts/layout/menu-js`\r\n- API: `lib/galaxy/webapps/galaxy/api/webhooks.py`\r\n  - `lib/galaxy/webapps/galaxy/buildapp.py`\r\n"],"hands_on":true,"slides":true,"mod_date":"2023-11-03 14:30:27 +0000","pub_date":"2017-04-03 16:49:33 +0000","version":23,"api":"https://training.galaxyproject.org/training-material/api/topics/dev/tutorials/webhooks/tutorial.json","tools":[],"supported_servers":[],"topic_name_human":"Development in Galaxy","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools: []\n","tours":false,"video":false,"slides_recordings":false,"translations":{"tutorial":[],"slides":[],"video":false},"license":"CC-BY-4.0","type":"tutorial","logo":"GTN","redirect_from":["/short/dev/webhooks/slides","/short/S00055"]}