{"layout":"tutorial_slides","logo":"GTN","title":"Tool Shed: sharing Galaxy tools","questions":["What is a Tool Shed?","How to install tools and workflows from a Tool Shed into a Galaxy instance?","What are the Tool Shed repository types?","How to publish with Planemo?"],"objectives":["Discover what is a Tool Shed","Be able to install tools and workflows from a Tool Shed into a Galaxy instance","Be able to publish tools with Planemo"],"time_estimation":"3h","subtopic":"tooldev","key_points":["Use Planemo","Contribute to the Main Tool Shed"],"contributors":["abretaud","loraine-gueguen","slegras","bebatut"],"js_requirements":{"mathjax":null,"mermaid":false},"short_id":"S00052","url":"/topics/dev/tutorials/toolshed/slides.html","topic_name":"dev","tutorial_name":"toolshed","dir":"topics/dev/tutorials/toolshed","symlink":null,"id":"dev/toolshed","ref_tutorials":[],"ref_slides":["## 1. What is a Tool Shed?\n\n![toolshed logo with a shed over the words galaxy tool shed](../../images/toolShed.jpg)\n\n---\n\n### ![same logo](../../images/toolShed.jpg) = Galaxy App Store\n\n---\n\n### ![same logo again](../../images/toolShed.jpg) = Galaxy App Store\n\n- Galaxy tools\n- ~~Recipes for installing and compiling tools~~,\n- Data Managers,\n- Custom datatypes,\n- Exported workflows.\n\n---\n\n### ![same logo again](../../images/toolShed.jpg) = Galaxy App Store\n\n- For Galaxy administrators, facilitates:\n  - **installing/updating** tools\n\n- For tool developers, facilitates:\n  - **sharing** of Galaxy utilities\n  - **versioning**\n\n---\n\n### Available Tool Sheds\n\n- [Galaxy community Tool Shed](https://toolshed.g2.bx.psu.edu/) -> Main Tool Shed\n- [Galaxy community test Tool Shed](https://testtoolshed.g2.bx.psu.edu/) -> Sandbox for testing\n- [List of public Tool Sheds](https://galaxyproject.org/toolshed/public-toolsheds/)\n\n---\n\n### Tool Shed interface\n\n![toolshed interface with categories, description, and number of repositories called out with arrows](../../images/main_toolShed_ss.png)\n\n---\n\n### Example of tool\n\n![view of a repository in the toolshed showing a lot of metadata](../../images/exampletool_ss.png)\n\n---\n\n## 2. Installing tools from a Tool Shed\n\n---\n\n### Connect your Galaxy to a Tool Shed\n\n- Only for third party toolsheds (Main and Test by default)\n- Add `<tool_shed />` block in `config/tool_sheds_conf.xml`\n- Restart Galaxy\n\n---\n\n### Install a tool from the Tool Shed\n\n- Go to the admin interface and click on \"Search Tool Shed\"\n![admin interface of galaxy with an arrow to search tool shed](../../images/admin_searchtoolshed_ss.png)\n- Select a Tool Shed\n\n![arrow to galaxy main toolshed button in older versions of galaxy](../../images/goToToolshed_ss.png)\n\n---\n\n### Install a tool from the Tool Shed\n\n- Search your tool\n![toolshed search interface with arrows to the search box and one of the results, trinity](../../images/searchTool_ss.png)\n\n---\n\n### Install a tool from the Tool Shed\n\n- Types of repository</span>\n  - <span style=\"color:orange\"> Tools (`$name`)</span>\n  - <span style=\"color:blue\"> Tool suites (`suite_$name`)</span>\n  - <span style=\"color:red\"> Tool dependencies (`package_$name_$version`)</span> (gradually removed, replaced by Conda dependencies)\n![screenshot with multiple search results called out with boxes for the above types](../../images/typeOfRep_ss.png)\n\n---\n\n### Install a tool from the Tool Shed\n\n![trinity button showing a dropdown with preview and install](../../images/goToToolInstall_ss.png)\n- Install the tool\n![toolshed page with a button install to galaxy](../../images/launchInstallTool_ss.png)\n\n---\n\n### Install a tool from the Tool Shed\n\n- Install the tool\n![another screenshot of a form with checkboxes for dependcy options](../../images/installTool_ss.png)\n- <span style=\"font-size:70%\"> Selecting Tool Shed AND conda will make Galaxy to install both</span>\n- <span style=\"font-size:70%\"> Recommended: use conda </span>\n\n---\n\n### Install a tool from the Tool Shed\n\n- Check\n![admin interface of galaxy with monitor installing repositories called out](../../images/monitor_installing_toolshed_rep.png)\n\n---\n\n### Manage installed tools\n\n- Admin > Manage installed tools\n![admin interface with manage installed tools menu item called out](../../images/manage_installed_tools.png)\n![various icons used to indicate tool state](../../images/repStatus_ss.png)\n\n---\n\n### Manage installed tools\n\n- Click on the name of a tool\n- Manage and browse the repository\n![yet another toolshed interface screenshot with the repository actions menu shown](../../images/managed_an_installed_tool.png)\n\n---\n\n## Tips: How to install workflows\n\n---\n\n###  How to install a workflow?\n\n- Admin > Search Tool Shed\n- Search the workflow\n  1. ![the interface is identical to the tool install interface](../../images/toolshedWorkflow_ss.png)\n  2. ![a graph with two nodes, input dataset and fastqc](../../images/schemaWorkflow_ss.png)\n- <span style=\"font-size:70%\"> Tools can come with the workflow if they are not yet installed </span>\n\n---\n\n### How to install a workflow?\n\n![galaxy workflow list showing no workflows](../../images/workflowNotInstalled_ss.png)\n- No workflow?\n\n---\n\n###  How to install a workflow?\n\n![the installed WF is found in the manage installed tools menu](../../images/workflowInstalled_ss.png)\n- Click on the imported workflow\n\n---\n\n###  How to install a workflow?\n\n![contents of the repository section lists fastqc, a link to click on](../../images/makeAvailableWorkflow_ss.png)\n- Click on the workflow at the bottom of the “Contents of this repository” section\n\n---\n\n###  How to install a workflow?\n\n- Repository Actions > Import workflow to Galaxy\n\n![clicking on that brings you to a view of the workflow, and you can click import to galaxy on the top right](../../images/exportWorkflow_ss.png)\n\n---\n\n###  How to install a workflow?\n\n![it appears in the workflow menu](../../images/workflowOK_ss.png)\n- Done!\n\n---\n\n## 3. Tool Shed repository types\n\n---\n\n### 3.1 Tool with dependencies\n\n---\n\n###  Tool with dependencies\n\n![tool folder with python script, xml, and test-data is put in an archive and uploaded to the TS.](../../images/toolshedPackage.png)\n\n---\n\n### 3.2 Tool suite\n\n#### Group of related repositories\n\n---\n\n###  Tool suite\n\n![multiple wrappers in a single tool archive](../../images/toolSuite.png)\n\n- Works but no way to install a single tool\n\n---\n\n###  Tool suite\n\n![phylogeny pipeline containing 4 tools](../../images/toolsuite2.png)\n\n- One repository per individual tool\n- A special 'Tool suite' repository listing the individual repositories\n\n---\n\n###  Tool suite\n\n- relationship between a dependent repository and one or more required repository (tools, datatypes, workflows,...)\n- -> One XML file\n```xml\n<?xml version=\"1.0\"?>\n<repositories description=\"Pipeline phylogeny\">\n   <repository toolshed=\"https://testtoolshed.g2.bx.psu.edu\"\n     name=\"fasta_to_phylip\" owner=\"gandres\" changeset_revision=\"a895633568\" />\n   <repository name=\"mafft\" owner=\"gandres\" />\n   <repository name=\"phyml\" owner=\"gandres\" />\n[…]\n</repositories>\n```\nNo need to write it yourself, Planemo does it for you\n\n---\n\n###  Tool suite\n\n![phylogeny suite gets uploaded to the TS](../../images/toolsuite3.png)\n\n---\n\n### 3.3 Workflow\n\n---\n\n\n###  Workflow\n![the four tools from the phylogeny pipeline are connected as a workflow](../../images/workflow.png)\n- A succession of tools to perform a complete analysis\n\n---\n\n###  Workflow\n\n- In galaxy\n\n![same workflow with galaxy ui](../../images/galaxyWorkflowEx.png)\n\n---\n\n###  Workflow\n\n![extract workflow menu from galaxy](../../images/shareWorkflow.png)\n\n- You get a file: Galaxy-Workflow-NAME.ga\n\n---\n\n###  Workflow\n\n- You have your file Galaxy-Workflow-NAME.ga\n- How to automatically install the tools used in the workflow?\n  - -> `repository_dependencies.xml`\n```xml\n<?xml version=\"1.0\"?>\n<repositories description=\"Phylogeny workflow\">\n   <repository name=\"suite_phylogeny\" owner=\"galaxy\" />\n</repositories>\n```\n\n---\n\n###  Workflow\n\n![phylogeny workflow is uploaded to the TS](../../images/workflowRepDep.png)\n\n---\n\n###  Workflow\n\n![the workflow points at the tool suite which points at tools](../../images/workflowRepDep2.png)\n\n- **Everything must be on the same toolshed**\n\n---\n\n## Tips\n\n### What about tools working with *.loc files or new datatypes\n\n---\n\n### Tools with `*.loc` files or new datatypes\n\n- add them to the Tool Shed repository.\n- `*.loc` files and `datatypes` files should be provided as `*.sample` file in a `tool-data` directory.\n- `tool-data/*.loc.sample` files come along with `tool_data_table_conf.xml.sample`.\n\nTheir content or the file themselves are put to the right location on tool set up.\n\n---\n\n### Tools with *.loc files or new datatypes\n\n![toolshed interface showing some files](../../images/repWithLoc_ss.png)\n\n<span style=\"font-size:60%\">`tool_data_table_conf.xml.sample`</span>\n```xml\n<tables>\n\t<!-- Locations of indexes in the Bowtie2 mapper format -->\n\t<table name=\"bowtie2_indexes\" comment_char=\"#\">\n\t\t<columns>value, dbkey, name, path</columns>\n\t\t<file path=\"tool-data/bowtie2_indices.loc\" />\n\t</table>\n</tables>\n```\n<span style=\"font-size:60%\">On install, the content of the file and the right\npath to the *.loc file is added to `shed_tool_data_table_conf.xml`</span>\n\n---\n\n## 4. Publishing with Planemo\n\n---\n\n<i class=\"fas fa-exclamation-triangle\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">warning</span> *There are automated ways to publish to a ToolShed using GitHub and Continuous Integration*\n\n[Check out these slides, \"Publishing tools\" section](/training-material/topics/dev/tutorials/tool-integration/slides.html)\n\n---\n\n### Configure the target Tool Shed\n\n```bash\nplanemo config_init\n```\n- Creates `.planemo.yml` file in your home directory:\n\n```yml\n## Planemo Global Configuration File.\n## Everything in this file is completely optional - these values can all be\n## configured via command line options for the corresponding commands.\n## [...]\nsheds:\n     toolshed:\n           #key: \"<TODO>\"\n           #email: \"<TODO>\"\n           #password: \"<TODO>\"\n     testtoolshed:\n           #key: \"<TODO>\"\n           #email: \"<TODO>\"\n           #password: \"<TODO>\"\n     local:\n           #key: \"<TODO>\"\n           #email: \"<TODO>\"\n           #password: \"<TODO>\"\n```\n\n---\n\n### Configure the target Tool Shed\n\n- Add your Tool Shed API key in `.planemo.yml`\n\n```yml\n## Planemo Global Configuration File.\n## Everything in this file is completely optional - these values can all be\n## configured via command line options for the corresponding commands.\n## [...]\nsheds:\n     toolshed:\n           key: \"xxxxxxxxxmytoolshedAPIkeyxxxxxxx\"\n           #email: \"<TODO>\"\n           #password: \"<TODO>\"\n     testtoolshed:\n           #key: \"<TODO>\"\n           #email: \"<TODO>\"\n           #password: \"<TODO>\"\n     local:\n           #key: \"<TODO>\"\n           #email: \"<TODO>\"\n           #password: \"<TODO>\"\n```\n\n---\n\n### Configure repository\n\n```bash\nplanemo shed_init --name=\"tandem_repeats_finder_2\"\n                     --owner=\"gandres\"\n                     --description=\"Tandem Repeats Finder description\"\n                     --long_description=\"A long long description.\"\n                     --category=\"Sequence Analysis\"\n                     [--remote_repository_url=<URL to .shed.yml on github>]\n                     [--homepage_url=<Homepage for tool.>]\n```\n- Creates `.shed.yml` file in the current repository (tool repository):\n\n```yml\ncategories: [Sequence Analysis]\ndescription: Tandem Repeats Finder description\nlong_description: A long long description.\nname: tandem_repeats_finder_2\nowner: gandres\n```\n\n---\n\n### Configure repository\n\n#### Naming conventions\n<small>\n\n| Repository Type | Recommended Name         | Examples                 |\n| --------------- |--------------------------| -------------------------|\n| Data Managers   | `data_manager_$name`     | `data_manager_bowtie2`   |\n| Packages        | `package_$name_$version` | `package_aragorn_1_2_36` |\n| Tool Suites     | `suite_$name`            | `suite_samtools`         |\n| Tools           | `$name`                  | `stringle`, `bowtie2`    |\n\n</small>\n<span style=\"color:red\">Planemo will determine the repository type based on these conventions</span>\n\n---\n\n### Configure repository\n\n- Tools and tool suite `.shed.yml`: implicitly define repositories for each individual tool in the directory and build a suite for those tools.\n\n- Example: `trinity/.shed.yml`\n\n```yml\n[...]\nauto_tool_repositories:\n    name_template: \"\"\n    description_template: \" (from the Trinity tool suite)\"\nsuite:\n    name: \"suite_trinity\"\n    description: Trinity tools to assemble transcript sequences from Illumina RNA-Seq data.\n```\n\n---\n\n### Check\n\n```bash\nplanemo shed_lint --tools\n```\n```bash\nLinting repository […]/tandem_repeats_finder\nApplying linter expansion... CHECK\n.. INFO: Included files all found.\nApplying linter tool_dependencies_xsd... CHECK\n.. INFO: tool_dependencies.xml found and appears to be valid XML\nApplying linter tool_dependencies_actions... CHECK\n.. INFO: Parsed tool dependencies.\nApplying linter repository_dependencies... CHECK\n.. INFO: No repository_dependencies.xml, skipping.\nApplying linter shed_yaml... CHECK\n.. INFO: .shed.yml found and appears to be valid YAML.\nApplying linter readme... CHECK\n.. INFO: No README found skipping.\n+Linting tool […]/tandem_repeats_finder/tandem_repeats_finder_wrapper.xml\n[…]\n```\n\n---\n\n### Create repository\n\n```bash\nplanemo shed_create --shed_target testtoolshed\n```\n- Don't forget **--shed_target**. Default is main toolshed\n\n---\n\n### Create repository\n\n```bash\nplanemo shed_create --shed_target testtoolshed\n```\n```bash\nRepository created\ncd '[…]/tandem_repeats_finder' && git rev-parse HEAD\nRepository tandem_repeats_finder_2 updated successfully.\n```\n![an image of a toolshed metadata from the planemo uploaded data](../../images/shedCreate.png)\n\n---\n\n### Update repository\n\n```bash\nplanemo shed_diff --shed_target testtoolshed\n\n```\n```bash\nwget -q --recursive -O - 'https://testtoolshed.g2.bx.psu.edu/repository/download?repository_id=6306166e4da9a8bf&changeset_revision=default&file_type=gz' | tar -xzf - -C /tmp/tool_shed_diff_DMcOrR/_testtoolshed_ --strip-components 1\nmkdir \"/tmp/tool_shed_diff_DMcOrR/_local_\"; tar -xzf \"/tmp/tmp5ousfg\" -C \"/tmp/tool_shed_diff_DMcOrR/_local_\"; rm -rf /tmp/tmp5ousfg\ncd \"/tmp/tool_shed_diff_DMcOrR\"; diff -r _local_ _testtoolshed_\ndiff -r _local_/tandem_repeats_finder.xml _testtoolshed_/tandem_repeats_finder.xml\n41d40\n<     <param name=\"fileout_label2\" type=\"text\" value=\"Unused\" label=\"none\" help=\"Output name for files\" />\n```\n- The repository needs to be updated\n\n---\n\n### Update repository\n\n```bash\nplanemo shed_update --check_diff --shed_target testtoolshed\n\n```\n```bash\nwget -q --recursive -O - 'https://testtoolshed.g2.bx.psu.edu/repository/download?repository_id=6306166e4da9a8bf&changeset_revision=default&file_type=gz' | tar -xzf - -C /tmp/tool_shed_diff_DMcOrR/_testtoolshed_ --strip-components 1\nmkdir \"/tmp/tool_shed_diff_DMcOrR/_local_\"; tar -xzf \"/tmp/tmp5ousfg\" -C \"/tmp/tool_shed_diff_DMcOrR/_local_\"; rm -rf /tmp/tmp5ousfg\ncd \"/tmp/tool_shed_diff_DMcOrR\"; diff -r _local_ _testtoolshed_\ndiff -r _local_/tandem_repeats_finder.xml _testtoolshed_/tandem_repeats_finder.xml\n41d40\n<     <param name=\"fileout_label2\" type=\"text\" value=\"Unused\" label=\"none\" help=\"Output name for files\" />\nRepository tandem_repeats_finder updated successfully.\nRepository metadata updated.\n```\n- The repository has been updated\n\n---\n\n### Update repository\n```bash\nplanemo shed_update --check_diff --shed_target testtoolshed\n\n```\n![tool shed info with revision circled](../../images/checkToolUpdate.png)\n\n- The repository has been updated\n\n---\n\n![planemo logo](../../images/planemo-logo.png)\n#### Publishing to the Tool Shed\n\n![planemo shed_init creates a repo, shed_lint checks, and shed_create/shed_update uploads to the TS](../../images/planemo_toolshed_publishing.png)\n\n---\n\n![planemo logo again](../../images/planemo-logo.png)\n\n> Command-line utilities to assist in building and publishing Galaxy tools.\n\n---\n\n![and again](../../images/planemo-logo.png)\n\n![larger graph with local development, toolshed, conda, and galaxy and various lines between them.](../../images/big_picture.png)\n\n---\n\n![planemo logo again](../../images/planemo-logo.png)\n\n#### Checklist (3/3)\n\n- Initiate the `.shed.yml` file with\n```bash\nplanemo shed_init\n```\n- Create the repository on ToolShed with\n```bash\nplanemo shed_create\n```\n- Install and test the wrapper on a Galaxy instance\n- Improve the wrapper and push modification on toolshed\n```bash\nplanemo shed_update\n```\n\n---\n\n## References\n\n- [ToolShed](https://galaxyproject.org/toolshed/tour/)\n- [Install tools from the ToolShed](https://galaxyproject.org/admin/tools/add-tool-from-toolshed-tutorial/)\n- [Publish tools with Planemo](https://planemo.readthedocs.io/en/latest/)\n\n---\n\n<hands-on-title>Hands-on</hands-on-title>\n\n![picture indicating exercise](../../images/exercise.png)\n\n---\n\n###  Hands-on\n\n#### The goal\nPublish your tool (seqtk_seq) in your local toolshed with Planemo\n\n---\n\n<hands-on-title>Hands-on</hands-on-title>\n\n#### Step 1: Start and configure your toolshed\n- Start your toolshed (in galaxy home directory):\n```bash\n./run_tool_shed.sh\n```\n- Toolshed available at `http://localhost:9009`\n<aside class=\"notes\">\nlogin: galaxy/azerty\n</aside>\n\n---\n\n<hands-on-title>Hands-on</hands-on-title>\n\n#### Step 2: Use planemo to publish your tool\n\n---\n\n<hands-on-title>Hands-on</hands-on-title>\n\n#### Step 2: Use planemo to publish your tool\n\n```bash\nplanemo config_init\n```\n  - Creates file `.planemo.yml` in your home directory.\n\n```yml\n[...]  local:\n#key: \"<TODO>\"\nemail: \"galaxy@localhost.fr\"\npassword: \"azerty\"\n```\n```bash\nplanemo shed_init --name=seqtk_seq --owner=galaxy --description=\"common transformation of FASTA/Q\" --category=\"Fasta Manipulation\"\n```\n```bash\nplanemo shed_lint .\n```\n```bash\nplanemo shed_create --shed_target local\n```\n\n---\n\n<hands-on-title>Hands-on</hands-on-title>\n\n#### Step 3: Update your tool and then use planemo to update your tool on the Tool Shed\n\n---\n\n<hands-on-title>Hands-on</hands-on-title>\n\n#### Step 3: Update your tool and then use planemo to update your tool on the Tool Shed\n\n```bash\nplanemo shed_diff --shed_target local\n```\n```bash\nplanemo shed_update --check_diff --shed_target local\n```\n"],"video_library":{"tutorial":null,"slides":null,"demo":null,"both":null,"session":null},"hands_on":false,"slides":true,"mod_date":"2022-09-28 13:13:58 +0000","pub_date":"2017-06-12 08:10:40 +0000","version":23,"api":"https://training.galaxyproject.org/training-material/api/topics/dev/tutorials/toolshed/tutorial.json","tools":[],"supported_servers":[],"topic_name_human":"Development in Galaxy","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools: []\n","tours":false,"video":false,"translations":{"tutorial":[],"slides":[],"video":false},"license":"CC-BY-4.0","type":"tutorial","redirect_from":["/short/dev/toolshed/slides","/short/S00052"]}