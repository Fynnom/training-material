{"layout":"tutorial_hands_on","title":"Python - Math","level":"Introductory","requirements":[],"follow_up_training":[],"questions":["How do I do math in Python?"],"objectives":["Understand the fundamentals of object assignment and math in python and can write simple statements and execute calcualtions in order to be able to summarize the results of calculations and classify valid and invalid statements.","Translate some known math functions (e.g. euclidean distance, root algorithm) into python to transfer concepts from mathematics lessons directly into Python."],"time_estimation":"30M","key_points":["Converting mathematics equation to python is pretty easy!","In real life you'll occasionally need to do this, either converting from a formula you read in a paper, or a description of an algorithm, into code that you'll re-use.","Did you forget how a particular module or function works? Try `help()`"],"subtopic":"python-modular","contributors":[{"name":"Helena Rasche","orcid":"0000-0001-9760-8992","maintainer_contact":"gitter","matrix":"hexylena:matrix.org","joined":"2017-09","elixir_node":"nl","affiliations":["gallantries","by-covid","erasmusmc","elixir-europe","elixir-converge"],"former_affiliations":["deNBI","avans-atgm","uni-freiburg"],"contact_for_training":false,"location":{"country":"NL","lat":51.91,"lon":4.46},"id":"hexylena","url":"https://training.galaxyproject.org/training-material/api/contributors/hexylena.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/hexylena/"},{"name":"Donny Vrins","joined":"2021-10","linkedin":"Donny Vrins","email":"D.vrins@live.nl","former_affiliations":["avans-atgm"],"id":"dirowa","url":"https://training.galaxyproject.org/training-material/api/contributors/dirowa.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/dirowa/"},{"name":"Bazante Sanders","joined":"2020-12","affiliations":["avans-atgm"],"id":"bazante1","url":"https://training.galaxyproject.org/training-material/api/contributors/bazante1.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/bazante1/"}],"priority":1,"notebook":{"language":"python","pyolite":true},"js_requirements":{"mathjax":1547,"mermaid":false},"short_id":"T00094","url":"/topics/data-science/tutorials/python-math/tutorial.html","topic_name":"data-science","tutorial_name":"python-math","dir":"topics/data-science/tutorials/python-math","symlink":null,"id":"data-science/python-math","ref_tutorials":["<p>Here we’ll learn some of the fundamentals of python and how to do basic maths in Python.</p>\n\n<blockquote class=\"agenda\">\n  <agenda-title></agenda-title>\n\n  <p>In this tutorial, we will cover:</p>\n\n<ol id=\"markdown-toc\">\n  <li><a href=\"#python-fundamentals\" id=\"markdown-toc-python-fundamentals\">Python Fundamentals</a>    <ol>\n      <li><a href=\"#variables\" id=\"markdown-toc-variables\">Variables</a></li>\n      <li><a href=\"#libraries\" id=\"markdown-toc-libraries\">Libraries</a></li>\n      <li><a href=\"#math-module\" id=\"markdown-toc-math-module\">Math Module</a></li>\n    </ol>\n  </li>\n</ol>\n\n</blockquote>\n\n<h1 id=\"python-fundamentals\">Python Fundamentals</h1>\n\n<h2 id=\"variables\">Variables</h2>\n\n<p>Any Python interpreter can be used as a calculator. We can do simple sums</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"mi\">3</span> <span class=\"o\">+</span> <span class=\"mi\">5</span> <span class=\"o\">-</span> <span class=\"mi\">4</span>\n</code></pre></div></div>\n\n<p>Multiplication</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"mi\">5</span> <span class=\"o\">*</span> <span class=\"mi\">4</span>\n</code></pre></div></div>\n\n<p>Division</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"mi\">5</span> <span class=\"o\">/</span> <span class=\"mi\">4</span>\n</code></pre></div></div>\n\n<p>Just like you’ve probably learned in maths courses, we can assign values to variables</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">x</span> <span class=\"o\">=</span> <span class=\"mi\">10</span>\n<span class=\"n\">y</span> <span class=\"o\">=</span> <span class=\"mf\">2.5</span>\n<span class=\"n\">z</span> <span class=\"o\">=</span> <span class=\"mi\">3</span>\n</code></pre></div></div>\n\n<p>From now on, whenever we use <code class=\"language-plaintext highlighter-rouge\">x</code> or <code class=\"language-plaintext highlighter-rouge\">y</code> or <code class=\"language-plaintext highlighter-rouge\">z</code>, Python will substitute the value we assigned to it.\nYou’ll notice when we assign things to a variable, nothing is printed out. If we’ve assigned a value to a variable we can print it by doing:</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n<span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"n\">y</span><span class=\"p\">,</span> <span class=\"n\">z</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p>You can print out multiple variables if you separate them with a comma <code class=\"language-plaintext highlighter-rouge\">,</code>.</p>\n\n<blockquote class=\"tip\">\n  <tip-title>Variable Names</tip-title>\n  <p>In Python, variable names:</p>\n\n  <ul>\n    <li>can include letters, digits, and underscores</li>\n    <li>cannot start with a digit</li>\n    <li>are case sensitive</li>\n  </ul>\n\n  <p>This means that, for example:</p>\n\n  <ul>\n    <li><code class=\"language-plaintext highlighter-rouge\">x</code> is a valid name</li>\n    <li><code class=\"language-plaintext highlighter-rouge\">weight0</code> is a valid variable name, whereas <code class=\"language-plaintext highlighter-rouge\">0weight</code> is not</li>\n    <li><code class=\"language-plaintext highlighter-rouge\">weight</code> and <code class=\"language-plaintext highlighter-rouge\">Weight</code> are different variables</li>\n  </ul>\n</blockquote>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">x</span> <span class=\"o\">*</span> <span class=\"p\">(</span><span class=\"n\">y</span> <span class=\"o\">+</span> <span class=\"n\">z</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p>What do you think the following will result in? The best way to find out is trying things for yourself. If it’s wrong, can you correct it?</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">xy</span>\n</code></pre></div></div>\n\n<p>Time to check what we’ve learned!</p>\n\n<blockquote class=\"question\">\n  <question-title>Exercise 0: Simple Equations</question-title>\n  <p>Given the equation:</p>\n\n\\[y = x * 921 + 534\\]\n\n  <p>What is the value of <code class=\"language-plaintext highlighter-rouge\">y</code> when <code class=\"language-plaintext highlighter-rouge\">x = 452</code></p>\n\n  <p>You can test out solutions in the box below this question.</p>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>x = 452\ny = x * 921 + 534\n# Remember to print it out!\nprint(y)\n</code></pre></div>    </div>\n\n    <p>416826</p>\n  </blockquote>\n</blockquote>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Test solutions here!\n# By the way, lines starting with a # are comment lines!\n# You can use that to take notes, and not affect how your code runes\n# People use it for documentation: explaining what the function does,\n# what a variable means, why they chose this or that algorithm.\n</span></code></pre></div></div>\n\n<h2 id=\"libraries\">Libraries</h2>\n\n<p>A library is a collection of files (called modules) that contains functions for use by other programs. It may also contain data values (e.g., numerical constants) and other things. A library’s contents are supposed to be related, but there’s no way to enforce that. The Python standard library is an extensive suite of modules that comes with Python itself. Many additional libraries are available from <a href=\"https://pypi.org/\">PyPI (the Python Package Index)</a>.</p>\n\n<h3 id=\"libraries-and-modules\">Libraries and modules</h3>\n\n<p>A library is a collection of modules, but the terms are often used interchangeably, especially since many libraries only consist of a single module, so don’t worry if you mix them.</p>\n\n<h3 id=\"a-program-must-import-a-library-module-before-using-it\">A program must import a library module before using it.</h3>\n\n<p>You can use <code class=\"language-plaintext highlighter-rouge\">import</code> to load a library module into a program’s memory, then refer to things from the <code class=\"language-plaintext highlighter-rouge\">module as module_name.thing_name</code>. Python uses <code class=\"language-plaintext highlighter-rouge\">.</code> to mean “part of”. For example, using <code class=\"language-plaintext highlighter-rouge\">datetime</code>, one of the modules in the standard library:</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">import</span> <span class=\"n\">datetime</span>\n\n<span class=\"c1\"># it is currently\n</span><span class=\"n\">datetime</span><span class=\"p\">.</span><span class=\"n\">datetime</span><span class=\"p\">.</span><span class=\"nf\">now</span><span class=\"p\">()</span>\n</code></pre></div></div>\n\n<blockquote class=\"tip\">\n  <tip-title>More complicated importing</tip-title>\n\n  <p>First, you can use <code class=\"language-plaintext highlighter-rouge\">help</code> to learn about the contents of a library module. it works just like help for a function.</p>\n\n  <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>help(datetime)\n</code></pre></div>  </div>\n\n  <p>You can import specific items from a library module to shorten programs. You can use <code class=\"language-plaintext highlighter-rouge\">from ... import ...</code> to load only specific items from a library module. Then refer to them directly without library name as prefix.</p>\n\n  <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>from datetime import datetime\n\ndatetime.now()\n</code></pre></div>  </div>\n\n  <p>You can create an alias for a library module when importing it to shorten programs. Use <code class=\"language-plaintext highlighter-rouge\">import ... as ...</code> to give a library a short alias while importing it. Then refer to items in the library using that shortened name.</p>\n\n  <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>from datetime import datetime as dt\n\ndt.now()\n</code></pre></div>  </div>\n</blockquote>\n\n<h2 id=\"math-module\">Math Module</h2>\n\n<p>Let’s import the math module:</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">import</span> <span class=\"n\">math</span>\n</code></pre></div></div>\n\n<p>This imports the math module. If you ever don’t know what a function does, you can use the <code class=\"language-plaintext highlighter-rouge\">help()</code> command:</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nf\">help</span><span class=\"p\">(</span><span class=\"n\">math</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p>And you’ll see a list of the functions and properties available. Let’s try out one of those functions now:</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">math</span><span class=\"p\">.</span><span class=\"nf\">sqrt</span><span class=\"p\">(</span><span class=\"mi\">9</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<blockquote class=\"solution\">\n  <solution-title>Tip: Why `math.`?</solution-title>\n  <p>When we import a module like <code class=\"language-plaintext highlighter-rouge\">import math</code>, we need to use that as a prefix. Imagine we had two different modules, <code class=\"language-plaintext highlighter-rouge\">math</code> and <code class=\"language-plaintext highlighter-rouge\">other_math</code>, and both have a <code class=\"language-plaintext highlighter-rouge\">sqrt</code> function. How would Python know which <code class=\"language-plaintext highlighter-rouge\">sqrt</code> function we wanted? So we use <code class=\"language-plaintext highlighter-rouge\">math.sqrt</code> to be explicit about which function we need.</p>\n</blockquote>\n\n<p>You might also have done powers (e.g. 2 cubed, or \\(2^3\\)) in the past, too:</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">math</span><span class=\"p\">.</span><span class=\"nf\">pow</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span> <span class=\"mi\">3</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p>Above we computed 2 cubed, but how did we know what to write? We might have seen <code class=\"language-plaintext highlighter-rouge\">math.pow</code> in the <code class=\"language-plaintext highlighter-rouge\">help(math)</code> page above, but how did we know <code class=\"language-plaintext highlighter-rouge\">2, 3</code>? The same way of course:</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nf\">help</span><span class=\"p\">(</span><span class=\"n\">math</span><span class=\"p\">.</span><span class=\"nb\">pow</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p>That would tell us that if we want 2 cubed, we need to write <code class=\"language-plaintext highlighter-rouge\">2</code> and <code class=\"language-plaintext highlighter-rouge\">3</code>. So let’s do some exercises now and practice some of our maths skills.</p>\n\n<blockquote class=\"question\">\n  <question-title>Exercise 1: Basics</question-title>\n  <p>Please convert this function from an equation, into python code:</p>\n\n\\[x = 2^8\\]\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>x = math.pow(2, 8)\nprint(x)\n</code></pre></div>    </div>\n  </blockquote>\n</blockquote>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Test solutions here!\n</span><span class=\"n\">x</span> <span class=\"o\">=</span>\n<span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"n\">x</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<blockquote class=\"question\">\n  <question-title>Exercise 2: Averaging two values</question-title>\n  <p>See if you can find the average of these two values, using the math operations</p>\n\n  <ul>\n    <li>23484</li>\n    <li>12345</li>\n  </ul>\n\n  <p>You can find the average by summing, and dividing by 2:</p>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>(23484 + 12345) / 2\n</code></pre></div>    </div>\n  </blockquote>\n</blockquote>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Test solutions here!\n</span></code></pre></div></div>\n\n<blockquote class=\"question\">\n  <question-title>Exercise 3: Round-trip</question-title>\n  <p>Please convert this function from an equation, into python code. Remember, you can assign values to variables, if you want to split this into multiple steps.</p>\n\n\\[x = \\sqrt{9^2}\\]\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>y = math.pow(9, 2)\nx = math.sqrt(y)\n</code></pre></div>    </div>\n\n    <p>Or</p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>x = math.sqrt(math.pow(9, 2))\n</code></pre></div>    </div>\n  </blockquote>\n</blockquote>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Test solutions here!\n</span></code></pre></div></div>\n\n<blockquote class=\"question\">\n  <question-title>Exercise 4: Pythagorean Theorem</question-title>\n  <p>The formula for a 90° triangle can be expressed as:</p>\n\n\\[a^2 + b^2 = c^2\\]\n\n  <p>Or, expressed in terms of c, \\(c = \\sqrt{a^2 + b^2}\\)</p>\n\n  <p>Please convert this to python and find <code class=\"language-plaintext highlighter-rouge\">c</code> when</p>\n\n  <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>a = 65\nb = 72\n</code></pre></div>  </div>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <p>c = 97</p>\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>c = math.sqrt(math.pow(a, 2) + math.pow(b, 2))\n</code></pre></div>    </div>\n  </blockquote>\n</blockquote>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Test solutions here!\n</span></code></pre></div></div>\n\n<blockquote class=\"question\">\n  <question-title>Exercise 5: Quadratic Roots</question-title>\n  <p>Way back in algebra class, you might have been given a quadratic equation, something like:</p>\n\n  <p>\\(y = 2*x^2 + x - 1\\) and were told to find the roots of this function, using a complicated equation. So challenge time: reproduce this equation in Python:</p>\n\n  <p>Given the following variables:</p>\n\n  <p>a = 2\nb = 1\nc = -1</p>\n\n  <p>Convert the following formulas to Python, and find the answers</p>\n\n  <p>\\(\\dfrac{-b + \\sqrt{b^2 - 4ac}}{2a}\\) and \\(\\dfrac{-b - \\sqrt{b^2 - 4ac}}{2a}\\)</p>\n\n  <p>Since we’re checking your ability to write Python, not do math, it should give <code class=\"language-plaintext highlighter-rouge\">-1</code> and <code class=\"language-plaintext highlighter-rouge\">0.5</code> to let you check your work. If you got those values, you got it right!</p>\n\n  <p>Make sure you save each root as it’s own variable, and then print them out.</p>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>root1 = (-b + math.sqrt(math.pow(b, 2) - 4 * a * c))/(2 * a)\nroot2 = (-b - math.sqrt(math.pow(b, 2) - 4 * a * c))/(2 * a)\nprint(root1)\nprint(root2)\n</code></pre></div>    </div>\n  </blockquote>\n</blockquote>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\"># Test solutions here!\n</span><span class=\"n\">root1</span> <span class=\"o\">=</span>\n<span class=\"n\">root2</span> <span class=\"o\">=</span>\n<span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"n\">root1</span><span class=\"p\">)</span>\n<span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"n\">root2</span><span class=\"p\">)</span>\n</code></pre></div></div>\n"],"ref_slides":[],"hands_on":true,"slides":false,"mod_date":"2023-02-13 13:04:13 +0000","pub_date":"2022-04-25 11:43:04 +0000","version":15,"api":"https://training.galaxyproject.org/training-material/api/topics/data-science/tutorials/python-math/tutorial.json","tools":[],"supported_servers":{"exact":[],"inexact":[{"name":"UseGalaxy.eu","url":"https://usegalaxy.eu","id":"eu","human":"Galaxy Europe","usegalaxy":true},{"name":"UseGalaxy.org","url":"https://usegalaxy.org","id":"us","human":"Galaxy Main","usegalaxy":true},{"name":"UseGalaxy.org.au","url":"https://usegalaxy.org.au","id":"au","human":"Galaxy Australia","usegalaxy":true},{"name":"UseGalaxy.fr","url":"https://usegalaxy.fr","id":"fr","human":"Galaxy France","usegalaxy":true}]},"topic_name_human":"Foundations of Data Science","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools: []\n","tours":false,"video":false,"slides_recordings":false,"translations":{"tutorial":[],"slides":[],"video":false},"license":"CC-BY-4.0","type":"tutorial"}