{"layout":"tutorial_hands_on","title":"Variant Calling Workflow","questions":["How do I find sequence variants between my sample and a reference genome?"],"objectives":["Understand the steps involved in variant calling.","Describe the types of data formats encountered during variant calling.","Use command line tools to perform variant calling."],"time_estimation":"50M","key_points":["Bioinformatic command line tools are collections of commands that can be used to carry out bioinformatic analyses.","To use most powerful bioinformatic tools, you will need to use the command line.","There are many different file formats for storing genomics data. It is important to understand what type of information is contained in each file, and how it was derived."],"contributions":{"authorship":["Sofokli5","fpsom","shiltemann","hexylena","carpentries"],"funding":["gallantries"]},"js_requirements":{"mathjax":null,"mermaid":false},"short_id":"T00073","url":"/topics/data-science/tutorials/bash-variant-calling/tutorial.html","topic_name":"data-science","tutorial_name":"bash-variant-calling","dir":"topics/data-science/tutorials/bash-variant-calling","symlink":null,"id":"data-science/bash-variant-calling","ref_tutorials":["<p>In this tutorial we are working with files from a long-term evolution study of an <em>E. coli</em> population (designated Ara-3). We will perform variant calling to see how the population changed over time. We care how this population changed relative to the original population, <em>E. coli</em> strain REL606. Therefore, we will align each of our samples to the <em>E. coli</em> REL606 reference genome, and see what differences exist in our reads versus the genome.</p>\n\n<p>The whole proccess is designed to be run in RStudio as an Interactive Tool, directly in Galaxy.</p>\n\n<blockquote class=\"comment\">\n  <comment-title></comment-title>\n\n  <p>This tutorial is significantly based on <a href=\"https://carpentries.org\">the Carpentries</a> <a href=\"https://datacarpentry.org/wrangling-genomics/\">“Data Wrangling and Processing for Genomics”</a> lesson</p>\n\n</blockquote>\n\n<blockquote class=\"agenda\">\n  <agenda-title></agenda-title>\n\n  <p>In this tutorial, we will cover:</p>\n\n<ol id=\"markdown-toc\">\n  <li><a href=\"#alignment-to-a-reference-genome\" id=\"markdown-toc-alignment-to-a-reference-genome\">Alignment to a reference genome</a></li>\n  <li><a href=\"#setting-up\" id=\"markdown-toc-setting-up\">Setting up</a></li>\n  <li><a href=\"#sambam-format\" id=\"markdown-toc-sambam-format\">SAM/BAM format</a></li>\n  <li><a href=\"#variant-calling\" id=\"markdown-toc-variant-calling\">Variant calling</a>    <ol>\n      <li><a href=\"#viewing-with-tview\" id=\"markdown-toc-viewing-with-tview\">Viewing with <code class=\"language-plaintext highlighter-rouge\">tview</code></a></li>\n      <li><a href=\"#viewing-with-igv\" id=\"markdown-toc-viewing-with-igv\">Viewing with IGV</a></li>\n    </ol>\n  </li>\n</ol>\n\n</blockquote>\n\n<!--SNIPPET-->\n<blockquote class=\"hands_on\">   <div class=\"box-title hands_on-title\" id=\"hands-on-launch-rstudio\"><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i> Hands-on: Launch RStudio</div>   <p>Depending on which server you are using, you may be able to run RStudio directly in Galaxy. If that is not available, RStudio Cloud can be an alternative.</p>   <blockquote class=\"tip\">   <tip-title>Launch RStudio in Galaxy</tip-title>   <p>Currently RStudio in Galaxy is only available on <a href=\"https://usegalaxy.eu\">UseGalaxy.eu</a> and <a href=\"https://usegalaxy.org\">UseGalaxy.org</a></p>   <ol>     <li>Open the Rstudio tool <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> by clicking <a href=\"https://usegalaxy.eu/?tool_id=interactive_tool_rstudio\">here to launch RStudio</a></li>     <li>Click Run Tool</li>     <li>The tool will start running and will stay running permanently</li>     <li>Click on the “User” menu at the top and go to “Active InteractiveTools” and locate the RStudio instance you started.</li>   </ol> </blockquote>   <blockquote class=\"tip\">   <tip-title>Launch RStudio Cloud if not available on Galaxy</tip-title>   <p>If RStudio is not available on the Galaxy instance:</p>   <ol>     <li>Register for <a href=\"https://client.login.rstudio.cloud/oauth/login?show_auth=0&amp;show_login=1&amp;show_setup=1\">RStudio Cloud</a>, or login if you already have an account</li>     <li>Create a new project</li>   </ol> </blockquote> </blockquote>\n<p><!--END_SNIPPET--></p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Software to use</hands-on-title>\n\n  <p>The R Console and other interactive tools like RStudio are great for prototyping code and exploring data, but sooner or later we will want to use our program in a pipeline or run it in a shell script to process thousands of data files. This is one of those cases and, in order to do that, we will use the terminal provided by the RStudio itself.\nWe go to “Tools” and pick the “Shell…” option and we are good to go. Our workspace is the left, terminal window that just opened.</p>\n\n  <p>Fortunately, <a href=\"https://docs.conda.io/en/latest/miniconda.html\">miniconda</a> is already installed. Miniconda is a package manager that simplifies the installation processes. We can and will use it to install every essential package for our tutorial. However, it is of critical importance that we do that in an new environment within our existing base and install our packages in said environment.</p>\n\n  <blockquote class=\"code-in\">\n    <code-in-title>Environment and Packages</code-in-title>\n    <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>conda create <span class=\"nt\">-n</span> name_of_your_env bwa samtools bcftools\n<span class=\"nv\">$ </span>conda activate name_of_your_env\n</code></pre></div>    </div>\n  </blockquote>\n\n  <table>\n    <thead>\n      <tr>\n        <th>Software</th>\n        <th>Version</th>\n        <th>Manual</th>\n        <th>Available for</th>\n        <th>Description</th>\n      </tr>\n    </thead>\n    <tbody>\n      <tr>\n        <td><a href=\"http://bio-bwa.sourceforge.net/\">BWA</a></td>\n        <td>0.7.17</td>\n        <td><a href=\"http://bio-bwa.sourceforge.net/bwa.shtml\">BWA Manual</a></td>\n        <td>Linux, MacOS</td>\n        <td>Mapping DNA sequences against reference genome.</td>\n      </tr>\n      <tr>\n        <td><a href=\"http://samtools.sourceforge.net/\">SAMtools</a></td>\n        <td>1.15.1</td>\n        <td><a href=\"http://www.htslib.org/doc/samtools.html\">SAMtools Manual</a></td>\n        <td>Linux, MacOS</td>\n        <td>Utilities for manipulating alignments in the SAM format.</td>\n      </tr>\n      <tr>\n        <td><a href=\"https://samtools.github.io/bcftools/\">BCFtools</a></td>\n        <td>1.15.1</td>\n        <td><a href=\"https://samtools.github.io/bcftools/bcftools.html\">BCFtools manual</a></td>\n        <td>Linux, MacOS</td>\n        <td>Utilities for variant calling and manipulating VCFs and BCFs.</td>\n      </tr>\n      <tr>\n        <td><a href=\"http://software.broadinstitute.org/software/igv/home\">IGV</a></td>\n        <td><a href=\"https://software.broadinstitute.org/software/igv/download\">IGV Download</a></td>\n        <td><a href=\"https://software.broadinstitute.org/software/igv/UserGuide\">IGV User Guide</a></td>\n        <td>Linux, MacOS, Windows</td>\n        <td>Visualization and interactive exploration of large genomics datasets.</td>\n      </tr>\n    </tbody>\n  </table>\n\n</blockquote>\n\n<h1 id=\"alignment-to-a-reference-genome\">Alignment to a reference genome</h1>\n\n<p><a href=\"../../images/bash-variant-calling/variant_calling_workflow_align.png\" rel=\"noopener noreferrer\"><img src=\"../../images/bash-variant-calling/variant_calling_workflow_align.png\" alt=\"Simplified workflow that starts with the raw sequence reads and ends up to genome alignment. \" width=\"383\" height=\"299\" loading=\"lazy\" /></a></p>\n\n<p>Image from <a href=\"https://datacarpentry.org/wrangling-genomics/\">“Data Wrangling and Processing for Genomics”</a></p>\n\n<p>We perform read alignment or mapping to determine where in the genome our reads originated from. There are a number of tools to\nchoose from and, while there is no gold standard, there are some tools that are better suited for particular NGS analyses. We will be\nusing the <a href=\"http://bio-bwa.sourceforge.net/\">Burrows Wheeler Aligner (BWA)</a>, which is a software package for mapping low-divergent\nsequences against a large reference genome.</p>\n\n<p>The alignment process consists of two steps:</p>\n\n<ol>\n  <li>Indexing the reference genome</li>\n  <li>Aligning the reads to the reference genome</li>\n</ol>\n\n<h1 id=\"setting-up\">Setting up</h1>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Download Genome</hands-on-title>\n\n  <p>First we download the reference genome for <em>E. coli</em> REL606. Although we could copy or move the file with <code class=\"language-plaintext highlighter-rouge\">cp</code> or <code class=\"language-plaintext highlighter-rouge\">mv</code>, most genomics workflows begin with a download step, so we will practice that here.</p>\n\n  <blockquote class=\"code-in\">\n    <h3 id=\"code-in-input-bash\"><i class=\"far fa-keyboard\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">code-in</span> Input: Bash</h3>\n    <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span><span class=\"nb\">cd</span> ~/dc_workshop\n<span class=\"nv\">$ </span><span class=\"nb\">mkdir</span> <span class=\"nt\">-p</span> data/ref_genome\n<span class=\"nv\">$ </span>curl <span class=\"nt\">-L</span> <span class=\"nt\">-o</span> data/ref_genome/ecoli_rel606.fasta.gz ftp://ftp.ncbi.nlm.nih.gov/genomes/all/GCA/000/017/985/GCA_000017985.1_ASM1798v1/GCA_000017985.1_ASM1798v1_genomic.fna.gz\n<span class=\"nv\">$ </span><span class=\"nb\">gunzip </span>data/ref_genome/ecoli_rel606.fasta.gz\n</code></pre></div>    </div>\n  </blockquote>\n\n  <blockquote class=\"question\">\n    <question-title></question-title>\n\n    <p>We saved this file as <code class=\"language-plaintext highlighter-rouge\">data/ref_genome/ecoli_rel606.fasta.gz</code> and then decompressed it.\nWhat is the real name of the genome?</p>\n\n    <blockquote class=\"solution\">\n      <solution-title></solution-title>\n\n      <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span><span class=\"nb\">head </span>data/ref_genome/ecoli_rel606.fasta\n</code></pre></div>      </div>\n\n      <p>The name of the sequence follows the <code class=\"language-plaintext highlighter-rouge\">&gt; </code> character. The name is <code class=\"language-plaintext highlighter-rouge\">CP000819.1 Escherichia coli B str. REL606, complete genome</code>.\nKeep this chromosome name (<code class=\"language-plaintext highlighter-rouge\">CP000819.1</code>) in mind, as we will use it later in the lesson.</p>\n    </blockquote>\n  </blockquote>\n\n  <p>We will also download a set of trimmed FASTQ files to work with that will enable us to run our variant calling workflow quite quickly.</p>\n\n  <blockquote class=\"code-in\">\n    <code-in-title>Getting easy-to-work FASTQ files</code-in-title>\n    <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>curl <span class=\"nt\">-L</span> <span class=\"nt\">-o</span> sub.tar.gz https://ndownloader.figshare.com/files/14418248\n<span class=\"nv\">$ </span><span class=\"nb\">tar </span>xvf sub.tar.gz\n<span class=\"nv\">$ </span><span class=\"nb\">mv </span>sub/ ~/dc_workshop/data/trimmed_fastq_small\n</code></pre></div>    </div>\n  </blockquote>\n\n  <p>You will also need to create directories for the results that will be generated as part of this workflow. We can do this in a single line of code, because <code class=\"language-plaintext highlighter-rouge\">mkdir</code> can accept multiple new directory names as input.</p>\n\n  <blockquote class=\"code-in\">\n    <code-in-title>Create result directories</code-in-title>\n    <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span><span class=\"nb\">mkdir</span> <span class=\"nt\">-p</span> results/sam results/bam results/bcf results/vcf\n</code></pre></div>    </div>\n  </blockquote>\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Index the reference genome</hands-on-title>\n  <p>Our first step is to index the reference genome for use by BWA. Indexing allows the aligner to quickly find potential alignment sites for query sequences in a genome, which saves time during alignment. Indexing the reference only has to be run once. The only reason you would want to create a new index is if you are working with a different reference genome or you are using a different tool for alignment.</p>\n\n  <blockquote class=\"code-in\">\n    <code-in-title>Indexing with `bwa`</code-in-title>\n    <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>bwa index data/ref_genome/ecoli_rel606.fasta\n</code></pre></div>    </div>\n  </blockquote>\n\n  <p>While the index is created, you will see output that looks something like this:</p>\n\n  <blockquote class=\"code-out\">\n    <code-out-title></code-out-title>\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>[bwa_index] Pack FASTA... 0.04 sec\n[bwa_index] Construct BWT for the packed sequence...\n[bwa_index] 1.05 seconds elapse.\n[bwa_index] Update BWT... 0.03 sec\n[bwa_index] Pack forward-only FASTA... 0.02 sec\n[bwa_index] Construct SA from BWT and Occ... 0.57 sec\n[main] Version: 0.7.17-r1188\n[main] CMD: bwa index data/ref_genome/ecoli_rel606.fasta\n[main] Real time: 1.765 sec; CPU: 1.715 sec\n</code></pre></div>    </div>\n  </blockquote>\n\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Align reads to reference genome</hands-on-title>\n\n  <p>The alignment process consists of choosing an appropriate reference genome to map our reads against and then deciding on an\naligner. We will use the BWA-MEM algorithm, which is the latest and is generally recommended for high-quality queries as it\nis faster and more accurate.</p>\n\n  <p>An example of what a <code class=\"language-plaintext highlighter-rouge\">bwa</code> command looks like is below. This command will not run, as we do not have the files <code class=\"language-plaintext highlighter-rouge\">ref_genome.fa</code>, <code class=\"language-plaintext highlighter-rouge\">input_file_R1.fastq</code>, or <code class=\"language-plaintext highlighter-rouge\">input_file_R2.fastq</code>.</p>\n\n  <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ bwa mem ref_genome.fasta input_file_R1.fastq input_file_R2.fastq &gt; output.sam\n</code></pre></div>  </div>\n\n  <p>Have a look at the <a href=\"http://bio-bwa.sourceforge.net/bwa.shtml\">bwa options page</a>. While we are running bwa with the default\nparameters here, your use case might require a change of parameters. <em>NOTE: Always read the manual page for any tool before using\nand make sure the options you use are appropriate for your data.</em></p>\n\n  <p>We are going to start by aligning the reads from just one of the\nsamples in our dataset (<code class=\"language-plaintext highlighter-rouge\">SRR2584866</code>). Later, we will be\niterating this whole process on all of our sample files.</p>\n\n  <blockquote class=\"code-in\">\n    <code-in-title>Aligning with bwa</code-in-title>\n    <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>bwa mem data/ref_genome/ecoli_rel606.fasta data/trimmed_fastq_small/SRR2584866_1.trim.sub.fastq data/trimmed_fastq_small/SRR2584866_2.trim.sub.fastq <span class=\"o\">&gt;</span> results/sam/SRR2584866.aligned.sam\n</code></pre></div>    </div>\n  </blockquote>\n\n  <blockquote class=\"code-out\">\n    <code-out-title></code-out-title>\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>[M::bwa_idx_load_from_disk] read 0 ALT contigs\n[M::process] read 77446 sequences (10000033 bp)...\n[M::process] read 77296 sequences (10000182 bp)...\n[M::mem_pestat] # candidate unique pairs for (FF, FR, RF, RR): (48, 36728, 21, 61)\n[M::mem_pestat] analyzing insert size distribution for orientation FF...\n[M::mem_pestat] (25, 50, 75) percentile: (420, 660, 1774)\n[M::mem_pestat] low and high boundaries for computing mean and std.dev: (1, 4482)\n[M::mem_pestat] mean and std.dev: (784.68, 700.87)\n[M::mem_pestat] low and high boundaries for proper pairs: (1, 5836)\n[M::mem_pestat] analyzing insert size distribution for orientation FR...\n</code></pre></div>    </div>\n  </blockquote>\n</blockquote>\n\n<h1 id=\"sambam-format\">SAM/BAM format</h1>\n\n<p>The <a href=\"https://genome.sph.umich.edu/wiki/SAM\">SAM file</a>,\nis a tab-delimited text file that contains information for each individual read and its alignment to the genome. While we do not\nhave time to go into detail about the features of the SAM format, the paper by\n<a href=\"http://bioinformatics.oxfordjournals.org/content/25/16/2078.full\">Heng Li et al.</a> provides a lot more detail on the specification.</p>\n\n<p><strong>The compressed binary version of SAM is called a BAM file.</strong> We use this version to reduce size and to allow for <em>indexing</em>, which enables efficient random access of the data contained within the file.</p>\n\n<p>The file begins with a <strong>header</strong>, which is optional. The header is used to describe the source of data, reference sequence, method of\nalignment, etc., this will change depending on the aligner being used. Following the header is the <strong>alignment section</strong>. Each line\nthat follows corresponds to alignment information for a single read. Each alignment line has <strong>11 mandatory fields</strong> for essential\nmapping information and a variable number of other fields for aligner specific information. An example entry from a SAM file is\ndisplayed below with the different fields highlighted.</p>\n\n<p><a href=\"../../images/bash-variant-calling/sam_bam.png\" rel=\"noopener noreferrer\"><img src=\"../../images/bash-variant-calling/sam_bam.png\" alt=\"sam file example with fields description, showing qname, flag, rname, pos, maqp, and cigar as the first fields. \" width=\"712\" height=\"177\" loading=\"lazy\" /></a></p>\n\n<p>Image from <a href=\"https://datacarpentry.org/wrangling-genomics/\">Data Wrangling and Processing for Genomics</a></p>\n\n<p><a href=\"../../images/bash-variant-calling/sam_bam3.png\" rel=\"noopener noreferrer\"><img src=\"../../images/bash-variant-calling/sam_bam3.png\" alt=\"sam file example with fields description, showing seq, qual, mrnm, mpos, and size as the second set of fields.\" width=\"677\" height=\"166\" loading=\"lazy\" /></a></p>\n\n<p>Image from <a href=\"https://datacarpentry.org/wrangling-genomics/\">“Data Wrangling and Processing for Genomics”</a></p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>SAM to BAM</hands-on-title>\n  <blockquote class=\"code-in\">\n    <code-in-title>bash</code-in-title>\n    <p>We will convert the SAM file to BAM format using the <code class=\"language-plaintext highlighter-rouge\">samtools</code> program with the <code class=\"language-plaintext highlighter-rouge\">view</code> command and tell this command that the input is in SAM format (<code class=\"language-plaintext highlighter-rouge\">-S</code>) and to output BAM format (<code class=\"language-plaintext highlighter-rouge\">-b</code>):</p>\n\n    <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>samtools view <span class=\"nt\">-S</span> <span class=\"nt\">-b</span> results/sam/SRR2584866.aligned.sam <span class=\"o\">&gt;</span> results/bam/SRR2584866.aligned.bam\n</code></pre></div>    </div>\n  </blockquote>\n  <blockquote class=\"code-out\">\n    <code-out-title></code-out-title>\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>[samopen] SAM header is present: 1 sequences.\n</code></pre></div>    </div>\n  </blockquote>\n\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Sort BAM file by coordinates</hands-on-title>\n\n  <p>Next we sort the BAM file using the <code class=\"language-plaintext highlighter-rouge\">sort</code> command from <code class=\"language-plaintext highlighter-rouge\">samtools</code>. <code class=\"language-plaintext highlighter-rouge\">-o</code> tells the command where to write the output.</p>\n  <blockquote class=\"code-in\">\n    <code-in-title>`sort` command</code-in-title>\n    <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>samtools <span class=\"nb\">sort</span> <span class=\"nt\">-o</span> results/bam/SRR2584866.aligned.sorted.bam results/bam/SRR2584866.aligned.bam\n</code></pre></div>    </div>\n  </blockquote>\n\n  <p>Our files are pretty small, so we will not see this output. If you run the workflow with larger files, you will see something like this:</p>\n  <blockquote class=\"code-out\">\n    <code-out-title></code-out-title>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>[bam_sort_core] merging from 2 files...\n</code></pre></div>    </div>\n  </blockquote>\n\n  <p>SAM/BAM files can be sorted in multiple ways, e.g. by location of alignment on the chromosome, by read name, etc. It is important to be aware that different alignment tools will output differently sorted SAM/BAM, and different downstream tools require differently sorted alignment files as input.</p>\n\n  <p>You can use samtools to learn more about this bam file as well.</p>\n\n  <blockquote class=\"code-in\">\n    <code-in-title>`flagstat` command</code-in-title>\n    <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>samtools flagstat results/bam/SRR2584866.aligned.sorted.bam\n</code></pre></div>    </div>\n  </blockquote>\n\n  <p>This will give you the following statistics about your sorted bam file:</p>\n\n  <blockquote class=\"code-out\">\n    <code-out-title></code-out-title>\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>351169 + 0 in total (QC-passed reads + QC-failed reads)\n0 + 0 secondary\n1169 + 0 supplementary\n0 + 0 duplicates\n351103 + 0 mapped (99.98% : N/A)\n350000 + 0 paired in sequencing\n175000 + 0 read1\n175000 + 0 read2\n346688 + 0 properly paired (99.05% : N/A)\n349876 + 0 with itself and mate mapped\n58 + 0 singletons (0.02% : N/A)\n0 + 0 with mate mapped to a different chr\n0 + 0 with mate mapped to a different chr (mapQ&gt; =5)\n</code></pre></div>    </div>\n  </blockquote>\n</blockquote>\n\n<h1 id=\"variant-calling\">Variant calling</h1>\n\n<p>A variant call is a conclusion that there is a nucleotide difference vs. some reference at a given position in an individual genome\nor transcriptome, often referred to as a Single Nucleotide Variant (SNV). The call is usually accompanied by an estimate of\nvariant frequency and some measure of confidence. Similar to other steps in this workflow, there are a number of tools available for\nvariant calling. In this workshop we will be using <code class=\"language-plaintext highlighter-rouge\">bcftools</code>, but there are a few things we need to do before actually calling the\nvariants.</p>\n\n<p><a href=\"../../images/bash-variant-calling/variant_calling_workflow.png\" rel=\"noopener noreferrer\"><img src=\"../../images/bash-variant-calling/variant_calling_workflow.png\" alt=\"Workflow that leads from sequence reads to &quot;variant calling&quot; step. \" width=\"383\" height=\"531\" loading=\"lazy\" /></a></p>\n\n<p>Image from <a href=\"https://datacarpentry.org/wrangling-genomics/\">“Data Wrangling and Processing for Genomics”</a></p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Step 1: Calculate the read coverage of positions in the genome</hands-on-title>\n\n  <p>Do the first pass on variant calling by counting read coverage with\n<a href=\"https://samtools.github.io/bcftools/bcftools.html\">bcftools</a>. We will\nuse the command <code class=\"language-plaintext highlighter-rouge\">mpileup</code>. The flag <code class=\"language-plaintext highlighter-rouge\">-O b</code> tells bcftools to generate a\nbcf format output file, <code class=\"language-plaintext highlighter-rouge\">-o</code> specifies where to write the output file, and <code class=\"language-plaintext highlighter-rouge\">-f</code> flags the path to the reference genome:</p>\n  <blockquote class=\"code-in\">\n    <code-in-title>`mpileup` command</code-in-title>\n    <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>bcftools mpileup <span class=\"nt\">-O</span> b <span class=\"nt\">-o</span> results/bcf/SRR2584866_raw.bcf <span class=\"nt\">-f</span> data/ref_genome/ecoli_rel606.fasta results/bam/SRR2584866.aligned.sorted.bam\n</code></pre></div>    </div>\n  </blockquote>\n  <blockquote class=\"code-out\">\n    <code-out-title></code-out-title>\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>[mpileup] 1 samples in 1 input files\n</code></pre></div>    </div>\n  </blockquote>\n\n  <p>We have now generated a file with coverage information for every base.</p>\n\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Step 2: Detect the single nucleotide variants (SNVs</hands-on-title>\n\n  <p>Identify SNVs using bcftools <code class=\"language-plaintext highlighter-rouge\">call</code>. We have to specify ploidy with the flag <code class=\"language-plaintext highlighter-rouge\">--ploidy</code>, which is one for the haploid <em>E. coli</em>. <code class=\"language-plaintext highlighter-rouge\">-m</code> allows for multiallelic and rare-variant calling, <code class=\"language-plaintext highlighter-rouge\">-v</code> tells the program to output variant sites only (not every site in the genome), and <code class=\"language-plaintext highlighter-rouge\">-o</code> specifies where to write the output file:</p>\n  <blockquote class=\"code-in\">\n    <code-in-title>`call` command</code-in-title>\n    <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>bcftools call <span class=\"nt\">--ploidy</span> 1 <span class=\"nt\">-m</span> <span class=\"nt\">-v</span> <span class=\"nt\">-o</span> results/vcf/SRR2584866_variants.vcf results/bcf/SRR2584866_raw.bcf\n</code></pre></div>    </div>\n  </blockquote>\n\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Step 3: Filter and report the SNV variants in variant calling format (VCF</hands-on-title>\n\n  <p>Filter the SNVs for the final output in VCF format, using <code class=\"language-plaintext highlighter-rouge\">vcfutils.pl</code>:</p>\n  <blockquote class=\"code-in\">\n    <code-in-title>Filtering with `vcfutils.pl` command</code-in-title>\n    <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>vcfutils.pl varFilter results/vcf/SRR2584866_variants.vcf  <span class=\"o\">&gt;</span> results/vcf/SRR2584866_final_variants.vcf\n</code></pre></div>    </div>\n  </blockquote>\n\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Explore the VCF format:</hands-on-title>\n\n  <blockquote class=\"code-in\">\n    <code-in-title></code-in-title>\n    <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>less <span class=\"nt\">-S</span> results/vcf/SRR2584866_final_variants.vcf\n</code></pre></div>    </div>\n  </blockquote>\n\n  <p>You will see the header (which describes the format), the time and date the file was\ncreated, the version of bcftools that was used, the command line parameters used, and\nsome additional information:</p>\n\n  <blockquote class=\"code-out\">\n    <code-out-title></code-out-title>\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>##fileformat=VCFv4.2\n##FILTER&lt;ID=PASS,Description=\"All filters passed\"&gt;\n##bcftoolsVersion=1.8+htslib-1.8\n##bcftoolsCommand=mpileup -O b -o results/bcf/SRR2584866_raw.bcf -f data/ref_genome/ecoli_rel606.fasta results/bam/SRR2584866.aligned.sorted.bam\n##reference=file://data/ref_genome/ecoli_rel606.fasta\n##contig&lt;ID=CP000819.1,length=4629812&gt;\n##ALT&lt;ID=*,Description=\"Represents allele(s) other than observed.\"&gt;\n##INFO&lt;ID=INDEL,Number=0,Type=Flag,Description=\"Indicates that the variant is an INDEL.\"&gt;\n##INFO&lt;ID=IDV,Number=1,Type=Integer,Description=\"Maximum number of reads supporting an indel\"&gt;\n##INFO&lt;ID=IMF,Number=1,Type=Float,Description=\"Maximum fraction of reads supporting an indel\"&gt;\n##INFO&lt;ID=DP,Number=1,Type=Integer,Description=\"Raw read depth\"&gt;\n##INFO&lt;ID=VDB,Number=1,Type=Float,Description=\"Variant Distance Bias for filtering splice-site artefacts in RNA-seq data (bigger is better)\",Version=\n##INFO&lt;ID=RPB,Number=1,Type=Float,Description=\"Mann-Whitney U test of Read Position Bias (bigger is better)\"&gt;\n##INFO&lt;ID=MQB,Number=1,Type=Float,Description=\"Mann-Whitney U test of Mapping Quality Bias (bigger is better)\"&gt;\n##INFO&lt;ID=BQB,Number=1,Type=Float,Description=\"Mann-Whitney U test of Base Quality Bias (bigger is better)\"&gt;\n##INFO&lt;ID=MQSB,Number=1,Type=Float,Description=\"Mann-Whitney U test of Mapping Quality vs Strand Bias (bigger is better)\"&gt;\n##INFO&lt;ID=SGB,Number=1,Type=Float,Description=\"Segregation based metric.\"&gt;\n##INFO&lt;ID=MQ0F,Number=1,Type=Float,Description=\"Fraction of MQ0 reads (smaller is better)\"&gt;\n##FORMAT&lt;ID=PL,Number=G,Type=Integer,Description=\"List of Phred-scaled genotype likelihoods\"&gt;\n##FORMAT&lt;ID=GT,Number=1,Type=String,Description=\"Genotype\"&gt;\n##INFO&lt;ID=ICB,Number=1,Type=Float,Description=\"Inbreeding Coefficient Binomial test (bigger is better)\"&gt;\n##INFO&lt;ID=HOB,Number=1,Type=Float,Description=\"Bias in the number of HOMs number (smaller is better)\"&gt;\n##INFO&lt;ID=AC,Number=A,Type=Integer,Description=\"Allele count in genotypes for each ALT allele, in the same order as listed\"&gt;\n##INFO&lt;ID=AN,Number=1,Type=Integer,Description=\"Total number of alleles in called genotypes\"&gt;\n##INFO&lt;ID=DP4,Number=4,Type=Integer,Description=\"Number of high-quality ref-forward , ref-reverse, alt-forward and alt-reverse bases\"&gt;\n##INFO&lt;ID=MQ,Number=1,Type=Integer,Description=\"Average mapping quality\"&gt;\n##bcftools_callVersion=1.8+htslib-1.8\n##bcftools_callCommand=call --ploidy 1 -m -v -o results/bcf/SRR2584866_variants.vcf results/bcf/SRR2584866_raw.bcf; Date=Tue Oct  9 18:48:10 2018\n</code></pre></div>    </div>\n\n    <p>Followed by information on each of the variations observed:</p>\n\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>#CHROM  POS     ID      REF     ALT     QUAL    FILTER  INFO    FORMAT  results/bam/SRR2584866.aligned.sorted.bam\nCP000819.1      1521    .       C       T       207     .       DP=9;VDB=0.993024;SGB=-0.662043;MQSB=0.974597;MQ0F=0;AC=1;AN=1;DP4=0,0,4,5;MQ=60\nCP000819.1      1612    .       A       G       225     .       DP=13;VDB=0.52194;SGB=-0.676189;MQSB=0.950952;MQ0F=0;AC=1;AN=1;DP4=0,0,6,5;MQ=60\nCP000819.1      9092    .       A       G       225     .       DP=14;VDB=0.717543;SGB=-0.670168;MQSB=0.916482;MQ0F=0;AC=1;AN=1;DP4=0,0,7,3;MQ=60\nCP000819.1      9972    .       T       G       214     .       DP=10;VDB=0.022095;SGB=-0.670168;MQSB=1;MQ0F=0;AC=1;AN=1;DP4=0,0,2,8;MQ=60      GT:PL\nCP000819.1      10563   .       G       A       225     .       DP=11;VDB=0.958658;SGB=-0.670168;MQSB=0.952347;MQ0F=0;AC=1;AN=1;DP4=0,0,5,5;MQ=60\nCP000819.1      22257   .       C       T       127     .       DP=5;VDB=0.0765947;SGB=-0.590765;MQSB=1;MQ0F=0;AC=1;AN=1;DP4=0,0,2,3;MQ=60      GT:PL\nCP000819.1      38971   .       A       G       225     .       DP=14;VDB=0.872139;SGB=-0.680642;MQSB=1;MQ0F=0;AC=1;AN=1;DP4=0,0,4,8;MQ=60      GT:PL\nCP000819.1      42306   .       A       G       225     .       DP=15;VDB=0.969686;SGB=-0.686358;MQSB=1;MQ0F=0;AC=1;AN=1;DP4=0,0,5,9;MQ=60      GT:PL\nCP000819.1      45277   .       A       G       225     .       DP=15;VDB=0.470998;SGB=-0.680642;MQSB=0.95494;MQ0F=0;AC=1;AN=1;DP4=0,0,7,5;MQ=60\nCP000819.1      56613   .       C       G       183     .       DP=12;VDB=0.879703;SGB=-0.676189;MQSB=1;MQ0F=0;AC=1;AN=1;DP4=0,0,8,3;MQ=60      GT:PL\nCP000819.1      62118   .       A       G       225     .       DP=19;VDB=0.414981;SGB=-0.691153;MQSB=0.906029;MQ0F=0;AC=1;AN=1;DP4=0,0,8,10;MQ=59\nCP000819.1      64042   .       G       A       225     .       DP=18;VDB=0.451328;SGB=-0.689466;MQSB=1;MQ0F=0;AC=1;AN=1;DP4=0,0,7,9;MQ=60      GT:PL\n</code></pre></div>    </div>\n  </blockquote>\n\n</blockquote>\n\n<p>This is a lot of information, so let’s take some time to make sure we understand our output.</p>\n\n<p>The first few columns represent the information we have about a predicted variation.</p>\n\n<table>\n  <thead>\n    <tr>\n      <th>column</th>\n      <th>info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>CHROM</td>\n      <td>contig location where the variation occurs</td>\n    </tr>\n    <tr>\n      <td>POS</td>\n      <td>position within the contig where the variation occurs</td>\n    </tr>\n    <tr>\n      <td>ID</td>\n      <td>a <code class=\"language-plaintext highlighter-rouge\">.</code> until we add annotation information</td>\n    </tr>\n    <tr>\n      <td>REF</td>\n      <td>reference genotype (forward strand)</td>\n    </tr>\n    <tr>\n      <td>ALT</td>\n      <td>sample genotype (forward strand)</td>\n    </tr>\n    <tr>\n      <td>QUAL</td>\n      <td>Phred-scaled probability that the observed variant exists at this site (higher is better)</td>\n    </tr>\n    <tr>\n      <td>FILTER</td>\n      <td>a <code class=\"language-plaintext highlighter-rouge\">.</code> if no quality filters have been applied, PASS if a filter is passed, or the name of the filters this variant failed</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>In an ideal world, the information in the <code class=\"language-plaintext highlighter-rouge\">QUAL</code> column would be all we needed to filter out bad variant calls.\nHowever, in reality we need to filter on multiple other metrics.</p>\n\n<p>The last two columns contain the genotypes and can be tricky to decode.</p>\n\n<table>\n  <thead>\n    <tr>\n      <th>column</th>\n      <th>info</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>FORMAT</td>\n      <td>lists in order the metrics presented in the final column</td>\n    </tr>\n    <tr>\n      <td>results</td>\n      <td>lists the values associated with those metrics in order</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>For our file, the metrics presented are GT:PL:GQ.</p>\n\n<table>\n  <thead>\n    <tr>\n      <th>metric</th>\n      <th>definition</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>AD, DP</td>\n      <td>the depth per allele by sample and coverage</td>\n    </tr>\n    <tr>\n      <td>GT</td>\n      <td>the genotype for the sample at this loci. For a diploid organism, the GT field indicates the two alleles carried by the sample, encoded by a 0 for the REF allele, 1 for the first ALT allele, 2 for the second ALT allele, etc. A 0/0 means homozygous reference, 0/1 is heterozygous, and 1/1 is homozygous for the alternate allele.</td>\n    </tr>\n    <tr>\n      <td>PL</td>\n      <td>the likelihoods of the given genotypes</td>\n    </tr>\n    <tr>\n      <td>GQ</td>\n      <td>the Phred-scaled confidence for the genotype</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>The Broad Institute’s <a href=\"https://www.broadinstitute.org/gatk/guide/article?id=1268\">VCF guide</a> is an excellent place\nto learn more about the VCF file format.</p>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <p>Use the <code class=\"language-plaintext highlighter-rouge\">grep</code> and <code class=\"language-plaintext highlighter-rouge\">wc</code> commands you have learned to assess how many variants are in the vcf file.</p>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <blockquote class=\"code-in\">\n      <p><i class=\"far fa-keyboard\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">code-in</span></p>\n      <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span><span class=\"nb\">grep</span> <span class=\"nt\">-v</span> <span class=\"s2\">\"#\"</span> results/vcf/SRR2584866_final_variants.vcf | <span class=\"nb\">wc</span> <span class=\"nt\">-l</span>\n</code></pre></div>      </div>\n    </blockquote>\n    <blockquote class=\"code-out\">\n      <p><i class=\"fas fa-laptop-code\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">code-out</span></p>\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>766\n</code></pre></div>      </div>\n    </blockquote>\n\n    <p>There are 766 variants in this file.</p>\n  </blockquote>\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Assess the alignment (visualization) - optional step</hands-on-title>\n\n  <p>It is often instructive to look at your data in a genome browser. Visualization will allow you to get a “feel” for\nthe data, as well as detecting abnormalities and problems. Also, exploring the data in such a way may give you\nideas for further analyses.  As such, visualization tools are useful for exploratory analysis. In this lesson we\nwill describe two different tools for visualization: a light-weight command-line based one and the Broad\nInstitute’s Integrative Genomics Viewer (IGV) which requires\nsoftware installation and transfer of files.</p>\n\n  <blockquote class=\"code-in\">\n    <code-in-title> In order for us to visualize the alignment files, we will need to index the BAM file using `samtools`:</code-in-title>\n\n    <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>samtools index results/bam/SRR2584866.aligned.sorted.bam\n</code></pre></div>    </div>\n  </blockquote>\n\n  <h2 id=\"viewing-with-tview\">Viewing with <code class=\"language-plaintext highlighter-rouge\">tview</code></h2>\n\n  <p><a href=\"http://www.htslib.org/\">Samtools</a> implements a very simple text alignment viewer based on the GNU\n<code class=\"language-plaintext highlighter-rouge\">ncurses</code> library, called <code class=\"language-plaintext highlighter-rouge\">tview</code>. This alignment viewer works with short indels and shows <a href=\"http://maq.sourceforge.net/\">MAQ</a> consensus.\nIt uses different colors to display mapping quality or base quality, subjected to users’ choice. Samtools viewer is known to work with a 130 GB alignment swiftly. Due to its text interface, displaying alignments over network is also very fast.</p>\n\n  <p>In order to visualize our mapped reads, we use <code class=\"language-plaintext highlighter-rouge\">tview</code>, giving it the sorted bam file and the reference file:</p>\n\n  <blockquote class=\"code-in\">\n    <code-in-title>Visualize with `tview`</code-in-title>\n\n    <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>samtools tview results/bam/SRR2584866.aligned.sorted.bam data/ref_genome/ecoli_rel606.fasta\n</code></pre></div>    </div>\n  </blockquote>\n\n  <blockquote class=\"code-out\">\n    <code-out-title></code-out-title>\n    <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>1         11        21        31        41        51        61        71        81        91        101       111       121\nAGCTTTTCATTCTGACTGCAACGGGCAATATGTCTCTGTGTGGATTAAAAAAAGAGTGTCTGATAGCAGCTTCTGAACTGGTTACCTGCCGTGAGTAAATTAAAATTTTATTGACTTAGGTCACTAAATAC\n..................................................................................................................................\n,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, ..................N................. ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,........................\n,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, ..................N................. ,,,,,,,,,,,,,,,,,,,,,,,,,,,.............................\n...................................,g,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,  ....................................   ................\n,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,....................................   ....................................      ,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,  ....................................  ,,a,,,,,,,,,,,,,,,,,,,,,,,,,,,,,     .......\n,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, .............................  ,,,,,,,,,,,,,,,,,g,,,,,    ,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,  ...........................T.......   ,,,,,,,,,,,,,,,,,,,,,,,c,          ......\n......................... ................................   ,g,,,,,,,,,,,,,,,,,,,      ...........................\n,,,,,,,,,,,,,,,,,,,,, ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, ,,,,,,,,,,,,,,,,,,,,,,,,,,,       ..........................\n,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,   ................................T..  ..............................   ,,,,,,\n...........................       ,,,,,,g,,,,,,,,,,,,,,,,,   ....................................         ,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,, ....................................  ...................................        ....\n....................................  ........................  ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,      ....\n,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,   ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,  ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n........................            .................................. .............................     ....\n,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,   ....................................        ..........................\n...............................       ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, ....................................\n...................................  ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,  ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,, ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,  ..................................\n.................................... ,,,,,,,,,,,,,,,,,,a,,,,,,,,,,,,,,,,,        ,,,,,,,,,,,,,,,,,,,,,,,,,\n,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,  ............................ ,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,,\n</code></pre></div>    </div>\n  </blockquote>\n\n  <p>The first line of output shows the genome coordinates in our reference genome. The second line shows the reference\ngenome sequence. The third line shows the consensus sequence determined from the sequence reads. A <code class=\"language-plaintext highlighter-rouge\">.</code> indicates\na match to the reference sequence, so we can see that the consensus from our sample matches the reference in most\nlocations. That is good! If that was not the case, we should probably reconsider our choice of reference.</p>\n\n  <p>Below the horizontal line, we can see all of the reads in our sample aligned with the reference genome. Only\npositions where the called base differs from the reference are shown. You can use the arrow keys on your keyboard\nto scroll or type <code class=\"language-plaintext highlighter-rouge\">?</code> for a help menu. To navigate to a specific position, type <code class=\"language-plaintext highlighter-rouge\">g</code>. A dialogue box will appear. In\nthis box, type the name of the “chromosome” followed by a colon and the position of the variant you would like to view\n(e.g. for this sample, type <code class=\"language-plaintext highlighter-rouge\">CP000819.1:50</code> to view the 50th base. Type <code class=\"language-plaintext highlighter-rouge\">Ctrl^C</code> or <code class=\"language-plaintext highlighter-rouge\">q</code> to exit <code class=\"language-plaintext highlighter-rouge\">tview</code>.</p>\n\n  <blockquote class=\"question\">\n    <question-title></question-title>\n\n    <p>Visualize the alignment of the reads for our <code class=\"language-plaintext highlighter-rouge\">SRR2584866</code> sample. What variant is present at\nposition 4377265? What is the canonical nucleotide in that position?</p>\n\n    <blockquote class=\"solution\">\n      <solution-title></solution-title>\n\n      <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>samtools tview ~/dc_workshop/results/bam/SRR2584866.aligned.sorted.bam ~/dc_workshop/data/ref_genome/ecoli_rel606.fasta\n</code></pre></div>      </div>\n\n      <p>Then type <code class=\"language-plaintext highlighter-rouge\">g</code>. In the dialogue box, type <code class=\"language-plaintext highlighter-rouge\">CP000819.1:4377265</code>.\n<code class=\"language-plaintext highlighter-rouge\">G</code> is the variant. <code class=\"language-plaintext highlighter-rouge\">A</code> is canonical. This variant possibly changes the phenotype of this sample to hypermutable. It occurs\nin the gene <em>mutL</em>, which controls DNA mismatch repair.</p>\n    </blockquote>\n  </blockquote>\n\n  <h2 id=\"viewing-with-igv\">Viewing with IGV</h2>\n\n  <p><a href=\"http://www.broadinstitute.org/igv/\">IGV</a> is a stand-alone browser, which has the advantage of being installed locally and providing fast access. Web-based genome browsers, like <a href=\"http://www.ensembl.org/index.html\">Ensembl</a> or the <a href=\"https://genome.ucsc.edu/\">UCSC browser</a>, are slower, but provide more functionality. They not only allow for more polished and flexible visualization, but also provide easy access to a wealth of annotations and external data sources. This makes it straightforward to relate your data with information about repeat regions, known genes, epigenetic features or areas of cross-species conservation, to name just a few.</p>\n\n  <p>In order to use IGV, we will need to download the files, that we are going to use as input, to our local machine. We can do this easily via the Galaxy RStudio interface, in which we were working all along. \nWe will work on the lower right panel in the RStudio, on the “Files” tab, wehre we simply need to select the desired files by checking the boxes left to their name.\nThen, we click on the option “Export”, which we can find on the said panel in the “More” dropdown tab. After assigning a name for the file to be downloaded we hit “Download” and our selection are localy downloaded. \nThe files we are going to use are listed below:</p>\n\n  <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>~/dc_workshop/results/bam/SRR2584866.aligned.sorted.bam \n~/dc_workshop/results/bam/SRR2584866.aligned.sorted.bam.bai \n~/dc_workshop/data/ref_genome/ecoli_rel606.fasta \n~/dc_workshop/results/vcf/SRR2584866_final_variants.vcf \n</code></pre></div>  </div>\n\n  <p>Next, we need to open the IGV software. If you have not done so already, you can download IGV from the <a href=\"https://www.broadinstitute.org/software/igv/download\">Broad Institute’s software page</a>, double-click the <code class=\"language-plaintext highlighter-rouge\">.zip</code> file\nto unzip it, and then drag the program into your Applications folder.</p>\n\n  <ol>\n    <li>Open IGV.</li>\n    <li>Load our reference genome file (<code class=\"language-plaintext highlighter-rouge\">ecoli_rel606.fasta</code>) into IGV using the <strong>“Load Genomes from File…“</strong> option under the <strong>“Genomes”</strong> pull-down menu.</li>\n    <li>Load our BAM file (<code class=\"language-plaintext highlighter-rouge\">SRR2584866.aligned.sorted.bam</code>) using the <strong>“Load from File…“</strong> option under the <strong>“File”</strong> pull-down menu.</li>\n    <li>Do the same with our VCF file (<code class=\"language-plaintext highlighter-rouge\">SRR2584866_final_variants.vcf</code>).</li>\n  </ol>\n\n  <p>Your IGV browser should look like the screenshot below:</p>\n\n  <p><a href=\"../../images/bash-variant-calling/igv-screenshot.png\" rel=\"noopener noreferrer\"><img src=\"../../images/bash-variant-calling/igv-screenshot.png\" alt=\"IGV screenshot. \" width=\"1920\" height=\"616\" loading=\"lazy\" /></a></p>\n\n  <p>There should be two tracks: one coresponding to our BAM file and the other for our VCF file.</p>\n\n  <p>In the <strong>VCF track</strong>, each bar across the top of the plot shows the allele fraction for a single locus. The second bar shows\nthe genotypes for each locus in each <em>sample</em>. We only have one sample called here, so we only see a single line. Dark blue =\nheterozygous, Cyan = homozygous variant, Grey = reference.  Filtered entries are transparent.</p>\n\n  <p>Zoom in to inspect variants you see in your filtered VCF file to become more familiar with IGV. See how quality information\ncorresponds to alignment information at those loci.\nUse <a href=\"http://software.broadinstitute.org/software/igv/AlignmentData\">this website</a> and the links therein to understand how IGV colors the alignments.</p>\n\n</blockquote>\n\n<blockquote class=\"tip\">\n  <tip-title>BWA alignment options</tip-title>\n  <p>BWA consists of three algorithms: BWA-backtrack, BWA-SW and BWA-MEM. The first algorithm is designed for Illumina sequence\nreads up to 100bp, while the other two are for sequences ranging from 70bp to 1Mbp. BWA-MEM and BWA-SW share similar features such\nas long-read support and split alignment, but BWA-MEM, which is the latest, is generally recommended for high-quality queries as it\nis faster and more accurate.</p>\n</blockquote>\n"],"ref_slides":[],"video_library":{"tutorial":null,"slides":null,"demo":null,"both":null,"session":null},"hands_on":true,"slides":false,"mod_date":"2023-10-23 09:44:54 +0000","pub_date":"2022-07-07 13:46:01 +0000","version":14,"api":"https://training.galaxyproject.org/training-material/api/topics/data-science/tutorials/bash-variant-calling/tutorial.json","tools":[],"supported_servers":{"exact":[],"inexact":[{"name":"UseGalaxy.eu","url":"https://usegalaxy.eu","id":"eu","human":"Galaxy Europe","usegalaxy":true},{"name":"UseGalaxy.org","url":"https://usegalaxy.org","id":"us","human":"Galaxy Main","usegalaxy":true},{"name":"UseGalaxy.org.au","url":"https://usegalaxy.org.au","id":"au","human":"Galaxy Australia","usegalaxy":true},{"name":"UseGalaxy.fr","url":"https://usegalaxy.fr","id":"fr","human":"Galaxy France","usegalaxy":true}]},"topic_name_human":"Foundations of Data Science","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools: []\n","tours":false,"video":false,"translations":{"tutorial":[],"slides":[],"video":false},"license":"CC-BY-4.0","type":"tutorial","contributors":[{"name":"Sofoklis Keisaris","email":"sofoskeisaris@gmail.com","orcid":"0000-0002-4833-4726","joined":"2022-05","id":"Sofokli5","url":"https://training.galaxyproject.org/training-material/api/contributors/Sofokli5.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/Sofokli5/"},{"name":"Fotis E. Psomopoulos","email":"fpsom@certh.gr","twitter":"fopsom","matrix":"fpsom:matrix.org","orcid":"0000-0002-0222-4273","linkedin":"fpsom","joined":"2019-03","elixir_node":"gr","affiliations":["gallantries","elixir-europe"],"id":"fpsom","url":"https://training.galaxyproject.org/training-material/api/contributors/fpsom.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/fpsom/"},{"name":"Saskia Hiltemann","maintainer_contact":"gitter","email":"saskia.hiltemann@gmail.com","fediverse":"https://mstdn.science/@shiltemann","fediverse_flavor":"mastodon","bluesky":"shiltemann.bsky.social","linkedin":"shiltemann","matrix":"shiltemann:matrix.org","orcid":"0000-0003-3803-468X","joined":"2017-09","bio":"Researcher at Erasmus Medical Center","elixir_node":"nl","contact_for_training":true,"affiliations":["CINECA-Project","gallantries","erasmusmc","elixir-europe","uni-freiburg"],"location":{"country":"NL","lat":51.912,"lon":4.462},"id":"shiltemann","url":"https://training.galaxyproject.org/training-material/api/contributors/shiltemann.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/shiltemann/"},{"name":"Helena Rasche","orcid":"0000-0001-9760-8992","maintainer_contact":"gitter","matrix":"hexylena:matrix.org","joined":"2017-09","elixir_node":"nl","affiliations":["gallantries","by-covid","erasmusmc","elixir-europe","elixir-converge"],"former_affiliations":["deNBI","avans-atgm","uni-freiburg"],"contact_for_training":false,"location":{"country":"NL","lat":51.91,"lon":4.46},"id":"hexylena","url":"https://training.galaxyproject.org/training-material/api/contributors/hexylena.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/hexylena/"},{"name":"The Carpentries","joined":"2021-09","id":"carpentries","url":"https://training.galaxyproject.org/training-material/api/organisations/carpentries.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/carpentries/"},{"name":"Gallantries: Bridging Training Communities in Life Science, Environment and Health","short_name":"Gallantries","start_date":"2020-09-01","end_date":"2023-09-30","joined":"2020-09","avatar":"https://gallantries.github.io/assets/images/gallantries-logo.png","github":false,"funder":true,"url":"https://training.galaxyproject.org/training-material/api/funders/gallantries.json","funder_name":"Erasmus+ Programme","funding_id":"2020-1-NL01-KA203-064717","funding_system":"erasmusplus","funding_statement":"This project (<a href=\"https://erasmus-plus.ec.europa.eu/projects/search/details/2020-1-NL01-KA203-064717\"><code class=\"language-plaintext highlighter-rouge\">2020-1-NL01-KA203-064717</code></a>) is funded with the support of the Erasmus+ programme of the European Union. Their funding has supported a large number of tutorials within the GTN across a wide array of topics.\n<img src=\"https://gallantries.github.io/assets/images/logosbeneficaireserasmusright_en.jpg\" alt=\"eu flag with the text: with the support of the erasmus programme of the european union\" />\n<img src=\"https://www.erasmusplus.nl/assets/images/logo.png\" alt=\"erasmus plus logo\" />","members":["abretaud","bebatut","colineroyaux","fpsom","hexylena","shiltemann","yvanlebras"],"id":"gallantries","page":"https://training.galaxyproject.org/training-material/hall-of-fame/gallantries/"}]}