{"layout":"tutorial_slides","title":"Essential genes detection with Transposon insertion sequencing","zenodo_link":"https://doi.org/10.5281/zenodo.940733","tags":["bacteria","tnseq","essential genes"],"questions":["What is Transposon insertion Sequencing?","How to get TA sites Coverage ? ","How to predict essential genes ?"],"objectives":["Understand the read structure of TnSeq analyses","Predict Essential genes with Transit","Compare gene essentiality in control sample and an different experimental condition"],"time_estimation":"7H","key_points":null,"contributors":["delphine-l"],"subtopic":"prokaryote","edam_ontology":["topic_0622","topic_3301","topic_0080","topic_0798"],"priority":4,"js_requirements":{"mathjax":null,"mermaid":false},"short_id":"S00070","url":"/topics/genome-annotation/tutorials/tnseq/slides.html","topic_name":"genome-annotation","tutorial_name":"tnseq","dir":"topics/genome-annotation/tutorials/tnseq","symlink":null,"id":"genome-annotation/tnseq","ref_tutorials":["<p>In microbiology, identifying links between genotype and phenotype is key to understand bacteria growth and virulence mechanisms, and to identify targets for drugs and vaccines. These analysis are limited by the lack of bacterial genome annotations (<em>e.g.</em> 30% of genes for <em>S. pneumoniae</em> are of unknown function) and by the fact that genotypes often arose from complex composant interactions.</p>\n\n<h2 id=\"transposon-insertion-sequencing\">Transposon insertion Sequencing</h2>\n\n<p>Transposon insertion sequencing is a technique used to functionally annotate bacterial genomes. In this technique, the genome is saturated by insertions of transposons. Transposons are highly regulated, discrete DNA segments that can relocate within the genome. They have a large influence on gene expression and can be used to determine the function of genes.</p>\n\n<p>When a transposon inserts itself in a gene, the gene’s function will be disrupted, affecting the fitness (growth) of the bacteria. We can then manipulate transposons for use in insertional mutagenesis, <em>i.e.</em> creation of mutations of DNA by the addition of transposons. The genomes can be then sequenced to locate the transposon insertion site and the function affected by a transposon insertion can be linked to the disrupted gene.</p>\n\n<figure id=\"figure-1\" style=\"max-width: 90%;\"><img src=\"../../images/tnseq/principle_tnseq.png\" alt=\"Illustration of tnseq Method. \" width=\"1407\" height=\"1090\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/tnseq/principle_tnseq.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 1</strong>:</span> Transposon insertion sequencing method (from <a href=\"#Chao2016\"> Chao <i>et al.</i> 2016</a>)</figcaption></figure>\n\n<ol>\n  <li>\n    <p><strong>Data production</strong> (<strong>a</strong> in the previous image)</p>\n\n    <p>An initial population of genomes is mutated so that the genome of the bacteria is saturated with transposon insertions. A library is called <em>saturated</em> if in the genomes across the whole population of bacteria, each potential insertion site has at least one insertion. The population is then divided into several media containing different growth conditions, to identify the impact of the insertions on the bacteria growth. After growth, the regions flanking the insertion are amplified and sequenced, allowing to determine the location of the insertion.</p>\n  </li>\n  <li>\n    <p><strong>Analysis</strong> (<strong>b</strong> in the previous image)</p>\n\n    <p>The sequences are aligned to the reference genome to identify the location of the regions flanking the insertions. The resulting data will show a discrete repartition of reads on each site. If a gene present several insertions, like the two leftmost genes in <em>Condition A</em>, it means that its disruption has little or no impact to the bacterial growth. On the other hand, when a gene shows no insertions at all, like the rightmost gene in <em>Condition A</em>, is means that any disruption in this gene killed the bacteria, meaning it is a gene essential to bacteria survival. If the library is sufficiently saturated, there is a clear threshold between essential and non-essential genes when you analyze the insertion rate per gene.</p>\n  </li>\n</ol>\n\n<p>Two type of transposon insertion methods exist:</p>\n<ul>\n  <li>Gene disruption, where we analyze only the disruptions. This will covered by of this tutorial</li>\n  <li>Regulatory element insertion, where different promoters are inserted by the transposon, and we analyze the change in gene expression in addition to the disruption. This method will be the subject of another tutorial.</li>\n</ul>\n\n<h2 id=\"building-a-tnseq-library\">Building a TnSeq library</h2>\n\n<p>Different types of transposons can be used depending of the goal of your analysis.</p>\n\n<ul>\n  <li>Randomly pooled transposon\n    <ul>\n      <li>\n        <p>Mariner-based transposons, common and stable transposons which target the “TA” dinucleotides</p>\n\n        <p>The TA are distributed relatively evenly along genome. The Mariner-based transposons can be inserted to impact statistically every gene, with in average more than 30 insertions site per kb. With the low insertion bias, it is easy to build saturated libraries. But local variations means less loci and less statistical power.</p>\n      </li>\n      <li>\n        <p>Tn5-based vectors, which insert at random sites</p>\n\n        <p>This transposon do not require any target sequences. It is useful for specie where it is difficult to build mariner based transposons. But it has a preference for high GC content, causing insertion bias</p>\n      </li>\n    </ul>\n  </li>\n  <li>\n    <p>Defined sequence transposon</p>\n\n    <p>It can be used to study interactions in pathways of interest, but also more precise targeting (small genes, pathways) for specific analyses</p>\n  </li>\n</ul>\n\n<p>Independently of the transposon choice we need to be careful about the library complexity. With a large complex library, multiple insertion can be found in every potential locus. The higher density of insertion, the greater precision in identifying limits of regions of interest. If the density of the library is too low, some genes might by chance not be disrupted and mistaken for essential. The advantage of a target specific transposon, like the mariner, in opposition of a Tn5-based transposon inserting randomly, it that the limited number of insertion sites makes it easier to build high complexity libraries.</p>\n\n<p>After selection of the type of transposon, we need to modify it to allow insertion site amplification and sequencing to get a library fitting the transposon insertion. Biases could be introduced during the process due to uneven fragment sizes. To avoid that, we can introduce a Type I restriction site to cleave DNA downstream of transposon, and get uniform fragment sizes and therefore avoid a bias in the representation of the insertions.</p>\n\n<p>As we just want to identify the TA site affected by an insertion, we only need the location of the start of the reads and not a good coverage of the entire genome. Long reads are then not so important. On the other hand, a minimum transposon length of 16 bp is necessary for precise mapping on the genome <span class=\"citation\"><a href=\"#Kwon2015\">Kwon <i>et al.</i> 2015</a></span>. We can therefore not use the BsmFI restriction site (11 to 12 bp) but MmeI.</p>\n\n<p><strong>In this tutorial, we are using mariner transposon targeting TA sequences, in ordered to target the whole genome uniformly,</strong> with two specific regions used to specifically sequence the region upstream of the insertion <span class=\"citation\"><a href=\"#Santiago2015\">Santiago <i>et al.</i> 2015</a></span></p>\n\n<figure id=\"figure-2\" style=\"max-width: 90%;\"><img src=\"../../images/tnseq/tranposon_structure.png\" alt=\"Structure of the transposon containing several parcodes and adapters. \" width=\"1284\" height=\"1045\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/tnseq/tranposon_structure.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 2</strong>:</span> Structure of the transposon containing several parcodes and adapters (from <a href=\"#Santiago2015\"> Santiago <i>et al.</i> 2015</a>)</figcaption></figure>\n\n<p>The transposon inserts itself at TA site at the ITR junctions. These ITR junctions have been modified to include a Mme1 restriction site and a NotI restriction site which cut 21 bp upstream the restriction site. These two site are the 5’ and 3’ limits to the genomic DNA we want to sequence.</p>\n\n<ol>\n  <li>\n    <p>After digestion by NotI restriction enzyme, the fragments are attached to biotinylated adaptors that link to NotI restriction site. The attached fragment are then digested by MMeI at a site upstream, where an Illumina primer is then linked. The sequencing is then done, adding Illumina adaptors and an additional barcode to the read for multiplexed sequencing.</p>\n  </li>\n  <li>\n    <p>An insertion can sometimes be composed of one or more copies of the transposon (multimer). There is therefore a risk to select plasmid backbone sequence. To solve this problem, an additional NotI has been added in the backbone to create different length construct, that can later be filtrated. Different promoters are added with an additional 3 bp barcode to analyze differential expression impact. This type of complex analysis will be covered in a follow-up tutorial.</p>\n  </li>\n</ol>\n\n<p>Because of this complex transposon structure, the reads obtained after sequencing contain a lot of adapters and foreign sequences used to insert and target the transposon. Several steps of preprocessing are then need to extract only the transposon sequence before finding its location on the genome.</p>\n\n<h2 id=\"tnseq-analysis\">Tnseq analysis</h2>\n\n<p>Once the genomic sequences are extracted from the initial reads (<em>i.e.</em> remove non genomic sequences from the reads), they need to be located each on the genome to link them to a TA site and genes. To do that we map them to a reference genome, link them to a specific insertion site, and then count the number of insertion for each TA site and identify essential genes of regions.</p>\n\n<p>We will apply this approach in this tutorial using a subset of TnSeq reads from <span class=\"citation\"><a href=\"#Santiago2015\">Santiago <i>et al.</i> 2015</a></span>.</p>\n\n<blockquote class=\"agenda\">\n  <agenda-title></agenda-title>\n\n  <p>In this tutorial, we will deal with:</p>\n\n<ol id=\"markdown-toc\">\n  <li><a href=\"#transposon-insertion-sequencing\" id=\"markdown-toc-transposon-insertion-sequencing\">Transposon insertion Sequencing</a></li>\n  <li><a href=\"#building-a-tnseq-library\" id=\"markdown-toc-building-a-tnseq-library\">Building a TnSeq library</a></li>\n  <li><a href=\"#tnseq-analysis\" id=\"markdown-toc-tnseq-analysis\">Tnseq analysis</a></li>\n  <li><a href=\"#data-upload\" id=\"markdown-toc-data-upload\">Data upload</a></li>\n  <li><a href=\"#remove-all-non-genomic-sequences-from-the-sequenced-reads\" id=\"markdown-toc-remove-all-non-genomic-sequences-from-the-sequenced-reads\">Remove all non genomic sequences from the sequenced reads</a>    <ol>\n      <li><a href=\"#separate-reads-by-experimental-conditions\" id=\"markdown-toc-separate-reads-by-experimental-conditions\">Separate reads by experimental conditions</a></li>\n      <li><a href=\"#remove-adapter-sequence\" id=\"markdown-toc-remove-adapter-sequence\">Remove Adapter sequence</a></li>\n      <li><a href=\"#separate-reads-from-different-transposon-constructs\" id=\"markdown-toc-separate-reads-from-different-transposon-constructs\">Separate reads from different transposon constructs</a></li>\n      <li><a href=\"#remove-the-remaining-transposon-sequence\" id=\"markdown-toc-remove-the-remaining-transposon-sequence\">Remove the remaining transposon sequence</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#count-the-number-of-insertion-per-ta-sites\" id=\"markdown-toc-count-the-number-of-insertion-per-ta-sites\">Count the number of insertion per TA sites</a>    <ol>\n      <li><a href=\"#align-the-reads-to-a-reference-genome\" id=\"markdown-toc-align-the-reads-to-a-reference-genome\">Align the reads to a reference genome</a></li>\n      <li><a href=\"#compute-coverage-of-the-genome\" id=\"markdown-toc-compute-coverage-of-the-genome\">Compute coverage of the genome</a></li>\n      <li><a href=\"#identify-ta-sites-positions\" id=\"markdown-toc-identify-ta-sites-positions\">Identify TA sites positions</a></li>\n      <li><a href=\"#merge-overall-coverage-and-positions-of-ta-sites-to-get-the-coverage-of-each-ta-sites\" id=\"markdown-toc-merge-overall-coverage-and-positions-of-ta-sites-to-get-the-coverage-of-each-ta-sites\">Merge overall coverage and positions of TA sites to get the coverage of each TA sites</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#predicting-essential-genes-with-transit\" id=\"markdown-toc-predicting-essential-genes-with-transit\">Predicting Essential Genes with Transit</a>    <ol>\n      <li><a href=\"#transit\" id=\"markdown-toc-transit\">Transit</a></li>\n      <li><a href=\"#predict-the-essentiality-of-genes\" id=\"markdown-toc-predict-the-essentiality-of-genes\">Predict the essentiality of genes</a></li>\n      <li><a href=\"#compare-the-essential-genes-between-two-conditions\" id=\"markdown-toc-compare-the-essential-genes-between-two-conditions\">Compare the essential genes between two conditions</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#conclusion\" id=\"markdown-toc-conclusion\">Conclusion</a></li>\n</ol>\n\n</blockquote>\n\n<h1 id=\"data-upload\">Data upload</h1>\n\n<p>Let’s start with uploading the data.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Import the data</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Create a new history for this tutorial and give it a proper name</p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-creating-a-new-history\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-creating-a-new-history\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Creating a new history</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <p>Click the <i class=\"fas fa-plus\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">new-history</span> icon at the top of the history panel:</p>   <p><img src=\"/training-material/shared/images/history_create_new.svg\" alt=\"UI for creating new history\" /></p>   <!-- the original drawing can be found here https://docs.google.com/drawings/d/1cCBrLAo4kDGic5QyB70rRiWJAKTenTU8STsKDaLcVU8/edit?usp=sharing --> </blockquote>\n      <p><!--END_SNIPPET--></p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-renaming-a-history\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-renaming-a-history\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Renaming a history</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ol>   <li>Click on <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> (<strong>Edit</strong>) next to the history name (which by default is “Unnamed history”)</li>   <li>Type the new name</li>   <li>Click on <strong>Save</strong></li> </ol>   <p>If you do not have the <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> (<strong>Edit</strong>) next to the history name:</p>   <ol>   <li>Click on <strong>Unnamed history</strong> (or the current name of the history) (<strong>Click to rename history</strong>) at the top of your history panel</li>   <li>Type the new name</li>   <li>Press <kbd>Enter</kbd></li> </ol> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li>Import from <a href=\"https://zenodo.org/record/2579335\">Zenodo</a> or a data library (ask your instructor):\n      <ul>\n        <li>FASTQ file with the Tnseq reads: <code class=\"language-plaintext highlighter-rouge\">Tnseq-Tutorial-reads.fastqsanger.gz</code></li>\n        <li>Set of barcodes to separate reads from different experimental conditions: <code class=\"language-plaintext highlighter-rouge\">condition_barcodes.fasta</code></li>\n        <li>Set of barcodes to separate reads from different transposon constructs: <code class=\"language-plaintext highlighter-rouge\">construct_barcodes.fasta</code></li>\n        <li>Genome file for <em>Staphylococcus aureus</em>: <code class=\"language-plaintext highlighter-rouge\">staph_aur.fasta</code></li>\n        <li>Annotation file for <em>Staphylococcus aureus</em>: <code class=\"language-plaintext highlighter-rouge\">staph_aur.gff3</code></li>\n      </ul>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>https://zenodo.org/record/2579335/files/Tnseq-Tutorial-reads.fastqsanger.gz\nhttps://zenodo.org/record/2579335/files/condition_barcodes.fasta\nhttps://zenodo.org/record/2579335/files/construct_barcodes.fasta\nhttps://zenodo.org/record/2579335/files/staph_aur.fasta\nhttps://zenodo.org/record/2579335/files/staph_aur.gff3\n</code></pre></div>      </div>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-importing-via-links\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-importing-via-links\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Importing via links</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Copy the link location</li>   <li>     <p>Click <i class=\"fas fa-upload\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-upload</span> <strong>Upload Data</strong> at the top of the tool panel</p>   </li>   <li>Select <i class=\"fa fa-edit\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-wf-edit</span> <strong>Paste/Fetch Data</strong></li>   <li>     <p>Paste the link(s) into the text field</p>   </li>   <li>     <p>Press <strong>Start</strong></p>   </li>   <li><strong>Close</strong> the window</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-importing-data-from-a-data-library\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-importing-data-from-a-data-library\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Importing data from a data library</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <p>As an alternative to uploading the data from a URL or your computer, the files may also have been made available from a <em>shared data library</em>:</p>   <ol>   <li>Go into <strong>Shared data</strong> (top panel) then <strong>Data libraries</strong></li>   <li>Navigate to  the correct folder as indicated by your instructor.     <ul>       <li>On most Galaxies tutorial data will be provided in a folder named <strong>GTN - Material –&gt; Topic Name -&gt; Tutorial Name</strong>.</li>     </ul>   </li>   <li>Select the desired files</li>   <li>Click on <strong>Add to History</strong> <i class=\"fas fa-caret-down\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-dropdown</span> near the top and select <strong>as Datasets</strong> from the dropdown menu</li>   <li>     <p>In the pop-up window, choose</p>     <ul>       <li><em>“Select history”</em>: the history you want to import the data to (or create a new one)</li>     </ul>   </li>   <li>Click on <strong>Import</strong></li> </ol> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li>\n      <p>Rename the files</p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-renaming-a-dataset\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-renaming-a-dataset\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Renaming a dataset</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Click on the <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> <strong>pencil icon</strong> for the dataset to edit its attributes</li>   <li>In the central panel, change the <strong>Name</strong> field</li>   <li>Click the <strong>Save</strong> button</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h1 id=\"remove-all-non-genomic-sequences-from-the-sequenced-reads\">Remove all non genomic sequences from the sequenced reads</h1>\n\n<p>Because of the experimental design for transposon insertion sequencing, the raw reads contain a lot of adapters and foreign sequences used to insert and target the transposon. To obtain the core reads that contain only genomic sequence, the reads have to go through several steps (using the <strong>Cutadapt</strong> tool) to remove them and divide the reads per experimental condition and type of transposon:</p>\n\n<figure id=\"figure-3\" style=\"max-width: 90%;\"><img src=\"../../images/tnseq/preprocessing.png\" alt=\"Workflow of data pre-processing. \" width=\"920\" height=\"424\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/tnseq/preprocessing.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 3</strong>:</span> Data pre-processing</figcaption></figure>\n\n<ol>\n  <li>We separate the reads of each experimental condition based on a 8 bp barcode at the beginning of each read. These barcodes were added to be able to pool different conditions together before the transposon insertion and sequencing.</li>\n  <li>The tail of each set of read is then removed. It immediately follows the 3 bp barcode specific to transposon constructs, and contains illumina adapter sequence and downstream</li>\n  <li>To be sure all our reads have been trimmed correctly we filter out the reads too large.</li>\n  <li>We then separate the reads per transposon construct</li>\n  <li>We remove the remaining transposon sequence containing MmeI.</li>\n</ol>\n\n<h2 id=\"separate-reads-by-experimental-conditions\">Separate reads by experimental conditions</h2>\n\n<p>First we divide the initial data set by experimental conditions using the 8 bp barcode added during the Illumina multiplexing protocol.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Inspect condition barcodes</hands-on-title>\n\n  <ol>\n    <li>Inspect the <code class=\"language-plaintext highlighter-rouge\">condition_barcodes</code> file</li>\n  </ol>\n\n</blockquote>\n\n<p>This fasta file contains the barcodes for each condition:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>&gt;control\n^CTCAGAAG\n&gt;condition\n^GACGTCAT\n</code></pre></div></div>\n\n<p>We can see 2 barcodes there: one for control and one for condition.</p>\n\n<blockquote class=\"comment\">\n  <comment-title>Barcode symbols used by <b>Cutadapt</b></comment-title>\n\n  <p>The <code class=\"language-plaintext highlighter-rouge\">^</code> at the beginning of the sequence means we want to anchor the barcode at the beginning of the read. To know more about the symbols used by <strong>Cutadapt</strong>, you check the <a href=\"https://cutadapt.readthedocs.io/en/stable/guide.html#adapter-types\"><strong>Cutadapt</strong> manual</a>.</p>\n</blockquote>\n\n<p>We would like now to split our Tnseq reads in <code class=\"language-plaintext highlighter-rouge\">Tnseq-Tutorial-reads</code> given the barcodes.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Split reads by condition barcodes using Cutadapt</hands-on-title>\n\n  <ol>\n    <li><strong>Cutadapt</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with:\n      <ul>\n        <li><em>“Single-end or Paired-end reads?”</em>: <code class=\"language-plaintext highlighter-rouge\">Single-end</code>\n          <ul>\n            <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“FASTQ/A file”</em>: <code class=\"language-plaintext highlighter-rouge\">Tnseq-Tutorial-reads</code></li>\n            <li>In <em>“Read 1 Options”</em>\n              <ul>\n                <li>In <em>“5’ (Front) Adapters”</em>\n                  <ul>\n                    <li>Click on <em>“Insert 5’ (Front) Adapters”</em>\n                      <ul>\n                        <li><em>“Source”</em>: <code class=\"language-plaintext highlighter-rouge\">File From History</code>\n                          <ul>\n                            <li><em>“Choose file containing 5’ adapters”</em>: <code class=\"language-plaintext highlighter-rouge\">condition_barcodes</code> file</li>\n                          </ul>\n                        </li>\n                      </ul>\n                    </li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n        <li>In <em>“Adapter Options”</em>\n          <ul>\n            <li><em>“Maximum error rate”</em>: <code class=\"language-plaintext highlighter-rouge\">0.15</code> (to allow 1 mismatch)</li>\n            <li><em>“Match times”</em>: <code class=\"language-plaintext highlighter-rouge\">3</code> (to cover cases where barcodes are attached several times)</li>\n          </ul>\n        </li>\n        <li>In <em>“Output Selector”</em>, select\n          <ul>\n            <li><em>“Report”</em></li>\n            <li><em>“Multiple output”</em> (to separate the reads into one file per condition)</li>\n            <li><em>“Untrimmed reads”</em> (to write reads that do not contain the adapter to a separate file)</li>\n          </ul>\n        </li>\n      </ul>\n\n      <p>The output is a collection of the different conditions datasets, here control and condition, and a report text file.</p>\n    </li>\n    <li>Inspect the report text generated by <strong>Cutadapt</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span></li>\n  </ol>\n</blockquote>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>What percentage of reads has been trimmed for the adapter?</li>\n    <li>How many reads have been trimmed for each condition?</li>\n    <li>What should we change if our barcodes were at the end of the reads ?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <ol>\n      <li>100% of the reads were trimmed (line <code class=\"language-plaintext highlighter-rouge\">Reads with adapters</code>)</li>\n      <li>2,847,018 for control (<code class=\"language-plaintext highlighter-rouge\">CTCAGAAG</code> barcode) and 2,862,108 for condition (<code class=\"language-plaintext highlighter-rouge\">GACGTCAT</code> barcode)</li>\n      <li>We should use the option <em>“Insert 3’ (End) Adapters”</em> and anchored them at the end of the read with the symbol <code class=\"language-plaintext highlighter-rouge\">$</code> in our fasta file containing the barcodes.</li>\n    </ol>\n  </blockquote>\n\n</blockquote>\n\n<h2 id=\"remove-adapter-sequence\">Remove Adapter sequence</h2>\n\n<p>Our reads are now divided by condition. We need to trim their tail containing the Illumina adapters, used for initiating the sequencing (<code class=\"language-plaintext highlighter-rouge\">CGTTATGGCACGC</code>, here). To do so, we remove the adapter and everything downstream, using the end adapter option of <strong>Cutadapt</strong> and not anchor the sequence anywhere. To eliminate reads that might not have been trimmed because of too many mismatches or other reasons, we filter the reads by size, given the known approximate size of the remaining sequences (<strong>how is it computed??</strong>).</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Remove Adapter with Cutadapt</hands-on-title>\n\n  <ol>\n    <li><strong>Cutadapt</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> to remove adapters with:\n      <ul>\n        <li><em>“Single-end or Paired-end reads?”</em>: <code class=\"language-plaintext highlighter-rouge\">Single-end</code>\n          <ul>\n            <li><i class=\"far fa-folder\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-collection</span> <em>“FASTQ/A file”</em>: collection output of the previous <strong>Cutadapt</strong></li>\n            <li>In <em>“Read 1 Options”</em>\n              <ul>\n                <li>In <em>“3’ (End) Adapters”</em>\n                  <ul>\n                    <li>Click on <em>“Insert 3’ (End) Adapters”</em>\n                      <ul>\n                        <li><em>“Source”</em>: <code class=\"language-plaintext highlighter-rouge\">Enter custom Sequence</code>\n                          <ul>\n                            <li><em>“Enter custom 3’ adapter sequence”</em>: <code class=\"language-plaintext highlighter-rouge\">CGTTATGGCACGC</code></li>\n                          </ul>\n                        </li>\n                      </ul>\n                    </li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n        <li>In <em>“Adapter Options”</em>\n          <ul>\n            <li><em>“Match times”</em>: <code class=\"language-plaintext highlighter-rouge\">3</code> (to cover cases where barcodes are attached several times)</li>\n          </ul>\n        </li>\n        <li>In <em>“Output Selector”</em>, select\n          <ul>\n            <li><em>“Report”</em></li>\n          </ul>\n        </li>\n      </ul>\n\n      <blockquote class=\"question\">\n        <question-title></question-title>\n        <p>What are the outputs at this step?</p>\n        <blockquote class=\"solution\">\n          <solution-title></solution-title>\n          <p>The outputs are two collections: one containing the reads in both conditions, and one containing the <strong>Cutadapt</strong> reports for each condition.</p>\n        </blockquote>\n      </blockquote>\n    </li>\n    <li>\n      <p>Inspect the generated report files</p>\n\n      <blockquote class=\"question\">\n        <question-title></question-title>\n        <p>What percentage of the reads contained the adapter?</p>\n        <blockquote class=\"solution\">\n          <solution-title></solution-title>\n          <p>More than 99% of the reads contained the adapter in both conditions (line <code class=\"language-plaintext highlighter-rouge\">Reads with adapters</code> in the reports)</p>\n        </blockquote>\n      </blockquote>\n    </li>\n    <li><strong>Cutadapt</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> to filter reads based on length with:\n      <ul>\n        <li><em>“Single-end or Paired-end reads?”</em>: <code class=\"language-plaintext highlighter-rouge\">Single-end</code>\n          <ul>\n            <li><i class=\"far fa-folder\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-collection</span> <em>“FASTQ/A file”</em>: collection output of the previous <strong>Cutadapt</strong></li>\n          </ul>\n        </li>\n        <li>In <em>“Filter Options”</em>\n          <ul>\n            <li><em>“Minimum length”</em> : <code class=\"language-plaintext highlighter-rouge\">64</code></li>\n            <li><em>“Maximum length”</em> : <code class=\"language-plaintext highlighter-rouge\">70</code></li>\n          </ul>\n        </li>\n        <li>In <em>“Output Selector”</em>, select\n          <ul>\n            <li><em>“Report”</em></li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <p>Inspect the generated report files</p>\n\n      <blockquote class=\"question\">\n        <question-title></question-title>\n        <p>How many reads where discarded after filtering?</p>\n        <blockquote class=\"solution\">\n          <solution-title></solution-title>\n          <p>Less than 2% of the reads were discarded in both conditions (lines <code class=\"language-plaintext highlighter-rouge\">Reads that were too short</code> and <code class=\"language-plaintext highlighter-rouge\">Reads that were too long</code> in the reports)</p>\n        </blockquote>\n      </blockquote>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>We can see that is both samples the reads have pass the filtering at more than 98%. If this percentage is very low, it means the previous trimming steps is incomplete or faulty.</p>\n\n<h2 id=\"separate-reads-from-different-transposon-constructs\">Separate reads from different transposon constructs</h2>\n\n<p>The constructs used in this experiment contain different strengths and directions of promoters. We use the different constructs as replicates, so we need now to separate the reads based on the construct specific 3 bp barcodes.</p>\n\n<blockquote class=\"comment\">\n  <comment-title></comment-title>\n  <p>In addition of disrupting a gene at the location of the insertion, such constructs can modify the expression of either upstream or downstream regions. The analysis of such modification will be studied in another training material, but for now we consider that the construct does not impact the essentiality analysis.</p>\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Inspect construct barcodes</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Inspect the <code class=\"language-plaintext highlighter-rouge\">construct_barcodes</code> file</p>\n\n      <blockquote class=\"question\">\n        <question-title></question-title>\n\n        <p>What does the <code class=\"language-plaintext highlighter-rouge\">$</code> mean in the barcode sequence file?</p>\n\n        <blockquote class=\"solution\">\n          <solution-title></solution-title>\n          <p>It means the barcode is anchored at the end of the reads.</p>\n        </blockquote>\n      </blockquote>\n    </li>\n  </ol>\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Barcode split with Cutadapt</hands-on-title>\n\n  <ol>\n    <li><strong>Cutadapt</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with:\n      <ul>\n        <li><em>“Single-end or Paired-end reads?”</em>: <code class=\"language-plaintext highlighter-rouge\">Single-end</code>\n          <ul>\n            <li><i class=\"far fa-folder\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-collection</span> <em>“FASTQ/A file”</em>: collection output of the previous <strong>Cutadapt</strong></li>\n            <li>In <em>“Read 1 Options”</em>\n              <ul>\n                <li>In <em>“3’ (End) Adapters”</em>\n                  <ul>\n                    <li>Click on <em>“Insert 3’ (End) Adapters”</em>\n                      <ul>\n                        <li><em>“Source”</em> : <code class=\"language-plaintext highlighter-rouge\">File From History</code>\n                          <ul>\n                            <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Choose file containing 5’ adapters”</em>: <code class=\"language-plaintext highlighter-rouge\">construct_barcodes</code> file</li>\n                          </ul>\n                        </li>\n                      </ul>\n                    </li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n        <li>In <em>“Adapter Options”</em>\n          <ul>\n            <li><em>“Match times”</em>: <code class=\"language-plaintext highlighter-rouge\">3</code> (to cover cases where barcodes are attached several times)</li>\n          </ul>\n        </li>\n        <li>In <em>“Output Selector”</em>, select\n          <ul>\n            <li><em>“Report”</em></li>\n            <li><em>“Multiple output”</em> (to separate the reads into one file per condition)</li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <p>Inspect the report files</p>\n\n      <blockquote class=\"question\">\n        <question-title></question-title>\n\n        <p>Are the reads equally divided between constructs?</p>\n\n        <blockquote class=\"solution\">\n          <solution-title></solution-title>\n          <p>When you look at the reports, you can see that most of the reads have been assigned to the <em>blunt</em> construct (<code class=\"language-plaintext highlighter-rouge\">TAC</code> barcode): the blunt construct is the control and does not contain any promoters. This means that there is less negative selective pressure on blunt than the other ones, that have affected flanking region in addition to the disrupted gene at the insertion site. This won’t be a problem here as the tool we use for the essentiality prediction consider the sum of reads in the replicates.</p>\n        </blockquote>\n      </blockquote>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>You can notice that the output of this split is a <em>nested collection</em>, a collection of collection.</p>\n\n<h2 id=\"remove-the-remaining-transposon-sequence\">Remove the remaining transposon sequence</h2>\n\n<p>The last remaining transposon sequence in the reads is the linker with the MmeI restriction site (<code class=\"language-plaintext highlighter-rouge\">ACAGGTTGGATGATAAGTCCCCGGTCTATATTGAGAGTAACTACATTT</code>).</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title> Remove Linker with Cutadapt</hands-on-title>\n\n  <ol>\n    <li><strong>Cutadapt</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with:\n      <ul>\n        <li><em>“Single-end or Paired-end reads?”</em>: <code class=\"language-plaintext highlighter-rouge\">Single-end</code>\n          <ul>\n            <li><i class=\"far fa-folder\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-collection</span> <em>“FASTQ/A file”</em>: collection output of the previous <strong>Cutadapt</strong></li>\n            <li>In <em>“Read 1 Options”</em>\n              <ul>\n                <li>In <em>“3’ (End) Adapters”</em>\n                  <ul>\n                    <li>Click on <em>“Insert 3’ (End) Adapters”</em>\n                      <ul>\n                        <li><em>“Source”</em>: <code class=\"language-plaintext highlighter-rouge\">Enter custom Sequence</code>\n                          <ul>\n                            <li><em>“Enter custom 3’ adapter sequence”</em>: <code class=\"language-plaintext highlighter-rouge\">ACAGGTTGGATGATAAGTCCCCGGTCTATATTGAGAGTAACTACATTT</code></li>\n                          </ul>\n                        </li>\n                      </ul>\n                    </li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n        <li>In <em>“Adapter Options”</em>\n          <ul>\n            <li><em>“Maximum error rate”</em>: <code class=\"language-plaintext highlighter-rouge\">0.15</code></li>\n          </ul>\n        </li>\n        <li>In <em>“Output Selector”</em>, select\n          <ul>\n            <li><em>“Report”</em></li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li>Inspect the report files and check that the majority of the read have been trimmed</li>\n  </ol>\n</blockquote>\n\n<p>Now that we isolated the genomic sequences from the initial reads, we want to align them to count how many insertion have been retained at each TA site.</p>\n\n<h1 id=\"count-the-number-of-insertion-per-ta-sites\">Count the number of insertion per TA sites</h1>\n\n<h2 id=\"align-the-reads-to-a-reference-genome\">Align the reads to a reference genome</h2>\n\n<p>To identify the location of each TA site to the count them, the first step is to map the reads on the reference genome. We use the <strong>Bowtie</strong>.</p>\n\n<blockquote class=\"comment\">\n  <comment-title></comment-title>\n  <p>We could also use <strong>Bowtie2</strong> with an end-to-end option, but <strong>Bowtie</strong> is more suitable for very short reads like ours (16-17 bp).</p>\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Map reads with Bowtie</hands-on-title>\n\n  <ol>\n    <li><strong>Map with Bowtie for Illumina</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with:\n      <ul>\n        <li><em>“Will you select a reference genome from your history or use a built-in index?”</em>: <code class=\"language-plaintext highlighter-rouge\">Use one from the history</code>\n          <ul>\n            <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Select the reference genome”</em>: <code class=\"language-plaintext highlighter-rouge\">staph_aur.fasta</code> file.</li>\n          </ul>\n        </li>\n        <li><em>“Is this library mate-paired?”</em>: <code class=\"language-plaintext highlighter-rouge\">Single-end</code>\n          <ul>\n            <li><i class=\"far fa-folder\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-collection</span> <em>“FASTQ file”</em>: collection output of the last <strong>Cutadapt</strong></li>\n            <li><em>“Bowtie settings to use”</em>: <code class=\"language-plaintext highlighter-rouge\">Full parameters list</code></li>\n            <li><em>“Skip the first n reads (-s)”</em>: <code class=\"language-plaintext highlighter-rouge\">0</code></li>\n            <li><em>“Maximum number of mismatches permitted in the seed (-n)”</em>: <code class=\"language-plaintext highlighter-rouge\">0</code></li>\n            <li><em>“Seed length (-l)”</em>: <code class=\"language-plaintext highlighter-rouge\">17</code></li>\n            <li><em>“Whether or not to make Bowtie guarantee that reported singleton alignments are ‘best’ in terms of stratum and in terms of the quality values at the mismatched positions (–best)”</em>: <code class=\"language-plaintext highlighter-rouge\">Use best</code></li>\n            <li><em>“Whether or not to try as hard as possible to find valid alignments when they exist (-y)”</em> : <code class=\"language-plaintext highlighter-rouge\">Try Hard</code></li>\n          </ul>\n        </li>\n      </ul>\n\n      <blockquote class=\"question\">\n        <question-title></question-title>\n        <p>Why are we strictly enforcing no mismatch mapping?</p>\n        <blockquote class=\"solution\">\n          <solution-title></solution-title>\n          <p>Our reads being very short, the smallest size needs precise mapping, allowing even one mismatch would risk having reads mapping in wrong positions.</p>\n        </blockquote>\n      </blockquote>\n    </li>\n    <li>\n      <p>Rename your collection for better clarity</p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-renaming-a-collection\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-renaming-a-collection\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Renaming a collection</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ol>   <li>Click on the collection</li>   <li>Click on the name of the collection at the top</li>   <li>Change the name</li>   <li>Press <kbd>Enter</kbd></li> </ol> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h2 id=\"compute-coverage-of-the-genome\">Compute coverage of the genome</h2>\n\n<p>We have now our reads mapped on the reference genome. We can compute the genome coverage, <em>i.e.</em> how much the nucleotides of the genome are covered by reads. This information will be later crossed with our TA sites position.</p>\n\n<p>In our case, the sequenced reads cover the  5’ region flanking region of the TA site where the transposon inserted. We should not then extract the coverage across the whole reads, as it could cover several TA sites, but only the coverage at the 3’ end of the read:</p>\n\n<figure id=\"figure-4\" style=\"max-width: 90%;\"><img src=\"../../images/tnseq/Map_cov.png\" alt=\"A read align to the genome with its 3' end covering half of the TA site. \" width=\"935\" height=\"222\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/tnseq/Map_cov.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 4</strong>:</span> Mapping read and TA site coverage</figcaption></figure>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Compute genome coverage</hands-on-title>\n\n  <ol>\n    <li><strong>bamCoverage</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with:\n      <ul>\n        <li><i class=\"far fa-folder\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-collection</span> <em>“BAM/CRAM file”</em>: collection output of the last <strong>Map with Bowtie for Illumina</strong></li>\n        <li><em>“Bin size in bases”</em>: <code class=\"language-plaintext highlighter-rouge\">1</code></li>\n        <li><em>“Scaling/Normalization method”</em>: <code class=\"language-plaintext highlighter-rouge\">Do not normalize or scale</code></li>\n        <li><em>“Coverage file format”</em>: <code class=\"language-plaintext highlighter-rouge\">bedgraph</code></li>\n        <li><em>“Show advanced options”</em>: <code class=\"language-plaintext highlighter-rouge\">yes</code>\n          <ul>\n            <li><em>“Ignore missing data?”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code> (to get only region with read counts)</li>\n            <li><em>“Offset inside each alignment to use for the signal location”</em>: <code class=\"language-plaintext highlighter-rouge\">-1</code> (to read the signal of the coverage only at the 3’ end of the read)</li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h2 id=\"identify-ta-sites-positions\">Identify TA sites positions</h2>\n\n<p>In order to get the coverage on each TA site we need to prepare a file containing the position of each TA site.</p>\n\n<p>As you can see on the <a href=\"#figure-4\">previous figure</a>, the read can cover one side or the other of the TA depending on the direction of insertion of the transposon. Depending on the direction of insertion the coverage will be counted on the leftmost position of the TA site or on the rightmost. As we are not considering strand separately in this analyses, we will consider both count as attached to the leftmost base of the TA site. To do that we will create two list of TA site positions, listing the 5’ end of each TA site for forward and reverse strand, and then merge them to get a global count per TA site.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Get TA sites coordinates</hands-on-title>\n\n  <ol>\n    <li><strong>Nucleotide subsequence search</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>Nucleotide sequence to be searched”</em>: <code class=\"language-plaintext highlighter-rouge\">staph_aur.fasta</code></li>\n        <li><em>“Search with a”</em>: <code class=\"language-plaintext highlighter-rouge\">user defined pattern</code></li>\n        <li><em>“Search pattern”</em>: <code class=\"language-plaintext highlighter-rouge\">TA</code></li>\n        <li><em>“Search pattern on”</em>: <code class=\"language-plaintext highlighter-rouge\">forward strand</code></li>\n      </ul>\n    </li>\n    <li>Inspect the generated file</li>\n  </ol>\n</blockquote>\n\n<p><strong>Nucleotide subsequence search</strong> generate one BED file with the coordinates of each TA on the genome:</p>\n<ol>\n  <li>Chrom</li>\n  <li>Start</li>\n  <li>End</li>\n  <li>Name</li>\n  <li>Strand</li>\n</ol>\n\n<p>The only information we need here are the positions of the 5’ end of each TA site for each strand.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Get forward and reverse strand positions</hands-on-title>\n\n  <ol>\n    <li><strong>Cut columns from a table</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with:\n      <ul>\n        <li>Cut columns : <code class=\"language-plaintext highlighter-rouge\">c2</code></li>\n        <li><em>“Delimited by”</em>: <code class=\"language-plaintext highlighter-rouge\">tab</code></li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“From”</em>: output of <strong>Nucleotide subsequence search</strong></li>\n      </ul>\n    </li>\n    <li>\n      <p>Add the <code class=\"language-plaintext highlighter-rouge\">#forward</code> tag to the output</p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-adding-a-tag\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-adding-a-tag\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Adding a tag</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ol>   <li>Click on the dataset to expand it</li>   <li>Click on <strong>Add Tags</strong> <i class=\"fas fa-tags\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-tags</span></li>   <li>Add a tag  starting with <code class=\"language-plaintext highlighter-rouge\">#</code>     <ul>       <li>Tags starting with <code class=\"language-plaintext highlighter-rouge\">#</code> will be automatically propagated to the outputs of tools using this dataset.</li>     </ul>   </li>   <li>Press <kbd>Enter</kbd></li>   <li>Check that the tag appears below the dataset name</li> </ol> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li><strong>Cut columns from a table</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with:\n      <ul>\n        <li>Cut columns : <code class=\"language-plaintext highlighter-rouge\">c1,c3</code></li>\n        <li><em>“Delimited by”</em>: <code class=\"language-plaintext highlighter-rouge\">tab</code></li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“From”</em>: output of <strong>Nucleotide subsequence search</strong></li>\n      </ul>\n    </li>\n    <li><strong>Compute an expression on every row</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> to shift the end position of TA sites  by 1 and get the start of the TA site on the reverse strand with:\n      <ul>\n        <li><em>Add expression”</em>: <code class=\"language-plaintext highlighter-rouge\">c2-1</code></li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“as a new column to”</em>: output of <strong>cut</strong></li>\n        <li><em>“Round result?”</em>: <code class=\"language-plaintext highlighter-rouge\">yes</code></li>\n      </ul>\n    </li>\n    <li><strong>Cut columns from a table</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with:\n      <ul>\n        <li>Cut columns : <code class=\"language-plaintext highlighter-rouge\">c3</code></li>\n        <li><em>“Delimited by”</em>: <code class=\"language-plaintext highlighter-rouge\">tab</code></li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“From”</em>: output of <strong>Compute</strong></li>\n      </ul>\n    </li>\n    <li>Add the <code class=\"language-plaintext highlighter-rouge\">#reverse</code> tag to the output</li>\n  </ol>\n\n</blockquote>\n\n<h2 id=\"merge-overall-coverage-and-positions-of-ta-sites-to-get-the-coverage-of-each-ta-sites\">Merge overall coverage and positions of TA sites to get the coverage of each TA sites</h2>\n\n<p>We have now 2 files containing the coordinates of our TA sites for both strands. We should cross them with the coverage files to get the coverage on both sides of each TA site.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title> Get coverage of TA sites</hands-on-title>\n\n  <ol>\n    <li><strong>Join two files</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with:\n      <ul>\n        <li><i class=\"far fa-folder\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-collection</span> <em>1st file”</em>: output of <strong>bamCoverage</strong></li>\n        <li><em>“Column to use from 1st file”</em>: <code class=\"language-plaintext highlighter-rouge\">Column 2</code> (to select the position of the end of the read)</li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“2nd File”</em>: output of last <strong>cut</strong> with the <code class=\"language-plaintext highlighter-rouge\">forward</code> tags</li>\n        <li><em>“Column to use from 2nd file”</em>: <code class=\"language-plaintext highlighter-rouge\">Column 1</code></li>\n        <li><em>“Output lines appearing in”</em>: <code class=\"language-plaintext highlighter-rouge\">Both 1st &amp; 2nd file, plus unpairable lines from 2st file. (-a 2)</code> (to get all TA sites)</li>\n        <li><em>“First line is a header line”</em>: <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n        <li><em>“Value to put in unpaired (empty) fields”</em>: <code class=\"language-plaintext highlighter-rouge\">0</code> (to assign a count of 0 to TA sites not covered in the bamCoverage file)</li>\n      </ul>\n    </li>\n    <li>\n      <p>Add <code class=\"language-plaintext highlighter-rouge\">#forward</code> tag to the output collections</p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-adding-a-tag-to-a-collection\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-adding-a-tag-to-a-collection\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Adding a tag to a collection</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ol>   <li>Click on the collection in your history to view it</li>   <li>Click on <strong>Edit</strong> <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> next to the collection name at the top of the history panel</li>   <li>Click on <strong>Add Tags</strong> <i class=\"fas fa-tags\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-tags</span></li>   <li>Add a tag  starting with <code class=\"language-plaintext highlighter-rouge\">#</code>     <ul>       <li>Tags starting with <code class=\"language-plaintext highlighter-rouge\">#</code> will be automatically propagated to the outputs any tools using this dataset.</li>     </ul>   </li>   <li>Click <strong>Save</strong> <i class=\"far fa-save\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-save</span></li>   <li>Check that the tag appears below the collection name</li> </ol> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li><strong>Cut columns from a table</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with:\n      <ul>\n        <li>Cut columns : <code class=\"language-plaintext highlighter-rouge\">c1,c4</code></li>\n        <li><em>“Delimited by”</em>: <code class=\"language-plaintext highlighter-rouge\">tab</code></li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“From”</em>: output of<strong>Join two files</strong> with the <code class=\"language-plaintext highlighter-rouge\">forward</code> tag</li>\n      </ul>\n    </li>\n    <li>Repeat the same steps for <code class=\"language-plaintext highlighter-rouge\">reverse</code></li>\n  </ol>\n\n</blockquote>\n\n<p>We now have a read count for each nucleotide at the different TA sites. The insertions on the forward strand files are in a different direction than those on the reverse strand file. In our case, we are only interested in studying the gene disruption, and therefore we do not want to consider the directions separately. We can then combine the forward and reverse counts together to get a total count per TA site. In order to do that we need to assign the count of both strand to the same nucleotide, by shifting by one position the count on the reverse strand.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Get total count per TA site</hands-on-title>\n\n  <ol>\n    <li><strong>Compute an expression on every row</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> to shift the positions of reverse strand counts with:\n      <ul>\n        <li><em>Add expression”</em>: <code class=\"language-plaintext highlighter-rouge\">c1-1</code> (to shift the position by 1)</li>\n        <li><i class=\"far fa-folder\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-collection</span> <em>“as a new column to”</em>: <strong>Cut</strong> output collection with the tags <code class=\"language-plaintext highlighter-rouge\">reverse</code></li>\n        <li><em>“Round result?”</em> : <code class=\"language-plaintext highlighter-rouge\">yes</code></li>\n      </ul>\n    </li>\n    <li><strong>Cut columns from a table</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with:\n      <ul>\n        <li><em>“Cut columns”</em>: <code class=\"language-plaintext highlighter-rouge\">c3,c2</code></li>\n        <li><em>“Delimited by”</em>: <code class=\"language-plaintext highlighter-rouge\">tab</code></li>\n        <li><i class=\"far fa-folder\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-collection</span> <em>File to cut”</em>: output of the previous <strong>Compute</strong></li>\n      </ul>\n    </li>\n    <li><strong>Sort</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with:\n      <ul>\n        <li><i class=\"far fa-folder\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-collection</span> <em>“Sort Query”</em>: the newest <code class=\"language-plaintext highlighter-rouge\">reverse</code> collection</li>\n        <li><em>“Number of header lines”</em>: <code class=\"language-plaintext highlighter-rouge\">0</code></li>\n        <li>In <em>“Column selections”</em>\n          <ul>\n            <li><em>“on column”</em>: <code class=\"language-plaintext highlighter-rouge\">Column: 1</code> (to sort on positions)</li>\n            <li><em>“in”</em>: <code class=\"language-plaintext highlighter-rouge\">Ascending Order</code></li>\n            <li><em>“Flavor”</em>: <code class=\"language-plaintext highlighter-rouge\">Fast numeric sort (-n)</code></li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <p>Repeat the <strong>Sort</strong> with the newest <code class=\"language-plaintext highlighter-rouge\">forward</code> collection</p>\n    </li>\n    <li><strong>Join two files</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> to merge the two collections and get the forward and reverse count in two different columns with:\n      <ul>\n        <li><i class=\"far fa-folder\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-collection</span> <em>1st file”</em> : the <code class=\"language-plaintext highlighter-rouge\">forward</code> collection from <strong>Sort</strong></li>\n        <li><em>“Column to use from 1st file”</em>: <code class=\"language-plaintext highlighter-rouge\">Column 1</code> to join on positions</li>\n        <li><i class=\"far fa-folder\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-collection</span> <em>“2nd File”</em> : the <code class=\"language-plaintext highlighter-rouge\">reverse</code> collection from <strong>Sort</strong></li>\n        <li><em>“Column to use from 2nd file”</em>: <code class=\"language-plaintext highlighter-rouge\">Column 1</code></li>\n        <li><em>“Output lines appearing in”</em>: <code class=\"language-plaintext highlighter-rouge\">Both 1st &amp; 2nd file</code> (to get all TA sites)</li>\n        <li><em>“First line is a header line”</em>: <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n        <li><em>“Value to put in unpaired (empty) fields”</em>: <code class=\"language-plaintext highlighter-rouge\">.</code></li>\n      </ul>\n    </li>\n    <li><strong>Compute an expression on every row</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> to get the total read count with:\n      <ul>\n        <li><em>Add expression”</em>: <code class=\"language-plaintext highlighter-rouge\">c2+c3</code> to get the total count</li>\n        <li><i class=\"far fa-folder\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-collection</span> <em>“as a new column to”</em>: output of <strong>Join two files</strong> with the tags <code class=\"language-plaintext highlighter-rouge\">reverse</code> and <code class=\"language-plaintext highlighter-rouge\">forward</code></li>\n        <li><em>“Round result?”</em>: <code class=\"language-plaintext highlighter-rouge\">yes</code></li>\n      </ul>\n    </li>\n    <li><strong>Cut columns from a table</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with:\n      <ul>\n        <li><em>“Cut columns”</em>: <code class=\"language-plaintext highlighter-rouge\">c1,c4</code></li>\n        <li><em>“Delimited by”</em>: <code class=\"language-plaintext highlighter-rouge\">tab</code></li>\n        <li><i class=\"far fa-folder\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-collection</span> <em>File to cut”</em>:output of the last <strong>Compute</strong></li>\n      </ul>\n    </li>\n    <li><strong>Sort data in ascending or descending order</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with:\n      <ul>\n        <li><i class=\"far fa-folder\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-collection</span> <em>Sort Query”</em>: output of the last <strong>Cut</strong></li>\n        <li><em>“Number of header lines”</em>: <code class=\"language-plaintext highlighter-rouge\">0</code></li>\n        <li>In <em>“Column selections”</em>\n          <ul>\n            <li><em>“on column”</em>: <code class=\"language-plaintext highlighter-rouge\">Column: 1</code> (to sort on positions)</li>\n            <li><em>“in”</em>: <code class=\"language-plaintext highlighter-rouge\">Ascending Order</code></li>\n            <li><em>“Flavor”</em>: <code class=\"language-plaintext highlighter-rouge\">Fast numeric sort (-n)</code></li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <p>Take a look at the output files:</p>\n\n  <ol>\n    <li>What are the data contained in the two columns?</li>\n    <li>What do the 5 first lines of the blunt sample in the treatment with the condition look like?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <ol>\n      <li>The first column contain the position of the TA site, and the second column the number of insertions observed.</li>\n      <li>Your five first lines should look like this :\n        <ul>\n          <li>One column with the positions : <code class=\"language-plaintext highlighter-rouge\">4,10,16,42,79</code></li>\n          <li>One column with the number of insertions : <code class=\"language-plaintext highlighter-rouge\">0,3,20,0,11</code></li>\n        </ul>\n      </li>\n    </ol>\n\n    <p>If your counts are only zeros in one of the blunt sample, you might have made a mistake in merging the counts to the TA sites.</p>\n\n  </blockquote>\n</blockquote>\n\n<h1 id=\"predicting-essential-genes-with-transit\">Predicting Essential Genes with Transit</h1>\n\n<p>Now that we have the counts of insertions per TA site, we can use them to predict gene essentiality. Several methods exist to identify essential genes of regions. They can be divided in two major categories:</p>\n\n<figure id=\"figure-5\" style=\"max-width: 90%;\"><img src=\"../../images/tnseq/type_of_analyses.png\" alt=\"Different types of TnSeq Analyses. \" width=\"867\" height=\"711\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/tnseq/type_of_analyses.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 5</strong>:</span> Methods of TnSeq Analyses (from <a href=\"#Chao2016\"> Chao <i>et al.</i> 2016</a>)</figcaption></figure>\n\n<ol>\n  <li>\n    <p><strong>Annotation dependent method</strong></p>\n\n    <p>The total read count an/or percentage of disrupted site are computed per annotated regions. The values are then compared to the rest of the genome to classify the genes into the categories <em>essential</em> or <em>non-essential</em>.</p>\n  </li>\n  <li>\n    <p><strong>Annotation independent method</strong></p>\n\n    <p>The total read count and/or disrupted sites are computed independently of annotated regions. One of these methods is using a sliding window. Each window is then classified into the categories <em>essential</em> or <em>non-essential</em>. After the windows have been classified, they are linked annotations, and the genes/regions can be classified as <em>essential</em>, <em>non-essential</em>, or <em>domain essential</em> according to the classification of the windows they cover. The same classification can be done using HMM based methods instead of sliding windows. In that case, each insertion site will be predicted as <em>essential</em> or <em>non essential</em> <span class=\"citation\"><a href=\"#Chao2016\">Chao <i>et al.</i> 2016</a></span>).</p>\n  </li>\n</ol>\n\n<p>To predict the essential genes in our datasets, we will use the Transit tool <span class=\"citation\"><a href=\"#dejesus2015transit\">DeJesus <i>et al.</i> 2015</a></span>.</p>\n\n<h2 id=\"transit\">Transit</h2>\n\n<p>Transit is a software that can be used to analyse TnSeq Data. It is compatible with Mariner and Tn5 transposon. In total, 3 methods are available to assess gene essentiality in one sample.</p>\n\n<h3 id=\"gumbel-method\">Gumbel method</h3>\n\n<p>The Gumbel method performs a gene by gene analysis of essentiality for Mariner data based on the longest consecutive sequence of TA site without insertions in a gene. This allows to identify essential domains regardless of insertion at other location of the gene.</p>\n\n<p>The distribution governing the longest sequence of consecutive non insertion is  characterized by a Gumbel distribution. This distribution is often used to model the distribution of maximums (or minimums) of a variable (See the <a href=\"https://en.wikipedia.org/wiki/Gumbel_distribution\">Wikipedia article on Gumbel distribution </a>). The Gumbel distribution is used as a likelihood of non-essentiality, as the longest run of non-insertions should follow what is expected given the global distribution of non-insertion runs. The essential genes, whose runs of empty sites are longer than expected, are modeled through a normalized sigmoid function. This function reflect that any gene can be essential, except the gene were the run of non insertions are too smell to represent a domain.</p>\n\n<p>The total distribution of the maximum run of non-insertion per gene is therefore represented y a bimodal distribution composed of a Gumbel distribution of non-essential genes and a normalized sigmoid function of essential ones. The parameters of these distributions are estimated through a Metropolis–Hastings (MH) sampling procedure <span class=\"citation\"><a href=\"#dejesus2013bayesian\">DeJesus <i>et al.</i> 2013</a></span>).</p>\n\n<p>Using these two distribution, the posterior probability of each distribution is calculated for each gene. Some genes can be classified as “Unclear” if one probability is not winning over the other. Some other can be classified as “Small” if the space of TA sites covered by the gene is insufficient to categorize it (See the <a href=\"https://transit.readthedocs.io/en/latest/transit_methods.html#gumbel\">Transit Manual for the Gumbel method</a>).</p>\n\n<h3 id=\"hmm-method\">HMM method</h3>\n\n<p>The HMM method performs a whole genome essentiality analysis for Mariner data. This approach uses the clustering of TA sites along the genome to identify essential regions, and then apply results to the annotation to identify genes containing essential regions. The HMM method provides a classification for each TA site into 4 states : Essential, Non-Essential, Growth Advantage, and Growth Defect.</p>\n\n<p>This method require a well-saturated library and is sensitive to sparse datasets <span class=\"citation\"><a href=\"#dejesus2013hidden\">DeJesus and Ioerger 2013</a></span>.</p>\n\n<h3 id=\"tn5gaps-method\">Tn5Gaps method</h3>\n\n<p>The Tn5Gaps method is a method dedicated to the identification of essential genes in studies using Tn5 transposons. The analysis is performed on the whole genome to identify regions of non insertion overlapping with genes. It is based on a Gumbel analysis method <span class=\"citation\"><a href=\"#griffin2011high\">Griffin <i>et al.</i> 2011</a></span> and adapted to Tn5 transposon specificity. The main difference comes from the fact that Tn5 transposon can insert everywhere, thus\ncreating libraries with lower insertion rates. The difference from the Gumbel method described above is that the run of non insertion are computer on the whole genome instead of individual genes. The longest run of non insertion considered is not the longest within the gene, but the longest one overlapping the gene.</p>\n\n<h2 id=\"predict-the-essentiality-of-genes\">Predict the essentiality of genes</h2>\n\n<p>In our case, we will use the Gumbel method, because we are using Mariner data and our data look pretty sparse. Gumbel is therefore the safe choice compared to HMM which is more sensitive to sparse data.</p>\n\n<p>In order to use transit, we need to create a an annotation file in the <code class=\"language-plaintext highlighter-rouge\">prot_table</code> format, specific to the Transit tool. It can be created this file from a GFF3 from GenBank like the one we uploaded earlier.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Hands-on : Create annotation file in prot_table format</hands-on-title>\n  <ol>\n    <li>Check that the format of <code class=\"language-plaintext highlighter-rouge\">staph_aur.gff3</code> file is <code class=\"language-plaintext highlighter-rouge\">gff3</code> and not <code class=\"language-plaintext highlighter-rouge\">gff</code></li>\n    <li>\n      <p>Change the datatype if needed</p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-changing-the-datatype\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-changing-the-datatype\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Changing the datatype</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Click on the <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> <strong>pencil icon</strong> for the dataset to edit its attributes</li>   <li>In the central panel, click <i class=\"fas fa-database\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-chart-select-data</span> <strong>Datatypes</strong> tab on the top</li>   <li>In the <i class=\"fas fa-database\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-chart-select-data</span> <strong>Assign Datatype</strong>, select <code class=\"language-plaintext highlighter-rouge\">gff3</code> from “<em>New type</em>” dropdown     <ul>       <li>Tip: you can start typing the datatype into the field to filter the dropdown menu</li>     </ul>   </li>   <li>Click the <strong>Save</strong> button</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li><strong>Convert GFF3 to prot_table for TRANSIT</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>GenBank GFF file”</em>: the <code class=\"language-plaintext highlighter-rouge\">staph_aur.gff3</code> file</li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>Now that we have prepared the annotation file, we can use the count per TA site to predict essential genes using Transit tool, with some customized parameters:</p>\n\n<ul>\n  <li>The number of sites with a single read could be artefactual. We ignore then counts lower than 2</li>\n  <li>A disrupted site that would be very close to the border of the gene may not actually disturb the gene function, and therefore not be an actual signal of disruption. We ignore then insertion near the extremities of the genes.</li>\n</ul>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Predict gene essentiality with Transit</hands-on-title>\n\n  <ol>\n    <li><strong>Gumbel</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with:\n      <ul>\n        <li><em>“Operation mode”</em>: <code class=\"language-plaintext highlighter-rouge\">Replicates</code>\n          <ul>\n            <li><i class=\"far fa-folder\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-collection</span> <em>“Input .wig files”</em>: output of the latest <strong>Sort</strong></li>\n          </ul>\n        </li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Input annotation”</em>: output of the latest <strong>Convert</strong></li>\n        <li><em>“Smallest read-count to consider”</em>: <code class=\"language-plaintext highlighter-rouge\">2</code> (to ignore single count insertions)</li>\n        <li><em>“Ignore TAs occurring at given fraction of the N terminus.”</em>: <code class=\"language-plaintext highlighter-rouge\">0.1</code> (to ignore 10% of the insertion at the N-terminus extremity of the gene)</li>\n        <li><em>“Ignore TAs occurring at given fraction of the C terminus.”</em>: <code class=\"language-plaintext highlighter-rouge\">0.1</code> (to ignore 10% of the insertion at the C-terminus extremity of the gene)</li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>The output of Transit is a tabulated file containing the following columns:</p>\n<ul>\n  <li>Gene ID</li>\n  <li>Name of the gene</li>\n  <li>Gene description</li>\n  <li>Number of Transposon Insertions Observed within the Gene</li>\n  <li>Total Number of TA sites within the Gene</li>\n  <li>Length of the Maximum Run of Non-Insertions observed (in number of TA sites)</li>\n  <li>Span of nucleotides for the Maximum Run of Non-Insertions</li>\n  <li>Posterior Probability of Essentiality</li>\n  <li>Essentiality call for the gene\n    <ul>\n      <li>E=Essential</li>\n      <li>U=Uncertain</li>\n      <li>NE=Non-Essential</li>\n      <li>S=too short</li>\n    </ul>\n  </li>\n</ul>\n\n<blockquote class=\"comment\">\n  <comment-title>More details about Transit</comment-title>\n  <p>You can find more information on <a href=\"https://transit.readthedocs.io/en/latest/transit_methods.html\">Transit manual page</a></p>\n</blockquote>\n\n<p>We can obtain the list of genes predicted as essential by filtering on the essentiality call.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Hands-on : Get table of essential genes</hands-on-title>\n\n  <ol>\n    <li><strong>Filter data on any column using simple expressions</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with:\n      <ul>\n        <li><i class=\"far fa-folder\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-collection</span> <em>“Filter”</em>: output of the last <strong>Gumbel</strong></li>\n        <li><em>With following condition”</em>: <code class=\"language-plaintext highlighter-rouge\">c9=='E'</code> (to select essential genes)</li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <p>How many genes are essential in each conditions?</p>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <p>359 genes are essential in control, and 381 in condition.</p>\n  </blockquote>\n\n</blockquote>\n\n<h2 id=\"compare-the-essential-genes-between-two-conditions\">Compare the essential genes between two conditions</h2>\n\n<p>Now let’s compare the results between out two conditions.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Separate Files from the collection</hands-on-title>\n\n  <ol>\n    <li><strong>Extract Dataset from a list</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> to extract 1st file in the collection with:\n      <ul>\n        <li><i class=\"far fa-folder\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-collection</span> <em>Input List”</em>: output of the last <strong>Filter</strong></li>\n        <li><em>How should a dataset be selected?”</em>: <code class=\"language-plaintext highlighter-rouge\">Select by index</code>\n          <ul>\n            <li><em>Element index:”</em>: <code class=\"language-plaintext highlighter-rouge\">0</code> to select the first dataset</li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <p>Add the <code class=\"language-plaintext highlighter-rouge\">#condition</code> tag</p>\n    </li>\n    <li><strong>Extract Dataset from a list</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> to extract 2nd file in the collection with:\n      <ul>\n        <li><i class=\"far fa-folder\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-collection</span> <em>Input List”</em>: output of the last <strong>Filter</strong></li>\n        <li><em>How should a dataset be selected?”</em>: <code class=\"language-plaintext highlighter-rouge\">Select by index</code>\n          <ul>\n            <li><em>Element index:”</em>: <code class=\"language-plaintext highlighter-rouge\">1</code> to select the second dataset</li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li>Add the <code class=\"language-plaintext highlighter-rouge\">#control</code> tag</li>\n  </ol>\n</blockquote>\n\n<p>We would like now to get the list of essential gene in both conditions</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Get gene essential in both conditions</hands-on-title>\n\n  <ol>\n    <li><strong>Join two files</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>1st file”</em>: output of <strong>Extract Dataset</strong> with <code class=\"language-plaintext highlighter-rouge\">control</code> tag</li>\n        <li><em>Column to use from 1st file”</em>: <code class=\"language-plaintext highlighter-rouge\">Column : 1</code> (to compare on gene ID)</li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>2nd file”</em>: output of <strong>Extract Dataset</strong> with <code class=\"language-plaintext highlighter-rouge\">condition</code> tag</li>\n        <li><em>Column to use from 2nd file”</em>: <code class=\"language-plaintext highlighter-rouge\">Column : 1</code> (to compare on gene ID)</li>\n        <li><em>Output lines appearing in”</em>: <code class=\"language-plaintext highlighter-rouge\">Both 1st and 2nd files</code> (to get common essential genes)</li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>Let’s now get the list of essential gene that are different between the two conditions.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Get gene essential only in control</hands-on-title>\n\n  <ol>\n    <li><strong>Join two files</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>1st file”</em>: output of <strong>Extract Dataset</strong> with <code class=\"language-plaintext highlighter-rouge\">control</code> tag</li>\n        <li><em>Column to use from 1st file”</em>: <code class=\"language-plaintext highlighter-rouge\">Column : 1</code> (to compare on gene ID)</li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>2nd file”</em>: output of <strong>Extract Dataset</strong> with <code class=\"language-plaintext highlighter-rouge\">condition</code> tag</li>\n        <li><em>Column to use from 2nd file”</em>: <code class=\"language-plaintext highlighter-rouge\">Column : 1</code> (to compare on gene ID)</li>\n        <li><em>Output lines appearing in”</em>: <code class=\"language-plaintext highlighter-rouge\">1st but not 2nd</code></li>\n      </ul>\n    </li>\n  </ol>\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Hands-on : Get gene essential only in condition</hands-on-title>\n\n  <ol>\n    <li><strong>Join two files</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with:\n      <ul>\n        <li><em>1st file”</em>: output of <strong>Extract Dataset</strong> with <code class=\"language-plaintext highlighter-rouge\">control</code> tag</li>\n        <li><em>Column to use from 1st file”</em>: <code class=\"language-plaintext highlighter-rouge\">Column : 1</code> (to compare on gene ID)</li>\n        <li><em>2nd file”</em>: output of <strong>Extract Dataset</strong> with <code class=\"language-plaintext highlighter-rouge\">condition</code> tag</li>\n        <li><em>Column to use from 2nd file”</em>: <code class=\"language-plaintext highlighter-rouge\">Column : 1</code> (to compare on gene ID)</li>\n        <li><em>Output lines appearing in”</em>: <code class=\"language-plaintext highlighter-rouge\">2nd but not 1st</code></li>\n      </ul>\n    </li>\n  </ol>\n</blockquote>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>How many genes are essential in both conditions?</li>\n    <li>How many genes are essential only in control?</li>\n    <li>How many genes are essential only in condition?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <ol>\n      <li>320 genes are essential in both conditions.</li>\n      <li>39 genes are essential only in control.</li>\n      <li>61 genes are essential only in condition.</li>\n    </ol>\n  </blockquote>\n\n</blockquote>\n\n<h1 id=\"conclusion\">Conclusion</h1>\n\n<p>In this tutorial, we learned how to predict essential genes in different conditions. Although it seems to be a long process, keep in mind that the steps allowing to get the list of TA site does not need to be repeated for each analysis as long as you study the same genome.\nFor repetitive analyses, the steps are fewer : mapping, coverage, attribution to TA sites, merging of strands and Transit analysis.</p>\n\n<p>This tutorial focused on simple gene essentiality prediction in individual samples. You could be interested in intergenic regions as well, or comparing many samples together. Other methods exist in transit for these goals, that follow the same workflow. It is important to look at your data and to perform quality control to evaluate the coverage and sparsity of your data. This will influence not only the choice of method (HMM does not manage sparse data well), but the choice of parameters for your analysis.</p>\n\n<p>Once you get this list of gene, it is interesting to verify manually the genes classified as essentials. In order to do that, you can visualize the read mapped on your genome by displaying the bam files in IGV.</p>\n\n<!--SNIPPET-->\n<blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-add-genome-and-annotations-to-igv-from-galaxy\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-add-genome-and-annotations-to-igv-from-galaxy\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Add genome and annotations to IGV from Galaxy</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ol>   <li>Upload a FASTA file with the reference genome and a GFF3 file with its annotation in the history (if not already there)</li>   <li>Install <a href=\"https://software.broadinstitute.org/software/igv/download\">IGV</a> (if not already installed)</li>   <li>Launch IGV on your computer</li>   <li>Expand the FASTA dataset with the genome in the history</li>   <li>Click on the <code class=\"language-plaintext highlighter-rouge\">local</code> in <code class=\"language-plaintext highlighter-rouge\">display with IGV</code> to load the genome into the IGV browser</li>   <li>Wait until all <strong>Dataset status</strong> are <code class=\"language-plaintext highlighter-rouge\">ok</code></li>   <li>     <p>Close the window</p>     <p>An alert <code class=\"language-plaintext highlighter-rouge\">ERROR Parameter \"file\" is required</code> may appear. Ignore it.</p>   </li>   <li>Expand the GFF3 dataset with the annotations of the genome in the history</li>   <li>Click on the <code class=\"language-plaintext highlighter-rouge\">local</code> in <code class=\"language-plaintext highlighter-rouge\">display with IGV</code> to load the annotation into the IGV browser</li>   <li>     <p>Switch to the IGV instance</p>     <p>The annotation track should appear. Be careful that all files have the same genome ID</p>   </li> </ol> </blockquote>\n<p><!--END_SNIPPET--></p>\n\n<!--SNIPPET-->\n<blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-add-mapped-reads-track-to-igv-from-galaxy\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-add-mapped-reads-track-to-igv-from-galaxy\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Add Mapped reads track to IGV from Galaxy</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ol>   <li>Install <a href=\"https://software.broadinstitute.org/software/igv/download\">IGV</a> (if not already installed)</li>   <li>Launch IGV on your computer</li>   <li>Check if the reference genome is available on the IGV instance</li>   <li>Expand the BAM dataset with the mapped reads in the history</li>   <li>Click on the <code class=\"language-plaintext highlighter-rouge\">local</code> in <code class=\"language-plaintext highlighter-rouge\">display with IGV</code> to load the reads into the IGV browser</li>   <li>     <p>Switch to the IGV instance</p>     <p>The mapped reads track should appear. Be sure that all files have the same genome ID</p>   </li> </ol> </blockquote>\n<p><!--END_SNIPPET--></p>\n\n<p>When looking at the read mapping at the location of predicted essential genes, you may encounter several situation: Some gene will have no read at all mapping to them, some will have an empty region, while other will have no clearly defined empty region but a very low count of reads, possibly indicating a growth defect induced by the gene disruption.</p>\n\n<figure id=\"figure-6\" style=\"max-width: 90%;\"><img src=\"../../images/tnseq/empty_gene.png\" alt=\"Example of Essential gene with no reads mapped. \" width=\"1424\" height=\"1040\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/tnseq/empty_gene.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 6</strong>:</span> Example of Essential gene with no reads mapped</figcaption></figure>\n<figure id=\"figure-7\" style=\"max-width: 90%;\"><img src=\"../../images/tnseq/low_coverage_gene.png\" alt=\"Example of Essential gene with depleted coverage. \" width=\"1230\" height=\"1094\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/tnseq/low_coverage_gene.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 7</strong>:</span> Example of Essential gene with depleted coverage</figcaption></figure>\n\n<p>Once you have curated and confirm the genes that appear essential, comparing the annotation of essential genes with the condition of growth will allow you a better understanding of certain mechanism of interest, like the gene involved in resistance to stress for example.</p>\n\n<p>A comparison with published results of essentiality in your organism will be useful but don’t expect to find exactly the same results. The conditions of growth differ from one experiment to another, and can highly influence the detection of essential genes.</p>\n"],"ref_slides":["<!--\nTo show speaker notes during a presentation:\npress c to clone the slides (opens a new window)\non one window, press p to show speaker notes\ndisplay the other window\n-->\n\n## Motivation\n\nTransposon insertion sequencing is a technique used to functionally annotate bacterial genomes. The genome is saturated by transposon insertions. The insertion of a transposon being disruptive for the region, the analysis of insertion frequency provides information on how the bacteria fitness change due to this disruption :\n - An insertion mutant with lower fitness decrease frequency in the population\n - An increased fitness lead to increased frequency in the population\n\n???\n\nIdentifying the impact of mutations on bacterial fitness allows to classify certain gene as essential for the bacteria in different conditions.\n\n---\n\n\n# Transposon insertion sequencing method\n\n\n---\n\n### Data production\n\n\n.center[<img name=\"method\" src=\"../../images/tnseq/principle_tnseq_part1.png\" width='80%' alt=\"Description of tnseq method\" >\n\nFrom [Chao et al.](http://www.doi.org/10.1038/nrmicro.2015.7)]\n\n???\nThe initial population genomes are mutated so that the genome is saturated with transposon insertions.  A library is *saturated* if in the genomes across the whole population of bacteria, each potential insertion site has at least one insertion. The population is then divided into several media containing different growth conditions. After growth, the regions flanking the insertion are amplified and sequenced, allowing to determine the location of the insertion.\n\n\n\n---\n\n\n###  Analysis\n\n\n.center[\n<img name=\"method\" src=\"../../images/tnseq/principle_tnseq_part2.png\" width='80%' alt=\"Description of tnseq method\" >\n\nFrom [Chao et al.](http://www.doi.org/10.1038/nrmicro.2015.7)\n]\n\n???\n\nAfter alignement to the reference genome, the resulting data will show a discrete repartition of reads on each TA site. If a gene present several insertions, like the two leftmost genes in *Condition A*, it means that its disruption has little or no impact to the bacterial growth. On the other hand, when a gene shows no insertions at all, like the rightmost gene in *Condition A*, is means that any disruption in this gene killed the bacteria, meaning its a gene essential to bacteria survival. If the library is sufficiently saturated, there is a clear threshold between essential and non-essential genes when you analyze the insertion rate per gene.\n\n\n---\n\n### Note:\n\n.left[\n -  Gene disruption, where we analyze only the disruptions. (The object of this tutorial)\n -  Regulatory element insertion, where different promoters are inserted by the transposon, and we analyze the change in gene expression in addition to the disruption. (Will be the subject or another tutorial)\n]\n\n---\n\n# Experiment parameters\n\n---\n\n### Types of transposon\n\n\n- Randomly pooled tranposon :\n--\n\n    - Mariner-based transposons, which target TA dinucleotides\n        - The TA are distributed relatively evenly along genome, which allows to impact statistically every gene\n        - There is in average more than 30 insertions site per kb\n        - The local variations means less loci and less statistical power\n        - Advantages: low insertion bias, easy to build saturated libraries\n--\n    - Tn5-based vectors, which insert at random sites\n        - Require no target sequences\n        - It has a preference for high GC content, causing insertion bias\n        - Useful for specie where it is difficult to build mariner based transposons\n--\n- Defined sequence transposon\n    - Can be used to study interactions in pathways of interest\n    - More precise targeting (small genes, pathways) for specific analyses\n\n\n???\n\nIn this tutorial, we are using mariner transposon, that target TA sequences.\n\n\n---\n\n### Library complexity\n\n\n- Large complexity means multiple insertion in every potential locus.\n- The higher density of insertion you have, the greater precision  you have in identifying limits of regions of interest\n- If the density of the library is too low, some genes might not be disrupted by chance and mistaken for essential\n\n???\n\nThe advantage of a target specific transposon, like the mariner, in opposition of a Tn5-based transposon inserting randomly, it that the limited number of insertion sites makes it easier to build high complexity libraries.\n\n\n\n---\n\n\n# Structure of the tranposon constructs\n\n\n---\n\n### Desired Properties of the constructs\n\n- It needs to allow insertion site amplification and sequencing.\n\n\n- Uneven fragment size could instroduce amplification biases. To avoid this problem, we can introduce a Type I restriction site to cleave DNA downstream of transposon for uniform fragment sizes\n\n\n- A minimum red length of 16 bp is necessary for precise mapping on the genome ([Kwon and al. 2016](http://doi.org/10.1007/s00253-015-7037-8)). We can therefore use the MmeI restriction site (21pb) but not BsmFI (11 to 12 bp).\n\n\n???\n\n- It needs to allow insertion site amplification and sequencing to get a library representative of the tranposon insertion.\n- Uneven fragment size could instroduce amplification biases. To avoid this problem, we can introduce a Type I restriction site to cleave DNA downstream of transposon for uniform fragment sizes\n- A minimum red length of 16 bp is necessary for precise mapping on the genome ([Kwon and al. 2016](http://doi.org/10.1007/s00253-015-7037-8)). We can therefore use the MmeI restriction site (21pb) but not BsmFI (11 to 12 bp). It is not important in that case to have longer reads as we do not care to have a good coverage on the entire genome, the only information we need is the Ta site affected by an insertion, to do that we only need the location of the start of the reads.\n\n\n---\n\n### Structure of the modified mariner transposon Himar1\n\n.center[\n<img name=\"TranspStructure\" src=\"../../images/tnseq/tranposon_structure.png\" width='50%' alt=\"Structure of the transpson construct, containing several barcodes and adapters\" >\n\nFrom [Santiago et al.](http://www.doi.org/10.1186/s12864-015-1361-3)\n]\n\n???\n\n- ITR junctions : Insertion sites.\n- Mme1 restriction site (cut 21 bp upstream from the restriction site) and NotI restriction sites are the 5' and 3' limits to the genomic DNA we want to sequence.\n- **A. Sequence flanking genomic regions** After digestion by NotI restriction enzyme, the fragments are attached to biotinylated adaptors that link to NotI restriction site. The attached fragment are then digested by MMeI at a site upstream , where an Illumina primer is then linked. The sequencing is then done, adding Illumina adaptors and an additional barcode to the read for multiplexed sequencing.\n-  **B. Removing incorrect fragments** An insertion can sometimes be composed of one or more copies of the transposon (multimer). There is therefore a risk to select plasmid backbone sequence. To solve this problem, an additional NotI has been add in the backbone to create different length construct, that can later be filtrated (D).\n- **D.**  Different promoters are added to the construct along with an additional 3 bp barcode\n\n\nNote:\nBecause of this complex tranposon structure, the reads obtained after sequencing contain a large portion of tranposon sequence for a 16-17 bp genomic sequence. This will necessitate several step of pre-processing to extract this genomic sequence.\n\n---\n\n\n# Tnseq analysis\n\n???\nWith the count of insertions at every insertion site, there is several methods existing to identify essential genes of regions. They can be divided in two major categories :\n1. Annotation dependent : The read counts and/or insertion frequency are calculated across defined regions (genes, promoters ... )\n2. Annotation independent : The read counts and/or disrupted sites are considered across the whole genome, independently of defined structures.\n\n\n---\n\n\n### Methods of Analysis\n\n.center[\n<img name=\"AnalysesMethods\" src=\"../../images/tnseq/type_of_analyses.png\" width='70%'  alt=\"Different types of TnSeq Analyses methods\" >\n\nFrom [Chao et al.](http://www.doi.org/10.1038/nrmicro.2015.7)\n]\n\n\n???\n\n **Annotation dependent method** The total read count an/or percentage of disrupted site are computed per annotated regions. The values are then compared to the rest of the genome to classify the genes into the categories *essential* or *non-essential*. **Annotation independent method** The total read count and/or disrupted sites are computed independently of annotated regions. One of these methods is using a sliding window. Each window is then classified into the categories *essential* or *non-essential*. After the windows have been classified, they are linked annotations, and the genes/regions can be classified as *essential*, *non-essential*, or *domain essential* according to the classification of the windows they cover. The same classification can be done using HMM based methods instead of sliding windows. In that case, each insertion site will be predicted as *essential* or *non essential*. From [Chao et al.](http://www.doi.org/10.1038/nrmicro.2015.7)\n\n\n---\n\n\n\n### TRANSIT Tool\n\n.left[\n- Tool for Essentiality Prediction\n- From TA sites read counts\n- Different analysis methods :\n    -   Gumbel : Gene Level Prediction\n    -   HMM : Region level prediction\n    -   Re-Sampling : Gene Level Prediction, Sample Comparison\n]\n\nFrom [DeJesus et al.](https://doi.org/10.1093/bioinformatics/btt043)\n\n???\n\nWe are presenting only the Himar1 methods, other tn5 specific methods existing\n\nGumbel\nThe Gumbel can be used to determine which genes are essential in a single condition. It does a gene-by-gene analysis of the insertions at TA sites with each gene, makes a call based on the longest consecutive sequence of TA sites without insertion in the genes, calculates the probability of this using a Bayesian model.\n\nHMM\nThe HMM method can be used to determine the essentiality of the entire genome, as opposed to gene-level analysis of the other methods. It is capable of identifying regions that have unusually high or unusually low read counts (i.e. growth advantage or growth defect regions), in addition to the more common categories of essential and non-essential.\n\nRe-sampling\nThe re-sampling method is a comparative analysis the allows that can be used to determine conditional essentiality of genes. It is based on a permutation test, and is capable of determining read-counts that are significantly different across conditions.\n\n\n---\n\n\n# Workflow of Analysis of Tnseq Data\n\n---\n\n\n### Agenda : From reads to essential genes annotations\n\n1. Removing all non genomic sequences from the sequenced reads\n    1. Data Structure\n    2. Separating reads from different experimental conditions\n    3. Removing Adapter sequence\n    4. Separate reads from different transposon constructs\n    5. Removing remaining transposon sequence.\n2. Counting the number of insertion per TA sites\n    1. Aligning the reads to a reference genome\n    2. Getting coverage of the genome\n    3. Getting TA sites positions\n    4. Merging overall coverage and TA sites to get the coverage of each TA sites\n3. Predicting Essential Genes with Transit\n    1. Predict the essentiality of genes\n    2. Understand the output\n\n---\n\n### 1.  Removing all non genomic sequences from the sequenced reads\n\n.left[#### 1. Data Structure]\n\n\n<img src=\"../../images/tnseq/preprocessing.png\" width='90%' alt=\"Workflow for preprocessing the read before alignment\" >\n\n???\n\nThe experimental design of transposon insertion sequencing produces raw reads containing a lot of adapters and foreign sequences that has been used to insert and target the transposon. In order to obtain the core reads that contain only genomic sequence, we have a number of steps to do to remove them and divide the reads per experimental condition and type of transposon.\n\n\nThe pre-processing of the data will be done through several steps of Cutadapt software, first we sill separate the reads of each experimental condition based on a 8 bp barcode at the beginning of the read (Illumina demultiplexing). The tail of each set of read is then removed. It immediately follows the 3bp barcode specific to transposon constructs, and contains illumina adapter sequence and downstream. To be sure all our reads have been trimmed correctly we filter out the reads too large. We then separate the reads per transposon construct and then remove the remaining transposon sequence containing MmeI.|\n\n---\n\n### 1.  Removing all non genomic sequences from the sequenced reads\n\n#### 2. Separating reads from different experimental conditions\n\n We start by dividing the initial data set by experimental conditions thanks to a 8bp barcode added by the Illumina multiplexing protocol.\n To do that we use Cutadapt with the fastq faile containing the reads and a fasta file containing the barcodes for each condition :\n\n.center[\n Barcode data:\n ```markdown\n >control\n ^CTCAGAAG\n >condition\n ^GACGTCAT\n ```\n]\n\n The '^' at the beginning of the sequence means we want to anchor the barcode at the beginning of the read. To know more about the symbols used by cutadapt, see cutadapt [manual](https://cutadapt.readthedocs.io/en/stable/guide.html#adapter-types)\n\n???\n The output is a collection of the different conditions dataset, here control and condition, and a report text file.\n You can look at the report and see that 100% of the reads has been trimmed.\n\n\n---\n### 1.  Removing all non genomic sequences from the sequenced reads\n\n#### 3. Removing Adapter sequence\n\n- Trimming the tail containing the illumina adapter. To remove the adapter and everything downstream, we use the end adapter option of cutadapt and don't anchor the sequence anywhere.\n- Filter the reads by size\n\n#### 4. Removing Adapter sequence\n\n\n- The constructs used in this experiment contain different strengths and directions of promoters. This constructs are marked by 3bp barcodes. (The separated set of reads will be use as replicate here)\n\n\n#### 5. Removing remaining transposon sequence\n\n- Removal of the linker containing the MmeI restriction site.\n\n\n???\n\nTo remove the reads that might not have been trimmed because of too many mismatches or other reasons, we will then filter the reads by size. Because we know the approximate size of the remaining sequences, we can filter the reads based on this estimation.\n\n4.\n\n\nWe have now removed the transposon sequences that was outside of the 3 bp barcode specific to the type of construct. The constructs used in this experiment contain different strengths and directions of promoters. It means that in addition of disrupting a gene at the location of the insertion, it will modify the expression of either upstream or downstream regions. The analysis of this modification will be studied in another training material, but for now we will consider it does not impact the essentiality analysis and we will use the different constructs as replicates.\nWe therefore need to separate the reads based on the construct specific 3bp barcodes.\n\n\nAll these steps are performed with the Cutadapt tool\n\n---\n\n### 2. Counting the number of insertion per TA sites\n\n#### 1. Aligning the reads to a reference genome\n\n\n\n- The first step is to map our read to the reference genome. We are using the tool Bowtie. We could also use Bowtie2 with an end-to-end option, but Bowtie is more suitable for very short reads like ours (16-17 bp).\n\n- We are strictly enforcing a no mismatch mapping in the bowtie parameters :\n    - Our reads being very short, the smallest size allowing precise mapping, allowing even one mismatch would risk having reads mapping in wrong positions.\n\n---\n\n### 2. Counting the number of insertion per TA sites\n\n#### 2. Getting coverage of the genome\n\n- Now that we have mapped the reads on the reference genome, we need to calculate the coverage of the genome to later cross them with our TA sites position.\n\n\n.center[\n<img name=\"method\" src=\"../../images/tnseq/Map_cov.png\" width='90%' alt=\"The read align to the genome with its 3' end covering half of the TA site\" >\n]\n\n- We are using the tool BamCoverage with an offset of `-1`\n\n???\n\nIn our case, the reads cover the flanking region on one side of the TA site where the transposon inserted. That means we do not want to have the coverage across the whole reads, as it could cover several TA sites, but only the coverage at the end of the read.\n\nThe sequenced read cover the 5' region flanking the site of insertion. To assign the read to its correct insertion, we need to compute the coverage at the 3' end of the read.\n\n---\n\n### 2. Counting the number of insertion per TA sites\n\n#### 3. Getting TA sites positions\n\n- We are considering both strands together and therefore reporting all counts to the leftmost position of the TA sites.\n\n- The first step is to get the TA sites coordinates using  Wordmatch, wich provides us with three outputs:\n    - A file containing the locations where the TA sites maps on the Genome\n    - A file containing the locations where the Genome maps on the TA site\n    - A report file\n\n- We use a succession of small operations using the Cut and Compute tools to extract two files :\n    - A file with the 5' coordinate of each TA site of the Forward Strand\n    - A file with the 5' coordinate of each TA site of the Reverse Strand\n\n\n\n???\n\n\nAs we are not considering strand separately in this analyses, we will consider both count as attached to the leftmost base of the TA site. To do that we will create two list of TA site positions, listing the 5' end of each TA site for forward and reverse strand, and then merge them to get a global count per TA site.\n\nIn order to get the coverage on each TA site we need to prepare a file containing the position of each TA site. Depending on the direction of insertion the coverage will be counted on the leftmost position of the TA site or on the rightmost. As we are not considering strand separately in this analyses, we will consider both count as attached to the leftmost base of the TA site. To do that we will create two list of TA site positions, listing the 5' end of each TA site for forward and reverse strand, and then merge them to get a global count per TA site.\n\nThe coordinates provided by wordmatch are based on count 1. Meaning the first nucleotide is counted as number 1. However, bamCoverage count the first nucleotide as nucleotide number 0. To be able to compare the two results, we need to shift the TA site positions by 1.\n\n\n---\n\n### 2. Counting the number of insertion per TA sites\n\n#### 4. Merging overall coverage and TA sites to get the coverage of each TA sites\n\n- We use the Join tool to join the coverage and the TA sites coordinates on the genomic positions. We then get :\n    - The coverage of TA sites on the Forward Strand reported on the leftmost base\n    - The coverage of TA sites on the Forward Strand reported on the rightmost base\n\n- We add the counts of both strand and report the total on the leftmost position of the TA site :\n    - We know have a count of insertions at every single site.\n\n???\n\n\nNow that have the files containing the coordinates of our TA sites for both strands. We will cross them with the coverage files to get the coverage on both sides of each TA site.\n\n\nWe now have a read count for each nucleotides of the TA sites. The insertions counted in the forward strand files are in a different direction than those counted on the reverse strand file. In our case, we are only interested in studying the gene disruption, and therefore we do not want to consider the directions separately. We will add the forward and reverse count together to get a total count per TA site. In order to do that we need to assign the count of both strand to the same nucleotide. We will do that by shifting by one position the count on the reverse strand.\n\n\n---\n\n\n### 3. Predicting Essential Genes with Transit\n\n####     1. Predict the essentiality of genes with Transit\n\n\n\nThe output of Transit is a tabulated file containing the following collumns (you can find more information on [Transit manual page](https://transit.readthedocs.io/en/latest/transit_methods.html)):\n-   Gene ID\n-   Name of the gene\n-   Gene description\n-   Number of Transposon Insertions Observed within the Gene\n-   Total Number of TA sites within the Gene\n-   Length of the Maximum Run of Non-Insertions observed (in number of TA sites)\n-   Span of nucleotides for the Maximum Run of Non-Insertions\n-   Posterior Probability of Essentiality\n-   Essentiality call for the gene : E=Essential, U=Uncertain, NE=Non-Essential, S=too short\n\nWe can obtain the list of genes predicted as essential by filtering on the essentiality call.\n\n???\n\nNow that we have the counts of insertions per TA site, we can use them to predict gene esssentiality with Transit. In order to do that, we need to create a an annotation file in the `prot_table` format, specifique to the Transit tool. You can create this file from a gff3 from GenBank.\n\n\n\nNow that we have prepared the annotation file, we can use the count per TA site to predict essential genes using Transit tool.  We will modify a couple parameters from the default settings :\n-   We want to ignore counts lower than 2, in order to reduce the number of sites presenting a single read, which could be artefactual.\n-   We want to ignore insertion near the extremities of the genes. A disrupted site that would be very close to the border of the gene may not actually disturb the gene function, and therefore not be an actual signal of disruption.\n\n\n---\n\n### 3. Predicting Essential Genes with Transit\n\n####     2. Understand the output\n\n.left[\n\n- FDR Corrected thresholds: 0.992500, 0.055350\n- MH Acceptance-Rate:    38.48%\n- Total Iterations Performed:    20999\n- Sample Size:   20000\n- phi estimate:  0.481177\n- Time: 584.757580996\n\n\n\n\nOrf | Name | Desc | k | n | r | s | zbar | Call\n--- | --- | --- | --- | --- | --- | --- | --- | ---\nSAOUHSC_00002 | - | DNA polymerase III subunit  |  2 | 96 | 94 | 1102 | 1.000000 | E\nSAOUHSC_00008 | - | histidine ammonia- |  54 | 128 | 8 | 95 | 0.000000 | NE\nSAOUHSC_00028 | - | hypothetical protein | 8 | 18 | 4 | 24 | -1.000000 | S\nSAOUHSC_00227 | - | hypothetical protein | 21 | 162 | 24 | 267 | 0.970900 | U\n\n]\n\n???\n\nORF\tGene ID.\n\nName\tName of the gene.\n\nDescription\tGene description.\n\nk\tNumber of Transposon Insertions Observed within the ORF.\n\nn\tTotal Number of TA dinucleotides within the ORF.\n\nr\tLength of the Maximum Run of Non-Insertions observed.\n\ns\tSpan of nucleotides for the Maximum Run of Non-Insertions.\n\nzbar\tPosterior Probability of Essentiality.\n\nCall\tEssentiality call for the gene. Depends on FDR corrected thresholds. E=Essential U=Uncertain, NE=Non-Essential, S=too short\n\n\nNote: Technically, Bayesian models are used to calculate posterior probabilities, not p-values (which is a concept associated with the frequentist framework). However, we have implemented a method for computing the approximate false-discovery rate (FDR) that serves a similar purpose. This determines a threshold for significance on the posterior probabilities that is corrected for multiple tests. The actual thresholds used are reported in the headers of the output file (and are near 1 for essentials and near 0 for non-essentials). There can be many genes that score between the two thresholds (t1 < zbar < t2). This reflects intrinsic uncertainty associated with either low read counts, sparse insertion density, or small genes. If the insertion_density is too low (< ~30%), the method may not work as well, and might indicate an unusually large number of Uncertain or Essential genes.\n\n\n---\n\n### Take Home\n\n- TnSeq use Tranposon insertion to identify Gene essential in different conditions\n- Based on insertion sites count. Whole genome coverage is not important.\n- Be aware of your library saturation: A saturation too low will give you a lot of false essential Genes\n- Do not Accept Mismatches in your alignements when working with very short reads\n- Be careful when you use different tools based on genomic positions, some tools start at position 1, or 0\n"],"hands_on":true,"slides":true,"mod_date":"2024-03-15 13:40:26 +0000","pub_date":"2019-07-02 09:57:56 +0000","version":52,"workflows":[{"workflow":"essential-genes-detection-transposon-insertion-sequencing-workflow.ga","tests":true,"url":"https://training.galaxyproject.org/training-material/topics/genome-annotation/tutorials/tnseq/workflows/essential-genes-detection-transposon-insertion-sequencing-workflow.ga","path":"topics/genome-annotation/tutorials/tnseq/workflows/essential-genes-detection-transposon-insertion-sequencing-workflow.ga","wfid":"genome-annotation-tnseq","wfname":"essential-genes-detection-transposon-insertion-sequencing-workflow","trs_endpoint":"https://training.galaxyproject.org/training-material/api/ga4gh/trs/v2/tools/genome-annotation-tnseq/versions/essential-genes-detection-transposon-insertion-sequencing-workflow","license":null,"creators":[],"name":"Essential genes detection with Transposon insertion sequencing","title":"Essential genes detection with Transposon insertion sequencing","test_results":null,"modified":"2024-06-20 10:21:36 +0000","mermaid":"flowchart TD\n  0[\"ℹ️ Input Dataset\\nTnseq-Tutorial-reads.fastqsanger.gz\"];\n  style 0 stroke:#2c3143,stroke-width:4px;\n  1[\"ℹ️ Input Dataset\\ncondition_barcodes.fasta\"];\n  style 1 stroke:#2c3143,stroke-width:4px;\n  2[\"ℹ️ Input Dataset\\nconstruct_barcodes.fasta\"];\n  style 2 stroke:#2c3143,stroke-width:4px;\n  3[\"ℹ️ Input Dataset\\nstaph_aur.fasta\"];\n  style 3 stroke:#2c3143,stroke-width:4px;\n  4[\"ℹ️ Input Dataset\\nstaph_aur.gff3\"];\n  style 4 stroke:#2c3143,stroke-width:4px;\n  5[\"Cutadapt\"];\n  0 -->|output| 5;\n  1 -->|output| 5;\n  6[\"Nucleotide subsequence search\"];\n  3 -->|output| 6;\n  7[\"Convert GFF3\"];\n  4 -->|output| 7;\n  8[\"Cutadapt\"];\n  5 -->|split_output| 8;\n  9[\"Cut\"];\n  6 -->|output| 9;\n  10[\"Cut\"];\n  6 -->|output| 10;\n  11[\"Cutadapt\"];\n  8 -->|out1| 11;\n  12[\"Compute\"];\n  10 -->|out_file1| 12;\n  13[\"Cutadapt\"];\n  11 -->|out1| 13;\n  2 -->|output| 13;\n  14[\"Cut\"];\n  12 -->|out_file1| 14;\n  15[\"Cutadapt\"];\n  13 -->|split_output| 15;\n  16[\"Map with Bowtie for Illumina\"];\n  3 -->|output| 16;\n  15 -->|out1| 16;\n  17[\"bamCoverage\"];\n  16 -->|output| 17;\n  18[\"Join\"];\n  17 -->|outFileName| 18;\n  9 -->|out_file1| 18;\n  19[\"Join\"];\n  17 -->|outFileName| 19;\n  14 -->|out_file1| 19;\n  20[\"Cut\"];\n  18 -->|output| 20;\n  21[\"Cut\"];\n  19 -->|output| 21;\n  22[\"Sort\"];\n  20 -->|out_file1| 22;\n  23[\"Compute\"];\n  21 -->|out_file1| 23;\n  24[\"Cut\"];\n  23 -->|out_file1| 24;\n  25[\"Sort\"];\n  24 -->|out_file1| 25;\n  26[\"Join\"];\n  22 -->|outfile| 26;\n  25 -->|outfile| 26;\n  27[\"Compute\"];\n  26 -->|output| 27;\n  28[\"Cut\"];\n  27 -->|out_file1| 28;\n  29[\"Sort\"];\n  28 -->|out_file1| 29;\n  30[\"Gumbel\"];\n  7 -->|output| 30;\n  29 -->|outfile| 30;\n  31[\"Filter\"];\n  30 -->|sites| 31;\n  32[\"Extract Dataset\"];\n  31 -->|out_file1| 32;\n  8796f62f-4676-4ad2-b085-7597f894c32c[\"Output\\ncontrol\"];\n  32 --> 8796f62f-4676-4ad2-b085-7597f894c32c;\n  style 8796f62f-4676-4ad2-b085-7597f894c32c stroke:#2c3143,stroke-width:4px;\n  33[\"Extract Dataset\"];\n  31 -->|out_file1| 33;\n  bd014de4-708e-419c-bd1e-8bf350661aad[\"Output\\ncondition\"];\n  33 --> bd014de4-708e-419c-bd1e-8bf350661aad;\n  style bd014de4-708e-419c-bd1e-8bf350661aad stroke:#2c3143,stroke-width:4px;\n  34[\"Join\"];\n  32 -->|output| 34;\n  33 -->|output| 34;\n  5cdfb5c9-c677-41dc-a838-c4a61d62f5be[\"Output\\nessential_both\"];\n  34 --> 5cdfb5c9-c677-41dc-a838-c4a61d62f5be;\n  style 5cdfb5c9-c677-41dc-a838-c4a61d62f5be stroke:#2c3143,stroke-width:4px;\n  35[\"Join\"];\n  32 -->|output| 35;\n  33 -->|output| 35;\n  8b2b65ea-37c3-43d2-b416-38f8f920fbd9[\"Output\\nessential_control\"];\n  35 --> 8b2b65ea-37c3-43d2-b416-38f8f920fbd9;\n  style 8b2b65ea-37c3-43d2-b416-38f8f920fbd9 stroke:#2c3143,stroke-width:4px;\n  36[\"Join\"];\n  32 -->|output| 36;\n  33 -->|output| 36;\n  37639319-b053-4fbc-bf61-fd3e38263502[\"Output\\nessential_condition\"];\n  36 --> 37639319-b053-4fbc-bf61-fd3e38263502;\n  style 37639319-b053-4fbc-bf61-fd3e38263502 stroke:#2c3143,stroke-width:4px;"}],"api":"https://training.galaxyproject.org/training-material/api/topics/genome-annotation/tutorials/tnseq/tutorial.json","tools":["Cut1","Filter1","__EXTRACT_DATASET__","toolshed.g2.bx.psu.edu/repos/bgruening/deeptools_bam_coverage/deeptools_bam_coverage/3.3.2.0.0","toolshed.g2.bx.psu.edu/repos/bgruening/find_subsequences/bg_find_subsequences/0.2","toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_easyjoin_tool/1.1.2","toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_sort_header_tool/1.1.1","toolshed.g2.bx.psu.edu/repos/devteam/bowtie_wrappers/bowtie_wrapper/1.2.0","toolshed.g2.bx.psu.edu/repos/devteam/column_maker/Add_a_column1/1.3.0","toolshed.g2.bx.psu.edu/repos/iuc/gff_to_prot/gff_to_prot/3.0.2+galaxy0","toolshed.g2.bx.psu.edu/repos/iuc/transit_gumbel/transit_gumbel/3.0.2+galaxy0","toolshed.g2.bx.psu.edu/repos/lparsons/cutadapt/cutadapt/1.16.5"],"supported_servers":{"exact":[{"url":"https://usegalaxy.no/","name":"UseGalaxy.no","usegalaxy":false}],"inexact":[{"url":"https://usegalaxy.cz/","name":"UseGalaxy.cz","usegalaxy":false},{"url":"https://usegalaxy.eu","name":"UseGalaxy.eu","usegalaxy":true}]},"topic_name_human":"Genome Annotation","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[{"name":"deeptools_bam_coverage","owner":"bgruening","revisions":"bb1e4f63e0e6","tool_panel_section_label":"deepTools","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"find_subsequences","owner":"bgruening","revisions":"d882a0a75759","tool_panel_section_label":"Annotation","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"text_processing","owner":"bgruening","revisions":"d698c222f354","tool_panel_section_label":"Text Manipulation","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"text_processing","owner":"bgruening","revisions":"d698c222f354","tool_panel_section_label":"Text Manipulation","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"bowtie_wrappers","owner":"devteam","revisions":"b46e7d48076a","tool_panel_section_label":"Mapping","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"column_maker","owner":"devteam","revisions":"be25c075ed54","tool_panel_section_label":"Text Manipulation","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"gff_to_prot","owner":"iuc","revisions":"07d7991bf205","tool_panel_section_label":"Annotation","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"transit_gumbel","owner":"iuc","revisions":"f50807720df1","tool_panel_section_label":"Annotation","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"cutadapt","owner":"lparsons","revisions":"49370cb85f0f","tool_panel_section_label":"FASTA/FASTQ","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"}]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools:\n- name: deeptools_bam_coverage\n  owner: bgruening\n  revisions: bb1e4f63e0e6\n  tool_panel_section_label: deepTools\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: find_subsequences\n  owner: bgruening\n  revisions: d882a0a75759\n  tool_panel_section_label: Annotation\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: text_processing\n  owner: bgruening\n  revisions: d698c222f354\n  tool_panel_section_label: Text Manipulation\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: text_processing\n  owner: bgruening\n  revisions: d698c222f354\n  tool_panel_section_label: Text Manipulation\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: bowtie_wrappers\n  owner: devteam\n  revisions: b46e7d48076a\n  tool_panel_section_label: Mapping\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: column_maker\n  owner: devteam\n  revisions: be25c075ed54\n  tool_panel_section_label: Text Manipulation\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: gff_to_prot\n  owner: iuc\n  revisions: 07d7991bf205\n  tool_panel_section_label: Annotation\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: transit_gumbel\n  owner: iuc\n  revisions: f50807720df1\n  tool_panel_section_label: Annotation\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: cutadapt\n  owner: lparsons\n  revisions: 49370cb85f0f\n  tool_panel_section_label: FASTA/FASTQ\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n","tours":false,"video":false,"slides_recordings":false,"translations":{"tutorial":[],"slides":[],"video":false},"license":"CC-BY-4.0","type":"tutorial","logo":"GTN","redirect_from":["/short/genome-annotation/tnseq/slides","/short/S00070"]}