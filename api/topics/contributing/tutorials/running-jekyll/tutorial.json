{"layout":"tutorial_hands_on","title":"Running the GTN website locally","questions":["How to setup the infrastructure to build training webpages?"],"objectives":["Installing packages needed for rendering the webpage","Running the GTN material website locally","Tracking changes to the content live in the webbrowser"],"time_estimation":"15m","subtopic":"writing","key_points":["Checking the generated website can be done locally"],"contributors":[{"name":"Bérénice Batut","email":"berenice.batut@gmail.com","twitter":"bebatut","linkedin":"berenicebatut","matrix":"bebatut:matrix.org","orcid":"0000-0001-9852-1987","joined":"2017-09","elixir_node":"fr","contact_for_training":true,"location":{"country":"FR","lat":45.77,"lon":3.08},"fediverse":"https://piaille.fr/@bebatut","fediverse_flavor":"mastodon","affiliations":["gallantries","ifb","elixir-europe"],"id":"bebatut","url":"https://training.galaxyproject.org/training-material/api/contributors/bebatut.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/bebatut/"},{"name":"Björn Grüning","email":"bjoern.gruening@gmail.com","twitter":"bjoerngruening","fediverse":"https://fosstodon.org/@bgruening","fediverse_flavor":"mastodon","matrix":"bgruening:matrix.org","orcid":"0000-0002-3079-6586","elixir_node":"de","linkedin":"bgruening","contact_for_training":true,"joined":"2017-09","location":{"country":"DE","lat":47.997791,"lon":7.842609},"affiliations":["eurosciencegateway","eosc-life","by-covid","deNBI","sfb992","elixir-converge","uni-freiburg","elixir-europe"],"id":"bgruening","url":"https://training.galaxyproject.org/training-material/api/contributors/bgruening.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/bgruening/"},{"name":"Saskia Hiltemann","maintainer_contact":"gitter","email":"saskia.hiltemann@gmail.com","fediverse":"https://mstdn.science/@shiltemann","fediverse_flavor":"mastodon","bluesky":"shiltemann.bsky.social","linkedin":"shiltemann","matrix":"shiltemann:matrix.org","orcid":"0000-0003-3803-468X","joined":"2017-09","bio":"Researcher at Erasmus Medical Center","elixir_node":"nl","contact_for_training":true,"affiliations":["CINECA-Project","gallantries","erasmusmc","elixir-europe","uni-freiburg"],"location":{"country":"NL","lat":51.912,"lon":4.462},"id":"shiltemann","url":"https://training.galaxyproject.org/training-material/api/contributors/shiltemann.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/shiltemann/"}],"js_requirements":{"mathjax":null,"mermaid":false},"short_id":"T00069","url":"/topics/contributing/tutorials/running-jekyll/tutorial.html","topic_name":"contributing","tutorial_name":"running-jekyll","dir":"topics/contributing/tutorials/running-jekyll","symlink":null,"id":"contributing/running-jekyll","ref_tutorials":["<p>If you want to run the entire GTN material website locally or test your new training material you can do this!</p>\n\n<p>Currently, the website is generated from the metadata and the tutorials using Jekyll, a simple static site builder.\nWe can use Jekyll to run a server to check if the tutorial is correctly added and rendered.</p>\n\n<blockquote class=\"agenda\">\n  <agenda-title></agenda-title>\n\n  <p>In this tutorial, you will learn how to run a local instance of the GTN website:</p>\n\n<ol id=\"markdown-toc\">\n  <li><a href=\"#installation-of-the-requirements\" id=\"markdown-toc-installation-of-the-requirements\">Installation of the requirements</a></li>\n  <li><a href=\"#checking-the-website-generation\" id=\"markdown-toc-checking-the-website-generation\">Checking the website generation</a></li>\n  <li><a href=\"#stopping-the-server\" id=\"markdown-toc-stopping-the-server\">Stopping the server</a></li>\n  <li><a href=\"#conclusion\" id=\"markdown-toc-conclusion\">Conclusion</a></li>\n</ol>\n\n</blockquote>\n\n<h1 id=\"installation-of-the-requirements\">Installation of the requirements</h1>\n\n<p>The first step is to install the needed tools inside a conda environment. A conda environment is a directory that contains a specific collection of packages. For example here to run the website, we need ruby, pandas, requests, etc. By creating a conda environment and installing the needed tools there, we do not affect your main installation.</p>\n\n<p>This step has to be done once.</p>\n\n<p>We also need to make sure that a couple of other utilities and build requirements are present: <strong>git</strong>, <strong>curl</strong> &amp; <strong>make</strong>. The easiest way to install these is with your package manager of choice - i.e. yum, apt, brew etc.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Install the requirements</hands-on-title>\n\n  <ol>\n    <li>Open a Terminal</li>\n    <li>\n      <p>Use your package manager to install <code class=\"language-plaintext highlighter-rouge\">git</code>, <code class=\"language-plaintext highlighter-rouge\">curl</code> and <code class=\"language-plaintext highlighter-rouge\">make</code></p>\n\n      <ul>\n        <li>For Debian/Ubuntu: <code class=\"language-plaintext highlighter-rouge\">sudo apt update &amp;&amp; sudo apt install git curl make</code></li>\n        <li>For Fedora/CentOs/RedHat: <code class=\"language-plaintext highlighter-rouge\">sudo yum install git curl make</code></li>\n      </ul>\n    </li>\n    <li>(If not done yet) Clone the training material GitHub repository: <code class=\"language-plaintext highlighter-rouge\">git clone https://github.com/galaxyproject/training-material.git</code></li>\n    <li>Navigate to the <code class=\"language-plaintext highlighter-rouge\">training-material/</code> folder with <code class=\"language-plaintext highlighter-rouge\">cd</code></li>\n    <li>\n      <p>Set up the conda environment</p>\n\n      <p>It will install some needed tools (ruby, nodejs, etc) in a protected environment, without interfering with the existing tools or versions.</p>\n\n      <ol>\n        <li>Install conda (if not already installed): <code class=\"language-plaintext highlighter-rouge\">make install-conda</code></li>\n        <li>(You may need to exit the terminal and re-open for conda to be recognised. Navigate back to the same place.)</li>\n        <li>Create the <code class=\"language-plaintext highlighter-rouge\">galaxy_training_material</code> conda environment: <code class=\"language-plaintext highlighter-rouge\">make create-env</code></li>\n      </ol>\n    </li>\n    <li>Install Jekyll and related modules into the conda environment: <code class=\"language-plaintext highlighter-rouge\">make install</code></li>\n  </ol>\n</blockquote>\n\n<blockquote class=\"details\">\n  <details-title>Troubleshooting `libxml2` errors</details-title>\n  <p>If you encounter an error about libxml2 on Linux, please try to install <code class=\"language-plaintext highlighter-rouge\">libxml2-dev</code> (executing <code class=\"language-plaintext highlighter-rouge\">sudo apt install libxml2-dev</code>) if on Debian/Ubuntu or <code class=\"language-plaintext highlighter-rouge\">libxml2-devel</code> (executing <code class=\"language-plaintext highlighter-rouge\">sudo yum install libxml2-devel</code>) if on Fedora/RedHat/CentOS, and re-run <code class=\"language-plaintext highlighter-rouge\">make install</code> .</p>\n</blockquote>\n\n<h1 id=\"checking-the-website-generation\">Checking the website generation</h1>\n\n<p>Once Jekyll and its modules are installed in our conda environment, we can check the generation of the website locally:</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Checking the website generation locally</hands-on-title>\n\n  <ol>\n    <li>Run a local Jekyll server with <code class=\"language-plaintext highlighter-rouge\">make serve-quick</code></li>\n    <li>Visualize at <a href=\"http://localhost:4000/training-material/\">http://localhost:4000/training-material/ </a></li>\n    <li>Edit one of the tutorials:\n      <ul>\n        <li>For example, open <code class=\"language-plaintext highlighter-rouge\">topics/introduction/tutorials/galaxy-intro-peaks2genes/tutorial.md</code> in a text editor of your choice.</li>\n        <li>Make some changes to the <em>Introduction</em> paragraph, and save the file.</li>\n        <li>Refresh the tutorial page in your browser until you can see the changes you made.\n          <ul>\n            <li>this may take a little bit of time; in the terminal you can monitor when the regeneration is complete</li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>With <code class=\"language-plaintext highlighter-rouge\">make serve-quick</code>, a local Jekyll server will run in background. It will check the changes and regenerate the website accordingly. You may need to reload the page to see the changes (and sometimes to wait 1-2 minutes).</p>\n\n<blockquote class=\"tip\">\n  <tip-title>Tips</tip-title>\n\n  <ol>\n    <li>\n      <p>Use <code class=\"language-plaintext highlighter-rouge\">make serve</code> instead of <code class=\"language-plaintext highlighter-rouge\">make serve-quick</code> to get all plugins, but also configure the post, host and pass additional flags. This however can be quite slow.</p>\n    </li>\n    <li>\n      <p>Need to speed up the cloning step? You coud fetch only the latest commit of the main branch:</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ git clone https://github.com/galaxyproject/training-material.git --depth 1 --branch main\n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Running on a VM or remote machine?</p>\n\n      <p>If you are not running this on your local machine, but e.g. on a VM, you may need to configure a webserver to serve the website.</p>\n\n      <p>Below is an example NGINX configuration (e.g. in <code class=\"language-plaintext highlighter-rouge\">/etc/nginx/sites-enabled/default</code>)</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>location /training-material/ {\n  root /home/ubuntu/training-material/_site/;\n}\n</code></pre></div>      </div>\n\n      <p>Change the <code class=\"language-plaintext highlighter-rouge\">root</code> path above to wherever you cloned the training material folder</p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h1 id=\"stopping-the-server\">Stopping the server</h1>\n\n<p>Once you are done, you can stop the server and clean your repository.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Stopping the server</hands-on-title>\n\n  <ol>\n    <li>Stop the server with <kbd>CTRL</kbd>-<kbd>C</kbd></li>\n    <li>Clean the repository: <code class=\"language-plaintext highlighter-rouge\">make clean</code></li>\n  </ol>\n\n</blockquote>\n\n<h1 id=\"conclusion\">Conclusion</h1>\n\n"],"ref_slides":[],"hands_on":true,"slides":false,"mod_date":"2023-11-03 14:30:27 +0000","pub_date":"2017-06-25 22:36:01 +0000","version":37,"api":"https://training.galaxyproject.org/training-material/api/topics/contributing/tutorials/running-jekyll/tutorial.json","tools":[],"supported_servers":[],"topic_name_human":"Contributing to the Galaxy Training Material","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools: []\n","tours":false,"video":false,"slides_recordings":false,"translations":{"tutorial":[],"slides":[],"video":false},"license":"CC-BY-4.0","type":"tutorial"}