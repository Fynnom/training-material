{"layout":"tutorial_hands_on","title":"Tools, Data, and Workflows for tutorials","questions":["How can we define the technical infrastructure for a tutorial?","How to define the tools needed for a tutorial?","How to add the needed data directly in an instance?","How to add the workflows related to a tutorial?","How can we check the technical infrastructure is working?","How can we make an existing Galaxy instance able to run a tutorial?"],"objectives":["Extracting the technical description for a tutorial","Populating an existing instance with the needed tools, data and workflows for a tutorial","Creating a Galaxy Docker flavor with the needed tools, data and workflows for a tutorial","Testing the Galaxy Docker flavor of a tutorial"],"time_estimation":"30m","subtopic":"writing","key_points":["Tools, data and workflows can be easily integrated in a Docker flavor to have a useful technical support for a tutorial","A Galaxy Docker flavor is a great support for training","A Galaxy Docker flavor can be deployed 'anywhere' and is scalable"],"contributors":[{"name":"Bérénice Batut","email":"berenice.batut@gmail.com","twitter":"bebatut","linkedin":"berenicebatut","matrix":"bebatut:matrix.org","orcid":"0000-0001-9852-1987","joined":"2017-09","elixir_node":"fr","contact_for_training":true,"location":{"country":"FR","lat":45.77,"lon":3.08},"fediverse":"https://piaille.fr/@bebatut","fediverse_flavor":"mastodon","affiliations":["gallantries","ifb","elixir-europe"],"id":"bebatut","url":"https://training.galaxyproject.org/training-material/api/contributors/bebatut.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/bebatut/"},{"name":"Björn Grüning","email":"bjoern.gruening@gmail.com","twitter":"bjoerngruening","fediverse":"https://fosstodon.org/@bgruening","fediverse_flavor":"mastodon","matrix":"bgruening:matrix.org","orcid":"0000-0002-3079-6586","elixir_node":"de","linkedin":"bgruening","contact_for_training":true,"joined":"2017-09","location":{"country":"DE","lat":47.997791,"lon":7.842609},"affiliations":["eurosciencegateway","eosc-life","by-covid","deNBI","sfb992","elixir-converge","uni-freiburg","elixir-europe"],"id":"bgruening","url":"https://training.galaxyproject.org/training-material/api/contributors/bgruening.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/bgruening/"},{"name":"Saskia Hiltemann","maintainer_contact":"gitter","email":"saskia.hiltemann@gmail.com","fediverse":"https://mstdn.science/@shiltemann","fediverse_flavor":"mastodon","bluesky":"shiltemann.bsky.social","linkedin":"shiltemann","matrix":"shiltemann:matrix.org","orcid":"0000-0003-3803-468X","joined":"2017-09","bio":"Researcher at Erasmus Medical Center","elixir_node":"nl","contact_for_training":true,"affiliations":["CINECA-Project","gallantries","erasmusmc","elixir-europe","uni-freiburg"],"location":{"country":"NL","lat":51.912,"lon":4.462},"id":"shiltemann","url":"https://training.galaxyproject.org/training-material/api/contributors/shiltemann.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/shiltemann/"},{"name":"Helena Rasche","orcid":"0000-0001-9760-8992","maintainer_contact":"gitter","matrix":"hexylena:matrix.org","joined":"2017-09","elixir_node":"nl","affiliations":["gallantries","by-covid","erasmusmc","elixir-europe","elixir-converge"],"former_affiliations":["deNBI","avans-atgm","uni-freiburg"],"contact_for_training":false,"location":{"country":"NL","lat":51.91,"lon":4.46},"id":"hexylena","url":"https://training.galaxyproject.org/training-material/api/contributors/hexylena.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/hexylena/"}],"js_requirements":{"mathjax":null,"mermaid":false},"short_id":"T00060","url":"/topics/contributing/tutorials/create-new-tutorial-technical/tutorial.html","topic_name":"contributing","tutorial_name":"create-new-tutorial-technical","dir":"topics/contributing/tutorials/create-new-tutorial-technical","symlink":null,"id":"contributing/create-new-tutorial-technical","ref_tutorials":["<h1 id=\"building-a-galaxy-instance-specifically-for-your-training\">Building a Galaxy instance specifically for your training</h1>\n\n<p>To be able to run the tutorial, we need a Galaxy instance where all of the needed tools and data are available. Thus we need to describe the needed technical infrastructure.</p>\n\n<p>The files we define in this tutorial will be used to automatically build a Docker Galaxy flavour, and also to test if a public Galaxy instance is able to run the tool.</p>\n\n<p>In this tutorial, you will learn how to create a virtualized Galaxy instance, based on Docker, to run your training - either on normal computers or cloud environments.</p>\n\n<blockquote class=\"agenda\">\n  <agenda-title></agenda-title>\n\n  <p>In this tutorial, we will deal with:</p>\n\n<ol id=\"markdown-toc\">\n  <li><a href=\"#building-a-galaxy-instance-specifically-for-your-training\" id=\"markdown-toc-building-a-galaxy-instance-specifically-for-your-training\">Building a Galaxy instance specifically for your training</a></li>\n  <li><a href=\"#extracting-workflows\" id=\"markdown-toc-extracting-workflows\">Extracting workflows</a>    <ol>\n      <li><a href=\"#testing-the-workflow-recommended\" id=\"markdown-toc-testing-the-workflow-recommended\">Testing the workflow (recommended)</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#creating-the-data-libraryyaml-recommended\" id=\"markdown-toc-creating-the-data-libraryyaml-recommended\">Creating the <code class=\"language-plaintext highlighter-rouge\">data-library.yaml</code> (recommended)</a></li>\n  <li><a href=\"#creating-the-data-manageryaml-optional\" id=\"markdown-toc-creating-the-data-manageryaml-optional\">Creating the <code class=\"language-plaintext highlighter-rouge\">data-manager.yaml</code> (optional)</a></li>\n  <li><a href=\"#creating-the-galaxy-interactive-tour-optional\" id=\"markdown-toc-creating-the-galaxy-interactive-tour-optional\">Creating the Galaxy Interactive Tour (optional)</a></li>\n  <li><a href=\"#testing-the-technical-infrastructure\" id=\"markdown-toc-testing-the-technical-infrastructure\">Testing the technical infrastructure</a></li>\n  <li><a href=\"#conclusion\" id=\"markdown-toc-conclusion\">Conclusion</a></li>\n</ol>\n\n</blockquote>\n\n<h1 id=\"extracting-workflows\">Extracting workflows</h1>\n\n<p>Once the tutorial is ready, we need to develop a workflow that represents the steps taken in the tutorial, and then extract these workflow(s) and add them to the <code class=\"language-plaintext highlighter-rouge\">workflows</code> directory in the tutorial. Additionally we will need to add some explanation about the workflow(s) in a <code class=\"language-plaintext highlighter-rouge\">README.md</code> file</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Extract the workflow</hands-on-title>\n\n  <ol>\n    <li>Add the topic name as a Tag and the tutorial title as Annotation/Notes to the workflow using the workflow editor.</li>\n    <li>Download the workflow for the tutorial</li>\n    <li>Save it in the <code class=\"language-plaintext highlighter-rouge\">workflow</code> directory of the tutorial</li>\n    <li>\n      <p>Check that your <code class=\"language-plaintext highlighter-rouge\">workflow</code> directory has an <code class=\"language-plaintext highlighter-rouge\">index.md</code> with the contents:</p>\n\n      <div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nn\">---</span>\n<span class=\"na\">layout</span><span class=\"pi\">:</span> <span class=\"s\">workflow-list</span>\n<span class=\"nn\">---</span>\n</code></pre></div>      </div>\n    </li>\n  </ol>\n</blockquote>\n\n<h2 id=\"testing-the-workflow-recommended\">Testing the workflow (recommended)</h2>\n\n<p>Workflow testing is a great way to get feedback that your tutorial can be run successfully on a given server. When you’re giving a training this can provide peace of mind, not only are the tools installed (as is indicated by the badges we provide) but they also work.</p>\n\n<p>Given the workflow you created above and have included in the tutorial folder, you’ll need to create a corresponding <code class=\"language-plaintext highlighter-rouge\">-test.yml</code> file.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Creating the `-test.yml` file for your workflow</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Find the correct name for the file; if your workflow was <code class=\"language-plaintext highlighter-rouge\">unicycler.ga</code>, then your test file should be <code class=\"language-plaintext highlighter-rouge\">unicycler-test.yml</code>, they need to share the same prefix.</p>\n    </li>\n    <li>\n      <p>Create the following structure:</p>\n\n      <div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nn\">---</span>\n<span class=\"pi\">-</span> <span class=\"na\">doc</span><span class=\"pi\">:</span> <span class=\"s\">Test sample data for the workflow</span>\n  <span class=\"na\">job</span><span class=\"pi\">:</span>\n    <span class=\"na\">an_input_file</span><span class=\"pi\">:</span>\n      <span class=\"na\">class</span><span class=\"pi\">:</span> <span class=\"s\">File</span>\n      <span class=\"na\">location</span><span class=\"pi\">:</span> <span class=\"s\">https://....</span>\n      <span class=\"na\">filetype</span><span class=\"pi\">:</span> <span class=\"s\">fasta</span>\n  <span class=\"na\">outputs</span><span class=\"pi\">:</span>\n    <span class=\"na\">ffn</span><span class=\"pi\">:</span>\n      <span class=\"na\">asserts</span><span class=\"pi\">:</span>\n        <span class=\"pi\">-</span> <span class=\"na\">that</span><span class=\"pi\">:</span> <span class=\"s\">has_text</span>\n          <span class=\"na\">text</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">&gt;A\"</span>\n        <span class=\"pi\">-</span> <span class=\"na\">that</span><span class=\"pi\">:</span> <span class=\"s\">has_text</span>\n          <span class=\"na\">text</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">&gt;B\"</span>\n</code></pre></div>      </div>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>You’ll need to edit the <code class=\"language-plaintext highlighter-rouge\">job</code> and <code class=\"language-plaintext highlighter-rouge\">outputs</code> sections according to your workflow’s inputs and outputs. Additionally you will need to edit the steps of your workflow <code class=\"language-plaintext highlighter-rouge\">.ga</code> file appropriately.</p>\n\n<h3 id=\"inputs\">Inputs</h3>\n\n<p>Your workflow <strong>must</strong> use “Data Inputs” for each input dataset. For each of these input steps in the <code class=\"language-plaintext highlighter-rouge\">.ga</code> file, you’ll need to do the following:</p>\n\n<ol>\n  <li>Edit the <code class=\"language-plaintext highlighter-rouge\">label</code></li>\n  <li>Edit the <code class=\"language-plaintext highlighter-rouge\">name</code></li>\n  <li>Edit the <code class=\"language-plaintext highlighter-rouge\">inputs[0].name</code></li>\n  <li>Edit the <code class=\"language-plaintext highlighter-rouge\">tool_state</code></li>\n</ol>\n\n<p>In a normal workflow you have exported from Galaxy, you’ll see something like</p>\n\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"id\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"input_connections\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{},</span><span class=\"w\">\n    </span><span class=\"nl\">\"inputs\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n            </span><span class=\"nl\">\"description\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"\"</span><span class=\"p\">,</span><span class=\"w\">\n            </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"patient1_ChIP_ER_good_outcome.bam\"</span><span class=\"w\">\n        </span><span class=\"p\">}</span><span class=\"w\">\n    </span><span class=\"p\">],</span><span class=\"w\">\n    </span><span class=\"nl\">\"label\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">null</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"Input dataset\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"outputs\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[],</span><span class=\"w\">\n    </span><span class=\"nl\">\"position\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n        </span><span class=\"nl\">\"left\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"w\">\n        </span><span class=\"nl\">\"top\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"w\">\n    </span><span class=\"p\">},</span><span class=\"w\">\n    </span><span class=\"nl\">\"tool_id\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">null</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"tool_state\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"{</span><span class=\"se\">\\\"</span><span class=\"s2\">name</span><span class=\"se\">\\\"</span><span class=\"s2\">: </span><span class=\"se\">\\\"</span><span class=\"s2\">patient1_ChIP_ER_good_outcome.bam</span><span class=\"se\">\\\"</span><span class=\"s2\">}\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"tool_version\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">null</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n\n<p>You should synchronize the aforementioned fields so it looks like this:</p>\n\n<div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"id\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"input_connections\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{},</span><span class=\"w\">\n    </span><span class=\"nl\">\"inputs\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n            </span><span class=\"nl\">\"description\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"\"</span><span class=\"p\">,</span><span class=\"w\">\n            </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"good_outcome\"</span><span class=\"w\">\n        </span><span class=\"p\">}</span><span class=\"w\">\n    </span><span class=\"p\">],</span><span class=\"w\">\n    </span><span class=\"nl\">\"label\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"good_outcome\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"good_outcome\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"outputs\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[],</span><span class=\"w\">\n    </span><span class=\"nl\">\"position\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">{</span><span class=\"w\">\n        </span><span class=\"nl\">\"left\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"w\">\n        </span><span class=\"nl\">\"top\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"mi\">10</span><span class=\"w\">\n    </span><span class=\"p\">},</span><span class=\"w\">\n    </span><span class=\"nl\">\"tool_id\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">null</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"tool_state\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"{</span><span class=\"se\">\\\"</span><span class=\"s2\">name</span><span class=\"se\">\\\"</span><span class=\"s2\">: </span><span class=\"se\">\\\"</span><span class=\"s2\">good_outcome</span><span class=\"se\">\\\"</span><span class=\"s2\">}\"</span><span class=\"p\">,</span><span class=\"w\">\n    </span><span class=\"nl\">\"tool_version\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"kc\">null</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div></div>\n\n<p>This will allow you to specify <code class=\"language-plaintext highlighter-rouge\">good_outcome</code> in your job to load a file:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>- doc: ...\n  job:\n    good_outcome:\n      class: File\n      location: ...\n      filetype: ...\n</code></pre></div></div>\n\n<p>The filetype should be the Galaxy datatype of your file, for example <code class=\"language-plaintext highlighter-rouge\">fastqsanger</code>, <code class=\"language-plaintext highlighter-rouge\">tabular</code>, <code class=\"language-plaintext highlighter-rouge\">bam</code>.</p>\n\n<h3 id=\"outputs\">Outputs</h3>\n\n<p>For the outputs the process is somewhat simpler:</p>\n\n<ol>\n  <li>Identify a step, the outputs of which you would like to test</li>\n  <li>\n    <p>Convert the relevant <code class=\"language-plaintext highlighter-rouge\">outputs</code> to <code class=\"language-plaintext highlighter-rouge\">workflow_outputs</code></p>\n\n    <p>In a normal workflow you see</p>\n\n    <div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"outputs\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n            </span><span class=\"nl\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"txt\"</span><span class=\"p\">,</span><span class=\"w\">\n            </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"ofile\"</span><span class=\"w\">\n        </span><span class=\"p\">},</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n            </span><span class=\"nl\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"txt\"</span><span class=\"p\">,</span><span class=\"w\">\n            </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"ofile2\"</span><span class=\"w\">\n        </span><span class=\"p\">}</span><span class=\"w\">\n    </span><span class=\"p\">],</span><span class=\"w\">\n    </span><span class=\"nl\">\"workflow_outputs\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[]</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div>    </div>\n\n    <p>If you want to test the contents of <code class=\"language-plaintext highlighter-rouge\">ofile</code>, you should change it to</p>\n\n    <div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"w\">\n    </span><span class=\"nl\">\"outputs\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n            </span><span class=\"nl\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"txt\"</span><span class=\"p\">,</span><span class=\"w\">\n            </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"ofile\"</span><span class=\"w\">\n        </span><span class=\"p\">},</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"w\">\n            </span><span class=\"nl\">\"type\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"txt\"</span><span class=\"p\">,</span><span class=\"w\">\n            </span><span class=\"nl\">\"name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"ofile2\"</span><span class=\"w\">\n        </span><span class=\"p\">}</span><span class=\"w\">\n    </span><span class=\"p\">],</span><span class=\"w\">\n    </span><span class=\"nl\">\"workflow_outputs\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"p\">[</span><span class=\"w\">\n        </span><span class=\"p\">{</span><span class=\"nl\">\"output_name\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"ofile\"</span><span class=\"p\">,</span><span class=\"w\"> </span><span class=\"nl\">\"label\"</span><span class=\"p\">:</span><span class=\"w\"> </span><span class=\"s2\">\"my_output\"</span><span class=\"p\">}</span><span class=\"w\">\n    </span><span class=\"p\">]</span><span class=\"w\">\n</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div>    </div>\n  </li>\n  <li>\n    <p>You can now use the label you chose (here <code class=\"language-plaintext highlighter-rouge\">my_output</code>) in your test case:</p>\n\n    <div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"pi\">-</span> <span class=\"na\">doc</span><span class=\"pi\">:</span>\n  <span class=\"na\">job</span><span class=\"pi\">:</span> <span class=\"s\">...</span>\n  <span class=\"na\">outputs</span><span class=\"pi\">:</span>\n    <span class=\"na\">my_output</span><span class=\"pi\">:</span>\n      <span class=\"na\">asserts</span><span class=\"pi\">:</span>\n        <span class=\"na\">has_text</span><span class=\"pi\">:</span>\n          <span class=\"na\">text</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">some-string'</span>\n</code></pre></div>    </div>\n  </li>\n</ol>\n\n<h3 id=\"running-the-tests\">Running the Tests</h3>\n\n<p>You can test the file you’ve written with the following command and a recent version (&gt;=0.56.0) of planemo:</p>\n\n<div class=\"language-console highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"go\">planemo test \\\n</span><span class=\"gp\">\t--galaxy_url \"$</span>GALAXY_URL<span class=\"s2\">\" </span><span class=\"se\">\\</span><span class=\"s2\">\n</span><span class=\"gp\">\t--galaxy_user_key \"$</span><span class=\"s2\">GALAXY_USER_KEY\"</span> <span class=\"se\">\\</span>\n<span class=\"go\">\t--no_shed_install \\\n\t--engine external_galaxy \\\n\tworkflow.ga\n</span></code></pre></div></div>\n\n<p>Planemo will autodetect that the <code class=\"language-plaintext highlighter-rouge\">workflow-test.yml</code> file and load that for the testing.</p>\n\n<h3 id=\"skipping-testing-in-the-gtn\">Skipping Testing in the GTN</h3>\n\n<p>If for some reason you want to skip this workflow being tested in the GTN,\nplease add a comment with <code class=\"language-plaintext highlighter-rouge\">GTN_RUN_SKIP_REASON</code> in the <code class=\"language-plaintext highlighter-rouge\">-test.yml</code> file stating\nthe reason it is skipped.</p>\n\n<p>This will also exempt you from writing output tests.</p>\n\n<p>A good use case for this is you want to provide a working test, but the workflow takes upwards of 6 hours to execute (e.g. large download jobs.)</p>\n\n<h1 id=\"creating-the-data-libraryyaml-recommended\">Creating the <code class=\"language-plaintext highlighter-rouge\">data-library.yaml</code> (recommended)</h1>\n\n<p>The datasets needed for a tutorial can also be integrated in the Galaxy instance inside of data libraries. These allow the datasets to be easily shared with all users of a Galaxy instance. Additionally it lets trainees avoid each re-downloading the input data.</p>\n\n<p>These datasets are described in the <code class=\"language-plaintext highlighter-rouge\">data-library.yaml</code> files:</p>\n\n<div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nn\">---</span>\n<span class=\"na\">destination</span><span class=\"pi\">:</span>\n  <span class=\"na\">type</span><span class=\"pi\">:</span> <span class=\"s\">library</span>\n  <span class=\"na\">name</span><span class=\"pi\">:</span> <span class=\"s\">GTN - Material</span>\n  <span class=\"na\">description</span><span class=\"pi\">:</span> <span class=\"s\">Galaxy Training Network Material</span>\n  <span class=\"na\">synopsis</span><span class=\"pi\">:</span> <span class=\"s\">Galaxy Training Network Material. See https://training.galaxyproject.org</span>\n<span class=\"na\">items</span><span class=\"pi\">:</span>\n<span class=\"pi\">-</span> <span class=\"na\">name</span><span class=\"pi\">:</span> <span class=\"s\">Title of the topic</span>\n  <span class=\"na\">description</span><span class=\"pi\">:</span> <span class=\"s\">Summary of the topic</span>\n  <span class=\"na\">items</span><span class=\"pi\">:</span>\n  <span class=\"pi\">-</span> <span class=\"na\">name</span><span class=\"pi\">:</span> <span class=\"s\">Title of the tutorial</span>\n    <span class=\"na\">items</span><span class=\"pi\">:</span>\n    <span class=\"pi\">-</span> <span class=\"na\">name</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">DOI:</span><span class=\"nv\"> </span><span class=\"s\">10.5281/zenodo....'</span>\n      <span class=\"na\">description</span><span class=\"pi\">:</span> <span class=\"s\">latest</span>\n      <span class=\"na\">items</span><span class=\"pi\">:</span>\n      <span class=\"pi\">-</span> <span class=\"na\">info</span><span class=\"pi\">:</span> <span class=\"s\">https://doi.org/10.5281/zenodo....</span>\n        <span class=\"na\">url</span><span class=\"pi\">:</span> <span class=\"s\">https://zenodo.org/records/URL/files/path/to/input</span>\n        <span class=\"na\">ext</span><span class=\"pi\">:</span> <span class=\"s\">galaxy-datatype</span>\n        <span class=\"na\">src</span><span class=\"pi\">:</span> <span class=\"s\">url</span>\n</code></pre></div></div>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Creating the `data-library.yaml`</hands-on-title>\n\n  <ol>\n    <li>Copy the Zenodo link</li>\n    <li>\n      <p>Generate the <code class=\"language-plaintext highlighter-rouge\">data-library.yaml</code> file and update the tutorial metadata with the link:</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ planemo training_fill_data_library \\\n         --topic_name \"my-topic\" \\\n         --tutorial_name \"my-new-tutorial\" \\\n         --zenodo_link \"URL to the Zenodo record\"\n</code></pre></div>      </div>\n    </li>\n    <li>Check that the <code class=\"language-plaintext highlighter-rouge\">data-library.yaml</code> has been generated (or updated)</li>\n    <li>Check that the Zenodo link is in the metadata at the top of the <code class=\"language-plaintext highlighter-rouge\">tutorial.md</code></li>\n  </ol>\n</blockquote>\n\n<h1 id=\"creating-the-data-manageryaml-optional\">Creating the <code class=\"language-plaintext highlighter-rouge\">data-manager.yaml</code> (optional)</h1>\n\n<p>Some of the tools may require specific databases, specifically prepared for the tool. In this case, some Galaxy tools come with “data managers” to simplify this process.</p>\n\n<p>If you need such data managers for your training, then you should describe how to run them in the <code class=\"language-plaintext highlighter-rouge\">data-manager.yaml</code> file:</p>\n\n<div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">data_managers</span><span class=\"pi\">:</span>\n    <span class=\"pi\">-</span> <span class=\"na\">id</span><span class=\"pi\">:</span> <span class=\"s\">url to data manager on ToolShed</span>\n      <span class=\"na\">params</span><span class=\"pi\">:</span>\n        <span class=\"pi\">-</span> <span class=\"s1\">'</span><span class=\"s\">param1'</span><span class=\"err\">:</span> <span class=\"s1\">'</span><span class=\"s\">'</span>\n        <span class=\"pi\">-</span> <span class=\"s1\">'</span><span class=\"s\">param2'</span><span class=\"err\">:</span> <span class=\"s1\">'</span><span class=\"s\">value'</span>\n      <span class=\"c1\"># Items refer to a list of variables you want to run this data manager. You can use them inside the param field with </span>\n      <span class=\"c1\"># In case of genome for example you can run this DM with multiple genomes, or you could give multiple URLs.</span>\n      <span class=\"na\">items</span><span class=\"pi\">:</span>\n        <span class=\"pi\">-</span> <span class=\"s\">item1</span>\n        <span class=\"pi\">-</span> <span class=\"s\">item2</span>\n      <span class=\"c1\"># Name of the data-tables you want to reload after your DM are finished. This can be important for subsequent data managers</span>\n      <span class=\"na\">data_table_reload</span><span class=\"pi\">:</span>\n        <span class=\"pi\">-</span> <span class=\"s\">all_fasta</span>\n        <span class=\"pi\">-</span> <span class=\"s\">__dbkeys__</span>\n</code></pre></div></div>\n\n<h1 id=\"creating-the-galaxy-interactive-tour-optional\">Creating the Galaxy Interactive Tour (optional)</h1>\n\n<p>A Galaxy Interactive Tour is a way to go through an entire analysis, step by step inside Galaxy in an interactive and explorative way.\nIt is a great way to help users run the tutorial directly inside Galaxy. To learn more about creating a Galaxy tour please have a look at our <a href=\"/training-material/topics/contributing/tutorials/create-new-tutorial-tours/tutorial.html\">dedicated tour training</a>.</p>\n\n<h1 id=\"testing-the-technical-infrastructure\">Testing the technical infrastructure</h1>\n\n<p>Once we have defined all the requirements for running the tutorial, we can test these requirements, either in a locally running Galaxy or in a Docker container. Please see our tutorial about <a href=\"/training-material/topics/teaching/tutorials/setup-galaxy-for-training/tutorial.html\">Setting up Galaxy for Training</a> about how to test your tutorial requirements.</p>\n\n<h1 id=\"conclusion\">Conclusion</h1>\n\n"],"ref_slides":[],"video_library":{"tutorial":null,"slides":null,"demo":null,"both":null,"session":null},"hands_on":true,"slides":false,"mod_date":"2024-03-18 09:29:54 +0000","pub_date":"2017-06-25 22:36:01 +0000","version":46,"api":"https://training.galaxyproject.org/training-material/api/topics/contributing/tutorials/create-new-tutorial-technical/tutorial.json","tools":[],"supported_servers":[],"topic_name_human":"Contributing to the Galaxy Training Material","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools: []\n","tours":false,"video":false,"translations":{"tutorial":[],"slides":[],"video":false},"license":"CC-BY-4.0","type":"tutorial"}