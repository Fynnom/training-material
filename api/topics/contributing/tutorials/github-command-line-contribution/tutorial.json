{"layout":"tutorial_hands_on","title":"Contributing with GitHub via command-line","questions":["How can I contribute to an open-source project with GitHub?","What is the GitHub flow?"],"objectives":["Fork a repository on GitHub","Clone a remote repository locally","Create a branch","Commit changes","Push changes to a remote repository","Create a pull request","Update a pull request"],"time_estimation":"30m","subtopic":"contribute","key_points":["Work on your fork","1 branch = 1 feature","1 pull request = 1 branch","Be careful of the branch you're working on","Check the automated tests"],"contributors":[{"name":"Cyril Monjeaud","joined":"2017-09","id":"cmonjeau","url":"https://training.galaxyproject.org/training-material/api/contributors/cmonjeau.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/cmonjeau/"},{"name":"Bérénice Batut","email":"berenice.batut@gmail.com","twitter":"bebatut","linkedin":"berenicebatut","matrix":"bebatut:matrix.org","orcid":"0000-0001-9852-1987","joined":"2017-09","elixir_node":"fr","contact_for_training":true,"location":{"country":"FR","lat":45.77,"lon":3.08},"fediverse":"https://piaille.fr/@bebatut","fediverse_flavor":"mastodon","affiliations":["gallantries","ifb","elixir-europe"],"id":"bebatut","url":"https://training.galaxyproject.org/training-material/api/contributors/bebatut.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/bebatut/"}],"js_requirements":{"mathjax":null,"mermaid":false},"short_id":"T00064","url":"/topics/contributing/tutorials/github-command-line-contribution/tutorial.html","topic_name":"contributing","tutorial_name":"github-command-line-contribution","dir":"topics/contributing/tutorials/github-command-line-contribution","symlink":null,"id":"contributing/github-command-line-contribution","ref_tutorials":["<p>Most of the content is written in <a href=\"https://guides.github.com/features/mastering-markdown/\">GitHub Flavored Markdown</a> with some metadata (or variables) found in <a href=\"http://yaml.org/\">YAML</a> files. Everything is stored on a <a href=\"https://github.com\">GitHub</a> repository: <a href=\"https://github.com/galaxyproject/training-material\">https://github.com/galaxyproject/training-material</a>.</p>\n\n<p>The process of development of new content is open and transparent, using git and following the <a href=\"https://guides.github.com/introduction/flow/\">GitHub flow</a>:</p>\n\n<figure id=\"figure-1\" style=\"max-width: 90%;\"><img src=\"../../images/oss_development_process.png\" alt=\"Open source development process. \" width=\"1947\" height=\"582\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/oss_development_process.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 1</strong>:</span> Open source development process</figcaption></figure>\n\n<ol>\n  <li>Create a fork</li>\n  <li>Clone your fork of this repository to create a local copy on your computer</li>\n  <li>Create a new branch in your local copy for each significant change</li>\n  <li>Commit the changes in that branch</li>\n  <li>Push that branch to your fork on GitHub</li>\n  <li>Submit a pull request from that branch to the <a href=\"https://github.com/galaxyproject/training-material\">original repository</a></li>\n  <li>If you receive feedback, make changes in your local clone and push them to your branch on GitHub: the pull request will update automatically</li>\n  <li>Pull requests will be merged by the training team members after at least one other person has reviewed the Pull request and approved it.</li>\n</ol>\n\n<blockquote class=\"agenda\">\n  <agenda-title></agenda-title>\n\n  <p>In this tutorial, you will learn how to contribute to the GitHub repository:</p>\n\n<ol id=\"markdown-toc\">\n  <li><a href=\"#create-a-fork-of-this-repository-on-github\" id=\"markdown-toc-create-a-fork-of-this-repository-on-github\">Create a fork of this repository on GitHub</a></li>\n  <li><a href=\"#clone-the-github-repository-on-your-computer\" id=\"markdown-toc-clone-the-github-repository-on-your-computer\">Clone the GitHub repository on your computer</a></li>\n  <li><a href=\"#create-a-new-branch\" id=\"markdown-toc-create-a-new-branch\">Create a new branch</a></li>\n  <li><a href=\"#make-your-changes-on-this-branch\" id=\"markdown-toc-make-your-changes-on-this-branch\">Make your changes on this branch</a></li>\n  <li><a href=\"#push-your-branch-on-your-github-repository\" id=\"markdown-toc-push-your-branch-on-your-github-repository\">Push your branch on your GitHub repository</a></li>\n  <li><a href=\"#open-a-pull-request\" id=\"markdown-toc-open-a-pull-request\">Open a pull request</a></li>\n  <li><a href=\"#make-the-requested-changes\" id=\"markdown-toc-make-the-requested-changes\">Make the requested changes</a></li>\n  <li><a href=\"#check-the-automatic-tests\" id=\"markdown-toc-check-the-automatic-tests\">Check the automatic tests</a></li>\n  <li><a href=\"#stay-up-to-date\" id=\"markdown-toc-stay-up-to-date\">Stay up to date</a></li>\n  <li><a href=\"#close-the-pull-request\" id=\"markdown-toc-close-the-pull-request\">Close the Pull Request</a></li>\n  <li><a href=\"#conclusion\" id=\"markdown-toc-conclusion\">Conclusion</a></li>\n</ol>\n\n</blockquote>\n\n<h1 id=\"create-a-fork-of-this-repository-on-github\">Create a fork of this repository on GitHub</h1>\n\n<p>A fork is a copy of a repository. <a href=\"https://help.github.com/articles/fork-a-repo/\">Forking</a> a repository allows you to freely experiment with changes without affecting the original project:</p>\n\n<figure id=\"figure-2\" style=\"max-width: 90%;\"><img src=\"../../images/PR_schema_01.png\" alt=\"Explanation of the forking. \" width=\"1006\" height=\"478\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/PR_schema_01.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 2</strong>:</span> Creation of a fork</figcaption></figure>\n\n<p>Forking a repository is a simple two-step process:</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Fork the repository</hands-on-title>\n\n  <ol>\n    <li>Go on the GitHub repository: <a href=\"https://github.com/galaxyproject/training-material\">https://github.com/galaxyproject/training-material</a></li>\n    <li>\n      <p>Click on <strong>Fork</strong> (top-right corner of the page)</p>\n\n      <p><a href=\"../../images/PR_fork.jpg\" rel=\"noopener noreferrer\"><img src=\"../../images/PR_fork.jpg\" alt=\"Fork. \" width=\"745\" height=\"116\" loading=\"lazy\" /></a></p>\n    </li>\n  </ol>\n\n  <blockquote class=\"comment\">\n    <comment-title></comment-title>\n    <p>When you click the <strong>Fork</strong> button GitHub will show you a list with your user account and any groups where you can create a fork of this repository (starting with <code class=\"language-plaintext highlighter-rouge\">@</code>). If you see yourself only below “You have existing forks of this repository:”, it means you already have a fork and you have nothing to do.</p>\n  </blockquote>\n\n</blockquote>\n\n<h1 id=\"clone-the-github-repository-on-your-computer\">Clone the GitHub repository on your computer</h1>\n\n<p>To modify the content of the repository, you need a copy of it on your computer. This step of importing a git repository is called “cloning”:</p>\n\n<figure id=\"figure-3\" style=\"max-width: 90%;\"><img src=\"../../images/PR_schema_02.png\" alt=\"Explanation of the cloning. \" width=\"1282\" height=\"872\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/PR_schema_02.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 3</strong>:</span> Cloning a repository</figcaption></figure>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Clone the GitHub repository</hands-on-title>\n\n  <ol>\n    <li>Get the URL of your fork. You can find this on the main page of your fork under the green button:\n      <ol>\n        <li>\n          <p>Click on <strong>Code</strong> (right)</p>\n\n          <p><a href=\"../../images/clone_code_button.png\" rel=\"noopener noreferrer\"><img src=\"../../images/clone_code_button.png\" alt=\"Get fork URL. \" width=\"391\" height=\"328\" loading=\"lazy\" /></a></p>\n        </li>\n        <li>\n          <p>Copy the URL</p>\n\n          <p>It should be something like <code class=\"language-plaintext highlighter-rouge\">https://github.com/&lt; Your GitHub Username &gt;/training-material.git</code></p>\n        </li>\n      </ol>\n    </li>\n    <li>Open a terminal</li>\n    <li>Navigate with <code class=\"language-plaintext highlighter-rouge\">cd</code> to the folder in which you will clone the repository</li>\n    <li>\n      <p>Clone the repository with the command:</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ git clone https://github.com/&lt; Your GitHub Username &gt;/training-material.git\n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Navigate to the repository</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ cd training-material\n</code></pre></div>      </div>\n    </li>\n  </ol>\n</blockquote>\n\n<blockquote class=\"comment\">\n  <comment-title></comment-title>\n  <p>If you already have a local copy of the GitHub repository, you need to update it before doing any changes. To learn how to do that, please follow the <a href=\"#stay-up-to-date\">last section</a>.</p>\n</blockquote>\n\n<h1 id=\"create-a-new-branch\">Create a new branch</h1>\n\n<p>You have now your repository locally and you want to modify it. For this example tutorial, you will add yourself as contributor of the project to appear on the <a href=\"/training-material/hall-of-fame.html\">Hall of Fame</a>.</p>\n\n<p>In GitHub flow, there is a concept: one new feature or change = one branch.</p>\n\n<p>When you’re working on a project, you’re going to have a bunch of different features or ideas in progress at any given time – some of which are ready to go, and others which are not. Branching exists to help you manage this workflow. You should develop different features on different branches to help keep the changes you make simple and easy to review.</p>\n\n<figure id=\"figure-4\" style=\"max-width: 90%;\"><img src=\"../../images/PR_branches_01.png\" alt=\"Divergence of a branch compared to main. \" width=\"440\" height=\"88\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/PR_branches_01.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 4</strong>:</span> When you create a branch in your project, you're creating an environment where you can try out new ideas. Changes you make on a branch don't affect the main branch</figcaption></figure>\n\n<p>Here for this tutorial, you will create a branch called “my_new_branch” in which you will modify the <code class=\"language-plaintext highlighter-rouge\">CONTRIBUTORS.yaml</code> file, the file used to generate the <a href=\"/training-material/hall-of-fame.html\">Hall of Fame</a>.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Create a branch</hands-on-title>\n\n  <ol>\n    <li>\n      <p>List the existing branch</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ git branch\n  * main\n</code></pre></div>      </div>\n\n      <p>The branch on which you are is shown with the <code class=\"language-plaintext highlighter-rouge\">*</code></p>\n    </li>\n    <li>\n      <p>Create a new branch</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ git checkout -b my_new_branch\nSwitched to a new branch 'my_new_branch'\n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>List the existing branch to check that the branch has been created and you are now on it</p>\n    </li>\n  </ol>\n</blockquote>\n\n<p>This branch is added to your local copy:</p>\n\n<figure id=\"figure-5\" style=\"max-width: 90%;\"><img src=\"../../images/PR_schema_03.png\" alt=\"Creation of a branch on the local copy of the repository. \" width=\"1007\" height=\"872\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/PR_schema_03.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 5</strong>:</span> Creation of a branch on the local copy of the repository</figcaption></figure>\n\n<h1 id=\"make-your-changes-on-this-branch\">Make your changes on this branch</h1>\n\n<p>You have created your first branch! Now you want to make the change in the <code class=\"language-plaintext highlighter-rouge\">CONTRIBUTING.yaml</code> file. By changing a file in this branch, it will diverge from the <code class=\"language-plaintext highlighter-rouge\">main</code> branch. It will contain data that is only on this new branch:</p>\n\n<figure id=\"figure-6\" style=\"max-width: 90%;\"><img src=\"../../images/PR_branches_02.png\" alt=\"Divergence of the branch compared to main. \" width=\"546\" height=\"90\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/PR_branches_02.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 6</strong>:</span> The changes on your branch will not be on the main branch</figcaption></figure>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Make changes in a branch</hands-on-title>\n\n  <ol>\n    <li>Open with your favorite text editor the <code class=\"language-plaintext highlighter-rouge\">CONTRIBUTORS.yaml</code> file that is on your computer</li>\n    <li>\n      <p>Add yourself in the <code class=\"language-plaintext highlighter-rouge\">CONTRIBUTORS.yaml</code> file</p>\n\n      <p>You should use your GitHub username and add it followed by <code class=\"language-plaintext highlighter-rouge\">:</code> at the correct position given the alphabetical order</p>\n    </li>\n    <li>Save the file</li>\n    <li>\n      <p>Check the changes you made</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ git status\nOn branch my_new_branch\nChanges not staged for commit:\n  (use \"git add/rm &lt;file&gt;...\" to update what will be committed)\n  (use \"git checkout -- &lt;file&gt;...\" to discard changes in working directory)\n\n    modified:   CONTRIBUTORS.yaml\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Add the file and commit the changes</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ git add CONTRIBUTORS.yaml\n$ git commit -m \"Add ...\"\n</code></pre></div>      </div>\n    </li>\n    <li>Check that there are no more changes to commit with <code class=\"language-plaintext highlighter-rouge\">git status</code></li>\n  </ol>\n\n</blockquote>\n\n<h1 id=\"push-your-branch-on-your-github-repository\">Push your branch on your GitHub repository</h1>\n\n<p>The changes you made on your branch are only on the local copy of the repository. To propagate them online, you need to push them on your fork on GitHub:</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Push the changes</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Push the changes to the GitHub repository</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ git push origin my_new_branch\n</code></pre></div>      </div>\n\n      <blockquote class=\"details\">\n        <details-title>\"push origin\"</details-title>\n        <p>When you <code class=\"language-plaintext highlighter-rouge\">git push</code>ed, you specified <code class=\"language-plaintext highlighter-rouge\">origin</code>. Git repositories can know that forks exist in multiple places. When you clone one, it creates a “remote” (a remote repository) which it names <code class=\"language-plaintext highlighter-rouge\">origin</code>, set to the URL that you used when you cloned. By having multiple remotes, you can manage more complex workflows.</p>\n      </blockquote>\n    </li>\n    <li>Go to your GitHub repository</li>\n    <li>Change to the “my_new_branch” branch:\n      <ol>\n        <li>\n          <p>Click on <strong>Branch: main</strong> (left)</p>\n\n          <p><a href=\"../../images/PR_branch_github.png\" rel=\"noopener noreferrer\"><img src=\"../../images/PR_branch_github.png\" alt=\"Selecting branch on GitHub. \" width=\"309\" height=\"152\" loading=\"lazy\" /></a></p>\n        </li>\n        <li>\n          <p>Select the branch “my_new_branch”</p>\n        </li>\n      </ol>\n    </li>\n    <li>Check that your name is in the <code class=\"language-plaintext highlighter-rouge\">CONTRIBUTORS.yaml</code> file</li>\n  </ol>\n\n</blockquote>\n\n<figure id=\"figure-7\" style=\"max-width: 90%;\"><img src=\"../../images/PR_schema_04.png\" alt=\"Pushing changes to the fork from the local copy. \" width=\"1171\" height=\"872\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/PR_schema_04.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 7</strong>:</span> Pushing changes from the local copy to the fork on GitHub</figcaption></figure>\n\n<h1 id=\"open-a-pull-request\">Open a pull request</h1>\n\n<p>You pushed your changes to GitHub, but currently they are only on your fork. You want to have these changes in the main GitHub repository in order to appear on our <a href=\"/training-material/hall-of-fame.html\">Hall of Fame</a> online. You can’t add or push directly the main GitHub repository, so you need to create what we call a pull request:</p>\n\n<figure id=\"figure-8\" style=\"max-width: 90%;\"><img src=\"../../images/PR_schema_05.png\" alt=\"Pull request. \" width=\"1007\" height=\"1012\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/PR_schema_05.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 8</strong>:</span> Pull Requests provide a way to notify project maintainers about the changes you'd like them to consider</figcaption></figure>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Create a pull request</hands-on-title>\n\n  <ol>\n    <li>Go to your GitHub repository</li>\n    <li>\n      <p>Click on <strong>Compare &amp; pull request</strong></p>\n\n      <p><a href=\"../../images/PR_button.png\" rel=\"noopener noreferrer\"><img src=\"../../images/PR_button.png\" alt=\"&quot;Opening a pull request&quot;. \" width=\"988\" height=\"74\" loading=\"lazy\" /></a></p>\n    </li>\n    <li>\n      <p>Check that the selected branch are correct: <strong>main</strong> on the left and your branch name on the right</p>\n\n      <p><a href=\"../../images/PR_branch_check.png\" rel=\"noopener noreferrer\"><img src=\"../../images/PR_branch_check.png\" alt=\"Branches in PR. \" width=\"989\" height=\"59\" loading=\"lazy\" /></a></p>\n    </li>\n    <li>\n      <p>Fill in the pull request description</p>\n\n      <p><a href=\"../../images/PR_description.png\" rel=\"noopener noreferrer\"><img src=\"../../images/PR_description.png\" alt=\"PR description. \" width=\"713\" height=\"390\" loading=\"lazy\" /></a></p>\n\n      <ol>\n        <li>Add a title for the Pull Request</li>\n        <li>Add a message explaining the changes you made (Be kind <i class=\"fa fa-smile-o\" aria-hidden=\"true\"></i>)</li>\n        <li>\n          <p>Click on <strong>Create pull request</strong> or switch to <strong>Create draft pull request</strong> from the dropdown menu</p>\n\n          <p><a href=\"../../images/PR_create_menu.png\" rel=\"noopener noreferrer\"><img src=\"../../images/PR_create_menu.png\" alt=\"Create pull request dropdown in the GitHub interface is shown, the draft pull request button option is highlighted. \" width=\"362\" height=\"239\" loading=\"lazy\" /></a></p>\n\n          <blockquote class=\"details\">\n            <details-title>\"Draft pull requests\"</details-title>\n            <p><a href=\"https://github.blog/2019-02-14-introducing-draft-pull-requests/#tag-your-work-in-progress\">Creating a pull request as a draft</a> serves as an indication that you are still working on the content.\n Reviewers may comment on the current state and give general feedback, but they will know that they are not looking at the final version of your contribution.</p>\n\n            <p>In the Galaxy Training Material repository we have also disabled the computationally most expensive automated tests on draft pull requests, and we encourage you to use the draft stage as a small contribution to sustainable computing.</p>\n          </blockquote>\n        </li>\n      </ol>\n    </li>\n    <li>Go to <strong>Pull requests</strong> to check if it is there</li>\n  </ol>\n</blockquote>\n\n<p>Once the pull is open, it will be reviewed. There are two possible outcomes:</p>\n\n<ol>\n  <li>Your pull request is accepted. Congratulations! Your changes will be merged into the main branch of the original repository. The website will be re-built and you will be in the <a href=\"/training-material/hall-of-fame.html\">Hall of Fame</a></li>\n  <li>Your pull request needs modifications: the reviewers will ask for some changes, possibly because the automatic tests are failing.</li>\n</ol>\n\n<h1 id=\"make-the-requested-changes\">Make the requested changes</h1>\n\n<p>One of the reviewers of your pull request asked you to add your name after your GitHub username in the <code class=\"language-plaintext highlighter-rouge\">CONTRIBUTORS.yaml</code> file</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Make further changes</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Make the requested changes in the <code class=\"language-plaintext highlighter-rouge\">CONTRIBUTORS.yaml</code> file</p>\n\n      <p>It should look like</p>\n\n      <div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">bebatut</span><span class=\"pi\">:</span>\n     <span class=\"na\">name</span><span class=\"pi\">:</span> <span class=\"s\">Bérénice Batut</span>\n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Check the changes that you made</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ git status\nOn branch my_new_branch\nChanges not staged for commit:\n  (use \"git add/rm &lt;file&gt;...\" to update what will be committed)\n  (use \"git checkout -- &lt;file&gt;...\" to discard changes in working directory)\n\n    modified:   CONTRIBUTORS.yaml\n\nno changes added to commit (use \"git add\" and/or \"git commit -a\")\n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Add the file and commit the changes</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ git add CONTRIBUTORS.yaml\n$ git commit -m \"Add ...\"\n</code></pre></div>      </div>\n    </li>\n    <li>Check that there are no more changes to commit with <code class=\"language-plaintext highlighter-rouge\">git status</code></li>\n    <li>\n      <p>Push the new changes to GitHub</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ git push origin my_new_branch\n</code></pre></div>      </div>\n\n      <p>The pull request should be automatically updated</p>\n    </li>\n    <li>Check that the new changes are added to the pull request on GitHub</li>\n  </ol>\n\n</blockquote>\n\n<h1 id=\"check-the-automatic-tests\">Check the automatic tests</h1>\n\n<p>When a pull request is opened, some automated tests are automatically launched on <a href=\"http://travis-ci.com/\">Travis</a> to be sure that the changes do not break the website, the URL are valid, etc.</p>\n\n<p>On the bottom of your pull request, you can see the status of the tests:</p>\n\n<ul>\n  <li>\n    <p>Yellow (with circle)</p>\n\n    <p><a href=\"../../images/PR_test_yellow.png\" rel=\"noopener noreferrer\"><img src=\"../../images/PR_test_yellow.png\" alt=\"Running. \" width=\"696\" height=\"93\" loading=\"lazy\" /></a></p>\n\n    <p>The tests are still running</p>\n  </li>\n  <li>\n    <p>Red (with cross)</p>\n\n    <p><a href=\"../../images/PR_test_red.png\" rel=\"noopener noreferrer\"><img src=\"../../images/PR_test_red.png\" alt=\"Failed tests. \" width=\"698\" height=\"94\" loading=\"lazy\" /></a></p>\n\n    <p>When it is red, you can investigate why by clicking on <strong>Details</strong>. You will be redirected on <a href=\"http://travis-ci.com/\">Travis</a> where you can see the logs of the tests. Get in touch with us on <a href=\"https://gitter.im/Galaxy-Training-Network/Lobby\">Gitter</a> if you need help to understand the issue.</p>\n  </li>\n  <li>\n    <p>Green (with tick)</p>\n\n    <p><a href=\"../../images/PR_test_green.png\" rel=\"noopener noreferrer\"><img src=\"../../images/PR_test_green.png\" alt=\"Passed tests. \" width=\"697\" height=\"51\" loading=\"lazy\" /></a></p>\n\n    <p>The tests passed. Good job!</p>\n\n    <p>Even it is green, we recommend to check the result of the tests, as some of tests are allowed to fail (to avoid too much noise).</p>\n  </li>\n</ul>\n\n<h1 id=\"stay-up-to-date\">Stay up to date</h1>\n\n<p>You now want to work on a new tutorial or make some other new changes. However since you get a local copy, some changes have happened to the original GitHub repository. You need then to update your local copy of the repository before changing anything.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Update the local copy</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Move to the <code class=\"language-plaintext highlighter-rouge\">main</code> branch</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ git checkout main\n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Add a reference to the original GitHub repository</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ git remote add upstream https://github.com/galaxyproject/training-material.git\n</code></pre></div>      </div>\n\n      <blockquote class=\"comment\">\n        <comment-title>Error \"remote upstream already exists\"</comment-title>\n        <p>If you have done step 2 before and try to <code class=\"language-plaintext highlighter-rouge\">remote add</code> again, git will tell you that a “remote upstream already exists”. In this case you can safely continue to step 4.</p>\n      </blockquote>\n    </li>\n    <li>\n      <p>Update the local copy of the repository by “pulling” in the content of the original GitHub repository</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ git pull upstream main\n</code></pre></div>      </div>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>You can now restart the GitHub flow to propose new changes: start by <a href=\"#create-a-new-branch\">creating a new branch</a>.</p>\n\n<h1 id=\"close-the-pull-request\">Close the Pull Request</h1>\n\n<p>Great! You now know how to make pull request on GitHub, and how to make changes after a review.\nReviewers can now approve and merge your pull request.</p>\n\n<p>Because this was just a practice pull request, let’s close it again.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Close the Pull Request</hands-on-title>\n\n  <p>Once you have run through all these steps, please close the pull request again.</p>\n\n  <ol>\n    <li>Go to the <a href=\"https://github.com/galaxyproject/training-material/pulls\">list of pull request tab on GitHub</a></li>\n    <li>Click on your pull request</li>\n    <li>Scroll to the bottom of the page</li>\n    <li>Click on “Close pull request” button</li>\n  </ol>\n\n  <p>Whenever you add your first real contribution, you can add yourself to the <code class=\"language-plaintext highlighter-rouge\">CONTRIBUTORS.yaml</code> file in that PR.</p>\n\n</blockquote>\n\n<h1 id=\"conclusion\">Conclusion</h1>\n\n<p>With this tutorial, you have learned some basics <code class=\"language-plaintext highlighter-rouge\">git</code> commands and principles:</p>\n\n<figure id=\"figure-9\" style=\"max-width: 90%;\"><img src=\"../../images/PR_global_schema.png\" alt=\"Summary of the links between GitHub, fork and local repository. \" width=\"1380\" height=\"1012\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/PR_global_schema.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 9</strong>:</span> Summary of the links between GitHub, fork and local repository</figcaption></figure>\n\n<p>You also learned the GitHub flow and its cycle:</p>\n\n<ol>\n  <li>Create a new branch in your local copy</li>\n  <li>Commit the changes in that branch</li>\n  <li>Push that branch to your fork on GitHub</li>\n  <li>Submit a pull request from that branch to the main repository</li>\n  <li>Wait for feedbacks and make requested changes</li>\n  <li>Update your local copy</li>\n  <li>Restart the cycle</li>\n</ol>\n\n<p>You can now contribute and help us to improve our tutorials!</p>\n\n<blockquote class=\"details\">\n  <details-title>Git in Depth</details-title>\n  <p>This tutorial was a quick introduction to explain the basics of contributing to the training material. We recommend that everyone follow a more detailed git tutorials:</p>\n  <ul>\n    <li><a href=\"http://swcarpentry.github.io/git-novice/\">Software Carpentry tutorial</a> which explains a bit more in detail some git commands and the concept of remote, local and stagging</li>\n    <li><a href=\"https://learngitbranching.js.org/\">Learn Git Branching</a> by GitHub to test the different git commands</li>\n  </ul>\n\n  <p>You should also download, print and keep always with you the <a href=\"https://services.github.com/on-demand/downloads/github-git-cheat-sheet.pdf\">Git Cheat Sheet</a></p>\n</blockquote>\n"],"ref_slides":["### Steps\n\n- Fork (copy) a GitHub repository in your GitHub space\n\n- Clone your GitHub repository on your system\n\n- Create a new branch (one branch = one new feature)\n\n- Make your changes on this branch\n\n- Push your branch on your GitHub repository\n\n- Merge your branch on the original GitHub repository\n\n---\n\n## 1. Fork a repository\n\n---\n\n### Fork from a GitHub repository\n\n![Screenshot of github repository header with watch, star and fork buttons. The fork button highlighted](../../images/PR_fork.jpg)\n\n---\n\n### Welcome on your fork repository\n\n![Screenshot for a fork of the training material repository. It shows that it is username/training-material and it has been forked from the upstream.](../../images/PR_fork_repo.png)\n\n\n---\n\n### Welcome on your fork repository\n\n![Cartoon of two github repositories, upstream and fork. Both have branches like main, feature1 and feature2.](../../images/PR_schema_01.png)\n\n\n---\n\n## 2. Clone your GitHub repository\n\n\n---\n\n### Get your GitHub URL\n\n![A subset of the github interface is shown with the green code button clicked. A popup is shown with options to clone from https or ssh, open in github desktop, or download a zip file.](../../images/clone_code_button.png)\n\n\n---\n\n### Clone your GitHub repository\n\nOn your terminal:\n\n- clone your repository\n\n```bash\n$ git clone your_fork_github_url\n```\n\n- go into your repository\n\n```bash\n$ cd training-material\n```\n\n\n---\n\n### Clone your GitHub repository\n\n![The cartoon from before with repositories upstream and fork are now shown to exist on github, and an arrow labelled clone is drawn to a local copy that exists locally.](../../images/PR_schema_02.png)\n\n\n---\n\n## 3. Make your changes\n\n\n---\n\n### Create your branch\n\nList your branches\n\n```bash\n$ git branch\n\n  * main\n```\n![a line with dots on it representing commits is labelled main has an arrow pointing to the end where there are no dots.](../../images/PR_branch_main.png)\n\nCreate a new branch\n\n```bash\n$ git checkout -b my_new_branch\n\nSwitched to a new branch 'my_new_branch'\n```\n\n---\n\n### Make your changes\n\nList your branches\n\n```bash\n$ git branch\n\n\tmain\n\t* my_new_branch\n```\n\n![The line with dots or commits is labelled main, now a different line comes out of the right most (i.e. latest) commit. this is labelled my new branch.](../../images/PR_branches_01.png)\n\nMake changes and commits\n\n```bash\n$ git add newfile1 newfile2 ...\n$ git commit -m \"my contribution\"\n```\n\n![The cartoon from above, however now there are commits shown on my new branch.](../../images/PR_branches_02.png)\n\n\n---\n\n### Make changes and commits\n\n![The cartoons of the three github repositories are back, upstream, fork, and local. Now local shows a new branch, my new branch.](../../images/PR_schema_03.png)\n\n\n---\n\n### Push your branch on *your* GitHub repository\n\n```bash\n$ git push origin my_new_branch\n```\n\n![The same cartoon of the three repositories, an arrow labelled push is shown from the local copy to the fork, and now the my new branch is present in the fork, as well as locally like before.](../../images/PR_schema_04.png)\n\n\n---\n\n## 4. The pull request\n\n\n---\n\n### Can't push on the *original* GitHub repository\n\n![The same cartoon, but now two arrows are shown between the upstream and fork repositories on github. One arrow is labelled push and has an X over it, indicating a push cannot happen. However an arrow labelled pull request is shown in colour like it can happen.](../../images/PR_schema_05.png)\n\n\n---\n\n### Create your pull request\n\n![Screenshot of the github interface showing a yellow popup labelled \"your recently pushed branches\" with my new branch shown in the list. A green button reads compare and pull request.](../../images/PR_button.png)\n\n---\n\n### Select the branches and write a description\n\n![The pull request form is shown titled \"Open a Pull Request\", the user is busy filling out the title of the pull request. A button at the bottom reads create pull request.](../../images/PR_form.png)\n\n\n---\n\n### Automated tests can be executed\n\n![A screenshot of the training material on github, the pull request tab is highlighted. A number of pull requests appear below, some with green check marks, some with red crosses.](../../images/PR_list.png)\n\n - Green check mark = OK\n - Red cross = **not** OK\n---\n\n### Your pull request is accepted (congrats)\n\n- Automated tests are ok\n\n- Authors have accepted your feature\n\n- Branches are merged\n\n![line with dots on it representing commits is shown, the line is labelled main as before, but now the commits from my new branch appear directly on the main branch.](../../images/PR_merged_branche.png)\n\n\n---\n\n### Your feature is now in the original code\n\n![The same 3 repository cartoon as before, both the fork and local copy include my new branch, it looks like the author intended that upstream did too but it is missing from the graphic.](../../images/PR_schema_06.png)\n\n\n---\n\n### Your pull request need modifications (oops)\n\n- Automated tests are non ok\n\n- Authors have not accepted your feature\n\nYou have to make modifications on your branch and push it\n\n---\n\n### Summary\n\n![A final version of the three repository graphic is shown, fork and upstream are on github, the local copy is local. There are several arrows: 1 fork, creating fork from upstream; 2 clone, creating local from fork; 3 push, pushing my new branch to fork; 4 pull request, starting the process of getting my new branch into upstream.](../../images/PR_global_schema.png)\n"],"video_library":{"tutorial":null,"slides":null,"demo":null,"both":null,"session":null},"hands_on":true,"slides":true,"mod_date":"2023-11-03 14:30:27 +0000","pub_date":"2017-06-12 08:10:40 +0000","version":39,"api":"https://training.galaxyproject.org/training-material/api/topics/contributing/tutorials/github-command-line-contribution/tutorial.json","tools":[],"supported_servers":[],"topic_name_human":"Contributing to the Galaxy Training Material","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools: []\n","tours":false,"video":false,"translations":{"tutorial":[],"slides":[],"video":false},"license":"CC-BY-4.0","type":"tutorial"}