{"layout":"tutorial_hands_on","title":"Rule Based Uploader: Advanced","zenodo_link":"","level":"Advanced","questions":["How to use the rule based uploader to create complex collections"],"objectives":["Learn even more about the Rule Based Uploader"],"time_estimation":"20m","key_points":null,"tags":["collections","tags"],"requirements":[{"type":"internal","topic_name":"galaxy-interface","tutorials":["collections","upload-rules"]}],"contributors":[{"name":"John Chilton","email":"jmchilton@gmail.com","joined":"2017-09","twitter":"jmchilton","matrix":"jmchilton:matrix.org","orcid":"0000-0002-6794-0756","id":"jmchilton","url":"https://training.galaxyproject.org/training-material/api/contributors/jmchilton.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/jmchilton/"},{"name":"Helena Rasche","orcid":"0000-0001-9760-8992","maintainer_contact":"gitter","matrix":"hexylena:matrix.org","joined":"2017-09","elixir_node":"nl","affiliations":["gallantries","by-covid","erasmusmc","elixir-europe","elixir-converge"],"former_affiliations":["deNBI","avans-atgm","uni-freiburg"],"contact_for_training":false,"location":{"country":"NL","lat":51.91,"lon":4.46},"id":"hexylena","url":"https://training.galaxyproject.org/training-material/api/contributors/hexylena.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/hexylena/"}],"subtopic":"upload","recordings":[{"captioners":["assuntad23"],"date":"2021-02-15","galaxy_version":"21.01","length":"22M","youtube_id":"1MWHVRWXpyA","speakers":["assuntad23"]}],"js_requirements":{"mathjax":null,"mermaid":false},"short_id":"T00161","url":"/topics/galaxy-interface/tutorials/upload-rules-advanced/tutorial.html","topic_name":"galaxy-interface","tutorial_name":"upload-rules-advanced","dir":"topics/galaxy-interface/tutorials/upload-rules-advanced","symlink":null,"id":"galaxy-interface/upload-rules-advanced","ref_tutorials":["<p>This builds on the previous Rule Based Uploader tutorial to cover even more advanced topics.</p>\n\n<blockquote class=\"comment\">\n  <h3 id=\"comment-audience\"><i class=\"far fa-comment-dots\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">comment</span> Audience</h3>\n  <p>This tutorial assumes a basic knowledge of using dataset collections in Galaxy but doesn’t assume any particular knowledge of biology or bioinformatics. If you have not used collections with Galaxy previously, please check out the <a href=\"/training-material/topics/galaxy-interface/tutorials/collections/tutorial.html\">using dataset collections</a> tutorial.</p>\n</blockquote>\n\n<blockquote class=\"agenda\">\n  <agenda-title></agenda-title>\n\n  <p>In this tutorial, we will:</p>\n\n<ol id=\"markdown-toc\">\n  <li><a href=\"#building-urls-from-accession-information\" id=\"markdown-toc-building-urls-from-accession-information\">Building URLs from Accession Information</a></li>\n  <li><a href=\"#building-matched-collections\" id=\"markdown-toc-building-matched-collections\">Building Matched Collections</a></li>\n  <li><a href=\"#building-nested-lists\" id=\"markdown-toc-building-nested-lists\">Building Nested Lists</a></li>\n  <li><a href=\"#apply-rules-to-existing-collections\" id=\"markdown-toc-apply-rules-to-existing-collections\">Apply Rules to Existing Collections</a></li>\n</ol>\n\n</blockquote>\n\n<h1 id=\"building-urls-from-accession-information\">Building URLs from Accession Information</h1>\n\n<p>In the previous examples the metadata we started with already contained URLs. In some cases such URLs will not be present in the available metadata and may need to be constructed dynamically from identifiers.</p>\n\n<p>For this multiomics example, we will start with a uniprot query and build URLs from accession numbers contained within the supplied tabular data. Consider the uniprot query <a href=\"https://uniprot.org/uniprot/?query=proteome:UP000052092+AND+proteomecomponent:%22Genome%22\">https://uniprot.org/uniprot/?query=proteome:UP000052092+AND+proteomecomponent:”Genome”</a>, pictured below.</p>\n\n<p><a href=\"../../images/rules/uniprot_url.png\" rel=\"noopener noreferrer\"><img src=\"../../images/rules/uniprot_url.png\" alt=\"UniProt table screenshot. \" width=\"1701\" height=\"720\" loading=\"lazy\" /></a></p>\n\n<p>In order to make this data useful for the Rule Builder, we need to turn these accessoin IDs into URLs.</p>\n\n<blockquote class=\"hands_on\" id=\"example-3-metadata\">\n  <hands-on-title>Turn Uniprot Accession IDs into URLs</hands-on-title>\n\n  <ol>\n    <li>Open <a href=\"https://www.uniprot.org/uniprot/E7C0H6\">Uniprot</a></li>\n    <li><strong>Click</strong> on one of the entries in the table (e.g. <code class=\"language-plaintext highlighter-rouge\">E7C0H6</code>)</li>\n    <li><strong>Select</strong> <code class=\"language-plaintext highlighter-rouge\">Format</code> from the top menu</li>\n    <li>\n      <p><strong>Click</strong> <code class=\"language-plaintext highlighter-rouge\">FASTA (canonical)</code></p>\n\n      <p><a href=\"../../images/rules/uniprot_fasta.png\" rel=\"noopener noreferrer\"><img src=\"../../images/rules/uniprot_fasta.png\" alt=\"Link to access FASTA file. \" width=\"1123\" height=\"635\" loading=\"lazy\" /></a></p>\n    </li>\n    <li>\n      <p>Your browser will redirect to the fasta file</p>\n\n      <p><a href=\"../../images/rules/uniprot_fasta_url.png\" rel=\"noopener noreferrer\"><img src=\"../../images/rules/uniprot_fasta_url.png\" alt=\"Viewing the FASTA file. \" width=\"861\" height=\"219\" loading=\"lazy\" /></a></p>\n    </li>\n    <li>We can deduce that the FASTA files for the other accession IDs will be available from URLs of the form <code class=\"language-plaintext highlighter-rouge\">https://www.uniprot.org/uniprot/{identifier}.fasta</code>\n<!-- https://rest.uniprot.org/uniprotkb/search?format=fasta&includeIsoform=true&query=accession:E7C0H6  is also an option, for future editors. --></li>\n  </ol>\n</blockquote>\n\n<p>We will use this information to build a collection of FASTA files from our query.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Build Collection from Uniprot Accession IDs</hands-on-title>\n\n  <ol>\n    <li>Open the Rule Builder\n      <ul>\n        <li><em>“Upload data as”</em>: <code class=\"language-plaintext highlighter-rouge\">Collection(s)</code></li>\n        <li><em>“Load tabular data from”</em>: <code class=\"language-plaintext highlighter-rouge\">Pasted Table</code></li>\n        <li>\n          <p><strong>Paste</strong> the following table:</p>\n\n          <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>Entry\tEntry name\tStatus\tProtein names\tGene names\tOrganism\tLength\nE7C0H6\tE7C0H6_9PAPI\tunreviewed\tMajor capsid protein L1\tL1\tEquus caballus papillomavirus 3\t498\nE7C0H0\tE7C0H0_9PAPI\tunreviewed\tProtein E6\tE6\tEquus caballus papillomavirus 3\t150\nE7C0H5\tE7C0H5_9PAPI\tunreviewed\tMinor capsid protein L2\tL2\tEquus caballus papillomavirus 3\t498\nE7C0H1\tE7C0H1_9PAPI\tunreviewed\tProtein E7\t\tEquus caballus papillomavirus 3\t93\nE7C0H3\tE7C0H3_9PAPI\tunreviewed\tRegulatory protein E2\tE2\tEquus caballus papillomavirus 3\t421\nE7C0H4\tE7C0H4_9PAPI\tunreviewed\tPutative E4 early protein (Fragment)\t\tEquus caballus papillomavirus 3\t175\nE7C0H2\tE7C0H2_9PAPI\tunreviewed\tReplication protein E1 (EC 3.6.4.12) (ATP-dependent helicase E1)\tE1\tEquus caballus papillomavirus 3\t621\n</code></pre></div>          </div>\n        </li>\n        <li>Click <code class=\"language-plaintext highlighter-rouge\">Build</code>\n<a href=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_4_2_initial_rules.png\" rel=\"noopener noreferrer\"><img src=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_4_2_initial_rules.png\" alt=\"screenshot. \" loading=\"lazy\" /></a></li>\n      </ul>\n    </li>\n    <li>Let’s apply some initial filtering to our data:\n      <ul>\n        <li>From <strong>Filter</strong> menu, select <code class=\"language-plaintext highlighter-rouge\">First or Last N Rows</code>\n          <ul>\n            <li>Filter the first row</li>\n          </ul>\n        </li>\n        <li>From <strong>Rules</strong> menu, select  <code class=\"language-plaintext highlighter-rouge\">Remove Columns</code>\n          <ul>\n            <li>Remove columns B, C, E, F, and G.</li>\n          </ul>\n        </li>\n        <li>From <strong>Rules</strong> menu, select  <code class=\"language-plaintext highlighter-rouge\">Add / Modify Column Definitions</code>\n          <ul>\n            <li>\n              <p>Click <code class=\"language-plaintext highlighter-rouge\">Add Definition</code>, <code class=\"language-plaintext highlighter-rouge\">Info</code>, Column <code class=\"language-plaintext highlighter-rouge\">B</code></p>\n\n              <p>This is a block of text that will appear in the history panel when the dataset is expanded.\n<a href=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_4_3_basic_rules.png\" rel=\"noopener noreferrer\"><img src=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_4_3_basic_rules.png\" alt=\"screenshot. \" loading=\"lazy\" /></a></p>\n            </li>\n          </ul>\n        </li>\n      </ul>\n\n      <p>These datasets appear in a seemingly random order, it will be easier to manage things in the history panel if we sort this data first.\n<a href=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_4_4_sort.png\" rel=\"noopener noreferrer\"><img src=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_4_4_sort.png\" alt=\"screenshot. \" loading=\"lazy\" /></a></p>\n    </li>\n    <li>From <strong>Rules</strong> menu, select <code class=\"language-plaintext highlighter-rouge\">Sort</code>\n      <ul>\n        <li><em>“From Column”</em>: <code class=\"language-plaintext highlighter-rouge\">A</code></li>\n      </ul>\n\n      <p>Next is the key step, we will build a URL from the pattern we described above using the accession ID in column A.</p>\n    </li>\n    <li>From <strong>Column</strong> menu, select <code class=\"language-plaintext highlighter-rouge\">Using a Regular Expression</code>\n      <ul>\n        <li><em>“From Column”</em>: <code class=\"language-plaintext highlighter-rouge\">A</code></li>\n        <li>Select <code class=\"language-plaintext highlighter-rouge\">Create column from expression replacement</code></li>\n        <li><em>“Regular Expression”</em>: <code class=\"language-plaintext highlighter-rouge\">.*</code></li>\n        <li><em>“Replacement Expression”</em>: <code class=\"language-plaintext highlighter-rouge\">https://www.uniprot.org/uniprot/\\0.fasta</code></li>\n        <li>\n          <p>Click <code class=\"language-plaintext highlighter-rouge\">Apply</code></p>\n\n          <p><a href=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_4_5_url.png\" rel=\"noopener noreferrer\"><img src=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_4_5_url.png\" alt=\"screenshot. \" loading=\"lazy\" /></a></p>\n        </li>\n      </ul>\n\n      <blockquote class=\"comment\">\n        <comment-title>Regular expression explained</comment-title>\n        <p>In this regular expression, <code class=\"language-plaintext highlighter-rouge\">.*</code> will capture the entire accession ID.</p>\n\n        <p>In the replacement expression, <code class=\"language-plaintext highlighter-rouge\">https://www.uniprot.org/uniprot/\\0.fasta</code>, the <code class=\"language-plaintext highlighter-rouge\">\\0</code> will be replaced by the captured\nregular expression (the accession ID) in the resulting column values.</p>\n      </blockquote>\n\n      <p>The new column C with the URL we built should appear as shown below.\n<a href=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_4_6_url_built.png\" rel=\"noopener noreferrer\"><img src=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_4_6_url_built.png\" alt=\"screenshot. \" loading=\"lazy\" /></a></p>\n\n      <p>Finally, let us set our column definitions:</p>\n    </li>\n    <li>From <strong>Rules</strong> menu, select <code class=\"language-plaintext highlighter-rouge\">Add / Modify Column Definitions</code>\n      <ul>\n        <li><code class=\"language-plaintext highlighter-rouge\">Add Definition</code>, <code class=\"language-plaintext highlighter-rouge\">List Identifier(s)</code>, Select Column <code class=\"language-plaintext highlighter-rouge\">A</code></li>\n        <li><code class=\"language-plaintext highlighter-rouge\">Add Definition</code>, <code class=\"language-plaintext highlighter-rouge\">URL</code>, Column <code class=\"language-plaintext highlighter-rouge\">C</code></li>\n      </ul>\n    </li>\n    <li>Finalize the collection:\n      <ul>\n        <li><em>“Name”</em>: for example <code class=\"language-plaintext highlighter-rouge\">UP000052092</code></li>\n        <li><em>“Type”</em>: <code class=\"language-plaintext highlighter-rouge\">fasta</code></li>\n        <li>Click <code class=\"language-plaintext highlighter-rouge\">Build</code>\n<a href=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_4_7_mapping_extension_and_name.png\" rel=\"noopener noreferrer\"><img src=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_4_7_mapping_extension_and_name.png\" alt=\"screenshot. \" loading=\"lazy\" /></a></li>\n      </ul>\n\n      <blockquote class=\"comment\">\n        <comment-title>JSON Rule Definitions</comment-title>\n        <p>This example is ready to go, but before clicking “Build” it may be interesting to check out the rules Galaxy is following to clean and import your data. Click the little Wrench icon at the top of the list of rules. The result is a bunch of JavaScript object notation (JSON) text that you should never need to worry about but that you can build or modify by hand if you find it useful. We will use it the next example to quickly restore the list builder back to this state.</p>\n\n        <p><a href=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_4_8_source.png\" rel=\"noopener noreferrer\"><img src=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_4_8_source.png\" alt=\"screenshot. \" loading=\"lazy\" /></a></p>\n\n        <p>This could additionally be copied and pasted if you need to do the same set of operations on multiple metadata inputs that are similarly formatted.</p>\n      </blockquote>\n    </li>\n    <li>Click <code class=\"language-plaintext highlighter-rouge\">Upload</code> and wait for your list of FASTA files to appear.</li>\n  </ol>\n</blockquote>\n\n<h1 id=\"building-matched-collections\">Building Matched Collections</h1>\n\n<p>This example will demonstrate creating multiple collections at the same time. We will use the same metadata generated from UniProt as the last example but we will build two collections with matching list identifiers - one collection of FASTA files and one collection of GFF files. This will also demonstrate reading the collection name and the target datatype from the metadata itself - important techniques if generating multiple collections with different names and datatypes.</p>\n\n<p>For this example we will re-use the metadata from the <a href=\"#example-3-metadata\">previous example</a>.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Build a matched collection</hands-on-title>\n\n  <ol>\n    <li><strong>Open</strong> the Rule Builder\n      <ul>\n        <li><em>“Upload data as”</em>: <code class=\"language-plaintext highlighter-rouge\">Collection(s)</code></li>\n        <li><em>“Load tabular data from”</em>: <code class=\"language-plaintext highlighter-rouge\">Pasted Table</code></li>\n        <li>\n          <p>Paste the table from the previous exercise:</p>\n\n          <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>Entry\tEntry name\tStatus\tProtein names\tGene names\tOrganism\tLength\nE7C0H6\tE7C0H6_9PAPI\tunreviewed\tMajor capsid protein L1\tL1\tEquus caballus papillomavirus 3\t498\nE7C0H0\tE7C0H0_9PAPI\tunreviewed\tProtein E6\tE6\tEquus caballus papillomavirus 3\t150\nE7C0H5\tE7C0H5_9PAPI\tunreviewed\tMinor capsid protein L2\tL2\tEquus caballus papillomavirus 3\t498\nE7C0H1\tE7C0H1_9PAPI\tunreviewed\tProtein E7\t\tEquus caballus papillomavirus 3\t93\nE7C0H3\tE7C0H3_9PAPI\tunreviewed\tRegulatory protein E2\tE2\tEquus caballus papillomavirus 3\t421\nE7C0H4\tE7C0H4_9PAPI\tunreviewed\tPutative E4 early protein (Fragment)\t\tEquus caballus papillomavirus 3\t175\nE7C0H2\tE7C0H2_9PAPI\tunreviewed\tReplication protein E1 (EC 3.6.4.12) (ATP-dependent helicase E1)\tE1\tEquus caballus papillomavirus 3\t621\n</code></pre></div>          </div>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <p>Instead of manually creating the rules this time, we will import an existing set of rules. The easiest way to do this is to click the history icon <i class=\"fas fa-history\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-rulebuilder-history</span>. Clicking this will drop down a list of the 10 most recent rule sets you’ve used. Select the most recent one to reuse the rules from the last exercise.</p>\n\n      <p>You should now see the rules you created in the last example.\n<a href=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_5_3_initial_rules.png\" rel=\"noopener noreferrer\"><img src=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_5_3_initial_rules.png\" alt=\"screenshot. \" loading=\"lazy\" /></a></p>\n\n      <blockquote class=\"comment\">\n        <comment-title>JSON Editor</comment-title>\n\n        <p>Another way to do this is to open the JSON Editor, by clicking the wrench icon <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> to the left of the history icon.  This will open up the JSON that gets created as you modify rules.  You can copy and paste JSON here or modify it directly. When you’re working in this way, be sure to write good JSON (closing brackets, fields that make sense, etc.), otherwise you will get an error.</p>\n      </blockquote>\n\n      <p>If you don’t see the rule set we used in the last  exercise anymore, here is the JSON that you can paste directly into the JSON Editor:</p>\n\n      <div class=\"language-json highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">{</span><span class=\"nl\">\"rules\"</span><span class=\"p\">:[{</span><span class=\"nl\">\"type\"</span><span class=\"p\">:</span><span class=\"s2\">\"add_filter_count\"</span><span class=\"p\">,</span><span class=\"nl\">\"count\"</span><span class=\"p\">:</span><span class=\"s2\">\"1\"</span><span class=\"p\">,</span><span class=\"nl\">\"which\"</span><span class=\"p\">:</span><span class=\"s2\">\"first\"</span><span class=\"p\">,</span><span class=\"nl\">\"invert\"</span><span class=\"p\">:</span><span class=\"kc\">false</span><span class=\"p\">},{</span><span class=\"nl\">\"type\"</span><span class=\"p\">:</span><span class=\"s2\">\"remove_columns\"</span><span class=\"p\">,</span><span class=\"nl\">\"target_columns\"</span><span class=\"p\">:[</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"mi\">4</span><span class=\"p\">,</span><span class=\"mi\">5</span><span class=\"p\">,</span><span class=\"mi\">6</span><span class=\"p\">]},{</span><span class=\"nl\">\"type\"</span><span class=\"p\">:</span><span class=\"s2\">\"sort\"</span><span class=\"p\">,</span><span class=\"nl\">\"target_column\"</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"nl\">\"numeric\"</span><span class=\"p\">:</span><span class=\"kc\">false</span><span class=\"p\">},{</span><span class=\"nl\">\"type\"</span><span class=\"p\">:</span><span class=\"s2\">\"add_column_regex\"</span><span class=\"p\">,</span><span class=\"nl\">\"target_column\"</span><span class=\"p\">:</span><span class=\"mi\">0</span><span class=\"p\">,</span><span class=\"nl\">\"expression\"</span><span class=\"p\">:</span><span class=\"s2\">\".*\"</span><span class=\"p\">,</span><span class=\"nl\">\"replacement\"</span><span class=\"p\">:</span><span class=\"s2\">\"http://www.uniprot.org/uniprot/</span><span class=\"se\">\\\\</span><span class=\"s2\">0.fasta\"</span><span class=\"p\">}],</span><span class=\"nl\">\"mapping\"</span><span class=\"p\">:[{</span><span class=\"nl\">\"type\"</span><span class=\"p\">:</span><span class=\"s2\">\"info\"</span><span class=\"p\">,</span><span class=\"nl\">\"columns\"</span><span class=\"p\">:[</span><span class=\"mi\">1</span><span class=\"p\">]},{</span><span class=\"nl\">\"type\"</span><span class=\"p\">:</span><span class=\"s2\">\"list_identifiers\"</span><span class=\"p\">,</span><span class=\"nl\">\"columns\"</span><span class=\"p\">:[</span><span class=\"mi\">0</span><span class=\"p\">],</span><span class=\"nl\">\"editing\"</span><span class=\"p\">:</span><span class=\"kc\">false</span><span class=\"p\">},{</span><span class=\"nl\">\"type\"</span><span class=\"p\">:</span><span class=\"s2\">\"url\"</span><span class=\"p\">,</span><span class=\"nl\">\"columns\"</span><span class=\"p\">:[</span><span class=\"mi\">2</span><span class=\"p\">]}],</span><span class=\"nl\">\"extension\"</span><span class=\"p\">:</span><span class=\"s2\">\"csfasta\"</span><span class=\"p\">}</span><span class=\"w\">\n</span></code></pre></div>      </div>\n\n      <p>This next part may seem a bit silly at first but we are going to add some columns with fixed values into the builder. When we split up the columns at a later step this will make sense.</p>\n    </li>\n    <li>\n      <p>From <strong>Column</strong> menu, select  <code class=\"language-plaintext highlighter-rouge\">Fixed Value</code></p>\n\n      <ul>\n        <li><em>“Value”</em>: <code class=\"language-plaintext highlighter-rouge\">fasta</code></li>\n        <li>Click <code class=\"language-plaintext highlighter-rouge\">Apply</code></li>\n      </ul>\n\n      <p>This value will eventually be used for the datatype of the file.</p>\n    </li>\n    <li>\n      <p><strong>Repeat</strong> this process with:</p>\n\n      <ul>\n        <li><em>“Value”</em>:<code class=\"language-plaintext highlighter-rouge\">UP000052092 FASTA</code></li>\n      </ul>\n\n      <p>Next we will repeat the process of adding URL, name, and datatype columns but for GFF files.</p>\n    </li>\n    <li>\n      <p>From <strong>Column</strong>, select <code class=\"language-plaintext highlighter-rouge\">Using a Regular Expression</code></p>\n\n      <ul>\n        <li><em>“From Column”</em>: <code class=\"language-plaintext highlighter-rouge\">A</code></li>\n        <li>Select <code class=\"language-plaintext highlighter-rouge\">Create column from expression replacement</code></li>\n        <li><em>“Regular Expression”</em>: <code class=\"language-plaintext highlighter-rouge\">.*</code></li>\n        <li><em>“Replacement Expression”</em>: <code class=\"language-plaintext highlighter-rouge\">https://www.uniprot.org/uniprot/\\0.gff</code>.</li>\n      </ul>\n    </li>\n  </ol>\n\n  <p><a href=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_5_5_url.png\" rel=\"noopener noreferrer\"><img src=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_5_5_url.png\" alt=\"screenshot. \" loading=\"lazy\" /></a></p>\n\n  <p>Next we will add two more columns</p>\n  <ol>\n    <li>From <strong>Column</strong> menu, select  <code class=\"language-plaintext highlighter-rouge\">Fixed Value</code>\n      <ul>\n        <li><em>“Value”</em>: <code class=\"language-plaintext highlighter-rouge\">gff3</code></li>\n        <li>Click <code class=\"language-plaintext highlighter-rouge\">Apply</code></li>\n      </ul>\n\n      <p>This value will eventually be used for the datatype of the file.</p>\n    </li>\n    <li><strong>Repeat</strong> this process with:\n      <ul>\n        <li><em>“Value”</em>: <code class=\"language-plaintext highlighter-rouge\">UP000052092 GFF3</code></li>\n      </ul>\n\n      <p>Your very large list of rules should now look like the following screenshot.\n<a href=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_5_6_presplit.png\" rel=\"noopener noreferrer\"><img src=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_5_6_presplit.png\" alt=\"screenshot. \" loading=\"lazy\" /></a></p>\n\n      <p>Notice we have two URLs, two collection names, and two datatype extensions for each accession ID we started with. Like in the example where we split the columns, here we will split these up to describe multiple collections.</p>\n    </li>\n    <li>From <strong>Rules</strong> menu, select  <code class=\"language-plaintext highlighter-rouge\">Split Columns</code>\n      <ul>\n        <li><em>“Odd Row Column(s)”</em>: <code class=\"language-plaintext highlighter-rouge\">C</code>, <code class=\"language-plaintext highlighter-rouge\">D</code>, and <code class=\"language-plaintext highlighter-rouge\">E</code> (the fasta columns)</li>\n        <li><em>“Even Row Column(s)”</em>: <code class=\"language-plaintext highlighter-rouge\">F</code>, <code class=\"language-plaintext highlighter-rouge\">G</code>, and <code class=\"language-plaintext highlighter-rouge\">H</code> (the gff3 columns)</li>\n      </ul>\n\n      <p>This will take the row consisting of the columns <code class=\"language-plaintext highlighter-rouge\">ABCDEFGH</code> and build two rows, one with <code class=\"language-plaintext highlighter-rouge\">ABCDEF</code> and the other with <code class=\"language-plaintext highlighter-rouge\">ABFGH</code>\n<a href=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_5_7_split_columns.png\" rel=\"noopener noreferrer\"><img src=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_5_7_split_columns.png\" alt=\"screenshot. \" loading=\"lazy\" /></a></p>\n    </li>\n    <li>\n      <p>Click <code class=\"language-plaintext highlighter-rouge\">Apply</code> and you should be returned the list of rules.\n<a href=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_5_8_split.png\" rel=\"noopener noreferrer\"><img src=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_5_8_split.png\" alt=\"screenshot. \" loading=\"lazy\" /></a></p>\n\n      <p>Finally, we need to add some more column definitions for these new columns we just created:</p>\n    </li>\n    <li>From <strong>Rules</strong> menu, select <code class=\"language-plaintext highlighter-rouge\">Add / Modify Column Definitions</code>\n      <ul>\n        <li><code class=\"language-plaintext highlighter-rouge\">Add Definition</code>, <code class=\"language-plaintext highlighter-rouge\">List Identifier</code>, Column <code class=\"language-plaintext highlighter-rouge\">A</code></li>\n        <li><code class=\"language-plaintext highlighter-rouge\">Add Definition</code>, <code class=\"language-plaintext highlighter-rouge\">Info</code>, Column <code class=\"language-plaintext highlighter-rouge\">B</code></li>\n        <li><code class=\"language-plaintext highlighter-rouge\">Add Definition</code>, <code class=\"language-plaintext highlighter-rouge\">URL</code>, Column <code class=\"language-plaintext highlighter-rouge\">C</code></li>\n        <li><code class=\"language-plaintext highlighter-rouge\">Add Definition</code>, <code class=\"language-plaintext highlighter-rouge\">Type</code>, Column <code class=\"language-plaintext highlighter-rouge\">D</code></li>\n        <li><code class=\"language-plaintext highlighter-rouge\">Add Definition</code>, <code class=\"language-plaintext highlighter-rouge\">Collection Name</code>, Column <code class=\"language-plaintext highlighter-rouge\">E</code></li>\n      </ul>\n\n      <p>Notice when these values are being generated from the metadata the option to specify them manually from the <strong>type</strong> and <strong>collection name</strong> boxes from the bottom of the form disappear.\n<a href=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_5_9_mapping.png\" rel=\"noopener noreferrer\"><img src=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_5_9_mapping.png\" alt=\"screenshot. \" loading=\"lazy\" /></a></p>\n    </li>\n    <li>\n      <p>Click <code class=\"language-plaintext highlighter-rouge\">Upload</code></p>\n\n      <p>Galaxy should make two collections - one containing FASTA files and one containing GFF3 files.</p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h1 id=\"building-nested-lists\">Building Nested Lists</h1>\n\n<p>In this example, we will be building a nested list using data from <a href=\"https://www.ncbi.nlm.nih.gov/sra\">SRA</a>. This is a more sophisticated structure for organizing datasets in Galaxy. In the above examples we organized datasets into simple lists with a single “list identifier” describing the files in the collection. Galaxy allows lists to be organized into nested lists - where each level of the list has an identifier.</p>\n\n<p>If two such identifiers are present, this is a list of lists (called <code class=\"language-plaintext highlighter-rouge\">list:list</code> in the workflow editor). In such a structure the outer identifiers (or first level of identifiers) may describe sample names and the inner identifiers (or second level) may describe replicates. Alternative the outer identifiers may describe conditions and the inner identifiers may describe individual samples. The structure of such collections should ideally be dictated by the study design.</p>\n\n<p>If certain parts of your analysis require benefit from datasets being nested this way while other parts require feeding you data to a Galaxy tool all together without such a structure, then it is probably best to go ahead and build nested lists at the start of your analysis and then use the “Flatten Collection” tool on the resulting collection or a derivative collection to get the flat structure needed by certain tools in certain parts of your analysis.</p>\n\n<p>For this example, we will describe analyzing the metadata of the <a href=\"https://www.ncbi.nlm.nih.gov/sra?term=PRJNA355367&amp;cmd=DetailsSearch\">SRA project PRJNA355367</a>. Unlike the other examples, these SRA files are relatively large and not ideal for training purposes. So we’ve pre-downloaded the project metadata and replaced all the links with simple text files that should download really quickly - the <a href=\"./PRJNA355367.tsv\">result is here</a>.</p>\n\n<p>So use either the SRA exporter tool or download the CSV file with fake URLs. If you download the data from the SRA exporter tool, select only the first 12 columns from the data (up to the column labeled “Library Name”) and copy the resulting data to your clipboard.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Building Nested Lists</hands-on-title>\n\n  <ol>\n    <li>Open the Rule Builder\n      <ul>\n        <li><em>“Upload data as”</em>: <code class=\"language-plaintext highlighter-rouge\">Collection(s)</code></li>\n        <li><em>“Load tabular data from”</em>: <code class=\"language-plaintext highlighter-rouge\">Pasted Table</code></li>\n        <li>Paste the table</li>\n      </ul>\n\n      <blockquote class=\"solution\">\n        <solution-title>Show Table</solution-title>\n\n        <p>Below is the table with pre-downloaded example data mentioned above:</p>\n\n        <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>Run\tReleaseDate\tLoadDate\tspots\tbases\tspots_with_mates\tavgLength\tsize_MB\tAssemblyName\tdownload_path\tExperiment\tLibraryName\nSRR5363633\t2017-03-21 11:40:07\t2017-03-21 11:29:13\t9942851\t1993124486\t9791175\t200\t809\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363633\tSRX2659078\twtPA14\nSRR5363634\t2017-03-21 13:19:08\t2017-03-21 13:17:11\t1158307\t232298840\t1141697\t200\t81\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363634\tSRX2659079\tcon10\nSRR5363635\t2017-03-21 13:19:08\t2017-03-21 13:16:39\t1270067\t254490549\t1249658\t200\t89\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363635\tSRX2659080\tcon9\nSRR5363636\t2017-03-21 13:19:08\t2017-03-21 13:16:56\t1023725\t205709452\t1013013\t200\t74\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363636\tSRX2659081\tcon8\nSRR5363637\t2017-03-21 11:37:06\t2017-03-21 11:28:00\t3179821\t638410351\t3141113\t200\t216\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363637\tSRX2659082\tcon7\nSRR5363638\t2017-03-21 12:53:08\t2017-03-21 12:04:58\t3359498\t675138344\t3325080\t200\t288\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363638\tSRX2659083\tcon6\nSRR5363639\t2017-03-21 13:19:08\t2017-03-21 13:17:25\t2074389\t416191247\t2046343\t200\t145\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363639\tSRX2659084\tcon5\nSRR5363640\t2017-03-21 13:19:08\t2017-03-21 13:17:46\t2692438\t540402576\t2658118\t200\t187\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363640\tSRX2659085\tcon4\nSRR5363641\t2017-03-21 13:19:08\t2017-03-21 13:17:14\t2271913\t456015568\t2243122\t200\t161\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363641\tSRX2659086\tcon3\nSRR5363642\t2017-03-21 13:19:08\t2017-03-21 13:16:58\t2164949\t434399488\t2136063\t200\t151\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363642\tSRX2659087\tcon2\nSRR5363643\t2017-03-21 11:37:06\t2017-03-21 11:27:34\t1999861\t401313700\t1973567\t200\t140\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363643\tSRX2659088\tcon1\nSRR5363644\t2017-03-21 11:44:06\t2017-03-21 11:36:06\t13473203\t2704705108\t13306228\t200\t1076\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363644\tSRX2659089\tstr10\nSRR5363645\t2017-03-21 11:37:06\t2017-03-21 11:27:24\t1801962\t362038363\t1782599\t200\t130\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363645\tSRX2659090\tstr9\nSRR5363646\t2017-03-21 11:36:06\t2017-03-21 11:26:22\t39113\t7861711\t39106\t200\t4\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363646\tSRX2659091\tstr8\nSRR5363647\t2017-03-21 11:36:06\t2017-03-21 11:26:43\t1255569\t252289127\t1242359\t200\t90\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363647\tSRX2659092\tstr7\nSRR5363648\t2017-03-21 11:36:06\t2017-03-21 11:26:42\t903374\t181362535\t892308\t200\t64\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363648\tSRX2659093\tstr6\nSRR5363649\t2017-03-21 11:37:06\t2017-03-21 11:27:05\t2059145\t413598822\t2035919\t200\t140\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363649\tSRX2659094\tstr5\nSRR5363650\t2017-03-21 11:37:06\t2017-03-21 11:27:37\t1685689\t338152407\t1662375\t200\t119\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363650\tSRX2659095\tstr4\nSRR5363651\t2017-03-21 11:36:06\t2017-03-21 11:26:51\t698470\t140689157\t694502\t201\t48\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363651\tSRX2659096\tstr3\nSRR5363652\t2017-03-21 11:37:06\t2017-03-21 11:27:53\t755393\t152119594\t750753\t201\t52\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363652\tSRX2659097\tstr2\nSRR5363653\t2017-03-21 11:37:06\t2017-03-21 11:27:41\t1651613\t331529685\t1630882\t200\t119\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363653\tSRX2659098\tstr1\nSRR5363654\t2017-03-21 11:37:06\t2017-03-21 11:27:37\t1693765\t340003252\t1672625\t200\t118\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363654\tSRX2659099\tgen10\nSRR5363655\t2017-03-21 11:37:06\t2017-03-21 11:28:30\t2173449\t436124391\t2144642\t200\t153\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363655\tSRX2659100\tgen9\nSRR5363656\t2017-03-21 11:43:06\t2017-03-21 11:33:05\t9625215\t1933561588\t9519090\t200\t778\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363656\tSRX2659101\tgen8\nSRR5363657\t2017-03-21 11:37:06\t2017-03-21 11:27:38\t1106350\t222126014\t1092932\t200\t79\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363657\tSRX2659102\tgen7\nSRR5363658\t2017-03-21 11:37:07\t2017-03-21 11:27:07\t565475\t113765064\t560920\t201\t42\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363658\tSRX2659103\tgen6\nSRR5363659\t2017-03-21 11:37:07\t2017-03-21 11:28:20\t1320926\t265553033\t1308329\t201\t96\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363659\tSRX2659104\tgen5\nSRR5363660\t2017-03-21 11:37:07\t2017-03-21 11:28:18\t949047\t190786413\t939940\t201\t70\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363660\tSRX2659105\tgen4\nSRR5363661\t2017-03-21 11:39:07\t2017-03-21 11:29:11\t1609659\t323469152\t1593027\t200\t116\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363661\tSRX2659106\tgen3\nSRR5363662\t2017-03-21 11:37:07\t2017-03-21 11:28:20\t1244105\t249942443\t1230587\t200\t90\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363662\tSRX2659107\tgen2\nSRR5363663\t2017-03-21 11:44:06\t2017-03-21 11:34:00\t13546763\t2714292352\t13327595\t200\t1112\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363663\tSRX2659108\tgen1\nSRR5363664\t2017-03-21 11:37:07\t2017-03-21 11:28:35\t1995417\t400617217\t1971115\t200\t140\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363664\tSRX2659109\tpit9\nSRR5363665\t2017-03-21 11:39:07\t2017-03-21 11:29:18\t2098280\t421450493\t2074524\t200\t146\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363665\tSRX2659110\tpit10\nSRR5363666\t2017-03-21 11:39:07\t2017-03-21 11:28:56\t1624164\t326200210\t1605561\t200\t115\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363666\tSRX2659111\tpit8\nSRR5363667\t2017-03-21 11:39:07\t2017-03-21 11:28:56\t1765896\t355178220\t1750742\t201\t122\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363667\tSRX2659112\tpit7\nSRR5363668\t2017-03-21 11:39:07\t2017-03-21 11:29:36\t834144\t167643900\t825708\t200\t59\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363668\tSRX2659113\tpit6\nSRR5363669\t2017-03-21 11:42:06\t2017-03-21 11:31:07\t9524989\t1913263017\t9418320\t200\t780\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363669\tSRX2659114\tpit5\nSRR5363670\t2017-03-21 11:39:07\t2017-03-21 11:28:48\t1196456\t240479817\t1184548\t200\t84\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363670\tSRX2659115\tpit4\nSRR5363671\t2017-03-21 11:39:07\t2017-03-21 11:29:21\t1703068\t341745049\t1680568\t200\t119\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363671\tSRX2659116\tpit3\nSRR5363672\t2017-03-21 11:40:07\t2017-03-21 11:29:21\t1752519\t352259586\t1735224\t201\t122\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363672\tSRX2659117\tpit2\nSRR5363673\t2017-03-21 11:37:07\t2017-03-21 11:28:40\t1702102\t341794907\t1682027\t200\t121\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363673\tSRX2659118\tpit1\nSRR5363674\t2017-03-21 11:37:07\t2017-03-21 11:28:41\t2186337\t438861929\t2158858\t200\t155\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363674\tSRX2659119\tcar10\nSRR5363675\t2017-03-21 11:37:07\t2017-03-21 11:28:37\t1806341\t362679360\t1784566\t200\t128\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363675\tSRX2659120\tcar9\nSRR5363676\t2017-03-21 11:37:07\t2017-03-21 11:28:29\t1492644\t299621613\t1473926\t200\t106\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363676\tSRX2659121\tcar8\nSRR5363677\t2017-03-21 11:40:07\t2017-03-21 11:29:02\t2139706\t429729175\t2115063\t200\t151\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363677\tSRX2659122\tcar7\nSRR5363678\t2017-03-21 11:40:07\t2017-03-21 11:29:13\t1787521\t358790286\t1764881\t200\t124\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363678\tSRX2659123\tcar6\nSRR5363679\t2017-03-21 11:38:06\t2017-03-21 11:28:48\t1500378\t300767719\t1477539\t200\t106\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363679\tSRX2659124\tcar5\nSRR5363680\t2017-03-21 11:38:06\t2017-03-21 11:28:54\t879242\t176495860\t868255\t200\t63\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363680\tSRX2659125\tcar4\nSRR5363681\t2017-03-21 11:40:07\t2017-03-21 11:30:02\t1852256\t371663665\t1827605\t200\t130\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363681\tSRX2659126\tcar3\nSRR5363682\t2017-03-21 11:40:07\t2017-03-21 11:29:40\t996680\t199979148\t983324\t200\t72\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363682\tSRX2659127\tcar2\nSRR5363683\t2017-03-21 11:40:07\t2017-03-21 11:29:49\t1089078\t218680766\t1076092\t200\t79\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363683\tSRX2659128\tcar1\nSRR5363684\t2017-03-21 11:40:07\t2017-03-21 11:29:57\t1682993\t337921519\t1662784\t200\t118\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363684\tSRX2659129\tcef10\nSRR5363685\t2017-03-21 11:40:07\t2017-03-21 11:29:46\t1274849\t255689623\t1256747\t200\t92\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363685\tSRX2659130\tcef9\nSRR5363686\t2017-03-21 11:40:07\t2017-03-21 11:29:22\t1218188\t244568636\t1203299\t200\t87\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363686\tSRX2659131\tcef8\nSRR5363687\t2017-03-21 11:40:07\t2017-03-21 11:30:06\t2027741\t406979584\t2001785\t200\t142\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363687\tSRX2659132\tcef7\nSRR5363688\t2017-03-21 11:40:07\t2017-03-21 11:29:38\t998237\t200918449\t991068\t201\t72\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363688\tSRX2659133\tcef6\nSRR5363689\t2017-03-21 11:40:07\t2017-03-21 11:29:26\t518920\t104507529\t515814\t201\t41\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363689\tSRX2659134\tcef5\nSRR5363690\t2017-03-21 11:44:06\t2017-03-21 11:33:47\t11530820\t2311357478\t11354074\t200\t982\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363690\tSRX2659135\tcef4\nSRR5363691\t2017-03-21 11:40:07\t2017-03-21 11:29:41\t516125\t103920037\t512793\t201\t41\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363691\tSRX2659136\tcef3\nSRR5363692\t2017-03-21 11:40:07\t2017-03-21 11:30:11\t890572\t179326220\t884948\t201\t65\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363692\tSRX2659137\tcef2\nSRR5363693\t2017-03-21 11:40:07\t2017-03-21 11:30:04\t978135\t196865238\t971039\t201\t74\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363693\tSRX2659138\tcef1\nSRR5363694\t2017-03-21 11:40:07\t2017-03-21 11:29:57\t1959249\t393031721\t1932180\t200\t138\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363694\tSRX2659139\timi2\nSRR5363695\t2017-03-21 11:40:07\t2017-03-21 11:29:43\t1074984\t215595123\t1059636\t200\t76\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363695\tSRX2659140\timi1\nSRR5363696\t2017-03-21 11:41:07\t2017-03-21 11:29:48\t1288979\t258545055\t1270889\t200\t92\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363696\tSRX2659141\tdor10\nSRR5363697\t2017-03-21 11:42:06\t2017-03-21 11:31:06\t2908416\t583478795\t2868638\t200\t200\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363697\tSRX2659142\tdor9\nSRR5363698\t2017-03-21 11:49:07\t2017-03-21 11:37:59\t15442120\t3097410993\t15225523\t200\t1224\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363698\tSRX2659143\tdor8\nSRR5363699\t2017-03-21 11:40:07\t2017-03-21 11:30:00\t1718167\t344971206\t1697410\t200\t123\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363699\tSRX2659144\tdor7\nSRR5363700\t2017-03-21 11:41:07\t2017-03-21 11:29:57\t1739828\t349655178\t1722126\t200\t125\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363700\tSRX2659145\tdor6\nSRR5363701\t2017-03-21 11:45:06\t2017-03-21 11:35:22\t18584730\t3732962863\t18375556\t200\t1453\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363701\tSRX2659146\tdor5\nSRR5363702\t2017-03-21 11:44:06\t2017-03-21 11:35:13\t12158676\t2438787680\t11987886\t200\t981\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363702\tSRX2659147\tdor4\nSRR5363703\t2017-03-21 11:44:06\t2017-03-21 11:34:44\t11391713\t2283748728\t11219804\t200\t916\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363703\tSRX2659148\tdor3\nSRR5363704\t2017-03-21 11:42:06\t2017-03-21 11:32:45\t6155766\t1236497552\t6086854\t200\t513\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363704\tSRX2659149\tdor2\nSRR5363705\t2017-03-21 11:41:07\t2017-03-21 11:30:25\t1002355\t201209957\t989835\t200\t72\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363705\tSRX2659150\tdor1\nSRR5363706\t2017-03-21 11:41:07\t2017-03-21 11:30:25\t752409\t151419028\t746795\t201\t59\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363706\tSRX2659151\tcip10\nSRR5363707\t2017-03-21 11:44:06\t2017-03-21 11:33:49\t10594069\t2127067244\t10466132\t200\t870\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363707\tSRX2659152\tcip9\nSRR5363708\t2017-03-21 11:41:07\t2017-03-21 11:30:31\t1431059\t287670501\t1417182\t201\t105\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363708\tSRX2659153\tcip8\nSRR5363709\t2017-03-21 11:41:07\t2017-03-21 11:30:41\t1208297\t242791534\t1195595\t200\t88\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363709\tSRX2659154\tcip7\nSRR5363710\t2017-03-21 11:41:07\t2017-03-21 11:30:35\t1370364\t275356971\t1355960\t200\t100\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363710\tSRX2659155\tcip6\nSRR5363711\t2017-03-21 11:42:06\t2017-03-21 11:31:24\t1593545\t320335049\t1578109\t201\t116\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363711\tSRX2659156\tcip5\nSRR5363712\t2017-03-21 11:41:07\t2017-03-21 11:31:00\t1332160\t267714312\t1318490\t200\t99\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363712\tSRX2659157\tcip4\nSRR5363713\t2017-03-21 11:42:06\t2017-03-21 11:31:02\t1893119\t379943269\t1868718\t200\t134\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363713\tSRX2659158\tcip3\nSRR5363714\t2017-03-21 11:42:06\t2017-03-21 11:31:01\t1839276\t369651139\t1820660\t200\t129\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363714\tSRX2659159\tcip2\nSRR5363715\t2017-03-21 11:26:06\t2017-03-21 10:59:33\t712060\t142833136\t702138\t200\t51\tassembly\thttps://raw.githubusercontent.com/jmchilton/galaxy-examples/master/sra_PRJNA355367/SRR5363715\tSRX2659160\tcip1\n</code></pre></div>        </div>\n      </blockquote>\n\n      <p><a href=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_6_1_paste.png\" rel=\"noopener noreferrer\"><img src=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_6_1_paste.png\" alt=\"screenshot. \" loading=\"lazy\" /></a></p>\n\n      <p>The resulting table should look something like the following:\n<a href=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_6_2_rules_landing.png\" rel=\"noopener noreferrer\"><img src=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_6_2_rules_landing.png\" alt=\"screenshot. \" loading=\"lazy\" /></a></p>\n\n      <p>Navigate to the end of the table and notice that column J is the URL target we are hoping to download for each file.</p>\n    </li>\n    <li>As in the previous exercises, please:\n      <ul>\n        <li>Set this <code class=\"language-plaintext highlighter-rouge\">Column definition</code> for the URL target</li>\n        <li>\n          <p>Strip the header row</p>\n\n          <blockquote class=\"solution\">\n            <solution-title></solution-title>\n            <p>From <strong>Filter</strong> menu, select <code class=\"language-plaintext highlighter-rouge\">First or Last N Rows</code></p>\n            <ul>\n              <li>Filter first Row</li>\n            </ul>\n\n            <p>From <strong>Rules</strong> menu, select  <code class=\"language-plaintext highlighter-rouge\">Add / Modify Column Definitions</code></p>\n            <ul>\n              <li><code class=\"language-plaintext highlighter-rouge\">Add Definition</code>, <code class=\"language-plaintext highlighter-rouge\">URL</code>, Column <code class=\"language-plaintext highlighter-rouge\">J</code>.\n  <a href=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_6_3_end_of_table.png\" rel=\"noopener noreferrer\"><img src=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_6_3_end_of_table.png\" alt=\"screenshot. \" loading=\"lazy\" /></a></li>\n            </ul>\n          </blockquote>\n        </li>\n      </ul>\n\n      <p>For the analysis we wish to do, we want to group these files based on the type indicated in column <code class=\"language-plaintext highlighter-rouge\">L</code> (LibraryName) shown below.\nThe source data though adds numbers to the library type to generate the <code class=\"language-plaintext highlighter-rouge\">LibraryName</code>, so we need to strip those out to use the type\nas an identifier for grouping the datasets. To do this, use the regex column adder rule again.</p>\n    </li>\n    <li>From <strong>Column</strong> menu, select <code class=\"language-plaintext highlighter-rouge\">Using a Regular Expression</code>\n      <ul>\n        <li><em>“From Column”</em>: <code class=\"language-plaintext highlighter-rouge\">L</code></li>\n        <li>Select <code class=\"language-plaintext highlighter-rouge\">Create columns matching expression groups</code></li>\n        <li><em>“Regular Expression”</em>: <code class=\"language-plaintext highlighter-rouge\">([^\\d]+)\\d+</code>.</li>\n        <li><em>“Number of Groups”</em>: <code class=\"language-plaintext highlighter-rouge\">1</code></li>\n      </ul>\n\n      <p>The result looks like:\n<a href=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_6_4_regex.png\" rel=\"noopener noreferrer\"><img src=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_6_4_regex.png\" alt=\"screenshot. \" loading=\"lazy\" /></a></p>\n\n      <blockquote class=\"comment\">\n        <comment-title>Regular expression explained</comment-title>\n        <p>In this regular expression, <code class=\"language-plaintext highlighter-rouge\">\\d</code> means any digit, so <code class=\"language-plaintext highlighter-rouge\">[^...]</code> means match anything that is not inside the brackets.\nSo together <code class=\"language-plaintext highlighter-rouge\">[^\\d]+</code> means match one or more, non digits at the start of the column and the <code class=\"language-plaintext highlighter-rouge\">()</code> around that means capture\nthem into a group. We’ve add <code class=\"language-plaintext highlighter-rouge\">\\d+</code> at the end of the expression but it isn’t grouped so we are effectively ignoring the\ndigits at the end as we had hoped.</p>\n      </blockquote>\n\n      <p>Now we have two columns we need to assign list identifiers for, the new column <code class=\"language-plaintext highlighter-rouge\">M</code> for the first, outer identifier and the\nfirst column <code class=\"language-plaintext highlighter-rouge\">A</code> for the inner, second identifier.</p>\n    </li>\n    <li>From <strong>Rules</strong> menu, select <code class=\"language-plaintext highlighter-rouge\">Add / Modify Column Definitions</code>\n      <ul>\n        <li><code class=\"language-plaintext highlighter-rouge\">Add Definition</code>, <code class=\"language-plaintext highlighter-rouge\">List Identifier(s)</code>, Column <code class=\"language-plaintext highlighter-rouge\">M</code></li>\n        <li>Click on <code class=\"language-plaintext highlighter-rouge\">... Assign Another Column</code></li>\n        <li>\n          <p>Select column <code class=\"language-plaintext highlighter-rouge\">A</code></p>\n\n          <blockquote class=\"comment\">\n            <comment-title>Re-ordering columns</comment-title>\n            <p>If you make a mistake in the order you select columns in you can simple use the up and down arrows to re-arrange the list</p>\n          </blockquote>\n        </li>\n      </ul>\n\n      <p>The result should look something like this:\n<a href=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_6_5_multiple_identifiers_edit.png\" rel=\"noopener noreferrer\"><img src=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_6_5_multiple_identifiers_edit.png\" alt=\"screenshot. \" loading=\"lazy\" /></a></p>\n    </li>\n    <li>\n      <p>Click <code class=\"language-plaintext highlighter-rouge\">Apply</code> to return to the rule preview screen and notice there are two column listed for the list identifier definition\n  <a href=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_6_6_multiple_identifiers.png\" rel=\"noopener noreferrer\"><img src=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_6_6_multiple_identifiers.png\" alt=\"screenshot. \" loading=\"lazy\" /></a></p>\n    </li>\n    <li>Finalize your collection:\n      <ul>\n        <li><em>“Type”</em>: <code class=\"language-plaintext highlighter-rouge\">txt</code></li>\n        <li>Name your Collection</li>\n        <li>Click <code class=\"language-plaintext highlighter-rouge\">Upload</code></li>\n      </ul>\n\n      <p>Note: set <em>“Type”</em> to <code class=\"language-plaintext highlighter-rouge\">sra</code> if you used real data from SRA instead of the table from exercise.\n  <a href=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_6_7_named.png\" rel=\"noopener noreferrer\"><img src=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_example_6_7_named.png\" alt=\"screenshot. \" loading=\"lazy\" /></a></p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h1 id=\"apply-rules-to-existing-collections\">Apply Rules to Existing Collections</h1>\n\n<p>To start this example, we will first upload a simple, flat collection of data. The data files we will use\nwill be the same as those used by the <a href=\"https://bioconductor.org/packages/devel/bioc/vignettes/DESeq2/inst/doc/DESeq2.html\">DESeq2 Vignette</a>\nfrom the <a href=\"https://bioconductor.org/packages/release/data/experiment/html/pasilla.html\">Pasilla Bioconductor Package</a>.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Applying Rules to Existing Collections</hands-on-title>\n\n  <ol>\n    <li>Open the Rule Builder\n      <ul>\n        <li><em>“Upload data as”</em>: <code class=\"language-plaintext highlighter-rouge\">Collection(s)</code></li>\n        <li><em>“Load tabular data from”</em>: <code class=\"language-plaintext highlighter-rouge\">Pasted Table</code></li>\n        <li>Paste the following table:</li>\n      </ul>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>https://raw.githubusercontent.com/jmchilton/galaxy/apply_rules_tutorials/test-data/rules/treated1fb.txt treated_single_1\nhttps://raw.githubusercontent.com/jmchilton/galaxy/apply_rules_tutorials/test-data/rules/treated2fb.txt treated_paired_2\nhttps://raw.githubusercontent.com/jmchilton/galaxy/apply_rules_tutorials/test-data/rules/treated3fb.txt treated_paired_3\nhttps://raw.githubusercontent.com/jmchilton/galaxy/apply_rules_tutorials/test-data/rules/untreated1fb.txt untreated_single_4\nhttps://raw.githubusercontent.com/jmchilton/galaxy/apply_rules_tutorials/test-data/rules/untreated2fb.txt untreated_single_5\nhttps://raw.githubusercontent.com/jmchilton/galaxy/apply_rules_tutorials/test-data/rules/untreated3fb.txt untreated_paired_6\nhttps://raw.githubusercontent.com/jmchilton/galaxy/apply_rules_tutorials/test-data/rules/untreated4fb.txt untreated_paired_7\n</code></pre></div>      </div>\n\n      <p>Next, we set up the column types:</p>\n    </li>\n    <li>From <strong>Rules</strong> menu, select  <code class=\"language-plaintext highlighter-rouge\">Add / Modify Column Definitions</code>\n      <ul>\n        <li><code class=\"language-plaintext highlighter-rouge\">Add Definition</code>, <code class=\"language-plaintext highlighter-rouge\">URL</code>, column <code class=\"language-plaintext highlighter-rouge\">A</code></li>\n        <li><code class=\"language-plaintext highlighter-rouge\">Add Definition</code>, <code class=\"language-plaintext highlighter-rouge\">List Identifier(s)</code>, column <code class=\"language-plaintext highlighter-rouge\">B</code>\n<a href=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_apply_rules_example_4_2_input_rules.png\" rel=\"noopener noreferrer\"><img src=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_apply_rules_example_4_2_input_rules.png\" alt=\"screenshot. \" loading=\"lazy\" /></a></li>\n      </ul>\n    </li>\n    <li>Finalize the collection:\n      <ul>\n        <li><em>“Type”</em>: <code class=\"language-plaintext highlighter-rouge\">txt</code></li>\n        <li>Give the collection a name.</li>\n        <li>Click <code class=\"language-plaintext highlighter-rouge\">Build</code>\n<a href=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_apply_rules_example_4_4_input_list.png\" rel=\"noopener noreferrer\"><img src=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_apply_rules_example_4_4_input_list.png\" alt=\"screenshot. \" loading=\"lazy\" /></a></li>\n      </ul>\n\n      <p>The first thing we will do to this new collection is add some levels or depth to its structure.\nLets assume we want to group it into “treated” and “untreated” lists and “paired” and “single”\nsublists below that. We can do this with the <code class=\"language-plaintext highlighter-rouge\">Apply Rules</code> collection operation tool, which will\nlikely be under the <code class=\"language-plaintext highlighter-rouge\">Collection Operations</code> tool menu in your Galaxy interface.</p>\n    </li>\n    <li>\n      <p>Open the <strong>Apply Rules</strong> tool</p>\n\n      <p>The very simple interface should look something like this:\n<a href=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_apply_rules_example_4_5_apply_rules_landing.png\" rel=\"noopener noreferrer\"><img src=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_apply_rules_example_4_5_apply_rules_landing.png\" alt=\"screenshot. \" loading=\"lazy\" /></a></p>\n\n      <p>This interface simply lets one pick a collection to operate on and then launch the rule builder\nwindow to work to describe and preview manipulating the metadata of that collection.</p>\n    </li>\n    <li><strong>Apply Rules</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with the following parameters:\n      <ul>\n        <li><em>“Input Collection”</em>: the collection we just uploaded</li>\n        <li>Click the <code class=\"language-plaintext highlighter-rouge\">Edit</code> button\n<a href=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_apply_rules_example_4_6_apply_rules_init_flat.png\" rel=\"noopener noreferrer\"><img src=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_apply_rules_example_4_6_apply_rules_init_flat.png\" alt=\"screenshot. \" loading=\"lazy\" /></a></li>\n      </ul>\n\n      <p>When a flat collection is used with this tool, the rule builder will initialize a default rule to pull\nthe list identifier out for each item of the collection as shown above. Next we will use regular expressions\nto build two new columns, these columns will group the datasets into “treated” and “untreated” sublists and\nthen “single” and “paired” sublists of that. This rule is found under the <code class=\"language-plaintext highlighter-rouge\">Column</code> menu.</p>\n\n      <p>We’ll transform column A into some more useful columns</p>\n    </li>\n    <li>From <strong>Column</strong>, select <code class=\"language-plaintext highlighter-rouge\">Using a Regular Expression</code>\n      <ul>\n        <li><em>“Column”</em>: <code class=\"language-plaintext highlighter-rouge\">A</code></li>\n        <li>Select <code class=\"language-plaintext highlighter-rouge\">Create columns matching expression groups</code></li>\n        <li><em>“Regular Expression”</em>: <code class=\"language-plaintext highlighter-rouge\">(.*)_(.*)_.*</code></li>\n        <li><em>“Number of Groups”</em>: <code class=\"language-plaintext highlighter-rouge\">2</code></li>\n      </ul>\n\n      <blockquote class=\"comment\">\n        <comment-title>Regular expression explained</comment-title>\n        <p>Here <code class=\"language-plaintext highlighter-rouge\">.*</code> means match any number of any character - so basically match anything.\n The parentheses around <code class=\"language-plaintext highlighter-rouge\">.*</code> means form a “group” from whatever is matched.\n The <code class=\"language-plaintext highlighter-rouge\">_</code> describes the literal <code class=\"language-plaintext highlighter-rouge\">_</code> values in the identifier we are matching. The result is that\neverything before the first <code class=\"language-plaintext highlighter-rouge\">_</code> will be matched as the first group and everything between the <code class=\"language-plaintext highlighter-rouge\">_</code>\ncharacters will be matched as the second group. Click to apply this rule and two new columns should be created.</p>\n\n        <p>We have defined two matching groups (the <code class=\"language-plaintext highlighter-rouge\">(.*)</code> in the regex), so the number of groups is set to <code class=\"language-plaintext highlighter-rouge\">2</code></p>\n      </blockquote>\n    </li>\n    <li>From  <strong>Rules</strong>, select <code class=\"language-plaintext highlighter-rouge\">Add / Modify Column Definitions</code>\n      <ul>\n        <li><code class=\"language-plaintext highlighter-rouge\">Add Definition</code>, <code class=\"language-plaintext highlighter-rouge\">List Identifier(s)</code>, Column <code class=\"language-plaintext highlighter-rouge\">B</code></li>\n        <li><code class=\"language-plaintext highlighter-rouge\">Assign another column</code>, column <code class=\"language-plaintext highlighter-rouge\">C</code></li>\n        <li><code class=\"language-plaintext highlighter-rouge\">Assign another column</code>, column <code class=\"language-plaintext highlighter-rouge\">A</code></li>\n        <li>Click <code class=\"language-plaintext highlighter-rouge\">Save</code></li>\n      </ul>\n\n      <p><a href=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_apply_rules_example_4_7_apply_rules_add_depth.png\" rel=\"noopener noreferrer\"><img src=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_apply_rules_example_4_7_apply_rules_add_depth.png\" alt=\"screenshot. \" loading=\"lazy\" /></a></p>\n\n      <p>The resulting collection should have two new levels of depth for “untreated” vs “treated” and “paired” vs “single” as shown below:\n<a href=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_apply_rules_example_4_8_nested.png\" rel=\"noopener noreferrer\"><img src=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_apply_rules_example_4_8_nested.png\" alt=\"screenshot. \" loading=\"lazy\" /></a></p>\n\n      <p>Placing the “single” and “paired” sublists inside the “treated” and “untreated” lists was a bit arbitrary and depending on the\nworkflow these may need to be inverted at different parts of an analysis. The <code class=\"language-plaintext highlighter-rouge\">Apply Rules</code> tool can be used to invert these levels\nif that is needed.</p>\n    </li>\n    <li><strong>Apply Rules</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with the following parameters:\n      <ul>\n        <li><em>“Input Collection”</em>: the new nested list we created in the previous step</li>\n        <li>Click “Edit”.</li>\n      </ul>\n\n      <p><a href=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_apply_rules_example_4_9_apply_rules_init_nested.png\" rel=\"noopener noreferrer\"><img src=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_apply_rules_example_4_9_apply_rules_init_nested.png\" alt=\"screenshot. \" loading=\"lazy\" /></a></p>\n\n      <p>Notice when loading a nested collection into the rule builder, there is a column for each layer of the list for each element.\nOne can pretty easily invert the outer two layers of the list by simply assigning the list identifiers in a new order. So select to assign “List Identifiers” and this time assign them to columns “B”, “A”, and “C” - in that order.</p>\n    </li>\n    <li>From <strong>Rules</strong>, select <code class=\"language-plaintext highlighter-rouge\">Add / Modify Column Definitions</code>\n      <ul>\n        <li><code class=\"language-plaintext highlighter-rouge\">Add Definition</code>, <code class=\"language-plaintext highlighter-rouge\">List Identifier(s)</code>, Column <code class=\"language-plaintext highlighter-rouge\">B</code></li>\n        <li><code class=\"language-plaintext highlighter-rouge\">Assign another column</code>, Column <code class=\"language-plaintext highlighter-rouge\">A</code></li>\n        <li><code class=\"language-plaintext highlighter-rouge\">Assign another column</code>, Column <code class=\"language-plaintext highlighter-rouge\">C</code></li>\n        <li>Click <code class=\"language-plaintext highlighter-rouge\">Save</code></li>\n      </ul>\n\n      <p><a href=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_apply_rules_example_4_10_apply_rules_inverted.png\" rel=\"noopener noreferrer\"><img src=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_apply_rules_example_4_10_apply_rules_inverted.png\" alt=\"screenshot. \" loading=\"lazy\" /></a></p>\n\n      <p>The resulting collection should be inverted.</p>\n\n      <p><a href=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_apply_rules_example_4_11_inverted.png\" rel=\"noopener noreferrer\"><img src=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_apply_rules_example_4_11_inverted.png\" alt=\"screenshot. \" loading=\"lazy\" /></a></p>\n\n      <p>In addition to structural re-organizations of a collection, the <code class=\"language-plaintext highlighter-rouge\">Apply Rules</code> tool can be used to\nfilter elements out of the collection.</p>\n    </li>\n    <li><strong>Apply Rules</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with the following parameters:\n      <ul>\n        <li><em>“Input Collection”</em>: the original flat list created</li>\n        <li>Click <code class=\"language-plaintext highlighter-rouge\">Edit</code></li>\n        <li>From <strong>Filter</strong> menu, select <code class=\"language-plaintext highlighter-rouge\">Using a Regular Expression</code>\n          <ul>\n            <li><em>“From Column”</em>: <code class=\"language-plaintext highlighter-rouge\">A</code></li>\n            <li><em>“Regular Expression”</em>: <code class=\"language-plaintext highlighter-rouge\">.*_single_.*</code></li>\n          </ul>\n        </li>\n        <li>From <strong>Rules</strong> menu, select <code class=\"language-plaintext highlighter-rouge\">Add / Modify Column Definitions</code>\n          <ul>\n            <li><code class=\"language-plaintext highlighter-rouge\">Add Definition</code>, <code class=\"language-plaintext highlighter-rouge\">List Identifier(s)</code>, Column <code class=\"language-plaintext highlighter-rouge\">A</code></li>\n          </ul>\n        </li>\n      </ul>\n\n      <p><a href=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_apply_rules_example_4_12_apply_rules_filter.png\" rel=\"noopener noreferrer\"><img src=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_apply_rules_example_4_12_apply_rules_filter.png\" alt=\"screenshot. \" loading=\"lazy\" /></a></p>\n\n      <p>The resulting collection should be a filtered version of the original list.</p>\n\n      <p><a href=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_apply_rules_example_4_13_filtered.png\" rel=\"noopener noreferrer\"><img src=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_apply_rules_example_4_13_filtered.png\" alt=\"screenshot. \" loading=\"lazy\" /></a></p>\n\n      <p>Structural re-organizations of collections can also be combined with filtering. To demonstrate this, reopen the original flat list created for this example again in the rule builder of the <code class=\"language-plaintext highlighter-rouge\">Apply Rules</code> tool. Use the same regular expression as last time to filter the result but also add a column for “treated” and “untreated” list identifiers.</p>\n    </li>\n    <li><strong>Apply Rules</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with the following parameters:\n      <ul>\n        <li>From <strong>Filter</strong> menu, select <code class=\"language-plaintext highlighter-rouge\">Using a Regular Expression</code>\n          <ul>\n            <li><em>“From Column”</em>: <code class=\"language-plaintext highlighter-rouge\">A</code></li>\n            <li><em>“Regular Expression”</em>: <code class=\"language-plaintext highlighter-rouge\">.*_single_.*</code></li>\n          </ul>\n        </li>\n        <li>From <strong>Column</strong> menu, select <code class=\"language-plaintext highlighter-rouge\">Using a Regular Expression</code>\n          <ul>\n            <li><em>“From Column”</em>: <code class=\"language-plaintext highlighter-rouge\">A</code></li>\n            <li>Select <code class=\"language-plaintext highlighter-rouge\">Create columns matching expression groups</code></li>\n            <li><em>“Regular Expression”</em>:  <code class=\"language-plaintext highlighter-rouge\">(.*)_single_.*</code></li>\n            <li><em>“Number of Groups”</em>: <code class=\"language-plaintext highlighter-rouge\">1</code></li>\n          </ul>\n        </li>\n        <li>From <strong>Rules</strong> menu, select  <code class=\"language-plaintext highlighter-rouge\">Add / Modify Column Definitions</code>\n          <ul>\n            <li><code class=\"language-plaintext highlighter-rouge\">Add Definition</code>, <code class=\"language-plaintext highlighter-rouge\">List Identifier(s)</code>. Column <code class=\"language-plaintext highlighter-rouge\">B</code></li>\n            <li><code class=\"language-plaintext highlighter-rouge\">Assign another column</code>, Column <code class=\"language-plaintext highlighter-rouge\">A</code></li>\n          </ul>\n        </li>\n      </ul>\n\n      <p><a href=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_apply_rules_example_4_14_apply_rules_filtered_and_nested.png\" rel=\"noopener noreferrer\"><img src=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_apply_rules_example_4_14_apply_rules_filtered_and_nested.png\" alt=\"screenshot. \" loading=\"lazy\" /></a></p>\n\n      <p>The resulting collection should be a filtered to only include the “single” data and broken into “treated” and “untreated” sublists.</p>\n\n      <p><a href=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_apply_rules_example_4_15_filtered_and_nested.png\" rel=\"noopener noreferrer\"><img src=\"https://galaxy-tests.s3.amazonaws.com/galaxy-gtn-screenshots/local/rules_apply_rules_example_4_15_filtered_and_nested.png\" alt=\"screenshot. \" loading=\"lazy\" /></a></p>\n    </li>\n  </ol>\n</blockquote>\n"],"ref_slides":[],"hands_on":true,"slides":false,"mod_date":"2024-05-29 15:37:52 +0000","pub_date":"2018-05-25 20:37:22 +0000","version":20,"api":"https://training.galaxyproject.org/training-material/api/topics/galaxy-interface/tutorials/upload-rules-advanced/tutorial.json","tools":[],"supported_servers":{"exact":[],"inexact":[{"name":"UseGalaxy.eu","url":"https://usegalaxy.eu","id":"eu","human":"Galaxy Europe","usegalaxy":true},{"name":"UseGalaxy.org","url":"https://usegalaxy.org","id":"us","human":"Galaxy Main","usegalaxy":true},{"name":"UseGalaxy.org.au","url":"https://usegalaxy.org.au","id":"au","human":"Galaxy Australia","usegalaxy":true},{"name":"UseGalaxy.fr","url":"https://usegalaxy.fr","id":"fr","human":"Galaxy France","usegalaxy":true}]},"topic_name_human":"Using Galaxy and Managing your Data","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools: []\n","tours":false,"video":false,"slides_recordings":false,"translations":{"tutorial":[],"slides":[],"video":false},"license":"CC-BY-4.0","type":"tutorial"}