{"layout":"tutorial_slides","title":"The Pangeo ecosystem","zenodo_link":"https://doi.org/10.5281/zenodo.5805953","requirements":[{"type":"internal","topic_name":"data-science","tutorials":["python-basics"]},{"type":"internal","topic_name":"data-science","tutorials":["python-plotting","python-advanced-np-pd"]},{"type":"external","title":"Data Carpentry Geospatial Workshop","link":"https://datacarpentry.org/geospatial-workshop/"}],"follow_up_training":[{"type":"external","title":"Pangeo Tutorial Gallery","link":"http://gallery.pangeo.io/repos/pangeo-data/pangeo-tutorial-gallery/index.html"},{"type":"external","title":"Pangeo Gallery","link":"http://gallery.pangeo.io/index.html"}],"questions":["What is Pangeo?","What is the Pangeo Software Ecosystem?","What is ARCO (Analysis Ready, Cloud Optimized) Data?","What is Pangeo forge?","What is STAC?","Why and how to use STAC?","How do Pangeo forge and STAC relate to each other?","How can I use and/or contribute to Pangeo?","Where to go to learn more about Pangeo?"],"objectives":["Understand Pangeo, its community, software ecosystem, infrastructure and cloud optimized data ecosystem.","Understand SpatioTemporal Asset Catalog (STAC) and how it relates to Pangeo.","Understand how to use and contribute to Pangeo.","Learn about Pangeo in Galaxy."],"time_estimation":"15m","key_points":["Pangeo is an inclusive community promoting open, reproducible and scalable science.","The Pangeo software ecosystem involves open source tools such as Xarray, iris, dask, jupyter, and many other packages.","Pangeo is an inclusive community promoting open, reproducible and scalable science.","The Pangeo software ecosystem involves open source tools such as Xarray, iris, dask, jupyter, and many other packages.","On the cloud, Analysis Ready, Cloud Optimized ata format (ARCO) is preferable.","Pangeo-forge eases the extractionm transformation and loading of Earth Science datasets","SpatioTemporal Asset Catalogs helps to provide a unified interface for searching and extracting spatio temporal datasets","STAC and pangeo-forge aim at complementing each other"],"tags":["climate"],"contributors":["BasileGoussard","rabernat","annefou"],"notebook":{"language":"python","snippet":"topics/climate/tutorials/pangeo-notebook/preamble.md"},"recordings":[{"captioners":["annefou"],"date":"2022-03-03","galaxy_version":"21.09","length":"17M","youtube_id":"XFF2yRcYGp0","speakers":["annefou"]}],"js_requirements":{"mathjax":null,"mermaid":false},"short_id":"S00039","url":"/topics/climate/tutorials/pangeo-notebook/slides.html","topic_name":"climate","tutorial_name":"pangeo-notebook","dir":"topics/climate/tutorials/pangeo-notebook","symlink":null,"id":"climate/pangeo-notebook","ref_tutorials":["<p>In this tutorial, we will learn about <a href=\"https://xarray.pydata.org/\">Xarray</a>, one of the most used Python library from the <a href=\"https://pangeo.io/\">Pangeo</a> ecosystem.</p>\n\n<p>We will be using data from <a href=\"https://ads.atmosphere.copernicus.eu/\">Copernicus Atmosphere Monitoring Service</a>\nand more precisely PM2.5 (<a href=\"https://en.wikipedia.org/wiki/Particulates#Size,_shape_and_solubility_matter\">Particle Matter &lt; 2.5 μm</a>) 4 days forecast from December, 22 2021. Parallel data analysis with Pangeo is not covered in this tutorial.</p>\n\n<blockquote class=\"comment\">\n  <comment-title>Remark</comment-title>\n\n  <p>This tutorial uses data on a regular latitude-longitude grid. More complex and irregular grids are not discussed in this tutorial. In addition,\nthis tutorial is not meant to cover all the different possibilities offered by Xarrays but shows functionalities we find useful for day to day\nanalysis.</p>\n\n</blockquote>\n\n<blockquote class=\"agenda\">\n  <agenda-title></agenda-title>\n\n  <p>In this tutorial, we will cover:</p>\n\n<ol id=\"markdown-toc\">\n  <li><a href=\"#analysis\" id=\"markdown-toc-analysis\">Analysis</a>    <ol>\n      <li><a href=\"#import-python-packages\" id=\"markdown-toc-import-python-packages\">Import Python packages</a></li>\n      <li><a href=\"#open-and-read-metadata\" id=\"markdown-toc-open-and-read-metadata\">Open and read metadata</a></li>\n      <li><a href=\"#select--subset-from-coordinates\" id=\"markdown-toc-select--subset-from-coordinates\">Select / Subset from coordinates</a></li>\n      <li><a href=\"#plotting\" id=\"markdown-toc-plotting\">Plotting</a></li>\n      <li><a href=\"#how-to-use-the-where-method\" id=\"markdown-toc-how-to-use-the-where-method\">How to use the <strong>where</strong> method</a></li>\n      <li><a href=\"#reduction-operations\" id=\"markdown-toc-reduction-operations\">Reduction operations</a></li>\n      <li><a href=\"#details-on-the-resample-method\" id=\"markdown-toc-details-on-the-resample-method\">Details on the <strong>resample</strong> method</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#conclusion\" id=\"markdown-toc-conclusion\">Conclusion</a></li>\n</ol>\n\n</blockquote>\n\n<h1 id=\"analysis\">Analysis</h1>\n\n<h2 id=\"import-python-packages\">Import Python packages</h2>\n\n<p>Some packages may need to be installed first. For example <code class=\"language-plaintext highlighter-rouge\">cmcrameri</code> is missing, so we need to install it by entering the following command in a new cell of your Jupyter Notebook:</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">pip</span> <span class=\"n\">install</span> <span class=\"n\">cmcrameri</span>\n</code></pre></div></div>\n\n<p>Then we need to import all the necessary packages in our Jupyter Notebook.</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"kn\">import</span> <span class=\"n\">numpy</span> <span class=\"k\">as</span> <span class=\"n\">np</span>\n<span class=\"kn\">import</span> <span class=\"n\">xarray</span> <span class=\"k\">as</span> <span class=\"n\">xr</span>\n<span class=\"kn\">import</span> <span class=\"n\">cartopy.crs</span> <span class=\"k\">as</span> <span class=\"n\">ccrs</span>\n<span class=\"kn\">import</span> <span class=\"n\">matplotlib.pyplot</span> <span class=\"k\">as</span> <span class=\"n\">plt</span>\n<span class=\"kn\">import</span> <span class=\"n\">cmcrameri.cm</span> <span class=\"k\">as</span> <span class=\"n\">cmc</span>\n<span class=\"kn\">import</span> <span class=\"n\">pandas</span> <span class=\"k\">as</span> <span class=\"n\">pd</span>\n</code></pre></div></div>\n\n<h2 id=\"open-and-read-metadata\">Open and read metadata</h2>\n\n<p>The netCDF dataset can now be opened with Xarray:</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">dset</span> <span class=\"o\">=</span> <span class=\"n\">xr</span><span class=\"p\">.</span><span class=\"nf\">open_dataset</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">data/CAMS-PM2_5-20211222.netcdf</span><span class=\"sh\">\"</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p>Once opened, we can get metadata using <code class=\"language-plaintext highlighter-rouge\">print</code> statement.</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"n\">dset</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p>Below is what you should get if everything goes fine.</p>\n\n<blockquote class=\"code-out\">\n  <code-out-title></code-out-title>\n  <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> &lt;xarray.Dataset&gt;\n Dimensions:     (longitude: 700, latitude: 400, level: 1, time: 97)\n Coordinates:\n   * longitude   (longitude) float32 -24.95 -24.85 -24.75 ... 44.75 44.85 44.95\n   * latitude    (latitude) float32 69.95 69.85 69.75 69.65 ... 30.25 30.15 30.05\n   * level       (level) float32 0.0\n   * time        (time) timedelta64[ns] 00:00:00 01:00:00 ... 4 days 00:00:00\nData variables:\n  pm2p5_conc  (time, level, latitude, longitude) float32 0.4202 ... 7.501\nAttributes:\n  title:        PM25 Air Pollutant FORECAST at the Surface\n  institution:  Data produced by Meteo France\n  source:       Data from ENSEMBLE model\n  history:      Model ENSEMBLE FORECAST\n  FORECAST:     Europe, 20211222+[0H_96H]\n  summary:      ENSEMBLE model hourly FORECAST of PM25 concentration at the...\n  project:      MACC-RAQ (http://macc-raq.gmes-atmosphere.eu)\n</code></pre></div>  </div>\n</blockquote>\n\n<blockquote class=\"tip\">\n  <tip-title>Command not found</tip-title>\n  <p>If you get an error with the previous command, first check the location of the input file <code class=\"language-plaintext highlighter-rouge\">CAMS-PM2_5-20211222.netcdf</code>:\nit needs to be in the same directory as your Jupyter Notebook.</p>\n</blockquote>\n\n<p>We can identify 4 different sections:</p>\n<ol>\n  <li><strong>Dimensions</strong>: name of dimensions and corresponding number of elements;</li>\n  <li><strong>Coordinates</strong>: contains coordinate arrays (longitude, latitude, level and time) with their values.</li>\n  <li><strong>Data variables</strong>: contains all the variables available in the dataset. Here, we only have one variable. For each variable, we get information on its shape and values.</li>\n  <li><strong>Attributes</strong>: at this level, we get all the attributes of the dataset.</li>\n</ol>\n\n<p>We can also get metadata information for each coordinate and data variables using “.” followed by the coordinate or data variable name.</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"n\">dset</span><span class=\"p\">.</span><span class=\"n\">time</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<blockquote class=\"question\">\n  <question-title>CAM PM2.5 Dataset</question-title>\n\n  <p>What is the name of the variable for Particle matter &lt; 2.5 μm and its physical units?</p>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <ol>\n      <li>To get metadata information from <code class=\"language-plaintext highlighter-rouge\">pm2p5_conc</code> Data variable, we use its variable name and print it. Printing it will only print metadata, not the values.\n        <ul>\n          <li>Variable name: <code class=\"language-plaintext highlighter-rouge\">mass_concentration_of_pm2p5_ambient_aerosol_in_air</code></li>\n          <li>Units: <code class=\"language-plaintext highlighter-rouge\">µg/m3</code></li>\n        </ul>\n      </li>\n    </ol>\n\n    <blockquote class=\"code-in\">\n      <code-in-title>Python</code-in-title>\n      <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"n\">dset</span><span class=\"p\">.</span><span class=\"n\">pm2p5_conc</span><span class=\"p\">)</span>\n</code></pre></div>      </div>\n    </blockquote>\n\n    <blockquote class=\"code-out\">\n      <code-out-title></code-out-title>\n      <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>   &lt;xarray.DataArray <span class=\"s1\">'pm2p5_conc'</span> <span class=\"o\">(</span><span class=\"nb\">time</span>: 97, level: 1, latitude: 400, longitude: 700<span class=\"o\">)&gt;</span>\n   <span class=\"o\">[</span>27160000 values with <span class=\"nv\">dtype</span><span class=\"o\">=</span>float32]\n   Coordinates:\n     <span class=\"k\">*</span> longitude  <span class=\"o\">(</span>longitude<span class=\"o\">)</span> float32 335.0 335.1 335.2 335.4 ... 44.75 44.85 44.95\n     <span class=\"k\">*</span> latitude   <span class=\"o\">(</span>latitude<span class=\"o\">)</span> float32 69.95 69.85 69.75 69.65 ... 30.25 30.15 30.05\n     <span class=\"k\">*</span> level      <span class=\"o\">(</span>level<span class=\"o\">)</span> float32 0.0\n     <span class=\"k\">*</span> <span class=\"nb\">time</span>       <span class=\"o\">(</span><span class=\"nb\">time</span><span class=\"o\">)</span> timedelta64[ns] 00:00:00 01:00:00 ... 4 days 00:00:00\n   Attributes:\n       species:        PM2.5 Aerosol\n       units:          µg/m3\n       value:          hourly values\n       standard_name:  mass_concentration_of_pm2p5_ambient_aerosol_in_air\n</code></pre></div>      </div>\n    </blockquote>\n  </blockquote>\n</blockquote>\n\n<blockquote class=\"comment\">\n  <comment-title>Different ways to access Data variables</comment-title>\n\n  <p>To access a variable or coordinate, we can use “.” or specify its name as a string between squared brackets “[” “]”. For example:</p>\n\n  <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"n\">dset</span><span class=\"p\">[</span><span class=\"sh\">'</span><span class=\"s\">pm2p5_conc</span><span class=\"sh\">'</span><span class=\"p\">])</span>\n<span class=\"c1\"># or alternatively\n</span><span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"n\">dset</span><span class=\"p\">.</span><span class=\"n\">pm2p5_conc</span><span class=\"p\">)</span>\n</code></pre></div>  </div>\n\n  <p>When we print a variable or coordinate, we do not get all the individual values but a <code class=\"language-plaintext highlighter-rouge\">DataArray</code> that contains a lot of very useful metadata such as coordinates (if they have some), all the attributes such as the name, the physical units, etc.</p>\n\n</blockquote>\n<h2 id=\"select--subset-from-coordinates\">Select / Subset from coordinates</h2>\n\n<p>We often want to select elements from the coordinates for instance to subset a geographical area or select specific times or a specific time range.</p>\n\n<p>There are two different ways to make a selection:</p>\n<ul>\n  <li>by index</li>\n  <li>by value</li>\n</ul>\n\n<h3 id=\"select-elements-from-coordinate-by-index\">Select elements from coordinate by index</h3>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"n\">dset</span><span class=\"p\">.</span><span class=\"nf\">isel</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">))</span>\n</code></pre></div></div>\n\n<p>You should see that the coordinate <code class=\"language-plaintext highlighter-rouge\">time</code> “disappeared” from the <code class=\"language-plaintext highlighter-rouge\">Dimensions</code> and now the variable <code class=\"language-plaintext highlighter-rouge\">pm2p5_conc</code> is a 3D field with longitude, latitude and level.</p>\n\n<h3 id=\"select-elements-from-coordinates-by-value\">Select elements from coordinates by value</h3>\n\n<p>When selecting elements by the value of the coordinate, we need to use the same datatype. For instance, to select an element from\n<code class=\"language-plaintext highlighter-rouge\">time</code>, we need to use <code class=\"language-plaintext highlighter-rouge\">timedelta64</code>. The code below will give the same result as <code class=\"language-plaintext highlighter-rouge\">isel(time=0)</code>.</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"n\">dset</span><span class=\"p\">.</span><span class=\"nf\">sel</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">=</span><span class=\"n\">np</span><span class=\"p\">.</span><span class=\"nf\">timedelta64</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">)))</span>\n</code></pre></div></div>\n\n<p>The output will be very similar to what we did previously when selecting from coordinates by index.</p>\n\n<blockquote class=\"question\">\n  <question-title>Select a single time for PM2.5</question-title>\n\n  <p>How to select the forecast for December, 24th 2021 at 12:00 UTC?</p>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <p>Data starts on December, 22nd 2021 at 00:00 UTC so we need to add 2 days and 12 hours to select the correct time index.</p>\n\n    <blockquote class=\"code-in\">\n      <code-in-title>Python</code-in-title>\n      <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"n\">dset</span><span class=\"p\">.</span><span class=\"nf\">sel</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"p\">.</span><span class=\"nf\">timedelta64</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"sh\">'</span><span class=\"s\">D</span><span class=\"sh\">'</span><span class=\"p\">)</span><span class=\"o\">+</span> <span class=\"n\">np</span><span class=\"p\">.</span><span class=\"nf\">timedelta64</span><span class=\"p\">(</span><span class=\"mi\">12</span><span class=\"p\">,</span><span class=\"sh\">'</span><span class=\"s\">h</span><span class=\"sh\">'</span><span class=\"p\">))))</span>\n</code></pre></div>      </div>\n    </blockquote>\n\n    <blockquote class=\"code-out\">\n      <code-out-title></code-out-title>\n      <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>&lt;xarray.Dataset&gt;\nDimensions:     <span class=\"o\">(</span>longitude: 700, latitude: 400, level: 1<span class=\"o\">)</span>\nCoordinates:\n  <span class=\"k\">*</span> longitude   <span class=\"o\">(</span>longitude<span class=\"o\">)</span> float32 <span class=\"nt\">-24</span>.95 <span class=\"nt\">-24</span>.85 <span class=\"nt\">-24</span>.75 ... 44.75 44.85 44.95\n  <span class=\"k\">*</span> latitude    <span class=\"o\">(</span>latitude<span class=\"o\">)</span> float32 69.95 69.85 69.75 69.65 ... 30.25 30.15 30.05\n  <span class=\"k\">*</span> level       <span class=\"o\">(</span>level<span class=\"o\">)</span> float32 0.0\n    <span class=\"nb\">time        </span>timedelta64[ns] 2 days 12:00:00\nData variables:\n    pm2p5_conc  <span class=\"o\">(</span>level, latitude, longitude<span class=\"o\">)</span> float32 0.4499 0.4421 ... 10.71\nAttributes:\n    title:        PM25 Air Pollutant FORECAST at the Surface\n    institution:  Data produced by Meteo France\n    <span class=\"nb\">source</span>:       Data from ENSEMBLE model\n    <span class=\"nb\">history</span>:      Model ENSEMBLE FORECAST\n    FORECAST:     Europe, 20211222+[0H_96H]\n    summary:      ENSEMBLE model hourly FORECAST of PM25 concentration at the...\n    project:      MACC-RAQ <span class=\"o\">(</span>http://macc-raq.gmes-atmosphere.eu<span class=\"o\">)</span>\n</code></pre></div>      </div>\n    </blockquote>\n  </blockquote>\n</blockquote>\n\n<h2 id=\"plotting\">Plotting</h2>\n\n<p>To plot a map, you need to select a variable with data on geographical coordinates (latitude, longitude). In addition, coordinates need to be sorted, and preferably in increasing order. This is not the case for the coordinate “longitude” which is given between 360 and 0.</p>\n\n<p>Let’s shift the longitudes by 180 degrees so that they come in the range of -180 to 180.</p>\n\n<h3 id=\"shift-longitudes\">Shift longitudes</h3>\n\n<p>We print the longitudes before and after shifting them so we can see what is happening.</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"n\">dset</span><span class=\"p\">.</span><span class=\"n\">longitude</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p>The longitude values are between <code class=\"language-plaintext highlighter-rouge\">335.05</code> and <code class=\"language-plaintext highlighter-rouge\">44.95</code> degrees.</p>\n\n<p>Let’s now shift the longitudes to get values between <code class=\"language-plaintext highlighter-rouge\">-180</code>, <code class=\"language-plaintext highlighter-rouge\">180</code> degrees.</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">dset</span><span class=\"p\">.</span><span class=\"n\">coords</span><span class=\"p\">[</span><span class=\"sh\">'</span><span class=\"s\">longitude</span><span class=\"sh\">'</span><span class=\"p\">]</span> <span class=\"o\">=</span> <span class=\"p\">(</span><span class=\"n\">dset</span><span class=\"p\">[</span><span class=\"sh\">'</span><span class=\"s\">longitude</span><span class=\"sh\">'</span><span class=\"p\">]</span> <span class=\"o\">+</span> <span class=\"mi\">180</span><span class=\"p\">)</span> <span class=\"o\">%</span> <span class=\"mi\">360</span> <span class=\"o\">-</span> <span class=\"mi\">180</span>\n<span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"n\">dset</span><span class=\"p\">.</span><span class=\"n\">longitude</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p>Indeed, the longitudes have been shifted and now the values are between <code class=\"language-plaintext highlighter-rouge\">-24.95</code> and <code class=\"language-plaintext highlighter-rouge\">44.95</code>.</p>\n\n<h3 id=\"visualize-on-a-map-pm25-for-december-24th-2021-at-1200-utc\">Visualize on a map PM2.5 for December, 24th 2021 at 12:00 UTC</h3>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">dset</span><span class=\"p\">.</span><span class=\"nf\">sel</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"p\">.</span><span class=\"nf\">timedelta64</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"sh\">'</span><span class=\"s\">D</span><span class=\"sh\">'</span><span class=\"p\">)</span><span class=\"o\">+</span> <span class=\"n\">np</span><span class=\"p\">.</span><span class=\"nf\">timedelta64</span><span class=\"p\">(</span><span class=\"mi\">12</span><span class=\"p\">,</span><span class=\"sh\">'</span><span class=\"s\">h</span><span class=\"sh\">'</span><span class=\"p\">))).</span><span class=\"n\">pm2p5_conc</span><span class=\"p\">.</span><span class=\"nf\">plot</span><span class=\"p\">()</span>\n</code></pre></div></div>\n<p>We will get a figure like the one below:</p>\n\n<p><a href=\"../../images/PM2_5_default.png\" rel=\"noopener noreferrer\"><img src=\"../../images/PM2_5_default.png\" alt=\"CAMS PM2.5 December, 24th 2021 at 12:00 UTC. \" width=\"432\" height=\"288\" loading=\"lazy\" /></a></p>\n\n<blockquote class=\"comment\">\n  <comment-title>What about `level`</comment-title>\n  <p>Note that in the previous plot, we did not need to select <code class=\"language-plaintext highlighter-rouge\">level</code> because there is one value only. However, if we had more than one level, we would need to add a selection on the level before plotting</p>\n\n</blockquote>\n\n<h3 id=\"customize-your-plot\">Customize your plot</h3>\n\n<p>There are many ways to customize your plots and we will only detail what we think is important for creating publication ready figures:</p>\n<ul>\n  <li>Define the size of the figure</li>\n  <li>Choose to project data on a different projection.</li>\n  <li>Add coastline</li>\n  <li>Set the min and max values for plotting</li>\n  <li>Add a title, change colorbar title</li>\n  <li>Save figure into png</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">fig</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"p\">.</span><span class=\"nf\">figure</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">15</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># We're using cartopy to project our data.\n# (see documentation on cartopy)\n</span><span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"p\">.</span><span class=\"nf\">subplot</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">projection</span><span class=\"o\">=</span><span class=\"n\">ccrs</span><span class=\"p\">.</span><span class=\"nc\">Mercator</span><span class=\"p\">())</span>\n<span class=\"n\">ax</span><span class=\"p\">.</span><span class=\"nf\">coastlines</span><span class=\"p\">(</span><span class=\"n\">resolution</span><span class=\"o\">=</span><span class=\"sh\">'</span><span class=\"s\">10m</span><span class=\"sh\">'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># We need to project our data to the new projection and for this we use `transform`.\n# we set the original data projection in transform (here PlateCarree)\n</span><span class=\"n\">dset</span><span class=\"p\">.</span><span class=\"nf\">sel</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"p\">.</span><span class=\"nf\">timedelta64</span><span class=\"p\">(</span><span class=\"mi\">2</span><span class=\"p\">,</span><span class=\"sh\">'</span><span class=\"s\">D</span><span class=\"sh\">'</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">np</span><span class=\"p\">.</span><span class=\"nf\">timedelta64</span><span class=\"p\">(</span><span class=\"mi\">12</span><span class=\"p\">,</span><span class=\"sh\">'</span><span class=\"s\">h</span><span class=\"sh\">'</span><span class=\"p\">)))[</span><span class=\"sh\">'</span><span class=\"s\">pm2p5_conc</span><span class=\"sh\">'</span><span class=\"p\">].</span><span class=\"nf\">plot</span><span class=\"p\">(</span><span class=\"n\">ax</span><span class=\"o\">=</span><span class=\"n\">ax</span><span class=\"p\">,</span>\n                                                                                    <span class=\"n\">transform</span><span class=\"o\">=</span><span class=\"n\">ccrs</span><span class=\"p\">.</span><span class=\"nc\">PlateCarree</span><span class=\"p\">(),</span>\n                                                                                    <span class=\"n\">vmin</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">vmax</span> <span class=\"o\">=</span> <span class=\"mi\">35</span><span class=\"p\">,</span>\n                                                                                    <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"n\">cmc</span><span class=\"p\">.</span><span class=\"n\">roma_r</span><span class=\"p\">)</span>\n<span class=\"c1\"># One way to customize your title\n</span><span class=\"n\">plt</span><span class=\"p\">.</span><span class=\"nf\">title</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">Copernicus Atmosphere Monitoring Service PM2.5, 2 day forecasts</span><span class=\"se\">\\n</span><span class=\"s\"> 24th December 2021 at 12:00 UTC</span><span class=\"sh\">\"</span><span class=\"p\">,</span> <span class=\"n\">fontsize</span><span class=\"o\">=</span><span class=\"mi\">18</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"p\">.</span><span class=\"nf\">savefig</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">CAMS-PM2_5-fc-20211224.png</span><span class=\"sh\">\"</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p>And you should get the following plot:</p>\n\n<p><a href=\"../../images/CAMS-PM2_5-fc-20211224.png\" rel=\"noopener noreferrer\"><img src=\"../../images/CAMS-PM2_5-fc-20211224.png\" alt=\"Customized plot for CAMS PM2.5 December, 24th 2021 at 12:00 UTC. \" width=\"1080\" height=\"720\" loading=\"lazy\" /></a></p>\n\n<h3 id=\"multi-plots\">Multi-plots</h3>\n\n<p>Now, we will plot several times on the same figure in different sub-plots; we will not plot all the times (too many) but the first 24 forecasted values.</p>\n\n<p>Firstly, we need to create a list of times and convert it to <code class=\"language-plaintext highlighter-rouge\">pandas datetime</code> in order to make it easier to format times when plotting:</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">list_times</span> <span class=\"o\">=</span> <span class=\"n\">np</span><span class=\"p\">.</span><span class=\"nf\">datetime64</span><span class=\"p\">(</span><span class=\"sh\">'</span><span class=\"s\">2021-12-22</span><span class=\"sh\">'</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">dset</span><span class=\"p\">.</span><span class=\"n\">time</span><span class=\"p\">.</span><span class=\"nf\">sel</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">=</span><span class=\"nf\">slice</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"p\">.</span><span class=\"nf\">timedelta64</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">),</span><span class=\"n\">np</span><span class=\"p\">.</span><span class=\"nf\">timedelta64</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"sh\">'</span><span class=\"s\">D</span><span class=\"sh\">'</span><span class=\"p\">)))</span>\n<span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"nf\">to_datetime</span><span class=\"p\">(</span><span class=\"n\">list_times</span><span class=\"p\">).</span><span class=\"nf\">strftime</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">%d %b %H:%S UTC</span><span class=\"sh\">\"</span><span class=\"p\">))</span>\n</code></pre></div></div>\n\n<p>Secondly, we need to use the same plotting method as earlier, but we pass additional parameters:</p>\n\n<ul>\n  <li><code class=\"language-plaintext highlighter-rouge\">vmin = 0</code>and <code class=\"language-plaintext highlighter-rouge\">vmax = 35</code> to set the minimum and maximum values when plotting (this is useful to highlight features in your plot)</li>\n  <li><code class=\"language-plaintext highlighter-rouge\">subplot_kws={\"projection\": proj_plot}</code> to project data on a non-default projection. See <a href=\"https://scitools.org.uk/cartopy/docs/v0.15/crs/projections.html\">cartopy projection</a> for more information about projections.</li>\n  <li><code class=\"language-plaintext highlighter-rouge\">col='time'</code> because we will plot several <code class=\"language-plaintext highlighter-rouge\">time</code>;</li>\n  <li><code class=\"language-plaintext highlighter-rouge\">col_wrap=4</code> to have a maximum of 4 plots per row. If we have more times to plot, then the next figures will be on another row.</li>\n  <li><code class=\"language-plaintext highlighter-rouge\">robust=True</code> and <code class=\"language-plaintext highlighter-rouge\">aspect=dset.dims[\"longitude\"] / dset.dims[\"latitude\"]</code> are additional parameters to make each subplot with a “sensible” figsize.</li>\n  <li><code class=\"language-plaintext highlighter-rouge\">cmap=cmc.roma_r</code> to select a non-default and color-blind friendly colormap (see <a href=\"https://www.fabiocrameri.ch/colourmaps/\">scientific colormaps</a>).</li>\n</ul>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">fig</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"p\">.</span><span class=\"nf\">figure</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># We're using cartopy to project our data.\n# (see documentation on cartopy)\n</span><span class=\"n\">proj_plot</span> <span class=\"o\">=</span> <span class=\"n\">ccrs</span><span class=\"p\">.</span><span class=\"nc\">Mercator</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># We need to project our data to the new projection and for this we use `transform`.\n# we set the original data projection in transform (here PlateCarree)\n</span><span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">dset</span><span class=\"p\">.</span><span class=\"nf\">sel</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">=</span><span class=\"nf\">slice</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"p\">.</span><span class=\"nf\">timedelta64</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"sh\">'</span><span class=\"s\">h</span><span class=\"sh\">'</span><span class=\"p\">),</span><span class=\"n\">np</span><span class=\"p\">.</span><span class=\"nf\">timedelta64</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"sh\">'</span><span class=\"s\">D</span><span class=\"sh\">'</span><span class=\"p\">)))[</span><span class=\"sh\">'</span><span class=\"s\">pm2p5_conc</span><span class=\"sh\">'</span><span class=\"p\">].</span><span class=\"nf\">plot</span><span class=\"p\">(</span><span class=\"n\">transform</span><span class=\"o\">=</span><span class=\"n\">ccrs</span><span class=\"p\">.</span><span class=\"nc\">PlateCarree</span><span class=\"p\">(),</span>\n                                                                                       <span class=\"n\">vmin</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">vmax</span> <span class=\"o\">=</span> <span class=\"mi\">35</span><span class=\"p\">,</span>\n                                                                                       <span class=\"n\">subplot_kws</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"sh\">\"</span><span class=\"s\">projection</span><span class=\"sh\">\"</span><span class=\"p\">:</span> <span class=\"n\">proj_plot</span><span class=\"p\">},</span>\n                                                                                       <span class=\"n\">col</span><span class=\"o\">=</span><span class=\"sh\">'</span><span class=\"s\">time</span><span class=\"sh\">'</span><span class=\"p\">,</span> <span class=\"n\">col_wrap</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span>\n                                                                                       <span class=\"n\">robust</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span>\n                                                                                      <span class=\"n\">aspect</span><span class=\"o\">=</span><span class=\"n\">dset</span><span class=\"p\">.</span><span class=\"n\">dims</span><span class=\"p\">[</span><span class=\"sh\">\"</span><span class=\"s\">longitude</span><span class=\"sh\">\"</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"n\">dset</span><span class=\"p\">.</span><span class=\"n\">dims</span><span class=\"p\">[</span><span class=\"sh\">\"</span><span class=\"s\">latitude</span><span class=\"sh\">\"</span><span class=\"p\">],</span>  <span class=\"c1\"># for a sensible figsize\n</span>                                                                                       <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"n\">cmc</span><span class=\"p\">.</span><span class=\"n\">roma_r</span><span class=\"p\">)</span>\n<span class=\"c1\"># We have to set the map's options on our axes\n</span><span class=\"k\">for</span> <span class=\"n\">ax</span><span class=\"p\">,</span><span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nf\">zip</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">axes</span><span class=\"p\">.</span><span class=\"n\">flat</span><span class=\"p\">,</span>  <span class=\"p\">(</span><span class=\"n\">np</span><span class=\"p\">.</span><span class=\"nf\">datetime64</span><span class=\"p\">(</span><span class=\"sh\">'</span><span class=\"s\">2021-12-22</span><span class=\"sh\">'</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">dset</span><span class=\"p\">.</span><span class=\"n\">time</span><span class=\"p\">.</span><span class=\"nf\">sel</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">=</span><span class=\"nf\">slice</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"p\">.</span><span class=\"nf\">timedelta64</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">),</span><span class=\"n\">np</span><span class=\"p\">.</span><span class=\"nf\">timedelta64</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"sh\">'</span><span class=\"s\">D</span><span class=\"sh\">'</span><span class=\"p\">)))).</span><span class=\"n\">values</span><span class=\"p\">):</span>\n      <span class=\"n\">ax</span><span class=\"p\">.</span><span class=\"nf\">coastlines</span><span class=\"p\">(</span><span class=\"sh\">'</span><span class=\"s\">10m</span><span class=\"sh\">'</span><span class=\"p\">)</span>\n      <span class=\"n\">ax</span><span class=\"p\">.</span><span class=\"nf\">set_title</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">CAMS PM2.5 </span><span class=\"sh\">\"</span> <span class=\"o\">+</span> <span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"nf\">to_datetime</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">).</span><span class=\"nf\">strftime</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">%d %b %H:%S UTC</span><span class=\"sh\">\"</span><span class=\"p\">),</span> <span class=\"n\">fontsize</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">)</span>\n<span class=\"c1\"># Save your figure\n</span><span class=\"n\">plt</span><span class=\"p\">.</span><span class=\"nf\">savefig</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">CAMS-PM2_5-fc-multi.png</span><span class=\"sh\">\"</span><span class=\"p\">)</span>\n</code></pre></div></div>\n<p>In the second part of our plot, we are going to customize each subplot (this is why we loop for each of them and get their axes) by adding:</p>\n\n<ul>\n  <li><code class=\"language-plaintext highlighter-rouge\">coastlines</code>: we pass a parameter <code class=\"language-plaintext highlighter-rouge\">10m</code> to get coastlines with a high resolution (non-default);</li>\n  <li><code class=\"language-plaintext highlighter-rouge\">set_title</code> to set a title for each subplot.</li>\n</ul>\n\n<p><a href=\"../../images/CAMS-PM2_5-fc-multi.png\" rel=\"noopener noreferrer\"><img src=\"../../images/CAMS-PM2_5-fc-multi.png\" alt=\"Customized multi-plot. \" width=\"1584\" height=\"1296\" loading=\"lazy\" /></a></p>\n\n<blockquote class=\"question\">\n  <question-title>PM2.5 over Italy</question-title>\n\n  <p>Using a Multi-plot between Rome and Naples, can you tell us if the forecasted PM2.5 will increase or decrease during the first 24 hours?</p>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <p>We will select a sub-area: 11. East to 15.0 East and 40. N to 43. N. PM2.5 will increase and reach values close to 35 μm.m-3.\nWe will use <code class=\"language-plaintext highlighter-rouge\">slice</code> to select the area and we slice latitudes with <code class=\"language-plaintext highlighter-rouge\">latitude=slice(47.3, 36.5)</code> and not <code class=\"language-plaintext highlighter-rouge\">latitude=slice(36.5, 47.3)</code>.\nThe reason is that when using slice, you need to specify values using the same order as in the coordinates. Latitudes are specified in\ndecreasing order for CAMS.</p>\n\n    <blockquote class=\"code-in\">\n      <code-in-title>Python</code-in-title>\n      <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">fig</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"p\">.</span><span class=\"nf\">figure</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># We're using cartopy to project our data.\n# (see documentation on cartopy)\n</span><span class=\"n\">proj_plot</span> <span class=\"o\">=</span> <span class=\"n\">ccrs</span><span class=\"p\">.</span><span class=\"nc\">Mercator</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># We need to project our data to the new projection and for this we use `transform`.\n# we set the original data projection in transform (here PlateCarree)\n</span><span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">dset</span><span class=\"p\">.</span><span class=\"nf\">sel</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">=</span><span class=\"nf\">slice</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"p\">.</span><span class=\"nf\">timedelta64</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"sh\">'</span><span class=\"s\">h</span><span class=\"sh\">'</span><span class=\"p\">),</span><span class=\"n\">np</span><span class=\"p\">.</span><span class=\"nf\">timedelta64</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"sh\">'</span><span class=\"s\">D</span><span class=\"sh\">'</span><span class=\"p\">))).</span><span class=\"nf\">sel</span><span class=\"p\">(</span><span class=\"n\">latitude</span><span class=\"o\">=</span><span class=\"nf\">slice</span><span class=\"p\">(</span><span class=\"mf\">43.</span><span class=\"p\">,</span> <span class=\"mf\">40.</span><span class=\"p\">),</span>\n                                                                          <span class=\"n\">longitude</span><span class=\"o\">=</span><span class=\"nf\">slice</span><span class=\"p\">(</span><span class=\"mf\">11.</span><span class=\"p\">,</span><span class=\"mf\">15.</span><span class=\"p\">))[</span><span class=\"sh\">'</span><span class=\"s\">pm2p5_conc</span><span class=\"sh\">'</span><span class=\"p\">].</span><span class=\"nf\">plot</span><span class=\"p\">(</span><span class=\"n\">transform</span><span class=\"o\">=</span><span class=\"n\">ccrs</span><span class=\"p\">.</span><span class=\"nc\">PlateCarree</span><span class=\"p\">(),</span>\n                                                                                     <span class=\"n\">vmin</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">vmax</span> <span class=\"o\">=</span> <span class=\"mi\">35</span><span class=\"p\">,</span>\n                                                                                     <span class=\"n\">subplot_kws</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"sh\">\"</span><span class=\"s\">projection</span><span class=\"sh\">\"</span><span class=\"p\">:</span> <span class=\"n\">proj_plot</span><span class=\"p\">},</span>\n                                                                                     <span class=\"n\">col</span><span class=\"o\">=</span><span class=\"sh\">'</span><span class=\"s\">time</span><span class=\"sh\">'</span><span class=\"p\">,</span> <span class=\"n\">col_wrap</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span>\n                                                                                     <span class=\"n\">robust</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span>\n                                                                                     <span class=\"n\">aspect</span><span class=\"o\">=</span><span class=\"n\">dset</span><span class=\"p\">.</span><span class=\"n\">dims</span><span class=\"p\">[</span><span class=\"sh\">\"</span><span class=\"s\">longitude</span><span class=\"sh\">\"</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"n\">dset</span><span class=\"p\">.</span><span class=\"n\">dims</span><span class=\"p\">[</span><span class=\"sh\">\"</span><span class=\"s\">latitude</span><span class=\"sh\">\"</span><span class=\"p\">],</span>  <span class=\"c1\"># for a sensible figsize\n</span>                                                                                     <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"n\">cmc</span><span class=\"p\">.</span><span class=\"n\">roma_r</span><span class=\"p\">)</span>\n<span class=\"c1\"># We have to set the map's options on all axes\n</span><span class=\"k\">for</span> <span class=\"n\">ax</span><span class=\"p\">,</span><span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nf\">zip</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">axes</span><span class=\"p\">.</span><span class=\"n\">flat</span><span class=\"p\">,</span>  <span class=\"p\">(</span><span class=\"n\">np</span><span class=\"p\">.</span><span class=\"nf\">datetime64</span><span class=\"p\">(</span><span class=\"sh\">'</span><span class=\"s\">2021-12-22</span><span class=\"sh\">'</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">dset</span><span class=\"p\">.</span><span class=\"n\">time</span><span class=\"p\">.</span><span class=\"nf\">sel</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">=</span><span class=\"nf\">slice</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"p\">.</span><span class=\"nf\">timedelta64</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">),</span><span class=\"n\">np</span><span class=\"p\">.</span><span class=\"nf\">timedelta64</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"sh\">'</span><span class=\"s\">D</span><span class=\"sh\">'</span><span class=\"p\">)))).</span><span class=\"n\">values</span><span class=\"p\">):</span>\n    <span class=\"n\">ax</span><span class=\"p\">.</span><span class=\"nf\">coastlines</span><span class=\"p\">(</span><span class=\"sh\">'</span><span class=\"s\">10m</span><span class=\"sh\">'</span><span class=\"p\">)</span>\n    <span class=\"n\">ax</span><span class=\"p\">.</span><span class=\"nf\">set_title</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">CAMS PM2.5 </span><span class=\"sh\">\"</span> <span class=\"o\">+</span> <span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"nf\">to_datetime</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">).</span><span class=\"nf\">strftime</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">%d %b %H:%S UTC</span><span class=\"sh\">\"</span><span class=\"p\">),</span> <span class=\"n\">fontsize</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">)</span>\n<span class=\"c1\"># Save your figure\n</span><span class=\"n\">plt</span><span class=\"p\">.</span><span class=\"nf\">savefig</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">CAMS-PM2_5-fc-multi-Italy.png</span><span class=\"sh\">\"</span><span class=\"p\">)</span>\n</code></pre></div>      </div>\n    </blockquote>\n\n    <p><a href=\"../../images/CAMS-PM2_5-fc-multi-Italy.png\" rel=\"noopener noreferrer\"><img src=\"../../images/CAMS-PM2_5-fc-multi-Italy.png\" alt=\"PM2.5 over Italy. \" width=\"1584\" height=\"1296\" loading=\"lazy\" /></a></p>\n\n  </blockquote>\n</blockquote>\n\n<h2 id=\"how-to-use-the-where-method\">How to use the <strong>where</strong> method</h2>\n\n<p>Sometimes we may want to make more complex selections with criteria on the values of a given variable and not only on its coordinates. For this purpose,  we use the <code class=\"language-plaintext highlighter-rouge\">where</code> method. For instance, we may want to only keep PM2.5 if values are greater than 25 μm.m-3 (or any threshold you would like to choose).</p>\n\n<h3 id=\"mask-values-that-do-not-meet-a-criteria-with-where\">Mask values that do not meet a criteria with <code class=\"language-plaintext highlighter-rouge\">Where</code></h3>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"n\">dset</span><span class=\"p\">.</span><span class=\"nf\">where</span><span class=\"p\">(</span><span class=\"n\">dset</span><span class=\"p\">[</span><span class=\"sh\">'</span><span class=\"s\">pm2p5_conc</span><span class=\"sh\">'</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"mi\">25</span><span class=\"p\">))</span>\n</code></pre></div></div>\n\n<blockquote class=\"comment\">\n  <comment-title>What happened?</comment-title>\n  <p>Each element of the dataset where the criteria within the <code class=\"language-plaintext highlighter-rouge\">where</code> statement is not met, e.g. when PM2.5 &lt;= 25, will be set to <code class=\"language-plaintext highlighter-rouge\">nan</code>.\nYou may not see any changes when printing the dataset but if you look carefuly at <code class=\"language-plaintext highlighter-rouge\">pm2p5_conc</code> values, you will see many <code class=\"language-plaintext highlighter-rouge\">nan</code>.</p>\n\n</blockquote>\n\n<p>Let’s plot one time to better see what happened:</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c1\">######################\n# Plotting with mask #\n######################\n</span>\n<span class=\"n\">fig</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"p\">.</span><span class=\"nf\">figure</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">15</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># We're using cartopy to project our data.\n# (see documentation on cartopy)\n</span><span class=\"n\">ax</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"p\">.</span><span class=\"nf\">subplot</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">projection</span><span class=\"o\">=</span><span class=\"n\">ccrs</span><span class=\"p\">.</span><span class=\"nc\">Mercator</span><span class=\"p\">())</span>\n<span class=\"n\">ax</span><span class=\"p\">.</span><span class=\"nf\">coastlines</span><span class=\"p\">(</span><span class=\"n\">resolution</span><span class=\"o\">=</span><span class=\"sh\">'</span><span class=\"s\">10m</span><span class=\"sh\">'</span><span class=\"p\">)</span>\n\n<span class=\"c1\"># We need to project our data to the new projection and for this we use `transform`.\n# we set the original data projection in transform (here PlateCarree)\n</span><span class=\"n\">dset</span><span class=\"p\">.</span><span class=\"nf\">where</span><span class=\"p\">(</span><span class=\"n\">dset</span><span class=\"p\">[</span><span class=\"sh\">'</span><span class=\"s\">pm2p5_conc</span><span class=\"sh\">'</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"mi\">25</span><span class=\"p\">).</span><span class=\"nf\">isel</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">=</span><span class=\"mi\">0</span><span class=\"p\">)[</span><span class=\"sh\">'</span><span class=\"s\">pm2p5_conc</span><span class=\"sh\">'</span><span class=\"p\">].</span><span class=\"nf\">plot</span><span class=\"p\">(</span><span class=\"n\">ax</span><span class=\"o\">=</span><span class=\"n\">ax</span><span class=\"p\">,</span>\n                                                                     <span class=\"n\">transform</span><span class=\"o\">=</span><span class=\"n\">ccrs</span><span class=\"p\">.</span><span class=\"nc\">PlateCarree</span><span class=\"p\">(),</span>\n                                                                     <span class=\"n\">vmin</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">vmax</span> <span class=\"o\">=</span> <span class=\"mi\">35</span><span class=\"p\">,</span>\n                                                                     <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"n\">cmc</span><span class=\"p\">.</span><span class=\"n\">roma_r</span><span class=\"p\">)</span>\n<span class=\"c1\"># One way to customize your title\n</span><span class=\"n\">plt</span><span class=\"p\">.</span><span class=\"nf\">title</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">Copernicus Atmosphere Monitoring Service PM2.5, 2 day forecasts</span><span class=\"se\">\\n</span><span class=\"s\"> 24th December 2021 at 12:00 UTC</span><span class=\"se\">\\n</span><span class=\"s\"> only values &gt; 25</span><span class=\"sh\">\"</span><span class=\"p\">,</span> <span class=\"n\">fontsize</span><span class=\"o\">=</span><span class=\"mi\">18</span><span class=\"p\">)</span>\n<span class=\"n\">plt</span><span class=\"p\">.</span><span class=\"nf\">savefig</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">CAMS-PM2_5-fc-20211224-25.png</span><span class=\"sh\">\"</span><span class=\"p\">)</span>\n</code></pre></div></div>\n<p><a href=\"../../images/CAMS-PM2_5-fc-20211224-25.png\" rel=\"noopener noreferrer\"><img src=\"../../images/CAMS-PM2_5-fc-20211224-25.png\" alt=\"PM2.5 over Italy with threshold at 25. \" width=\"1080\" height=\"720\" loading=\"lazy\" /></a></p>\n\n<p>We can then make the same multi-plot as earlier (over Italy) but with a <code class=\"language-plaintext highlighter-rouge\">where</code> statement to mask values lower than 25 μm.m-3:</p>\n\n<h3 id=\"multi-plot-over-italy-using-a-mask\">Multi-plot over Italy using a mask</h3>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">fig</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"p\">.</span><span class=\"nf\">figure</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># We're using cartopy to project our data.\n# (see documentation on cartopy)\n</span><span class=\"n\">proj_plot</span> <span class=\"o\">=</span> <span class=\"n\">ccrs</span><span class=\"p\">.</span><span class=\"nc\">Mercator</span><span class=\"p\">()</span>\n\n<span class=\"c1\"># We need to project our data to the new projection and for this we use `transform`.\n# we set the original data projection in transform (here PlateCarree)\n</span><span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">dset</span><span class=\"p\">.</span><span class=\"nf\">where</span><span class=\"p\">(</span><span class=\"n\">dset</span><span class=\"p\">[</span><span class=\"sh\">'</span><span class=\"s\">pm2p5_conc</span><span class=\"sh\">'</span><span class=\"p\">]</span> <span class=\"o\">&gt;</span> <span class=\"mi\">25</span><span class=\"p\">).</span><span class=\"nf\">sel</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">=</span><span class=\"nf\">slice</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"p\">.</span><span class=\"nf\">timedelta64</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"sh\">'</span><span class=\"s\">h</span><span class=\"sh\">'</span><span class=\"p\">),</span><span class=\"n\">np</span><span class=\"p\">.</span><span class=\"nf\">timedelta64</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"sh\">'</span><span class=\"s\">D</span><span class=\"sh\">'</span><span class=\"p\">))).</span><span class=\"nf\">sel</span><span class=\"p\">(</span><span class=\"n\">latitude</span><span class=\"o\">=</span><span class=\"nf\">slice</span><span class=\"p\">(</span><span class=\"mf\">43.</span><span class=\"p\">,</span> <span class=\"mf\">40.</span><span class=\"p\">),</span>\n                                                                           <span class=\"n\">longitude</span><span class=\"o\">=</span><span class=\"nf\">slice</span><span class=\"p\">(</span><span class=\"mf\">11.</span><span class=\"p\">,</span><span class=\"mf\">15.</span><span class=\"p\">))[</span><span class=\"sh\">'</span><span class=\"s\">pm2p5_conc</span><span class=\"sh\">'</span><span class=\"p\">].</span><span class=\"nf\">plot</span><span class=\"p\">(</span><span class=\"n\">transform</span><span class=\"o\">=</span><span class=\"n\">ccrs</span><span class=\"p\">.</span><span class=\"nc\">PlateCarree</span><span class=\"p\">(),</span>\n                                                                                      <span class=\"n\">vmin</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">vmax</span> <span class=\"o\">=</span> <span class=\"mi\">35</span><span class=\"p\">,</span>\n                                                                                     <span class=\"n\">subplot_kws</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"sh\">\"</span><span class=\"s\">projection</span><span class=\"sh\">\"</span><span class=\"p\">:</span> <span class=\"n\">proj_plot</span><span class=\"p\">},</span>\n                                                                                     <span class=\"n\">col</span><span class=\"o\">=</span><span class=\"sh\">'</span><span class=\"s\">time</span><span class=\"sh\">'</span><span class=\"p\">,</span> <span class=\"n\">col_wrap</span><span class=\"o\">=</span><span class=\"mi\">4</span><span class=\"p\">,</span>\n                                                                                     <span class=\"n\">robust</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span>\n                                                                                     <span class=\"n\">aspect</span><span class=\"o\">=</span><span class=\"n\">dset</span><span class=\"p\">.</span><span class=\"n\">dims</span><span class=\"p\">[</span><span class=\"sh\">\"</span><span class=\"s\">longitude</span><span class=\"sh\">\"</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"n\">dset</span><span class=\"p\">.</span><span class=\"n\">dims</span><span class=\"p\">[</span><span class=\"sh\">\"</span><span class=\"s\">latitude</span><span class=\"sh\">\"</span><span class=\"p\">],</span>  <span class=\"c1\"># for a sensible figsize\n</span>                                                                                     <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"n\">cmc</span><span class=\"p\">.</span><span class=\"n\">roma_r</span><span class=\"p\">)</span>\n<span class=\"c1\"># We have to set the map's options on all four axes\n</span><span class=\"k\">for</span> <span class=\"n\">ax</span><span class=\"p\">,</span><span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nf\">zip</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">axes</span><span class=\"p\">.</span><span class=\"n\">flat</span><span class=\"p\">,</span>  <span class=\"p\">(</span><span class=\"n\">np</span><span class=\"p\">.</span><span class=\"nf\">datetime64</span><span class=\"p\">(</span><span class=\"sh\">'</span><span class=\"s\">2021-12-22</span><span class=\"sh\">'</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">dset</span><span class=\"p\">.</span><span class=\"n\">time</span><span class=\"p\">.</span><span class=\"nf\">sel</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">=</span><span class=\"nf\">slice</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"p\">.</span><span class=\"nf\">timedelta64</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">),</span><span class=\"n\">np</span><span class=\"p\">.</span><span class=\"nf\">timedelta64</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"sh\">'</span><span class=\"s\">D</span><span class=\"sh\">'</span><span class=\"p\">)))).</span><span class=\"n\">values</span><span class=\"p\">):</span>\n     <span class=\"n\">ax</span><span class=\"p\">.</span><span class=\"nf\">coastlines</span><span class=\"p\">(</span><span class=\"sh\">'</span><span class=\"s\">10m</span><span class=\"sh\">'</span><span class=\"p\">)</span>\n     <span class=\"n\">ax</span><span class=\"p\">.</span><span class=\"nf\">set_title</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">PM2.5 &gt; 25 μm.m-3</span><span class=\"sh\">\"</span> <span class=\"o\">+</span> <span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"nf\">to_datetime</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">).</span><span class=\"nf\">strftime</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">%d %b %H:%S UTC</span><span class=\"sh\">\"</span><span class=\"p\">),</span> <span class=\"n\">fontsize</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">)</span>\n<span class=\"c1\"># Save your figure\n</span><span class=\"n\">plt</span><span class=\"p\">.</span><span class=\"nf\">savefig</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">CAMS-PM2_5-fc-multi-Italy-25.png</span><span class=\"sh\">\"</span><span class=\"p\">)</span>\n</code></pre></div></div>\n\n<p><a href=\"../../images/CAMS-PM2_5-fc-multi-Italy-25.png\" rel=\"noopener noreferrer\"><img src=\"../../images/CAMS-PM2_5-fc-multi-Italy-25.png\" alt=\"Multi-plot of PM2.5 over Italy with threshold at 25. \" width=\"1584\" height=\"1296\" loading=\"lazy\" /></a></p>\n\n<h2 id=\"reduction-operations\">Reduction operations</h2>\n<p>We often want to compute the mean of all our datasets, or along a dimension (for instance time). If you do not pass any argument to the operation then it is done over all dimensions.</p>\n\n<h3 id=\"details-on-the-mean-method\">Details on the <strong>mean</strong> method</h3>\n<p>When we do not specify any parameters, we get a single value.</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"n\">dset</span><span class=\"p\">.</span><span class=\"nf\">sel</span><span class=\"p\">(</span><span class=\"n\">latitude</span><span class=\"o\">=</span><span class=\"nf\">slice</span><span class=\"p\">(</span><span class=\"mf\">43.</span><span class=\"p\">,</span> <span class=\"mf\">40.</span><span class=\"p\">),</span> <span class=\"n\">longitude</span><span class=\"o\">=</span><span class=\"nf\">slice</span><span class=\"p\">(</span><span class=\"mf\">11.</span><span class=\"p\">,</span><span class=\"mf\">15.</span><span class=\"p\">)).</span><span class=\"nf\">mean</span><span class=\"p\">())</span>\n</code></pre></div></div>\n\n<blockquote class=\"code-out\">\n  <code-out-title></code-out-title>\n  <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>&lt;xarray.Dataset&gt;\nDimensions:     <span class=\"o\">()</span>\n Data variables:\n    pm2p5_conc  float32 9.118\n</code></pre></div>  </div>\n</blockquote>\n\n<blockquote class=\"question\">\n  <question-title>Maximum PM2.5 over Italy</question-title>\n\n  <p>What is the maximum forecasted PM2.5 value over the Rome-Naples region?</p>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <p>We  select the same sub-area: 11. East to 15.0 East and 40. N to 43. N and compute the maximum with <code class=\"language-plaintext highlighter-rouge\">max</code>. The maximum PM2.5 value is <strong>59.13694382</strong> μm.m-3 (that is rounded to <strong>59.14</strong>).</p>\n\n    <blockquote class=\"code-in\">\n      <code-in-title>Python</code-in-title>\n      <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">dset</span><span class=\"p\">.</span><span class=\"nf\">sel</span><span class=\"p\">(</span><span class=\"n\">latitude</span><span class=\"o\">=</span><span class=\"nf\">slice</span><span class=\"p\">(</span><span class=\"mf\">43.</span><span class=\"p\">,</span> <span class=\"mf\">40.</span><span class=\"p\">),</span> <span class=\"n\">longitude</span><span class=\"o\">=</span><span class=\"nf\">slice</span><span class=\"p\">(</span><span class=\"mf\">11.</span><span class=\"p\">,</span><span class=\"mf\">15.</span><span class=\"p\">)).</span><span class=\"nf\">max</span><span class=\"p\">()</span>\n</code></pre></div>      </div>\n    </blockquote>\n\n    <blockquote class=\"code-out\">\n      <code-out-title></code-out-title>\n      <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>xarray.Dataset\nDimensions:\nCoordinates: <span class=\"o\">(</span>0<span class=\"o\">)</span>\nData variables:\npm2p5_conc\n<span class=\"o\">()</span>\nfloat64\n59.14\narray<span class=\"o\">(</span>59.13694382<span class=\"o\">)</span>\nAttributes: <span class=\"o\">(</span>0<span class=\"o\">)</span>\n</code></pre></div>      </div>\n    </blockquote>\n  </blockquote>\n</blockquote>\n\n<blockquote class=\"question\">\n  <question-title>Find when the maximum PM2.5 is forecasted</question-title>\n\n  <p>When is the maximum PM2.5 value forecasted?</p>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <p>We will select a sub-area: 11. East to 15.0 East and 40. N to 43. N and average over the entire selected area and search where the maximum PM2.5 value of 59.13694382 μm.m-3 is found. The maximum PM2.5 value occurs on 2021-12-22 at 20:00 UTC.</p>\n\n    <blockquote class=\"code-in\">\n      <code-in-title>Python</code-in-title>\n      <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">dset_tmean</span> <span class=\"o\">=</span> <span class=\"n\">dset</span><span class=\"p\">.</span><span class=\"nf\">sel</span><span class=\"p\">(</span><span class=\"n\">latitude</span><span class=\"o\">=</span><span class=\"nf\">slice</span><span class=\"p\">(</span><span class=\"mf\">43.</span><span class=\"p\">,</span> <span class=\"mf\">40.</span><span class=\"p\">),</span> <span class=\"n\">longitude</span><span class=\"o\">=</span><span class=\"nf\">slice</span><span class=\"p\">(</span><span class=\"mf\">11.</span><span class=\"p\">,</span><span class=\"mf\">15.</span><span class=\"p\">)).</span><span class=\"nf\">max</span><span class=\"p\">(</span><span class=\"n\">dim</span><span class=\"o\">=</span><span class=\"p\">(</span><span class=\"sh\">'</span><span class=\"s\">latitude</span><span class=\"sh\">'</span><span class=\"p\">,</span> <span class=\"sh\">'</span><span class=\"s\">longitude</span><span class=\"sh\">'</span><span class=\"p\">))</span>\n<span class=\"n\">dset_tmean_max</span> <span class=\"o\">=</span> <span class=\"n\">dset_tmean</span><span class=\"p\">.</span><span class=\"nf\">where</span><span class=\"p\">(</span><span class=\"n\">dset_tmean</span><span class=\"p\">[</span><span class=\"sh\">'</span><span class=\"s\">pm2p5_conc</span><span class=\"sh\">'</span><span class=\"p\">]</span> <span class=\"o\">==</span> <span class=\"mf\">59.13694382</span><span class=\"p\">,</span> <span class=\"n\">drop</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">)</span>\n<span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"n\">dset_tmean_max</span><span class=\"p\">)</span>\n</code></pre></div>      </div>\n    </blockquote>\n\n    <blockquote class=\"code-out\">\n      <code-out-title></code-out-title>\n      <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>&lt;xarray.Dataset&gt;\nDimensions:     <span class=\"o\">(</span><span class=\"nb\">time</span>: 1, level: 1<span class=\"o\">)</span>\nCoordinates:\n  <span class=\"k\">*</span> level       <span class=\"o\">(</span>level<span class=\"o\">)</span> float32 0.0\n  <span class=\"k\">*</span> <span class=\"nb\">time</span>        <span class=\"o\">(</span><span class=\"nb\">time</span><span class=\"o\">)</span> timedelta64[ns] 20:00:00\nData variables:\n    pm2p5_conc  <span class=\"o\">(</span><span class=\"nb\">time</span>, level<span class=\"o\">)</span> float32 59.14\n</code></pre></div>      </div>\n    </blockquote>\n  </blockquote>\n</blockquote>\n\n<blockquote class=\"comment\">\n  <comment-title>Pixel size when averaging</comment-title>\n  <p>We average over a relatively small area so we do not make a weighted average. Use weighted averages when averaging over the entire globe or over a large area where the pixel sizes may vary (depending on the latitude).</p>\n\n</blockquote>\n\n<h2 id=\"details-on-the-resample-method\">Details on the <strong>resample</strong> method</h2>\n\n<h3 id=\"1-day-resampling\">1 day Resampling</h3>\n\n<p>The resampling frequency is lower than our original data, so we would need to apply a global operation on the data we group together such as mean, min, max:</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"n\">dset</span><span class=\"p\">.</span><span class=\"nf\">resample</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">=</span><span class=\"sh\">'</span><span class=\"s\">1D</span><span class=\"sh\">'</span><span class=\"p\">).</span><span class=\"nf\">mean</span><span class=\"p\">())</span>\n</code></pre></div></div>\n\n<blockquote class=\"code-out\">\n  <code-out-title></code-out-title>\n  <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>&lt;xarray.Dataset&gt;\nDimensions:     <span class=\"o\">(</span><span class=\"nb\">time</span>: 5, longitude: 700, latitude: 400, level: 1<span class=\"o\">)</span>\nCoordinates:\n  <span class=\"k\">*</span> <span class=\"nb\">time</span>        <span class=\"o\">(</span><span class=\"nb\">time</span><span class=\"o\">)</span> timedelta64[ns] 0 days 1 days 2 days 3 days 4 days\n  <span class=\"k\">*</span> longitude   <span class=\"o\">(</span>longitude<span class=\"o\">)</span> float32 <span class=\"nt\">-24</span>.95 <span class=\"nt\">-24</span>.85 <span class=\"nt\">-24</span>.75 ... 44.75 44.85 44.95\n  <span class=\"k\">*</span> latitude    <span class=\"o\">(</span>latitude<span class=\"o\">)</span> float32 69.95 69.85 69.75 69.65 ... 30.25 30.15 30.05\n  <span class=\"k\">*</span> level       <span class=\"o\">(</span>level<span class=\"o\">)</span> float32 0.0\nData variables:\n    pm2p5_conc  <span class=\"o\">(</span><span class=\"nb\">time</span>, level, latitude, longitude<span class=\"o\">)</span> float32 0.4298 ... 7.501\n</code></pre></div>  </div>\n</blockquote>\n\n<h3 id=\"30-minute-resampling\">30 minute resampling</h3>\n\n<p>When the resampling frequency is higher than the original data, we need to indicate how to fill the gaps, for instance, interpolate and indicate which interpolation method to apply or select nearest values, etc.:</p>\n\n<div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nf\">print</span><span class=\"p\">(</span><span class=\"n\">dset</span><span class=\"p\">.</span><span class=\"nf\">resample</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">=</span><span class=\"sh\">'</span><span class=\"s\">30min</span><span class=\"sh\">'</span><span class=\"p\">).</span><span class=\"nf\">interpolate</span><span class=\"p\">(</span><span class=\"sh\">'</span><span class=\"s\">linear</span><span class=\"sh\">'</span><span class=\"p\">))</span>\n</code></pre></div></div>\n\n<blockquote class=\"comment\">\n  <comment-title>Be careful when sub-sampling!</comment-title>\n  <p>Increasing the frequency of your data e.g. artificially creating data may not be scientifically relevant. Please use it carefully! Interpolating is not always scientifically relevant and sometimes you may prefer to choose a different method, like taking the nearest value for instance:</p>\n\n  <blockquote class=\"code-in\">\n    <code-in-title>Python</code-in-title>\n    <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code> <span class=\"n\">dset</span><span class=\"p\">.</span><span class=\"nf\">resample</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">=</span><span class=\"sh\">'</span><span class=\"s\">30min</span><span class=\"sh\">'</span><span class=\"p\">).</span><span class=\"nf\">nearest</span><span class=\"p\">()</span>\n</code></pre></div>    </div>\n  </blockquote>\n\n</blockquote>\n\n<blockquote class=\"question\">\n  <question-title>PM2.5 over Italy in the next 4 days</question-title>\n\n  <p>Using a Multi-plot between Rome and Naples, and making averages per day, can you tell us if forecasted PM2.5 will increase or decrease?</p>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <p>PM2.5 over Italy is overall decreasing over the next 4 forecasted days.</p>\n\n    <blockquote class=\"code-in\">\n      <code-in-title>Python</code-in-title>\n      <div class=\"language-python highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"n\">fig</span> <span class=\"o\">=</span> <span class=\"n\">plt</span><span class=\"p\">.</span><span class=\"nf\">figure</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span> <span class=\"n\">figsize</span><span class=\"o\">=</span><span class=\"p\">[</span><span class=\"mi\">10</span><span class=\"p\">,</span><span class=\"mi\">10</span><span class=\"p\">])</span>\n\n<span class=\"c1\"># We're using cartopy to project our data.\n# (see documentation on cartopy)\n</span><span class=\"n\">proj_plot</span> <span class=\"o\">=</span> <span class=\"n\">ccrs</span><span class=\"p\">.</span><span class=\"nc\">Mercator</span><span class=\"p\">()</span>\n\n<span class=\"n\">sub_dset</span> <span class=\"o\">=</span> <span class=\"n\">dset</span><span class=\"p\">.</span><span class=\"nf\">sel</span><span class=\"p\">(</span><span class=\"n\">latitude</span><span class=\"o\">=</span><span class=\"nf\">slice</span><span class=\"p\">(</span><span class=\"mf\">43.</span><span class=\"p\">,</span> <span class=\"mf\">40.</span><span class=\"p\">),</span> <span class=\"n\">longitude</span><span class=\"o\">=</span><span class=\"nf\">slice</span><span class=\"p\">(</span><span class=\"mf\">11.</span><span class=\"p\">,</span><span class=\"mf\">15.</span><span class=\"p\">)).</span><span class=\"nf\">resample</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">=</span><span class=\"sh\">'</span><span class=\"s\">1D</span><span class=\"sh\">'</span><span class=\"p\">).</span><span class=\"nf\">mean</span><span class=\"p\">()</span>\n<span class=\"c1\"># We need to project our data to the new projection and for this we use `transform`.\n# we set the original data projection in transform (here PlateCarree)\n</span><span class=\"n\">p</span> <span class=\"o\">=</span> <span class=\"n\">sub_dset</span><span class=\"p\">[</span><span class=\"sh\">'</span><span class=\"s\">pm2p5_conc</span><span class=\"sh\">'</span><span class=\"p\">].</span><span class=\"nf\">plot</span><span class=\"p\">(</span><span class=\"n\">transform</span><span class=\"o\">=</span><span class=\"n\">ccrs</span><span class=\"p\">.</span><span class=\"nc\">PlateCarree</span><span class=\"p\">(),</span>\n                                <span class=\"n\">vmin</span> <span class=\"o\">=</span> <span class=\"mi\">0</span><span class=\"p\">,</span> <span class=\"n\">vmax</span> <span class=\"o\">=</span> <span class=\"mi\">35</span><span class=\"p\">,</span>\n                                <span class=\"n\">subplot_kws</span><span class=\"o\">=</span><span class=\"p\">{</span><span class=\"sh\">\"</span><span class=\"s\">projection</span><span class=\"sh\">\"</span><span class=\"p\">:</span> <span class=\"n\">proj_plot</span><span class=\"p\">},</span>\n                                <span class=\"n\">col</span><span class=\"o\">=</span><span class=\"sh\">'</span><span class=\"s\">time</span><span class=\"sh\">'</span><span class=\"p\">,</span> <span class=\"n\">col_wrap</span><span class=\"o\">=</span><span class=\"mi\">5</span><span class=\"p\">,</span>\n                                <span class=\"n\">robust</span><span class=\"o\">=</span><span class=\"bp\">True</span><span class=\"p\">,</span>\n                                <span class=\"n\">aspect</span><span class=\"o\">=</span><span class=\"n\">dset</span><span class=\"p\">.</span><span class=\"n\">dims</span><span class=\"p\">[</span><span class=\"sh\">\"</span><span class=\"s\">longitude</span><span class=\"sh\">\"</span><span class=\"p\">]</span> <span class=\"o\">/</span> <span class=\"n\">dset</span><span class=\"p\">.</span><span class=\"n\">dims</span><span class=\"p\">[</span><span class=\"sh\">\"</span><span class=\"s\">latitude</span><span class=\"sh\">\"</span><span class=\"p\">],</span>  <span class=\"c1\"># for a sensible figsize\n</span>                                <span class=\"n\">cmap</span><span class=\"o\">=</span><span class=\"n\">cmc</span><span class=\"p\">.</span><span class=\"n\">roma_r</span><span class=\"p\">)</span>\n<span class=\"c1\"># We have to set the map's options on all axes\n</span><span class=\"k\">for</span> <span class=\"n\">ax</span><span class=\"p\">,</span><span class=\"n\">i</span> <span class=\"ow\">in</span> <span class=\"nf\">zip</span><span class=\"p\">(</span><span class=\"n\">p</span><span class=\"p\">.</span><span class=\"n\">axes</span><span class=\"p\">.</span><span class=\"n\">flat</span><span class=\"p\">,</span>  <span class=\"p\">(</span><span class=\"n\">np</span><span class=\"p\">.</span><span class=\"nf\">datetime64</span><span class=\"p\">(</span><span class=\"sh\">'</span><span class=\"s\">2021-12-22</span><span class=\"sh\">'</span><span class=\"p\">)</span> <span class=\"o\">+</span> <span class=\"n\">dset</span><span class=\"p\">.</span><span class=\"n\">time</span><span class=\"p\">.</span><span class=\"nf\">sel</span><span class=\"p\">(</span><span class=\"n\">time</span><span class=\"o\">=</span><span class=\"nf\">slice</span><span class=\"p\">(</span><span class=\"n\">np</span><span class=\"p\">.</span><span class=\"nf\">timedelta64</span><span class=\"p\">(</span><span class=\"mi\">0</span><span class=\"p\">),</span><span class=\"n\">np</span><span class=\"p\">.</span><span class=\"nf\">timedelta64</span><span class=\"p\">(</span><span class=\"mi\">1</span><span class=\"p\">,</span><span class=\"sh\">'</span><span class=\"s\">D</span><span class=\"sh\">'</span><span class=\"p\">)))).</span><span class=\"n\">values</span><span class=\"p\">):</span>\n    <span class=\"n\">ax</span><span class=\"p\">.</span><span class=\"nf\">coastlines</span><span class=\"p\">(</span><span class=\"sh\">'</span><span class=\"s\">10m</span><span class=\"sh\">'</span><span class=\"p\">)</span>\n    <span class=\"n\">ax</span><span class=\"p\">.</span><span class=\"nf\">set_title</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">CAMS PM2.5 </span><span class=\"sh\">\"</span> <span class=\"o\">+</span> <span class=\"n\">pd</span><span class=\"p\">.</span><span class=\"nf\">to_datetime</span><span class=\"p\">(</span><span class=\"n\">i</span><span class=\"p\">).</span><span class=\"nf\">strftime</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">%d %b %H:%S UTC</span><span class=\"sh\">\"</span><span class=\"p\">),</span> <span class=\"n\">fontsize</span><span class=\"o\">=</span><span class=\"mi\">12</span><span class=\"p\">)</span>\n<span class=\"c1\"># Save your figure\n</span><span class=\"n\">plt</span><span class=\"p\">.</span><span class=\"nf\">savefig</span><span class=\"p\">(</span><span class=\"sh\">\"</span><span class=\"s\">CAMS-PM2_5-fc-multi-Italy-mean-per-day.png</span><span class=\"sh\">\"</span><span class=\"p\">)</span>\n</code></pre></div>      </div>\n    </blockquote>\n\n    <p><a href=\"../../images/CAMS-PM2_5-fc-multi-Italy-mean-per-day.png\" rel=\"noopener noreferrer\"><img src=\"../../images/CAMS-PM2_5-fc-multi-Italy-mean-per-day.png\" alt=\"Daily mean for PM2.5 over Italy. \" width=\"1962\" height=\"216\" loading=\"lazy\" /></a></p>\n  </blockquote>\n</blockquote>\n\n<blockquote class=\"comment\">\n  <comment-title>`Grouby` versus `resample`</comment-title>\n\n  <p>Use <code class=\"language-plaintext highlighter-rouge\">groupby</code> instead of <code class=\"language-plaintext highlighter-rouge\">resample</code> when you wish to group over a dimension that is not <code class=\"language-plaintext highlighter-rouge\">time</code>. <code class=\"language-plaintext highlighter-rouge\">groupby</code> is very similar to resample but can be applied to any coordinates and not only to time.</p>\n\n</blockquote>\n\n<h1 id=\"conclusion\">Conclusion</h1>\n\n<p>Well done! <a href=\"https://pangeo.io/\">Pangeo</a> is a fantastic community with many more resources for learning and/or contributing! Please, if you use any Python packages from the Pangeo ecosystem, do not forget to cite Pangeo <span class=\"citation\"><a href=\"#Abernathey2017\">Abernathey <i>et al.</i> 2017</a></span>, <span class=\"citation\"><a href=\"#Abernathey2021\">Abernathey <i>et al.</i> 2021</a></span>, <span class=\"citation\"><a href=\"#Gentemann2021\">Gentemann <i>et al.</i> 2021</a></span> and <span class=\"citation\"><a href=\"#Sambasivan2021\">Sambasivan <i>et al.</i> 2021</a></span>!</p>\n\n<p>Have a look at the <a href=\"https://gallery.pangeo.io/repos/pangeo-data/pangeo-tutorial-gallery/\">Pangeo Tutorial Gallery</a> to pick up your next Pangeo training material!</p>\n"],"ref_slides":["## About this presentation\n\n.left[ This presentation is a summary of: ]\n\n- [Unlocking the Potential of Cloud Native Science with Pangeo](https://speakerdeck.com/rabernat/unlocking-the-potential-of-cloud-native-science-with-pangeo) by Ryan Abernathey (Co-founder of Pangeo);\n- [Introduction to DASK](https://docs.google.com/presentation/d/e/2PACX-1vSTH2kAR0DCR0nw8pFBe5kuYbOk3inZ9cQfZbzOIRjyzQoVaOoMfI2JONGBz-qsvG_P6g050ddHxSXT/pub?start=false&loop=false&delayms=60000&slide=id.g646705d04f_0_0) by the Dask Community;\n- [STAC for Earth Observation](https://doi.org/10.5281/zenodo.5896445) by Basile Goussard ([netCarbon](https://www.netcarbon.fr/)).\n\n???\n\n- This presentation is a summary of three presentations.\n- The first one is about nlocking the Potential of Cloud Native Science with Pangeo by Ryan Abernathey, Co-founder of Pangeo.\n- The second presentation is an introduction to DASK by the Dask community.\n- finally the third one is on STAC e.g. SpatioTemporal Asset Catalogs, for Earth Observation by Basile Goussard from netCarbon.\n\n---\n\n## Pangeo in a nutshell\n\n**A Community platform for Big Data geoscience**\n\n- Open Community\n- Open Source Software\n- Open Source Infrastructure\n\n**Funders**\n\n<div class=\"centre\"><img src=\"https://upload.wikimedia.org/wikipedia/commons/1/12/NSF.svg\" alt=\"NSF Logo\" width=\"120\">\n  <img src=\"https://static.wixstatic.com/media/a8b87d_92e16cb7795f467b8c105af31fded270~mv2.png\" alt=\"EarthCube Logo\" width=\"300\">\n  <img src=\"https://upload.wikimedia.org/wikipedia/commons/e/e5/NASA_logo.svg\" alt=\"NASA Logo\" width=\"120\">\n  <img src=\"https://upload.wikimedia.org/wikipedia/commons/thumb/a/a2/Moore_Foundation_Logo.jpg/1920px-Moore_Foundation_Logo.jpg\" alt=\"MOORE Logo By Gordon and Betty Moore Foundation - Own work, Public Domain\" width=\"250\">\n</div>\n\n\n???\n\n- Pangeo is first and foremost a community promoting open, reproducible, and scalable science.\n- This community provides documentation, develops and maintains Open Source software, and deploys computing infrastructure to make scientific research and programming easier.\n\n- Pangeo is funded through many different projects in USA, Europe and Australia but the main funders are NSF, EarthCube, NASA and the Gordon and Betty Moore foundation.\n\n\n---\n\n## Motivations\n\n.left[ There are several building crises facing the geoscience community: ]\n\n.left[- *Big Data*: datasets are growing too rapidly and legacy software tools for scientific analysis can’t handle them. This is a major obstacle to scientific progress.]\n.left[- *Technology Gap*: a growing gap between the technological sophistication of industry solutions (high) and scientific software (low).]\n.left[- *Reproducibility*: a fragmentation of software tools and environments renders most geoscience research effectively unreproducible and prone to failure.]\n\n???\n\n- The Pangeo Project has been motivated by several building crises faced by the geoscience community: Big data, Technology gap and Reproducibility crisis.\n- Indeed, datasets are are growing too rapidly and legacy software tools for scientific analysis can’t handle them.\n- This is a major obstacle to scientific progress.\n- Another obstacle concerns the growing gap between the technological sophistication of industry solutions (high) and scientific software (low).\n- Finally, the fragmentation of software tools and environments renders most geoscience research effectively unreproducible and prone to failure.\n\n---\n\n## Goals\n\nPangeo aims to address these challenges through a unified, collaborative effort.\n\n*The mission of Pangeo is to cultivate an ecosystem in which the next generation of open-source analysis tools for ocean, atmosphere\nand climate science can be developed, distributed, and sustained. These tools must be scalable in order to meet the current and future\nchallenges of big data, and these solutions should leverage the existing expertise outside of the geoscience community.*\n\n???\n- Pangeo aims to address these challenges through a unified, collaborative effort.\n- The mission of Pangeo is to cultivate an ecosystem in which the next generation of open-source analysis tools for ocean, atmosphere and climate science can be developed, distributed, and sustained.\n- These tools must be scalable in order to meet the current and future challenges of big data.\n- And these solutions should leverage the existing expertise outside of the geoscience community.\n\n---\n\n## The Pangeo Software Ecosystem\n\n![Pangeo approach](../../images/pangeo-ecosystem-2020.png )\n\n*Source*: [Pangeo Tutorial - Ocean Sciences 2020](https://speakerdeck.com/rabernat/pangeo-tutorial-ocean-sciences-2020?slide=28) by Ryan Abernathey, February 17, 2020.\n\n???\n- The Pangeo software ecosystem involves open source tools such as X-array, iris, dask, jupyter, and many other packages.\n- There is no single software package called Pangeo.\n- Rather, the Pangeo project serves as a coordination point between scientists, software, and computing infrastructure.\n- On this figure, the python packages are \"layered\" based on their dependencies.\n- At the \"bottom\" is the Python programming language itself.\n- On the second layer, we can find NumPy or Jupyter Notebooks that are very common Python packages and that you may know already.\n- X-array makes an intensive use of Numpy for its underlying data structures. \n- Iris has what we call a \"high-level\" user interface with many functions for analysing and visualising Earth Science data.\n\n---\n\n## Xarray\n\n*Xarray is an open source project and Python package that makes working with labeled multi-dimensional arrays simple, efficient, and fun!*\n\n<img src=\"../../images/dataset-diagram-logo.png\" alt=\"Xarray logo\" width=\"400\"/>\n\n\n???\n\n- X-array is an open source project and Python package that makes working with labeled multi-dimensional arrays simple, efficient, and fun!\n\n---\n\n## What is Xarray?\n\n\n.left[Xarray expands on NumPy arrays and pandas. Xarray has two core data structures:]\n\n.left[- `DataArray` is our implementation of a labeled, N-dimensional array. It is a generalization of a `pandas.Series`.]\n.left[- `Dataset` is a multi-dimensional, in-memory array database. It is a dict-like container of `DataArray` objects aligned along any number of shared dimensions, and serves a similar purpose in xarray to the `pandas.DataFrame`.]\n\n.left[*Source*: [Xarray documentation](https://xarray.pydata.org/en/stable/getting-started-guide/why-xarray.html)]\n\n\n???\n- X-array expands on NumPy arrays and pandas.\n- X-array has two core data structures: DataArray is the X-array implementation of a labeled, N-dimensional array.\n- It is an N-D generalization of a pandas Series.\n- Dataset is a multi-dimensional, in-memory array database.\n- It is a dict-like container of DataArray objects aligned along any number of shared dimensions, and serves a similar purpose in X-array to the pandas DataFrame.\n\n---\n\n## Example\n\n\n<img src=\"../../images/xarray-concept.png\" alt=\"Xarray concept\" width=\"500\"/>\n\n\n<img src=\"../../images/xarray-dataset.png\" alt=\"Xarray dataset\" width=\"500\"/>\n\n\n???\n\n- On this figure, we have represented an X-array Dataset.\n- Each X-array Dataset contains dimensions: here we have 3 dimensions e.g. latitude, longitude and time.\n- These are also the coordinates of the datasets and then we have variables.\n- In our example, each of the variables have 3 dimensions.\n- The idea behind X-array is to provide functions to facilitate the handling of complex and multi-dimensional datasets we have in Earth Science.\n- However, X-array is a very generic Python package and it is not only used for Earth Sciences.\n- Any data that can be represented on a coordinate reference system is very much suitable for X-array.\n- X-array is widely used and probably the most common package from the Pangeo software ecosystem.\n\n---\n\n## iris\n\n*A powerful, format-agnostic, community-driven Python package for analysing and visualising Earth science data.*\n\n.pull-left[\n- Data model based on the [CF conventions](http://cfconventions.org/);\n- Unit conversion;\n- visualization interface based on [matplotlib](https://matplotlib.org/) and [cartopy](https://scitools.org.uk/cartopy/docs/latest/);\n- efficient from single-machine through to multi-core clusters and High Performance Computers.\n]\n\n.pull-right[\n\n.image-40[\n![IRIS logo](https://scitools-iris.readthedocs.io/en/latest/_static/iris-logo-title.png)\n]\n\n]\n\n.left[*Source:* [Scitools Iris documentation](https://scitools-iris.readthedocs.io/en/latest/#)]\n\n???\n\n- Iris is a powerful, format-agnostic, community-driven Python package for analysing and visualising Earth science data.\n- Its data model is based on the netCDF Climate and Forecast Metadata Conventions.\n- Iris contains a lot of very useful functionalities such as unit conversion.\n- It offers a powerful visualization interface based on matplot lib and cartopy.\n- Finally Iris is efficient everywhere, from a single machine through to multi-core clusters and High Performance Computers.\n\n---\n\n## Dask\n\n\n.pull-left[\n\n*Enabling performance at scale for the tools you love*\n\n- **Powerful**: Leading platform today for analytics\n- **Scalable**: Natively scales to clusters and cloud\n- **Flexible**: Bridges prototyping to production\n\n**Dask accelerates the existing Python ecosystem (Numpy, Pandas, Scikit-learn)**\n]\n\n.pull-right[\n\n.image-40[\n![DASK logo](https://docs.dask.org/en/stable/_images/dask_stacked.svg\n)\n]\n\n]\n\n.left[*Source*: [Dask documentation](https://docs.dask.org/en/stable/)]\n\n???\n- Dask is a flexible library for parallel computing in Python.\n- It is widely used for getting the necessary performance when handling large and complex Earth Science datasets.\n- Dask is powerful, scalable and flexible. It is the leading platform today for analytics.\n- It scales natively to clusters, cloud and bridges prototyping up to production.\n- The strength of Dask is that is accelerates the existing Python ecosystem e.g. Numpy, Pandas and Scikit-learn with few effort from end-users.\n\n---\n\n## How does Dask accelerate Numpy?\n\n.image-40[\n![Dask and Numpy](https://examples.dask.org/_images/dask-array-black-text.svg)\n]\n\n.pull-left[\n```python\nimport numpy as np\n\nx = np.ones((1000, 1000))\nx + x.T - x.mean(axis=0)\n```\n]\n\n\n.pull-right[\n\n```python\nimport dask.array as da\n\nx = da.ones((1000, 1000))\nx + x.T - x.mean(axis=0)\n```\n]\n\n???\n\n- How does dask accelerate Numpy?\n- Well, it is simple as you can see on this example. Instead of importing numpy, you need to import dask array.\n- Then the rest of your code is unchanged.\n- Dask chunks your big datasets into \"Numpy\" arrays and this is how we can easily parallelize and scale.\n\n---\n\n## How does Dask accelerate Pandas?\n\n.image-25[\n![Dask and Pandas](https://examples.dask.org/_images/dask-dataframe.svg)\n]\n\n.pull-left[\n\n```python\nimport pandas as pd\n\ndf = pd.read_csv(\"file.csv\")\ndf.groupby(\"x\").y.mean()\n```\n]\n\n\n.pull-right[\n\n```python\nimport dask.dataframe as dd\n\ndf = dd.read_csv(\"s3://*.csv\")\ndf.groupby(\"x\").y.mean()\n```\n]\n\n???\n\n- To accelerate Pandas, dask follows the same approach than with X-array.\n- Your Pandas dataframe is \"divided\" in chunks.\n- Instead of importing pandas, you import dask.dataframe.\n- And again, the rest of your code remains unchanged.\n\n---\n\n## How does Dask accelerate Scikit-Learn?\n\n.image-40[\n![Dask and Scikit-Learn](https://scikit-learn.org/stable/_images/sphx_glr_plot_classifier_comparison_001.png)\n]\n\n.pull-left[\n\n```python\nfrom scikit_learn.linear_model import LogisticRegression\n\nlr = LogisticRegression()\nlr.fit(data, labels)\n```\n]\n\n.pull-right[\n\n```python\nfrom dask_ml.linear_model import LogisticRegression\n\nlr = LogisticRegression()\nlr.fit(data, labels)\n```\n]\n\n???\n- As you can guess, it is not different for Scikit-Learn.\n- Dask accelerate Scikit-Learn in a similar way.\n- To scale your code, you can use dask_ml rather than scikit_learn.\n\n---\n\n## jupyter\n\n\n.pull-left[\n\n*Free software, open standards, and web services for interactive computing across all programming languages*\n\n- **Jupyter notebook**: a  simple, streamlined web application for creating and sharing computational documents;\n- **JupyterLab**: Next generation of Jupyter notebook interface that is flexible and easier to customize and extend;\n- **JupyterHub**: A multi-user version of the notebook\n]\n\n.pull-right[\n\n.image-40[\n![Jupyter logo](https://jupyter.org/assets/homepage/main-logo.svg)\n]\n]\n\n.left[*Source*: [Jupyter documentation](https://jupyter.org/)]\n\n???\n\n- You may have heard about the Jupyter ecosystem and wonder why it is presented here as part of the Pangeo ecosystem.\n\n- Jupyter plays an important role for the Pangeo community.\n\n- Jupyter is free, follows open standards, and has web services for interactive computing across all programming languages.\n- The Jupyter notebook is probably still the most popular interface. It is a  simple, streamlined web application for creating and sharing computational documents.\n- JupyterLab is the next generation of Jupyter notebook interface that is flexible and easier to customize and extend.\n- Finally JupyterHub is the multi-user version of the notebook (for both Jupyter Notebooks and JupyterLab).\n\n---\n\n## Jupyter and Galaxy\n\n- Galaxy Interactive Tools\n- Several JupyterLab computing environments available such as Galaxy Pangeo, Galaxy Climate Notebooks\n- All are Galaxy Tools that includes metadata and can be added as a step in your Galaxy Workflows\n\n???\n- Pangeo JupyterLab is available in Galaxy as a Galaxy interactive tool.\n- It corresponds to the Pangeo notebook.\n- Many packages from the Pangeo software stack are also available in the Galaxy Climate Notebook which is another Galaxy Interactive Tool.\n- The main difference is that the latter is used for Earth System Modelling so it contains packages for running popular Earth System Models.\n- There is a growing number of Galaxy Tools that make use of packages from the Pangeo software stack and that can be easily integrated in Galaxy workflows.\n- Another advantage is that no Python programming skills are required for these Galaxy Tools which is of course not the case for using Pangeo Notebooks.\n- All Pangeo Tools in Galaxy (interactive notebook or asynchronous tools) include metadata and can be added as a step in your Galaxy Workflows.\n\n---\n\n## Analysis Ready, Cloud Optimized Data (ARCO)\n\n- What is \"Analysis Ready\"?\n  - Think in \"Datasets\" not \"data files\"\n  - No need for tedious homogenizing / cleaning setup_guides\n  - Curated and cataloged\n\n- What is \"Cloud Optimized\"?\n  - Compatible with object storage e.g. access via HTTP\n  - Supports lazy access and intelligent subsetting\n  - Integrates with high-level analysis libraries and distributed frameworks\n\n???\n\n- When analyzing data at scale, the data format used is key. For years, the main data format was netCDF e.g. Network Common Data Form but with the use of cloud computing and interest in Open Science, different formats are often more suitable.\n- Formats for analyzing data from the cloud are refered to as \"Analysis Ready, Cloud Optimized\" data formats or in short ARCO.\n- What do we mean by analysis ready?\n- When you analyse data, you are not interested in the data files themselves but in the datasets you need to use.\n- We think in terms of \"datasets\" rather than \"data files\".\n- This abstraction makes it easier to analyse your data because there is no need for tedious homogenizing, organizing or cleaning your files.\n- All your datasets are curated and cataloged.\n- End-users access datasets through well curated catalogs. The location of the data files and organization may change, it is transparent to end-users.\n- What is cloud optimized?\n- It is compatible with Object storage e.g. can be accessed via HTTP protocol.\n- It supports lazy access and intelligent subsetting e.g. there is no need to load all your datasets in memory.\n- Only what is needed and when it is needed will be accessed.\n- It integrates with high-level analysis libraries and distributed frameworks.\n\n---\n\n## Example of ARCO Data\n\n![Arco data](../../images/arco_data.png)\n\n\n???\n- The example we show here is not very different from the X-array we presented earlier.\n- The difference is that instead of having one big dataset, it is chunked appropriately for analysis and has rich metadata.\n\n---\n\n## Pangeo Forge\n\n<img src=\"https://pangeo-forge.readthedocs.io/en/latest/_static/pangeo-forge-logo-blue.png\" alt=\"Pangeo Forge Logo\" width=\"400\">\n\n[https://pangeo-forge.org](https://pangeo-forge.org)\n\nPangeo Forge is an open source platform for data **Extraction**, **Transformation**, and **Loading** (ETL).\nThe goal of *Pangeo Forge* is to make it easy to extract data from traditional repositories and deposit this data in cloud\nobject storage in an analysis-ready, cloud optimized (ARCO) format.\n\nPangeo Forge is inspired directly by Conda Forge, a community-led collection of recipes for building conda packages.\n\n???\n- Pangeo Forge is an open source platform for data Extraction, Transformation, and Loading e.g. ETL.\n- The goal of Pangeo Forge is to make it easy to extract data from traditional repositories and deposit this data in cloud object storage in analysis-ready, cloud optimized (ARCO) format.\n\n- Pangeo Forge is inspired directly by Conda Forge, a community-led collection of recipes for building conda packages.\n\n- It is under active development and the Pangeo community hopes it will play a role in democratizing the publication of datasets in ARCO format.\n\n---\n\n## How does Pangeo Forge work?\n\n.image-40[\n![pangeo forge explained](https://pangeo-forge.org/img/pangeo-forge-diagram.b8332f39.png)\n]\n\n.image-40[\n![pangeo forge recipe](../../images/pangeo-forge-detail.png)\n]\n\n???\n- This may look complicated on this figure but like for conda forge most of the process is automated.\n\n- The goal of Pangeo Forge is to \"convert\" existing datasets from their native format into ARCO format.\n- They can then be used by anyone from anywhere.\n\n- Let's imagine you have a bunch of data from NOAA in a tradictional data repository.\n- Instead of manually converting them to ARCO format, you create a recipe, actually you often reuse an existing one that will automatically transform the original datasets in ARCO format and publish it to an s3 compatible object storage such as Amazon.\n\n- The next step is then to tell the community where and how to access to your transformed dataset.\n- This is done by creating a catalog.\n\n---\n\n## STAC\n\n.center[STAC stands for **SpatioTemporal Asset Catalog**.]\n\n???\n\n- STAC stands for SpatioTemporal Asset Catalog.\n\n---\n\n## Why STAC?\n\n*Each provider has its <span style=\"color:green\">catalog and interface</span>*.\n\n.pull-left[\n\nJust searching the relevant data for your project could be a tough work...\n\n- **Lot of data providers …**\n- **Each interface is unique …**\n\n]\n\n.pull-right[ ![Why STAC](../../images/why_STAC.png) ]\n\n???\n\n- Why do we need spatio temporal asset catalogs?\n- Each provider has its own catalog and interface.\n- So just searching the relevant data for your project could be a tough work.\n- We have lots of data providers and each with a bespoke interface.\n\n---\n\n## Why STAC?\n\n*Each provider has its own <span style=\"color:green\">Application Programming Interface (API)</span>*.\n\n.pull-left[\n\nIf you are a programmer that’s exactly the same...\n\nYou should design a new data connector each time...\n\n- **Lot of data providers …**\n- **Each API is unique …**\n\n]\n\n.pull-right[ ![Why STAC](../../images/why_STAC-API.png) ]\n\n???\n- Each provider has its own Application Programming Interface (API).\n- Every time you want to access a new catalog, you need to change your program.\n- It is becoming quickly difficult for programmers who need to design a new data connector each time.\n\n---\n\n\n## Why STAC?\n\n*Let's work <span style=\"color:green\">together</span>*.\n\n.pull-left[\n\nThe main purpose of STAC is:\n\n- **Build a common language to catalog geospatial data**\n\n]\n\n.pull-right[ ![STAC](../../images/STAC-logo.png) ]\n\n???\n\n- Why not trying to work together?\n- This is the main purpose of STAC: build a common language to catalog geospatial data.\n---\n\n## Why STAC?\n\n*Let's work <span style=\"color:green\">together</span>*.\n\n.pull-left[\n\nIt’s extremely simple, STAC catalogs are composed of three layers :\n\n- **Catalogs**\n    - **Collections**\n        - **Items**\n\n]\n\n.pull-right[\n\n**It’s already used for Sentinel 2 in AWS**\n\n.image-90[\n![Sentinel 2](../../images/sentinel2_AWS.png)\n]\n\n**It’s already used for Landsat 8 in MICROSOFT**\n\n.image-90[\n![Landsat 8](../../images/landsat8_microsoft.png)\n]\n\n]\n\n???\n\n- STAC catalogs are extremely simple.\n- They are composed of three layers: catalogs, collections and items.\n- STAC is already very popular for Earth Observation satellite imagery.\n- For instance it is used for Sentinel 2 in AWS and Landsat 8 in Microsoft.\n\n---\n\n\n## How to use STAC\n\n*Depending on <span style=\"color:green\">your needs</span>*.\n\n.pull-left[\n**Storing your data**\n\n.image-40[\n   ![Storing data](../../images/storing_data.png)\n  ]\n]\n\n.pull-right[\n\n**Searching data**\n\n.image-40[\n   ![Searching data](../../images/searching_data.png)\n  ]\n\n]\n\n???\n\n- How to use STAC? Depdending on your needs, you will be using STAC to store your data or to search for existing data.\n\n---\n\n## Searching data\n\n*Let's search data over the main region (France) between the 1st January 2019 and the 4th June 2019*.\n\n.image-100[\n   ![Search data over main and specific dates](../../images/search_maine_data.png)\n  ]\n\n???\n\n- Here we present an example using the sat-search utility.\n- You can use intake-stac and achieve similar results.\n- In this example, we search data over the main region (France) between the 1st January 2019 and the 4th June 2019 using STAC catalogs.\n\n- The result shows that data is available for 108 dates and for Landsat-8, sentinel 2A, etc.\n\n---\n\n## Searching and processing\n\n\n  .image-100[\n     ![Search and process](../../images/search_process.png)\n    ]\n\n???\n\n- With STAC, you can search datasets but you can also easily apply your own processing using STAC API.\n\n---\n\n## STAC ecosystem\n\n*A lot of project are now build around <span style=\"color:green\">STAC</span>*.\n\n- All the STAC Catalogs available are at [https://stacindex.org/catalogs](https://stacindex.org/catalogs)\n- Lots of tutorials can be found at [https://stacindex.org/learn](https://stacindex.org/learn)\n- All packages that rely or work extremely well with STAC are at [https://stacindex.org/ecosystem](https://stacindex.org/ecosystem)\n- [Intake-stac](https://intake-stac.readthedocs.io/en/latest/) is the most popular Python package for discovering, exploring, and loading spatio-temporal datasets.\n\n???\n\n- The STAC ecosystem is growing and a lot of projects are now built around STAC. All the STAC Catalog available are online at stacindex.org/catalogs.\n- Lots of tutorial can be found at stacindex.org/learn.\n- All packages that rely or work extremely well with STAC are at listed at stacindex.org/ecosystem.\n\n- If you are a Python programmer, you will probably make use of intake-stac: this is currently the most popular Python package for discovering, exploring, and loading spatio-temporal datasets.\n\n---\n\n## A lot of contributors!\n\nJoin and contribute to STAC: [https://github.com/radiantearth/stac-spec](https://github.com/radiantearth/stac-spec)\n\n.image-100[\n     ![STAC contributors](../../images/STAC_contributors.png)\n    ]\n\n???\n\n- There is already a lot of contributors and it would be hard to name all of them.\n- Since STAC welcomes new contributors, the list will likely grow very quickly!\n\n---\n\n## STAC and Pangeo Forge\n\n- Pangeo-forge supports the creation of analysis-ready cloud optimized (ARCO) data in cloud object storage from \"classical\" data repositories;\n- STAC is used to create catalog and goes beyond the Pangeo ecosystem.\n- Work is ongoing to figure out the best way to expose Pangeo-Forge-generated data assets via STAC catalogs.\n\n???\n\n- So how do STAC and Pangeo-forge relate to each other?\n- Pangeo-forge supports the creation of analysis-ready cloud optimized (ARCO) data in cloud object storage from \"classical\" data repositories.\n- STAC is used to create catalogs and goes beyond the Pangeo ecosystem.\n- Work is ongoing to figure out the best way to expose Pangeo-Forge-generated data assets via STAC catalogs.\n\n---\n\n## Using and/or contributing to Pangeo\n\n.left[The Pangeo project is completely open to involvement from anyone with interest.\n\nThere are many ways to get involved:]\n\n- *Science users*: read the [Guide for Scientists](https://pangeo.io/quickstart.html#quickstart), browse the [Pangeo Gallery](https://pangeo.io/gallery.html#use-cases), watch [Pangeo Showcase Webinar Series](https://pangeo.io/pangeo-showcase.html), read about the [Packages](https://pangeo.io/packages.html#packages), or try it yourself on Galaxy!\n- *Developers / system administrators*: learn about the [Technical Architecture](https://pangeo.io/architecture.html#architecture) or read the [Deployment Setup Guides](https://pangeo.io/setup_guides/index.html#setup-guides).\n\nFor more information, consult the [Frequently Asked Questions](https://pangeo.io/faq.html#faq).\n\nEveryone is welcome to the [Pangeo Weekly Community Meeting](https://pangeo.io/meeting-notes.html#meeting-notes).\n\n???\n- The pangeo project is completely open to involvement from anyone with interest.\n- There are many ways to get involved.\n- Science users can read the Guide for Scientists, browse the Pangeo Gallery watch Pangeo Showcase Webinar Series, read about the Packages, or try it themselves on Galaxy!\n- Developers and system administrators can learn about the Technical Architecture or read the Deployment Setup Guides.\n- For more information, consult the Frequently Asked Questions on the pangeo website.\n\n- Everyone is welcome to the Pangeo Weekly Community Meetings: they are organized in different time zones for increasing accessibility.\n\n---\n\n## Learn more\n\n- Web: [https://pangeo.io](https://pangeo.io/)\n- Discourse: [https://discourse.pangeo.io/](https://discourse.pangeo.io/)\n- Github: [https://github.com/pangeo-data](https://github.com/pangeo-data)\n- Twitter: [@pangeo_data](https://twitter.com/pangeo_data)\n\n???\n- If you want to learn more about Pangeo, visit the Pangeo website pangeo.io, or github reposity github.com/pangeo-data.\n- Get help on discourse at discourse.pangeo.io and follow Pangeo on Twitter @pangeo_data.\n\n"],"hands_on":true,"slides":true,"mod_date":"2024-05-29 14:28:52 +0000","pub_date":"2022-02-18 23:27:51 +0000","version":46,"workflows":[{"workflow":"main_workflow.ga","tests":false,"url":"https://training.galaxyproject.org/training-material/topics/climate/tutorials/pangeo-notebook/workflows/main_workflow.ga","path":"topics/climate/tutorials/pangeo-notebook/workflows/main_workflow.ga","wfid":"climate-pangeo-notebook","wfname":"main_workflow","trs_endpoint":"https://training.galaxyproject.org/training-material/api/ga4gh/trs/v2/tools/climate-pangeo-notebook/versions/main_workflow","license":"MIT","creators":[{"class":"Person","identifier":"https://orcid.org/0000-0002-1784-2920","name":"Anne Fouilloux","url":"https://github.com/annefou"}],"name":"Pangeo Jupyter Notebook","title":"Pangeo Jupyter Notebook","test_results":null,"modified":"2024-06-18 00:05:40 +0000","mermaid":"flowchart TD\n  0[\"Pangeo Jupyter for Big Data geoscience\"];"}],"api":"https://training.galaxyproject.org/training-material/api/topics/climate/tutorials/pangeo-notebook/tutorial.json","tools":["interactive_tool_pangeo_notebook"],"supported_servers":{"exact":[{"url":"https://usegalaxy.eu","name":"UseGalaxy.eu","usegalaxy":true}],"inexact":[]},"topic_name_human":"Climate","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools: []\n","tours":false,"video":true,"slides_recordings":false,"translations":{"tutorial":[],"slides":[],"video":true},"license":"CC-BY-4.0","type":"tutorial","logo":"GTN","redirect_from":["/short/climate/pangeo-notebook/slides","/short/S00039"]}