{"layout":"tutorial_hands_on","title":"Functionally Assembled Terrestrial Ecosystem Simulator (FATES) with Galaxy Climate JupyterLab","zenodo_link":"https://doi.org/10.5281/zenodo.4108341","requirements":[{"type":"internal","topic_name":"climate","tutorials":["fates"]},{"type":"internal","topic_name":"galaxy-interface","tutorials":["jupyterlab"]},{"type":"external","title":"Programming with Python","link":"https://swcarpentry.github.io/python-novice-inflammation/"},{"type":"external","title":"The Unix Shell","link":"http://swcarpentry.github.io/shell-novice/"}],"questions":["Why and when using Galaxy Climate JupyterLab for CLM-FATES?","How to start Galaxy Climate JupyterLab in Galaxy?","How to upload input data for running CLM-FATES?","How to create CLM-FATES case in Galaxy Climate JupyterLab?","How to customize your run?","How to analyze your model outputs?","How to save your model results into a Galaxy history?","How to share your results?"],"objectives":["Motivation for using the Galaxy Climate JupyterLab for CLM-FATES.","Setting up CLM-FATES case with Galaxy Climate JupyterLab.","Running CLM-FATES in Galaxy for single-point locations where in-situ measurements are available.","Analyzing CLM-FATES results.","Sharing CLM-FATES simulations.","Composing, executing and publishing the corresponding Jupyter notebooks."],"time_estimation":"6H","key_points":["Galaxy Climate JupyterLab","CLM-FATES","Model analysis"],"tags":["interactive-tools"],"contributors":[{"name":"Anne Fouilloux","twitter":"AnneFouilloux","joined":"2019-07","elixir_node":"no","orcid":"0000-0002-1784-2920","id":"annefou","url":"https://training.galaxyproject.org/training-material/api/contributors/annefou.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/annefou/"}],"js_requirements":{"mathjax":null,"mermaid":false},"short_id":"T00043","url":"/topics/climate/tutorials/fates-jupyterlab/tutorial.html","topic_name":"climate","tutorial_name":"fates-jupyterlab","dir":"topics/climate/tutorials/fates-jupyterlab","symlink":null,"id":"climate/fates-jupyterlab","ref_tutorials":["<p>The practical aims at familiarizing you with running CLM-FATES within Galaxy Climate JupyterLab.</p>\n\n<blockquote class=\"agenda\">\n  <h2 id=\"agenda\">Agenda</h2>\n\n  <p>In this tutorial, we will cover:</p>\n\n<ol id=\"markdown-toc\">\n  <li><a href=\"#agenda\" id=\"markdown-toc-agenda\">Agenda</a></li>\n  <li><a href=\"#motivation\" id=\"markdown-toc-motivation\">Motivation</a></li>\n  <li><a href=\"#step-1-get-data\" id=\"markdown-toc-step-1-get-data\">Step-1: Get data</a></li>\n  <li><a href=\"#step-2-opening-up-climate-jupyterlab\" id=\"markdown-toc-step-2-opening-up-climate-jupyterlab\">Step-2: Opening up Climate JupyterLab</a></li>\n  <li><a href=\"#step-3-create-a-new-session-clm-fates-in-jupyterlab\" id=\"markdown-toc-step-3-create-a-new-session-clm-fates-in-jupyterlab\">Step-3: Create a new session CLM-FATES in JupyterLab</a>    <ol>\n      <li><a href=\"#import-input-data-to-jupyterlab\" id=\"markdown-toc-import-input-data-to-jupyterlab\">Import input data to JupyterLab</a></li>\n      <li><a href=\"#get-clm-fates-emerald-release\" id=\"markdown-toc-get-clm-fates-emerald-release\">Get CLM-FATES EMERALD release</a></li>\n      <li><a href=\"#create-clm-fates-new-case\" id=\"markdown-toc-create-clm-fates-new-case\">Create CLM-FATES new case</a></li>\n      <li><a href=\"#setup-build-and-submit-your-first-simulation\" id=\"markdown-toc-setup-build-and-submit-your-first-simulation\">Setup, build and submit your first simulation</a></li>\n      <li><a href=\"#check-your-run\" id=\"markdown-toc-check-your-run\">Check your run</a></li>\n      <li><a href=\"#customize-your-run\" id=\"markdown-toc-customize-your-run\">Customize your run</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#analysis\" id=\"markdown-toc-analysis\">Analysis</a>    <ol>\n      <li><a href=\"#analyzing-fates-clm-model-outputs\" id=\"markdown-toc-analyzing-fates-clm-model-outputs\">Analyzing FATES-CLM model outputs</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#save-your-results-to-your-galaxy-history\" id=\"markdown-toc-save-your-results-to-your-galaxy-history\">Save your results to your Galaxy history</a></li>\n  <li><a href=\"#share-your-work\" id=\"markdown-toc-share-your-work\">Share your work</a></li>\n  <li><a href=\"#conclusion\" id=\"markdown-toc-conclusion\">Conclusion</a></li>\n</ol>\n\n</blockquote>\n\n<blockquote class=\"comment\">\n  <comment-title>Background</comment-title>\n\n  <p>FATES is the “Functionally Assembled Terrestrial Ecosystem Simulator”.\nFATES needs what we call a “Host Land Model” (HLM) to run and in this tutorial\nwe will be using the <a href=\"http://www.cesm.ucar.edu/models/clm/\">Community Land Model</a>\nof the <a href=\"https://github.com/ESCOMP/CTSM\">Community Terrestrial Systems Model</a> (CLM-CTSM).\nFATES was derived from the CLM Ecosystem Demography model (CLM(ED)), which was documented in\n<span class=\"citation\"><a href=\"#Fisher2015\"><b>Taking off the training wheels: the properties of a dynamic vegetation model without climate envelopes, CLM4.5(ED)</b> 2015</a></span>.\nand this technical note was first published as an appendix to <a href=\"https://pdfs.semanticscholar.org/396c/b9f172cb681421ed78325a2237bfb428eece.pdf\">that paper</a>.\nThe <a href=\"https://fates-docs.readthedocs.io/en/latest/index.html\">FATES documentation</a> will provide some more insight on FATES too.</p>\n\n</blockquote>\n\n<h2 id=\"motivation\">Motivation</h2>\n\n<p>In this tutorial, we will be using a Galaxy interactive tool called Galaxy Climate JupyterLab for running CLM-FATES.\nThis interactive tool is only available from <a href=\"https://live.usegalaxy.eu/\">LiveGalaxy.eu</a>.</p>\n\n<p>This platform is meant to be used for:</p>\n<ul>\n  <li>preparing new input datasets;</li>\n  <li>testing new versions of fates, including code changes;</li>\n  <li>developing new notebooks for analyzing and showing the model results;</li>\n  <li>creating interactive publications (notebooks);</li>\n  <li>teaching purposes.</li>\n</ul>\n\n<p>The main advantage over the Galaxy CLM-FATES tool is that you can run any versions of FATES, including developments\nthat are not released yet. However, it is not recommended to run more than a few decades of simulation time.\nIn that particular case, we would suggest to use the Galaxy CLM-FATES Galaxy tool.</p>\n\n<blockquote class=\"comment\">\n  <comment-title>CML-FATES in JupyterLab versus CLM-FATES Galaxy tool</comment-title>\n  <p>Do not use the interactive Galaxy Climate JupyterLab for running long and “operational” simulations and\ndo not forget that you need to save back your results to your Galaxy history or local machine before\nstopping your JupyterLab.</p>\n\n</blockquote>\n\n<h1 id=\"step-1-get-data\">Step-1: Get data</h1>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title> Data upload </hands-on-title>\n\n  <ol>\n    <li>\n      <p>Create a new history for this tutorial. If you are not inspired, you can name it <em>fates-jupyterlab</em>.</p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-creating-a-new-history\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-creating-a-new-history\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Creating a new history</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <p>Click the <i class=\"fas fa-plus\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">new-history</span> icon at the top of the history panel:</p>   <p><img src=\"/training-material/shared/images/history_create_new.svg\" alt=\"UI for creating new history\" /></p>   <!-- the original drawing can be found here https://docs.google.com/drawings/d/1cCBrLAo4kDGic5QyB70rRiWJAKTenTU8STsKDaLcVU8/edit?usp=sharing --> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li>\n      <p>Import the files from <a href=\"https://doi.org/10.5281/zenodo.4108341\">Zenodo</a> or from the shared data library</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>https://zenodo.org/record/4108341/files/inputdata_version2.0.0_ALP1.tar\n</code></pre></div>      </div>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-importing-via-links\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-importing-via-links\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Importing via links</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Copy the link location</li>   <li>     <p>Click <i class=\"fas fa-upload\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-upload</span> <strong>Upload Data</strong> at the top of the tool panel</p>   </li>   <li>Select <i class=\"fa fa-edit\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-wf-edit</span> <strong>Paste/Fetch Data</strong></li>   <li>     <p>Paste the link(s) into the text field</p>   </li>   <li>     <p>Press <strong>Start</strong></p>   </li>   <li><strong>Close</strong> the window</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-importing-data-from-a-data-library\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-importing-data-from-a-data-library\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Importing data from a data library</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <p>As an alternative to uploading the data from a URL or your computer, the files may also have been made available from a <em>shared data library</em>:</p>   <ol>   <li>Go into <strong>Shared data</strong> (top panel) then <strong>Data libraries</strong></li>   <li>Navigate to  the correct folder as indicated by your instructor.     <ul>       <li>On most Galaxies tutorial data will be provided in a folder named <strong>GTN - Material –&gt; Topic Name -&gt; Tutorial Name</strong>.</li>     </ul>   </li>   <li>Select the desired files</li>   <li>Click on <strong>Add to History</strong> <i class=\"fas fa-caret-down\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-dropdown</span> near the top and select <strong>as Datasets</strong> from the dropdown menu</li>   <li>     <p>In the pop-up window, choose</p>     <ul>       <li><em>“Select history”</em>: the history you want to import the data to (or create a new one)</li>     </ul>   </li>   <li>Click on <strong>Import</strong></li> </ol> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li>\n      <p>Check the datatype is <strong>tar</strong></p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-changing-the-datatype\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-changing-the-datatype\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Changing the datatype</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Click on the <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> <strong>pencil icon</strong> for the dataset to edit its attributes</li>   <li>In the central panel, click <i class=\"fas fa-database\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-chart-select-data</span> <strong>Datatypes</strong> tab on the top</li>   <li>In the <i class=\"fas fa-database\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-chart-select-data</span> <strong>Assign Datatype</strong>, select <code class=\"language-plaintext highlighter-rouge\">datatypes</code> from “<em>New type</em>” dropdown     <ul>       <li>Tip: you can start typing the datatype into the field to filter the dropdown menu</li>     </ul>   </li>   <li>Click the <strong>Save</strong> button</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li>\n      <p>Rename Datasets</p>\n\n      <p>As “https://zenodo.org/record/4108341/files/inputdata_version2.0.0_ALP1.tar” is not a beautiful name and can give errors for some tools,\nit is a good practice to change the dataset name by something more meaningfull. For example by removing <code class=\"language-plaintext highlighter-rouge\">https://zenodo.org/record/4108341/files/</code> to obtain <code class=\"language-plaintext highlighter-rouge\">inputdata_version2.0.0_ALP1.tar</code>, respectively.</p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-renaming-a-dataset\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-renaming-a-dataset\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Renaming a dataset</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Click on the <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> <strong>pencil icon</strong> for the dataset to edit its attributes</li>   <li>In the central panel, change the <strong>Name</strong> field</li>   <li>Click the <strong>Save</strong> button</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li>\n      <p>Add a tag to the dataset corresponding to <code class=\"language-plaintext highlighter-rouge\">fates-jupyterlab</code></p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-adding-a-tag\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-adding-a-tag\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Adding a tag</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ol>   <li>Click on the dataset to expand it</li>   <li>Click on <strong>Add Tags</strong> <i class=\"fas fa-tags\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-tags</span></li>   <li>Add a tag  starting with <code class=\"language-plaintext highlighter-rouge\">#</code>     <ul>       <li>Tags starting with <code class=\"language-plaintext highlighter-rouge\">#</code> will be automatically propagated to the outputs of tools using this dataset.</li>     </ul>   </li>   <li>Press <kbd>Enter</kbd></li>   <li>Check that the tag appears below the dataset name</li> </ol> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h1 id=\"step-2-opening-up-climate-jupyterlab\">Step-2: Opening up Climate JupyterLab</h1>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title> Launch JupyterLab for Ocean / Atmosphere / Land / Climate Python ecosystem in Galaxy </hands-on-title>\n\n  <p>Currently JupyterLab for Ocean / Atmosphere / Land / Climate Python ecosystem in Galaxy is available on <a href=\"https://live.usegalaxy.eu\">Live.useGalaxy.eu</a> only. JupyterLab for Ocean / Atmosphere / Land / Climate Python ecosystem and not the default JupyterLab in Galaxy contains all the python packages and additional software we need for running Earth System Model, including Functionally Assembled Terrestrial Ecosystem Simulator (FATES). The default JupyterLab in Galaxy would not be sufficient for executing all the tasks in th\nis tutorial.</p>\n\n  <ol>\n    <li>Open the <span class=\"tool\" data-tool=\"interactive_tool_jupyter_notebook\" title=\"JupyterLab tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>JupyterLab</strong></span> or opening directly on <a href=\"https://live.usegalaxy.eu/?tool_id=interactive_tool_climate_notebook\">live.usegalaxy</a></li>\n    <li>Click Run Tool</li>\n    <li>The tool will start running and will stay running permanently</li>\n    <li>Click on the “User” menu at the top and go to “Active Interactive Tools” and locate the JupyterLab instance you started.</li>\n    <li>Click on your JupyterLab instance (please not that it may take a few minutes before you can click on the link to your jupyterLab instance).</li>\n  </ol>\n\n</blockquote>\n\n<p>You should now be looking at a page with the JupyterLab interface:</p>\n\n<p><a href=\"../../images/jupyterlab_climate_session.png\" rel=\"noopener noreferrer\"><img src=\"../../images/jupyterlab_climate_session.png\" alt=\"Jupyterlab climate session interface. \" width=\"1201\" height=\"794\" loading=\"lazy\" /></a></p>\n\n<h1 id=\"step-3-create-a-new-session-clm-fates-in-jupyterlab\">Step-3: Create a new session CLM-FATES in JupyterLab</h1>\n\n<h2 id=\"import-input-data-to-jupyterlab\">Import input data to JupyterLab</h2>\n\n<p>In this part of the tutorial, we will be using the existing Jupyter Notebook called <strong>ipython_galaxy_notebook.ipynb</strong></p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Open a JupyterLab Terminal</hands-on-title>\n  <p>To open <strong>ipython_galaxy_notebook.ipynb</strong>, double click on it.\nMore information on the JupyterLab interface can be found on the <a href=\"https://jupyterlab.readthedocs.io/en/stable/user/interface.html\">JupyterLab documentation</a>.</p>\n\n  <p>Import the FATES input dataset from your history:</p>\n  <ul>\n    <li>In a new code cell:</li>\n  </ul>\n\n  <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>%%bash\n\nget -i inputdata_version2.0.0_ALP1.tar -t name\n</code></pre></div>  </div>\n\n  <p>By default code cells execute Python 3 code (default kernel) so to execute the Shell command lines\nwe will use <code class=\"language-plaintext highlighter-rouge\">%%bash</code>.  In that case the cell runs with bash in a subprocess.</p>\n\n  <p>Then untar this file:</p>\n\n  <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>%%bash\nmkdir $HOME/inputdata\ntar xf /import/inputdata_version2.0.0_ALP1.tar --directory $HOME/inputdata\n</code></pre></div>  </div>\n</blockquote>\n\n<blockquote class=\"comment\">\n  <comment-title>Direct download in JupyterLab from Zenodo</comment-title>\n\n  <p>You may also download the input dataset directly from Zenodo.</p>\n  <ul>\n    <li>Open a JupyterLab Terminal and enter the following command:\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>%%bash\ncd /import\nwget https://zenodo.org/record/4108341/files/inputdata_version2.0.0_ALP1.tar\n</code></pre></div>      </div>\n    </li>\n  </ul>\n</blockquote>\n\n<blockquote class=\"comment\">\n  <comment-title>Using JupyterLab Terminal</comment-title>\n\n  <p>Most of the tutorial (except visualization) can be executed from a JupyterLab Terminal. In that case,\nyou should not add <code class=\"language-plaintext highlighter-rouge\">%%bash</code> to your commands. More on JupyterLab Terminal can be found on <a href=\"https://jupyterlab.readthedocs.io/en/stable/user/terminal.html\">Read the Docs</a>.</p>\n</blockquote>\n\n<h2 id=\"get-clm-fates-emerald-release\">Get CLM-FATES EMERALD release</h2>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Clone CLM-FATES for Nordic sites</hands-on-title>\n\n  <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>%%bash\nconda create --name fates -y fates-emerald=2.0.1\n</code></pre></div>  </div>\n  <p>The command above is required once only. It creates a new conda environment called <strong>fates</strong> and\ninstall <strong>fates-emerald</strong> version 2.0.1 conda package. It is important to always specify the version of\nCLM-FATES you would like to use as it needs to match your input dataset.\nNow a new <strong>fates</strong> conda environment has been\ncreated in your current JupyterLab session and can be use every time you activate it.</p>\n\n  <p>Then to activate this new conda environment:</p>\n\n  <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>%%bash\nsource activate fates\n</code></pre></div>  </div>\n  <p>Please note that you would need to activate <strong>fates</strong> environment in every new code cell (because it starts a new Shell subprocess).</p>\n\n</blockquote>\n\n<h2 id=\"create-clm-fates-new-case\">Create CLM-FATES new case</h2>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Create CLM-FATES new case for ALP1 site</hands-on-title>\n\n  <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>%%bash\nsource activate fates\n\ncreate_newcase --case $HOME/ctsm_cases/fates_alp1 --compset 2000_DATM%1PTGSWP3_CLM50%FATES_SICE_SOCN_MOSART_SGLC_SWAV --res 1x1_ALP1 --machine espresso --run-unsupported\n</code></pre></div>  </div>\n\n</blockquote>\n\n<blockquote class=\"warning\">\n  <warning-title>Command not found!</warning-title>\n  <p>If you get an error when invoking <code class=\"language-plaintext highlighter-rouge\">create_newcase</code> make sure you have switch to fates conda environment:</p>\n  <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>%%bash\nsource acticate fates\ncreate_newcase --help\n</code></pre></div>  </div>\n</blockquote>\n\n<p>The 4 main arguments of create_newcase are explained on the figure below: <a href=\"../../images/newcase_fates.png\" rel=\"noopener noreferrer\"><img src=\"../../images/newcase_fates.png\" alt=\"Snapshot of create_newcase main arguments showing: what is the case name? which resolution? which model configuration? which set of components? which machine are you running on?\" width=\"805\" height=\"305\" loading=\"lazy\" /></a>.</p>\n\n<ul>\n  <li><strong>case</strong>: specifies the name and location of the case being created. It creates a new case in <code class=\"language-plaintext highlighter-rouge\">$HOME/ctsm_cases/</code> and its name is <code class=\"language-plaintext highlighter-rouge\">fates_alp1</code>. make sure to give a meaningful name to your FATES experiments.</li>\n  <li><strong>res</strong>: specifies the model resolution (resolution of the grid). Here <strong>1x1_ALP1</strong> corresponds to a single point resolution.</li>\n  <li><strong>compset</strong>: specifies the component set, i.e., component models, forcing scenarios and physics options for those models.\n    <ul>\n      <li>The long name of the compset we have chosen is <code class=\"language-plaintext highlighter-rouge\">2000_DATM%1PTGSWP3_CLM50%FATES_SICE_SOCN_MOSART_SGLC_SWAV</code></li>\n      <li>The notation for the compset longname is: <code class=\"language-plaintext highlighter-rouge\">TIME_ATM[%phys]_LND[%phys]_ICE[%phys]_OCN[%phys]_ROF[%phys]_GLC[%phys]_WAV[%phys][_BGC%phys]</code></li>\n      <li>The compset longname has the specified order: <strong>atm, lnd, ice, ocn, river, glc wave cesm-options</strong> where:\n        <ul>\n          <li><strong>Initialization Time</strong>:2000</li>\n          <li><strong>Atmosphere</strong>: Data atmosphere DATM%1PTGSWP3</li>\n          <li><strong>Land</strong>: CLM50%FATES</li>\n          <li><strong>Sea-Ice</strong>: SICE Stub ICE</li>\n          <li><strong>Ocean</strong>: SOCN Stub ocean</li>\n          <li><strong>River runoff</strong>:MOSART: MOdel for Scale Adaptive River Transport</li>\n          <li><strong>Land Ice</strong>: SGLC Stub Glacier (land ice) component</li>\n          <li><strong>Wave</strong>-   SWAV Stub wave component\n See also the <a href=\"http://www.cesm.ucar.edu/models/cesm2/config/compsets.html\">list of available component sets</a>.</li>\n        </ul>\n      </li>\n    </ul>\n  </li>\n  <li><strong>mach</strong>: specifies the machine where CLM-FATES will be compiled and run. We use <code class=\"language-plaintext highlighter-rouge\">espresso</code> which is the local setup (see <code class=\"language-plaintext highlighter-rouge\">$HOME/.cime/</code> folder).</li>\n</ul>\n\n<h2 id=\"setup-build-and-submit-your-first-simulation\">Setup, build and submit your first simulation</h2>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Setup, build and submit</hands-on-title>\n\n  <p>Check the content of the directory and browse the sub-directories:</p>\n  <ul>\n    <li>CaseDocs: namelists or similar</li>\n    <li>SourceMods: this is where you can add local source code changes.</li>\n    <li>Tools: a few utilities (we won’t use them directly)</li>\n    <li>Buildconf: configuration for building each component\nFor this tutorial, we  wish to have a “cold” start as we are mostly interested in setting up our model.\nWhen ready to run in production, the model needs to be spin-up (run for several centuries until it reaches some kind of equilibrium).</li>\n  </ul>\n\n  <p>We will first make a short simulation (6 months):</p>\n\n  <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>%%bash\nsource activate fates\n\ncd $HOME/ctsm_cases/fates_alp1\n./case.setup\n./case.build\n./xmlchange STOP_OPTION=nmonths            # set the simulation periods to \"nmonths\"\n./xmlchange STOP_N=6                       # set the length of simulation, i.e, how many months\n./case.submit &gt; case_submit.out 2&gt;&amp;1\n</code></pre></div>  </div>\n  <p>The step above can take a lot of time because it needs to compile and run the FATES model.\nTherefore we suggest you make a break and come back later (or the following day) before you continue the\ntutorial.</p>\n</blockquote>\n\n<h2 id=\"check-your-run\">Check your run</h2>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>check your simulation</hands-on-title>\n\n  <ol>\n    <li>From a new code cell:</li>\n  </ol>\n\n  <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>%%bash\n\ncd $HOME/work/fates_alp1\nls -la\n</code></pre></div>  </div>\n  <p>You should see two folders:</p>\n  <ul>\n    <li>bld: contains the object and CESM executable (called cesm.exe) for your configuration</li>\n    <li>run: this directory will be used during your simulation run to generate output files, etc.</li>\n  </ul>\n\n  <p>The <strong>bld</strong> folder contains the model executable (called <code class=\"language-plaintext highlighter-rouge\">cesm.exe</code>) while <strong>run</strong> contains all the files used for running CLM-FATES (and not already archived).\nOnce your run is terminated, many files are moved from the <strong>run</strong> folder to the <strong>archive</strong> folder:</p>\n\n  <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>%%bash\ncd $HOME/archive/fates_alp1\nls lnd/hist\n</code></pre></div>  </div>\n\n  <p>We are interested in the “history” files from the CLM-FATES model and these files are all located in <code class=\"language-plaintext highlighter-rouge\">lnd/hist</code> folder.\nYou can also check other model components in the archive directory (atm, etc.): in our case, it is not of a great interest as\nwe are running the CLM-FATES component.\nWe have run a very short simulation and get one file only, called <code class=\"language-plaintext highlighter-rouge\">fates_alp1_t.clm2.h0.2000-01.nc</code>. The\nCLM-FATES model outputs are stored in netCDF format.</p>\n\n  <blockquote class=\"comment\">\n    <comment-title>What is a netCDF file?</comment-title>\n\n    <p>Netcdf stands for “network Common Data Form”. It is self-describing, portable, metadata friendly, supported by many languages\n(including python, R, fortran, C/C++, Matlab, NCL, etc.), viewing tools (like panoply, ncview/ncdump) and tool suites of file operators (in particular NCO and CDO).</p>\n  </blockquote>\n\n  <ol>\n    <li>Create a new Jupyter Notebook for analyzing your results:\n      <ul>\n        <li>From the <strong>File Menu</strong> –&gt; <strong>New</strong> –&gt; <strong>Notebook</strong>:</li>\n      </ul>\n      <ul>\n        <li>Rename your notebook to <strong>check_analysis.ipynb</strong></li>\n        <li>All the analysis of the 6 month FATES simulation will be done from this notebook</li>\n      </ul>\n    </li>\n    <li>Get metadata\nIn a Code cell:</li>\n  </ol>\n\n  <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>import os\nimport xarray as xr\nxr.set_options(display_style=\"html\")\n%matplotlib inline\n\ncase = 'fates_alp1'\npath = os.path.join(os.getenv('HOME'), 'archive', case, 'lnd', 'hist')\ndset = xr.open_mfdataset(path + '/*.nc', combine='by_coords')\ndset\n</code></pre></div>  </div>\n  <p>As shown above, we are now using Python 3 for analyzing the results and <a href=\"http://xarray.pydata.org/en/stable/\">xarray</a> which\nis a Python package that can easily handle <a href=\"https://en.wikipedia.org/wiki/NetCDF\">netCDF</a> files.\nwe opened all the history files we have produced and print metadata.</p>\n\n  <ol>\n    <li>Plotting 1D variables (timeseries)</li>\n  </ol>\n\n  <p>You can select a variable by using its short name (see metadata above) and then calling the plot method:</p>\n  <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>dset['AREA_TREES'].plot()\n</code></pre></div>  </div>\n  <p>As we ran 6 months only, we have very little points in our timeseries!</p>\n\n  <p>To plot 2D variables such as <strong>CANOPY_AREA_BY_AGE</strong>, you can use the <em>col_wrap</em> option when plotting:</p>\n\n  <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>dset['CANOPY_AREA_BY_AGE'].plot(aspect=3, size=6, col='fates_levage', col_wrap=1)\n</code></pre></div>  </div>\n  <p>In the plot above, we have one plot per row (<em>col_wrap=1</em>) and we will have a plot for each value of the <em>fates_levage</em> dimension.\nWe also changed the aspect of the plot (aspect=3, size=6).</p>\n</blockquote>\n\n<h2 id=\"customize-your-run\">Customize your run</h2>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Run 10 years</hands-on-title>\n\n  <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>%%bash\nsource activate fates\ncd $HOME/ctsm_cases/fates_alp1\n\n./xmlchange RUN_STARTDATE=0001-01-01      # set up the starting date of your simulation\n./xmlchange STOP_OPTION=nyears            # set the simulation periods to \"years\"\n./xmlchange STOP_N=5                      # set the length of simulation, i.e, how many years\n./xmlchange CONTINUE_RUN=TRUE             # if you want to continue your simulation from restart file, set it to TRUE\n./xmlchange RESUBMIT=1                    # set up how many times you want to resubmit your simulation.\n                                          # e.g, STOP_N=5, RESUBMIT=1, you will have simulation for 5+5*1=10\n./xmlchange DATM_CLMNCEP_YR_START=1901    # set up the start year of the atmospheric forcing\n./xmlchange DATM_CLMNCEP_YR_END=1910      # set up the end year of the atmospheric forcing\n./case.submit &gt; case_submit_sontinue_run.out 2&gt;&amp;1\n</code></pre></div>  </div>\n  <p>This step will take several hours.</p>\n</blockquote>\n\n<h1 id=\"analysis\">Analysis</h1>\n\n<p>In this section, we will be able to analyze your 10 year simulation only when the run is terminated (note that data will be moved to the archive folder every 5 years).</p>\n\n<h2 id=\"analyzing-fates-clm-model-outputs\">Analyzing FATES-CLM model outputs</h2>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Open a new Python notebook</hands-on-title>\n  <ul>\n    <li>Create a notebook by clicking the <code class=\"language-plaintext highlighter-rouge\">+</code> button in the file browser and then selecting a kernel in the new Launcher tab:</li>\n    <li>Rename your notebook to <strong>analyse_case.ipynb</strong>\nGet more information online at <a href=\"https://jupyterlab.readthedocs.io/en/stable/user/notebook.html\">JupyterLab notebooks</a>.</li>\n  </ul>\n</blockquote>\n\n<h3 id=\"use-xarray-to-read-and-plot\">Use <code class=\"language-plaintext highlighter-rouge\">xarray</code> to read and plot</h3>\n\n<p>In this section, we give additional examples on how to visualize your results using <code class=\"language-plaintext highlighter-rouge\">xarray</code>:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>import xarray as xr\nxr.set_options(display_style=\"html\")\n%matplotlib inline\n\ncase = 'fates_alp1'\npath = os.path.join(os.getenv('HOME'), 'archive', case, 'lnd', 'hist')\ndset = xr.open_mfdataset(path + '/*.nc', combine='by_coords')\ndset\n</code></pre></div></div>\n<p>As you can see, we are now using <code class=\"language-plaintext highlighter-rouge\">open_mfdataset</code> to read all the netCDF files available in the history folder.\nThe option <code class=\"language-plaintext highlighter-rouge\">combine='by_coords')</code> is used to tell the method <code class=\"language-plaintext highlighter-rouge\">open_mfdataset</code> how to combine the different files\ntogether.</p>\n\n<p>You can use the same <code class=\"language-plaintext highlighter-rouge\">plot</code> method as before for plotting any variable. For instance:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>dset['AREA_TREES'].plot(aspect=3, size=6)\n\n</code></pre></div></div>\n\n<p>For saving your plot, for instance in a <em>png</em> file format:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>import matplotlib.pyplot as plt\nfig = plt.figure(1, figsize=[14,7])\nax = plt.subplot(1, 1, 1)\ndset['AREA_TREES'].plot(ax=ax)\nax.set_title(dset['AREA_TREES'].long_name)\nfig.savefig('AREA_TREES.png')\n</code></pre></div></div>\n\n<p><a href=\"../../images/AREA_TREES_10yrs.png\" rel=\"noopener noreferrer\"><img src=\"../../images/AREA_TREES_10yrs.png\" alt=\"AREA TREES (10 years). \" width=\"1008\" height=\"504\" loading=\"lazy\" /></a></p>\n\n<p>In the plot above, we create a figure (with specific dimension [14,7]) and one subplot with one row and one column.\nThe last argument of <em>subplot</em> is the index (1) of this particular subplot.</p>\n\n<p>Finally, the resulting figure is saved in a file called ‘AREA_TREES.png’.</p>\n\n<p>To plot 2D variables and save the resulting plot in a png file, for instance <strong>CANOPY_HEIGHT_DIST</strong>:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>p = dset['CANOPY_HEIGHT_DIST'].plot(aspect=3, size=6, col_wrap=1, col='fates_levheight')\np.fig.savefig('CANOPY_HEIGHT_DIST.png')\n</code></pre></div></div>\n\n<p><a href=\"../../images/CANOPY_HEIGHT_DIST_10yrs.png\" rel=\"noopener noreferrer\"><img src=\"../../images/CANOPY_HEIGHT_DIST_10yrs.png\" alt=\"CANOPY HEIGHT DIST (10 years). \" width=\"1368\" height=\"2592\" loading=\"lazy\" /></a></p>\n\n<h1 id=\"save-your-results-to-your-galaxy-history\">Save your results to your Galaxy history</h1>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Put your data to your Galaxy history</hands-on-title>\n\n  <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>%%bash\ncd $HOME\ntar cvf archive_emerald_fates_test.tar archive\n</code></pre></div>  </div>\n  <p>Then you are now ready to put your dataset into Galaxy. As it can be large, we recommend to use FTP:</p>\n\n  <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>curl -T {\"archive_emerald_fates_test.tar\"} ftp://ftp.usegalaxy.eu --user USER:PASSWORD --ssl\n</code></pre></div>  </div>\n  <p>Where you replace <code class=\"language-plaintext highlighter-rouge\">USER</code> by your galaxy username (what you used to login to Galaxy i.e. usually your email address\nand <code class=\"language-plaintext highlighter-rouge\">PASSWORD</code> by your Galaxy login password.</p>\n\n  <p>To get <code class=\"language-plaintext highlighter-rouge\">archive_emerald_fates_test.tar</code> in your history:</p>\n  <ul>\n    <li>Open the Galaxy Upload Manager (<i class=\"fas fa-upload\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-upload</span> on the top-right of the tool panel)</li>\n    <li>Click on <strong>Choose FTP files</strong> and select <code class=\"language-plaintext highlighter-rouge\">archive_emerald_fates_test.tar</code> to import it into your history.</li>\n  </ul>\n\n  <p>And make sure to save all your notebooks to your Galaxy history too:</p>\n\n  <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>%%bash\nput -p ipython_galaxy_notebook.ipynb\nput -p check_analysis.ipynb\nput -p analyse_case.ipynb\nput -p AREA_TREES.png\nput -p CANOPY_HEIGHT_DIST.png\n</code></pre></div>  </div>\n</blockquote>\n\n<blockquote class=\"warning\">\n  <warning-title>Danger: You can lose data!</warning-title>\n  <p>If you do not copy data (FATES model results, jupyter notebooks, plots, etc.) before you stop your Galaxy climate\nJupyterLab tool, all your results will be lost!</p>\n</blockquote>\n\n<h1 id=\"share-your-work\">Share your work</h1>\n\n<p>One of the most important features of Galaxy comes at the end of an analysis. When you have published striking findings, it is important that other researchers are able to reproduce your in-silico experiment. Galaxy enables users to easily share their workflows and histories with others.</p>\n\n<!--SNIPPET-->\n<blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-sharing-your-history\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-sharing-your-history\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Sharing your History</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <p>Sharing your history allows others to import and access the datasets, parameters, and steps of your history.</p>   <p>Access the history sharing menu via the History Options dropdown (<i class=\"fas fa-bars\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-history-options</span>), and clicking “<i class=\"fas fa-share-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">history-share</span> Share or Publish”</p>   <ol>   <li><strong>Share via link</strong>     <ul>       <li>Open the <strong>History Options</strong> <i class=\"fas fa-bars\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-history-options</span> menu at the top of your history panel and select “<i class=\"fas fa-share-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">history-share</span> Share or Publish”         <ul>           <li><i class=\"fas fa-toggle-on\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-toggle</span> <strong>Make History accessible</strong></li>           <li>A <strong>Share Link</strong> will appear that you give to others</li>         </ul>       </li>       <li>Anybody who has this link can view and copy your history</li>     </ul>   </li>   <li><strong>Publish your history</strong>     <ul>       <li><i class=\"fas fa-toggle-on\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-toggle</span> <strong>Make History publicly available in Published Histories</strong></li>       <li>Anybody on this Galaxy server will see your history listed under the <em>Shared Data</em> menu</li>     </ul>   </li>   <li><strong>Share only with another user</strong>.     <ul>       <li>Click the <strong>Share with a user</strong> button at the bottom</li>       <li>Enter an email address for the user you want to share with</li>       <li>Your history will be shared only with this user.</li>     </ul>   </li>   <li><strong>Finding histories others have shared with me</strong>     <ul>       <li>Click on <strong>User</strong> menu on the top bar</li>       <li>Select <strong>Histories shared with me</strong></li>       <li>Here you will see all the histories others have shared with you directly</li>     </ul>   </li> </ol>   <p><strong>Note:</strong> If you want to make changes to your history without affecting the shared version, make a copy by going to <strong>History Options</strong> <i class=\"fas fa-bars\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-history-options</span> icon in your history and clicking <em>Copy this History</em></p> </blockquote>\n<p><!--END_SNIPPET--></p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Share history</hands-on-title>\n\n  <ol>\n    <li>Share your history with your neighbour.</li>\n    <li>Find the history shared by your neighbour. Histories shared with specific users can be accessed by those users under their top masthead “User” menu under <code class=\"language-plaintext highlighter-rouge\">Histories shared with me</code>.</li>\n  </ol>\n</blockquote>\n\n<blockquote class=\"comment\">\n  <comment-title>Clone CLM-FATES release for Nordic site from github (advanced)</comment-title>\n\n  <p>You may also get the CLM-FATES release 2.0.1 directly from github:</p>\n\n  <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>%%bash\ncd $HOME\ngit clone -b release-emerald-platform2.0.1 https://github.com/NordicESMhub/ctsm.git\ncd ctsm\n./manage_externals/checkout_externals\n</code></pre></div>  </div>\n  <p>This approach may be interesting if you wish to run another release or development version of CLM-FATES.\nAll the tutorial shown can be done with your local version. In that case, you would need to use the\nlocal command such as <code class=\"language-plaintext highlighter-rouge\">create__newcase</code> which then require the following steps:</p>\n  <ul>\n    <li>locate the command on your local folder; for instance to locate <code class=\"language-plaintext highlighter-rouge\">create_newcase</code>:</li>\n  </ul>\n\n  <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>%%bash\ncd $HOME/ctsm\nfind . -name create_newcase\n</code></pre></div>  </div>\n  <p>The command above will give you the location of <code class=\"language-plaintext highlighter-rouge\">create_newcase</code>:</p>\n  <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>./cime/scripts/create_newcase\n</code></pre></div>  </div>\n  <p>Be aware that it is a relative path. Then to create a new case:</p>\n\n  <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>./cime/scripts/create_newcase --case $HOME/ctsm_cases/fates_alp1_local --compset 2000_DATM%1PTGSWP3_CLM50%FATES_SICE_SOCN_MOSART_SGLC_SWAV --res 1x1_ALP1 --machine espresso --run-unsupported\n\n</code></pre></div>  </div>\n  <p>Finally, if you wish to make changes to the source code, we recommend first to add your changes in different folder and use the option <code class=\"language-plaintext highlighter-rouge\">--user-mods-dir</code> when\ncreating your case. In addition, you should make sure to use version control to save your changes.\nIf you are not familiar with <code class=\"language-plaintext highlighter-rouge\">git</code>, you could also save your changes in the corresponding Galaxy history.</p>\n</blockquote>\n\n<h1 id=\"conclusion\">Conclusion</h1>\n\n<p>We have learnt to run single-point simulations with FATES-CLM through the Galaxy Climate JupyterLab.</p>\n"],"ref_slides":[],"hands_on":true,"slides":false,"mod_date":"2023-12-04 11:46:43 +0000","pub_date":"2020-10-25 21:05:55 +0000","version":27,"api":"https://training.galaxyproject.org/training-material/api/topics/climate/tutorials/fates-jupyterlab/tutorial.json","tools":["interactive_tool_jupyter_notebook"],"supported_servers":{"exact":[{"url":"https://usegalaxy.eu","name":"UseGalaxy.eu","usegalaxy":true},{"url":"https://usegalaxy.fr/","name":"UseGalaxy.fr","usegalaxy":false},{"url":"https://usegalaxy.org","name":"UseGalaxy.org (Main)","usegalaxy":true}],"inexact":[]},"topic_name_human":"Climate","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools: []\n","tours":false,"video":false,"slides_recordings":false,"translations":{"tutorial":[],"slides":[],"video":false},"license":"CC-BY-4.0","type":"tutorial"}