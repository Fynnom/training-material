{"layout":"tutorial_hands_on","redirect_from":["/topics/transcriptomics/tutorials/scrna_preprocessing/tutorial","/topics/transcriptomics/tutorials/scrna-preprocessing/tutorial","/short/single-cell/scrna-preprocessing","/short/T00251"],"title":"Pre-processing of Single-Cell RNA Data","subtopic":"end-to-end","priority":1,"zenodo_link":"https://zenodo.org/record/3253142","tags":null,"questions":["What is single-cell?","How do we process a batch?","How do we process multiple batches?","How do we check for cross-contamination?"],"objectives":["Demultiplex FASTQ data via UMI-tools","Understand and validate the extraction of barcodes","Obtain an overview of general alignment and quantification techniques","Generate a count matrix for downstream single-cell RNA analysis"],"time_estimation":"3h","key_points":["Verifying the distribution of barcodes via a FASTQC plot","Relocating barcodes into headers","Merging matrices from different batches together","Removing unwanted barcodes"],"requirements":[{"type":"internal","topic_name":"single-cell","tutorials":["scrna-intro"]}],"follow_up_training":[{"type":"internal","topic_name":"single-cell","tutorials":["scrna-umis"]}],"contributors":[{"name":"Mehmet Tekman","email":"mtekman89@gmail.com","joined":"2018-11","elixir_node":"de","affiliations":["uni-freiburg"],"former_affiliations":["elixir-europe"],"id":"mtekman","url":"https://training.galaxyproject.org/training-material/api/contributors/mtekman.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/mtekman/"},{"name":"Bérénice Batut","email":"berenice.batut@gmail.com","twitter":"bebatut","linkedin":"berenicebatut","matrix":"bebatut:matrix.org","orcid":"0000-0001-9852-1987","joined":"2017-09","elixir_node":"fr","contact_for_training":true,"location":{"country":"FR","lat":45.77,"lon":3.08},"fediverse":"https://piaille.fr/@bebatut","fediverse_flavor":"mastodon","affiliations":["gallantries","ifb","elixir-europe"],"id":"bebatut","url":"https://training.galaxyproject.org/training-material/api/contributors/bebatut.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/bebatut/"},{"name":"Anika Erxleben","email":"anikaerxleben@gmail.com","orcid":"0000-0002-7427-6478","joined":"2017-09","elixir_node":"de","affiliations":["eurosciencegateway","uni-freiburg","elixir-europe"],"id":"erxleben","url":"https://training.galaxyproject.org/training-material/api/contributors/erxleben.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/erxleben/"},{"name":"Wolfgang Maier","orcid":"0000-0002-9464-6640","matrix":"wm75:matrix.org","joined":"2017-09","elixir_node":"de","fediverse":"https://scholar.social/@zerodivision","fediverse_flavor":"mastodon","affiliations":["by-covid","uni-freiburg","elixir-europe"],"id":"wm75","url":"https://training.galaxyproject.org/training-material/api/contributors/wm75.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/wm75/"}],"gitter":"Galaxy-Training-Network/galaxy-single-cell","js_requirements":{"mathjax":39191,"mermaid":false},"short_id":"T00251","url":"/topics/single-cell/tutorials/scrna-preprocessing/tutorial.html","topic_name":"single-cell","tutorial_name":"scrna-preprocessing","dir":"topics/single-cell/tutorials/scrna-preprocessing","symlink":null,"id":"single-cell/scrna-preprocessing","ref_tutorials":["<h1 id=\"introduction\">Introduction</h1>\n\n<h2 id=\"why-do-single-cell-sequencing\">Why do Single Cell sequencing?</h2>\n\n<p>Single-cell RNA (scRNA) sequencing is the technological successor to classical “bulk” RNA-seq, where samples are no longer defined at the tissue level but at the individual cell level. The bulk RNA-seq methods seen in <a href=\"/training-material/topics/transcriptomics/tutorials/ref-based/tutorial.html\">previous hands-on material</a> would give the average expression of genes in a sample, whilst overlooking the distinct expression profiles given by the cell sub-populations due to their heterogeneity.</p>\n\n<p>The rise of scRNA sequencing provides the means to explore this heterogeneity by examining samples at the individual cell level, enabling a greater understanding of the development and function of such samples, by the characteristics of their constituent cells.</p>\n\n<p>Consider the heterogeneity of cells sampled from bone marrow, where hematopoietic stem cells can give rise to many different cell types within the same tissue:</p>\n\n<figure id=\"figure-1\" style=\"max-width: 90%;\"><img src=\"/training-material/topics/single-cell/images/scrna-pre-processing/scrna_hematopoiesis.png\" alt=\"Cell Differentiation of Hematopoietic Stem cells. \" width=\"1100\" height=\"492\" loading=\"lazy\" /><a target=\"_blank\" href=\"/training-material/topics/single-cell/images/scrna-pre-processing/scrna_hematopoiesis.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 1</strong>:</span> Cell Differentiation of Hematopoietic Stem cells. Image Source: https://commons.wikimedia.org/wiki/File:Hematopoiesis_simple.svg</figcaption></figure>\n\n<p>The genes expressed by these cells at different developmental time points can be subtle, but generally can be classified into discrete cell sub-populations or under statistical clustering methods such as PCA or tSNE. Cells in the same cluster exhibit similar profiles of differential expression in the same set of related genes, compared to cells in other clusters. By identifying significant genes in each cluster, cell types and cell developmental hierarchies can be inferred based on the proximity of these clusters to one another.</p>\n\n<p>Other than cell development, there are many more factors that can shape the level of gene expression exhibited by a given cell. Intercellular cell-signalling can block or enhance specific transcripts, the total amount of transcripts of a cell increases with the cell-cycle, or the proximity of a cell within a tissue to nutrients or oxygen.</p>\n\n<figure id=\"figure-2\" style=\"max-width: 90%;\"><img src=\"/training-material/topics/single-cell/images/scrna-pre-processing/scrna_nbt3711.png\" alt=\"Facets of Cellular Identity. \" width=\"1167\" height=\"596\" loading=\"lazy\" /><a target=\"_blank\" href=\"/training-material/topics/single-cell/images/scrna-pre-processing/scrna_nbt3711.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 2</strong>:</span> Revealing the vectors of cellular identity with single-cell genomics, Nature Biotechnology, 2016</figcaption></figure>\n\n<p>This tutorial is in part inspired by aspects of the <a href=\"https://hemberg-lab.github.io/scRNA.seq.course/\">Hemberg workflow</a> at the Sanger institute, as well as the <a href=\"https://github.com/CGATOxford/UMI-tools\">CGATOxford workflow</a> which provides the <strong>UMI-tools</strong> suite that we make use of. The barcoding follows the CEL-Seq2 protocol <span class=\"citation\"><a href=\"#Hashimshony2016\">Hashimshony <i>et al.</i> 2016</a></span>,  mentioned in the <a href=\"/training-material/topics/single-cell/tutorials/scrna-umis/tutorial.html\"><em>Understanding Barcodes</em></a> hands-on, and uses the same lane configuration as utilised by the <a href=\"https://www.ie-freiburg.mpg.de/gruen\">Freiburg MPI Grün lab</a>.</p>\n\n<h1 id=\"analysis-strategy\">Analysis Strategy</h1>\n\n<p>Most scRNA sequencing techniques use pooled-sequencing approaches to generate a higher throughput of data by performing amplification and sequencing upon multiple cells in the same “pool”. From a bioinformatics standpoint, this means that the output FASTQ data from the sequencer is batch-specific and contains all the sequences from multiple cells, where one sample of cells is equal to one batch.</p>\n\n<p>In this tutorial, we will perform pre-processing upon scRNA FASTQ batch data to generate an <em>N</em>-by-<em>M</em>  count matrix of <em>N</em> cells and <em>M</em> genes, with each element indicating the level of expression of that gene in a particular cell.</p>\n\n<p>This count matrix is crucial for performing the downstream analysis, where differential gene analysis is performed between cells in order to cluster them into groups denoting their cell type and lineage.</p>\n\n<p>The tutorial is structured in two parts:</p>\n\n<ol>\n  <li><strong>Single-Batch Processing</strong></li>\n  <li><strong>Multi-Batch Processing</strong></li>\n</ol>\n\n<figure id=\"figure-3\" style=\"max-width: 90%;\"><img src=\"/training-material/topics/single-cell/images/scrna-pre-processing/scrna_workflow.svg\" alt=\"Overview of workflow. \" width=\"933\" height=\"978\" loading=\"lazy\" /><a target=\"_blank\" href=\"/training-material/topics/single-cell/images/scrna-pre-processing/scrna_workflow.svg\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 3</strong>:</span> An overview of the entire workflow</figcaption></figure>\n\n<p>The first part of this tutorial will deal with batches, and use example <em>FASTQ</em> data from a single batch, which we will perform <a href=\"#barcode-extraction\">barcode extraction</a> and annotation upon. Alignment and quality control will also be performed, and we will see how to construct a rudimentary count matrix.</p>\n\n<blockquote class=\"comment\">\n  <comment-title>10x Datasets</comment-title>\n\n  <p>10x Genomics datasets can be processed in a much easier way that is outlined in the <a href=\"/training-material/topics/single-cell/tutorials/scrna-preprocessing-tenx/tutorial.html\"><em>Pre-processing of 10X Single-Cell RNA Datasets</em></a> tutorial.</p>\n\n  <p>However, much of the essential concepts for scRNA-seq pre-processing are not explained, so it is a good idea to familiarise yourself with them in this tutorial.</p>\n\n</blockquote>\n\n<p>The second part of this tutorial will deal with merging several output count matrices from multiple single batches generated in the first portion. Here, a set of example count matrices are <a href=\"#merging-count-matrices\">merged together</a> and quality control performed. This produces a final count matrix valid for downstream analysis.</p>\n\n<blockquote class=\"agenda\">\n  <agenda-title></agenda-title>\n\n  <p>In this tutorial, we will deal with:</p>\n\n<ol id=\"markdown-toc\">\n  <li><a href=\"#introduction\" id=\"markdown-toc-introduction\">Introduction</a>    <ol>\n      <li><a href=\"#why-do-single-cell-sequencing\" id=\"markdown-toc-why-do-single-cell-sequencing\">Why do Single Cell sequencing?</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#analysis-strategy\" id=\"markdown-toc-analysis-strategy\">Analysis Strategy</a></li>\n  <li><a href=\"#single-batch-processing\" id=\"markdown-toc-single-batch-processing\">Single-Batch Processing</a>    <ol>\n      <li><a href=\"#data-upload-and-organization\" id=\"markdown-toc-data-upload-and-organization\">Data upload and organization</a></li>\n      <li><a href=\"#barcode-extraction\" id=\"markdown-toc-barcode-extraction\">Barcode Extraction</a></li>\n      <li><a href=\"#mapping--alignment\" id=\"markdown-toc-mapping--alignment\">Mapping / Alignment</a></li>\n      <li><a href=\"#filtering\" id=\"markdown-toc-filtering\">Filtering</a></li>\n      <li><a href=\"#quantification\" id=\"markdown-toc-quantification\">Quantification</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#multi-batch-processing\" id=\"markdown-toc-multi-batch-processing\">Multi-Batch Processing</a>    <ol>\n      <li><a href=\"#data-upload-and-organisation\" id=\"markdown-toc-data-upload-and-organisation\">Data upload and organisation</a></li>\n      <li><a href=\"#merging-count-matrices\" id=\"markdown-toc-merging-count-matrices\">Merging Count Matrices</a></li>\n      <li><a href=\"#guarding-against-cross-contamination\" id=\"markdown-toc-guarding-against-cross-contamination\">Guarding against Cross-Contamination</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#conclusion\" id=\"markdown-toc-conclusion\">Conclusion</a></li>\n</ol>\n\n</blockquote>\n\n<h1 id=\"single-batch-processing\">Single-Batch Processing</h1>\n\n<h2 id=\"data-upload-and-organization\">Data upload and organization</h2>\n\n<p>In this tutorial we will be analysing scRNA-seq data of bone marrow cells taken from a single C57 mouse by <em>Herman et al.</em> (<span class=\"citation\"><a href=\"#Herman2018\">Herman <i>et al.</i> 2018</a></span>) and producing a count matrix that we can use for later analysis.</p>\n\n<p>The size of scRNA files (.fastq) are typically in the gigabyte range and are somewhat impractical for training purposes, so we will expedite the analysis by using a smaller subset of actual batch data. We will also be using <em>Mus Musculus</em> annotation data (.gtf) from the  <a href=\"ftp://ftp.ncbi.nlm.nih.gov/genomes/refseq/vertebrate_mammalian/Mus_musculus/\">NCBI RefSeq</a> track, as well as a barcodes file (.tsv).</p>\n\n<figure id=\"figure-4\" style=\"max-width: 90%;\"><img src=\"/training-material/topics/single-cell/images/scrna-pre-processing/scrna_workflow_upper.png\" alt=\"Workflow Upper. \" width=\"2500\" height=\"1124\" loading=\"lazy\" /><a target=\"_blank\" href=\"/training-material/topics/single-cell/images/scrna-pre-processing/scrna_workflow_upper.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 4</strong>:</span> Single batch processing</figcaption></figure>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Data upload and organization</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Create a new history and rename it (e.g. scRNA-seq single batch tutorial)</p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-creating-a-new-history\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-creating-a-new-history\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Creating a new history</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <p>Click the <i class=\"fas fa-plus\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">new-history</span> icon at the top of the history panel:</p>   <p><img src=\"/training-material/shared/images/history_create_new.svg\" alt=\"UI for creating new history\" /></p>   <!-- the original drawing can be found here https://docs.google.com/drawings/d/1cCBrLAo4kDGic5QyB70rRiWJAKTenTU8STsKDaLcVU8/edit?usp=sharing --> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li>\n      <p>Import the subset FASTQ paired data from <a href=\"https://zenodo.org/record/3253142\"><code class=\"language-plaintext highlighter-rouge\">Zenodo</code></a> or from the data library (ask your instructor)</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>https://zenodo.org/record/3253142/files/SRR5683689_1.subset.fastq\nhttps://zenodo.org/record/3253142/files/SRR5683689_2.subset.fastq\n</code></pre></div>      </div>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-importing-via-links\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-importing-via-links\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Importing via links</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Copy the link location</li>   <li>     <p>Click <i class=\"fas fa-upload\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-upload</span> <strong>Upload Data</strong> at the top of the tool panel</p>   </li>   <li>     <p>Click on <strong>Collection</strong> on the top</p>   </li>   <li>     <p>Click on <strong>Collection Type</strong> and select <code class=\"language-plaintext highlighter-rouge\">Paired</code></p>   </li>   <li>Select <i class=\"fa fa-edit\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-wf-edit</span> <strong>Paste/Fetch Data</strong></li>   <li>     <p>Paste the link(s) into the text field</p>   </li>   <li>     <p>Change <strong>Genome</strong> to <code class=\"language-plaintext highlighter-rouge\">GRCm38/mm10</code></p>   </li>   <li>     <p>Press <strong>Start</strong></p>   </li>   <li>     <p>Click on <strong>Build</strong> when available</p>   </li>   <li>Ensure that the forward and reverse reads are set to <code class=\"language-plaintext highlighter-rouge\">SRR5683689_1</code> and <code class=\"language-plaintext highlighter-rouge\">SRR5683689_2</code>, respectively.     <ul>       <li>Click <strong>Swap</strong> otherwise</li>     </ul>   </li>   <li>     <p>Enter a name for the collection</p>     <ul>       <li>         <p>A useful naming convention is to use <code class=\"language-plaintext highlighter-rouge\">&lt;name&gt;_&lt;plate&gt;_&lt;batch&gt;</code> to preserve the sample names, sequencing plate number and batch number.</p>       </li>       <li>         <p>Here we will write <code class=\"language-plaintext highlighter-rouge\">C57_P1_B1</code></p>       </li>     </ul>   </li>   <li>Click on <strong>Create list</strong> (and wait a bit)</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li>\n      <p>Import the Gene Annotations and Barcodes from <a href=\"https://zenodo.org/record/3253142\"><code class=\"language-plaintext highlighter-rouge\">Zenodo</code></a> or from the data library (ask your instructor)</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>https://zenodo.org/record/3253142/files/Mus_musculus.GRCm38.93.mm10.UCSC.ncbiRefSeq.gtf\nhttps://zenodo.org/record/3253142/files/celseq_barcodes.192.tabular\n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Set the datatype of the <code class=\"language-plaintext highlighter-rouge\">celseq_barcodes.192.tabular</code> to <code class=\"language-plaintext highlighter-rouge\">tabular</code></p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h2 id=\"barcode-extraction\">Barcode Extraction</h2>\n\n<blockquote class=\"comment\">\n  <comment-title>Note</comment-title>\n\n  <p>Before performing the barcode extraction process, it is recommended that you familiarise yourself with the concepts of designing cell barcodes as given by the <a href=\"/training-material/topics/single-cell/tutorials/scrna-plates-batches-barcodes/slides.html\"><em>Plates, Batches, and Barcodes</em></a>, as well as the <a href=\"/training-material/topics/single-cell/tutorials/scrna-umis/tutorial.html\"><em>Understanding Barcodes</em></a> hands-on material for an introduction into transcript barcodes.</p>\n\n</blockquote>\n\n<p>We will be demultiplexing our FASTQ batch data by performing barcode extraction whilst also making use of the provided barcodes file to filter for <em>specific</em> cell barcodes.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Barcode Extraction</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/umi_tools_extract/umi_tools_extract/0.5.5.1\" title=\"UMI-tools extract tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>UMI-tools extract</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.5.5.1)</span> with the following parameters:\n      <ul>\n        <li><em>“Library type”</em>: <code class=\"language-plaintext highlighter-rouge\">Paired-end Dataset Collection</code>\n          <ul>\n            <li><i class=\"far fa-folder\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-collection</span> <em>“Reads in FASTQ format”</em>: <code class=\"language-plaintext highlighter-rouge\">C57_P1_B1</code> (Our paired set)</li>\n            <li><em>“Barcode on both reads?”</em>: <code class=\"language-plaintext highlighter-rouge\">Barcode on first read only</code></li>\n          </ul>\n        </li>\n        <li><em>“Use Known Barcodes?”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code>\n          <ul>\n            <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Barcode File”</em>: <code class=\"language-plaintext highlighter-rouge\">celseq_barcodes.192.tabular</code> (Input dataset)</li>\n          </ul>\n        </li>\n        <li><em>“Barcode pattern for first read”</em>: <code class=\"language-plaintext highlighter-rouge\">NNNNNNCCCCCC</code></li>\n        <li><em>“Enable quality filter?”</em>: <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>Verifying that the desired UMI and cell barcodes have been extracted from the sequence of the Forward reads and inserted into the header of the Reverse reads is encouraged, using the method outlined in the above hands-on material.</p>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <p>How many reads were filtered out, and why?</p>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <p>The input FASTQ files contained reads from all barcodes, including those with sequencing errors, resulting in a larger pool of detected barcodes than those desired. (e.g. Cell barcode <code class=\"language-plaintext highlighter-rouge\">AAATTT</code> could have single base-pair sequencing errors that could modify it into <code class=\"language-plaintext highlighter-rouge\">ATATTT</code> or <code class=\"language-plaintext highlighter-rouge\">AAACTT</code>, etc).</p>\n\n    <p>This information is included in the Log file of <strong>UMI-tools extract</strong> which contains all the parameters used to run, as well as <em>INFO</em> lines that indicate how many reads were read, and how many output. In this case: 134431 reads were retained (&gt;90% of input reads).</p>\n  </blockquote>\n</blockquote>\n\n<h2 id=\"mapping--alignment\">Mapping / Alignment</h2>\n\n<p>FASTQ files contain sequence information that we wish to map to genes in a genome. Mapping is a relatively straightforward process, and is covered more extensively in the <a href=\"/training-material/topics/sequence-analysis/index.html\"><em>Sequence Analysis</em></a> tutorials:</p>\n\n<ol>\n  <li>Select your genome</li>\n  <li>Select your gene annotation file</li>\n  <li>Run the alignment program</li>\n  <li>(Optional) Run MultiQC to assess the quality of the mapping</li>\n</ol>\n\n<p>The FASTQ data was sequenced from mouse data, so to perform the alignment we will need to gather all data relevant to that genome. We will use the latest version (mm10).</p>\n\n<p>The annotation GTF file must match the genome version used, since both use physical coordinates. Each GTF contains all the gene, exon, intron, and other regions of interest that we will use to annotate our reads, should our reads align to any of the regions specified in this file.</p>\n\n<p>For alignment, we will use RNA-STAR for performance and splice-awareness.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Performing the Alignment</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star/2.7.7a\" title=\"RNA-STAR tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>RNA-STAR</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 2.7.7a)</span> with the following parameters:\n      <ul>\n        <li><em>“Single-end or paired-end reads”</em>: <code class=\"language-plaintext highlighter-rouge\">Single-end</code>\n          <ul>\n            <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“RNA-Seq FASTQ/FASTA file”</em>: <code class=\"language-plaintext highlighter-rouge\">Reads2</code> (output of <strong>UMI-tools extract</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n          </ul>\n        </li>\n        <li><em>“Custom or built-in reference genome”</em>: <code class=\"language-plaintext highlighter-rouge\">Use a built-in index</code>\n          <ul>\n            <li><em>“Reference genome with or without an annotation”</em>: <code class=\"language-plaintext highlighter-rouge\">use genome reference without builtin gene-model</code>\n              <ul>\n                <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Select reference genome”</em>: <code class=\"language-plaintext highlighter-rouge\">Mus Musculus (mm10)</code> (Mouse)</li>\n                <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Gene model (gff3,gtf) file for splice junctions”</em>: <code class=\"language-plaintext highlighter-rouge\">Mus_musculus.GRCm38.93.mm10.UCSC.ncbiRefSeq</code></li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc/1.9\" title=\"MultiQC tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>MultiQC</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 1.9)</span> with the following parameters:\n      <ul>\n        <li><em>“Results”</em>:\n          <ul>\n            <li><em>“1: Results”</em>:\n              <ul>\n                <li><em>“Which tool was used to generate logs?”</em>:<code class=\"language-plaintext highlighter-rouge\">STAR</code></li>\n                <li><em>“STAR output”</em>:\n                  <ul>\n                    <li><em>“1: STAR output”</em>\n                      <ul>\n                        <li><em>“Type of STAR output?”</em>:<code class=\"language-plaintext highlighter-rouge\">Log</code></li>\n                      </ul>\n                    </li>\n                  </ul>\n                </li>\n                <li><em>“STAR log output”</em> :(Select the STAR output file that ends in “log”)</li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li>Click on the <i class=\"far fa-eye\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-eye</span> symbol on the MultiQC Webpage</li>\n  </ol>\n\n</blockquote>\n\n<p>The purpose of MultiQC is to observe how well our reads were mapped against the reference genome. Many reads are discarded due to being of too low quality, or having ambiguous sequence content that can map them to multiple locations.</p>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>What percentage of our reads are uniquely mapped? How many millions of reads is this percentage?</li>\n    <li>What percentage of our reads are mapped to more than one locus?</li>\n    <li>Is our overall mapping ‘good’ ?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <ol>\n      <li><code class=\"language-plaintext highlighter-rouge\">59.5%</code> or ~80k reads were successfully mapped</li>\n      <li><code class=\"language-plaintext highlighter-rouge\">13.6%</code> are multiply mapped, and <code class=\"language-plaintext highlighter-rouge\">3.7%</code> were mapped to too many loci\n        <ul>\n          <li>Multiply mapped means that a read was aligned to more than one gene</li>\n          <li>Mapped to too many loci means that a read was aligned to 10 or more loci, and should be ignored.</li>\n        </ul>\n      </li>\n      <li>It depends on how good the sequencing protocol is, and how many reads in total were mapped.\n        <ul>\n          <li><code class=\"language-plaintext highlighter-rouge\">90%</code> is amazing, reserved for bulk RNA-seq which typically has high coverage</li>\n          <li><code class=\"language-plaintext highlighter-rouge\">70%</code> is weak for bulk RNA-seq, but good for single-cell RNA-seq</li>\n          <li>This a small subset of a real dataset, but one would expect that 6 million mapped reads would be enough to generate a downstream analysis.</li>\n        </ul>\n      </li>\n    </ol>\n\n  </blockquote>\n</blockquote>\n\n<h2 id=\"filtering\">Filtering</h2>\n\n<p>Before continuing let us first look back on some of the previous stages:</p>\n\n<blockquote class=\"comment\">\n  <comment-title>Recap of previous stages</comment-title>\n\n  <ol>\n    <li>\n      <p><em>Barcode Extraction</em>:</p>\n\n      <p>Here we used <code class=\"language-plaintext highlighter-rouge\">umi_tools extract</code> on our input forward and reverse FASTQ files, and extracted the UMI and cell barcode from the forward read <em>sequence</em>, and placed it into the <em>header</em> of both forward and reverse FASTQ files. i.e. FASTQ files → Modified FASTQ files</p>\n    </li>\n    <li>\n      <p><em>Mapping</em>:</p>\n\n      <p>We took the sequencing data from the reverse FASTQ file (with modified headers) and aligned it to the mouse genome, using annotations presented in the GTF file for that genome. i.e. Modified FASTQ file (reverse) → BAM file</p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h3 id=\"confirming-reads-in-the-bam-file\">Confirming Reads in the BAM file</h3>\n\n<p>We now have a BAM file of our aligned reads, with cell and UMI barcodes embedded in the read headers. We also have the chromosome and base-pair positions of where these reads are aligned. The can be confirmed by peeking into the BAM file:</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Confirming the Alignment Data</hands-on-title>\n\n  <ol>\n    <li>Click on the <i class=\"far fa-eye\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-eye</span> symbol of the BAM output from STAR.</li>\n    <li>There are many header lines that begin with <code class=\"language-plaintext highlighter-rouge\">@</code> which we are not interested in.</li>\n    <li>\n      <p>Look at 10th read directly below the header lines:</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>SRR5683689.38437_GCATTC_CTTCGT\t16\tchr1\t3439991\t255\t70M\t*\t0\t0\tCTTTGAATCTCTTCTTCCCAGCTAGTCATCTTCCTGCTTTTCTCTCTGTCTGTCTGTCTGTCTGTCTGTC\t'0'&lt;B&lt;''B77&lt;BFBBBBB7'FBFB0F7FBB&lt;B'''&lt;IFFBF&lt;FBFB&lt;FBBFBB0&lt;BFFFBB0BBFFB&lt;&lt;\tNH:i:1 HI:i:1 AS:i:66 nM:i:1\n</code></pre></div>      </div>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>The fields of the BAM file can be better explained at section 1.4 of <a href=\"https://samtools.github.io/hts-specs/SAMv1.pdf\">the SAM specification</a>, but we will summarise the main fields of interest here:</p>\n\n<ul>\n  <li><code class=\"language-plaintext highlighter-rouge\">SRR568..._GCATTC_CTTCGT</code>: The <em>readname</em> appended by <code class=\"language-plaintext highlighter-rouge\">_</code>, the cell barcode, another <code class=\"language-plaintext highlighter-rouge\">_</code>, and then the UMI barcode.</li>\n  <li><code class=\"language-plaintext highlighter-rouge\">16</code>: The FLAG value</li>\n</ul>\n\n<blockquote class=\"question\">\n  <question-title>What does the alignment flag value of 16 tell us about this read?</question-title>\n\n  <p><!-- TODO This information needs to be integrated into an actual tool -->\n  We can interactively see what the different FLAG values mean by feeding values into the SAM specification to the <a href=\"https://broadinstitute.github.io/picard/explain-flags.html\">Picard web tool</a></p>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <p>The read aligns to the reverse strand</p>\n\n  </blockquote>\n\n</blockquote>\n\n<ul>\n  <li><code class=\"language-plaintext highlighter-rouge\">chr1</code> <code class=\"language-plaintext highlighter-rouge\">3439991</code>: The position and base-pair of alignment of the first base of the sequence.</li>\n  <li>A series of quality fields, with the main contributors being  the sequence and sequence quality strings.</li>\n  <li><code class=\"language-plaintext highlighter-rouge\">NH</code>: The number of hits for  this read. If it is multiply mapped, then the number of multiples will be shown (here <code class=\"language-plaintext highlighter-rouge\">1</code>, so not multiply mapped).</li>\n  <li><code class=\"language-plaintext highlighter-rouge\">HI</code>: Which number this particular read is in the series of (potentially) multi-mapped reads (here <code class=\"language-plaintext highlighter-rouge\">1</code>, not necessarily meaning the first or ‘better’).</li>\n  <li><code class=\"language-plaintext highlighter-rouge\">nM</code>: The number of base mismatches in the alignment of this read to the reference (here <code class=\"language-plaintext highlighter-rouge\">1</code>).</li>\n</ul>\n\n<h3 id=\"filtering-the-bam-file\">Filtering the BAM File</h3>\n\n<p>If we perform counting on the current BAM file we will be counting all reads, even the undesirable ones such as those that did not align so optimally.</p>\n\n<p>The main filtering steps performed on our reads so far have been relatively silent due to the ‘default’ parameters used.</p>\n<ul>\n  <li><em>UMI-tools Extract</em> - Filters reads for those only with matching barcodes given by our barcodes file.</li>\n  <li><em>RNA-STAR</em> - As seen in the log, we lose 25% of our reads for being too short or being multiply mapped.</li>\n</ul>\n\n<p>Another filtering measure we can apply is to keep reads that we are confident about, e.g those with a minimum number of mismatches to the reference within an acceptable range. Specifically, we want to keep all reads that align to the forward or reverse strand that also have less that 3 mismatches to the reference, and are also mapped only once to the reference.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Task description</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/devteam/bamtools_filter/bamFilter/2.4.1\" title=\"Filter BAM datasets on a variety of attributes tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Filter BAM datasets on a variety of attributes</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 2.4.1)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“BAM dataset(s) to filter”</em>: <code class=\"language-plaintext highlighter-rouge\">output_bam</code> (output of <strong>RNA STAR</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n        <li>In <em>“Condition”</em>:\n          <ul>\n            <li>In <em>“1: Condition”</em>:\n              <ul>\n                <li>In <em>“Filter”</em>:\n                  <ul>\n                    <li>In <em>“1: Filter”</em>:\n                      <ul>\n                        <li><em>“Select BAM property to filter on”</em>: <code class=\"language-plaintext highlighter-rouge\">alignmentFlag</code>\n                          <ul>\n                            <li><em>“Filter on this alignment flag”</em>: <code class=\"language-plaintext highlighter-rouge\">0</code></li>\n                          </ul>\n                        </li>\n                      </ul>\n                    </li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n            <li>Click on <em>“Insert Condition”</em>:</li>\n            <li>In <em>“2: Condition”</em>:\n              <ul>\n                <li>In <em>“Filter”</em>:\n                  <ul>\n                    <li>In <em>“1: Filter”</em>:\n                      <ul>\n                        <li><em>“Select BAM property to filter on”</em>: <code class=\"language-plaintext highlighter-rouge\">alignmentFlag</code>\n                          <ul>\n                            <li><em>“Filter on this alignment flag”</em>: <code class=\"language-plaintext highlighter-rouge\">16</code></li>\n                          </ul>\n                        </li>\n                      </ul>\n                    </li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n            <li>Click on <em>“Insert Condition”</em>:</li>\n            <li>In <em>“3: Condition”</em>:\n              <ul>\n                <li>In <em>“Filter”</em>:\n                  <ul>\n                    <li>In <em>“1: Filter”</em>:\n                      <ul>\n                        <li><em>“Select BAM property to filter on”</em>: <code class=\"language-plaintext highlighter-rouge\">tag</code>\n                          <ul>\n                            <li><em>“Filter on a particular tag”</em>: <code class=\"language-plaintext highlighter-rouge\">nM:&lt;3</code>\n<small>(<strong>Attention! please use a lowercase ‘n’ here!</strong>)</small></li>\n                          </ul>\n                        </li>\n                      </ul>\n                    </li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n            <li>Click on <em>“Insert Condition”</em>:</li>\n            <li>In <em>“4: Condition”</em>:\n              <ul>\n                <li>In <em>“Filter”</em>:\n                  <ul>\n                    <li>In <em>“1: Filter”</em>:\n                      <ul>\n                        <li><em>“Select BAM property to filter on”</em>: <code class=\"language-plaintext highlighter-rouge\">tag</code>\n                          <ul>\n                            <li><em>“Filter on a particular tag”</em>: <code class=\"language-plaintext highlighter-rouge\">NH:&lt;2</code></li>\n                          </ul>\n                        </li>\n                      </ul>\n                    </li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n        <li><em>“Would you like to set rules?”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code>\n          <ul>\n            <li><em>“Enter rules here”</em>: <code class=\"language-plaintext highlighter-rouge\">(1 | 2) &amp; 3 &amp; 4</code></li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>Why are we filtering only for alignment flags <code class=\"language-plaintext highlighter-rouge\">0</code> and <code class=\"language-plaintext highlighter-rouge\">16</code>?</li>\n    <li>What do the tag filters <code class=\"language-plaintext highlighter-rouge\">nM:&lt;3</code> and <code class=\"language-plaintext highlighter-rouge\">NH:&lt;2</code> do?</li>\n    <li>What is happening at the rules stage?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <ol>\n      <li>Alignment flags <code class=\"language-plaintext highlighter-rouge\">0</code> and <code class=\"language-plaintext highlighter-rouge\">16</code> specify that we wish to only keep reads that align to the forward and reverse strands.</li>\n      <li>We are keeping reads that have a number of mismatches (<code class=\"language-plaintext highlighter-rouge\">nM</code>) to the reference of less than 3, and has a number of hits (<code class=\"language-plaintext highlighter-rouge\">NH</code>) across the reference of less than 2 (i.e. it is not a multiply-mapped read).</li>\n      <li><a href=\"https://en.wikipedia.org/wiki/Boolean_expression\">Boolean expressions</a> are applied that state that <em>either</em> conditions 1 or 2 can happen, in conjunction with rules 3 and 4 happening.</li>\n    </ol>\n\n  </blockquote>\n</blockquote>\n\n<h2 id=\"quantification\">Quantification</h2>\n\n<p>Once we have the name of the gene for a specific read, we can count how many of those reads fall into that gene and generate a count matrix.</p>\n\n<p>Counting reads is performed by two commonly-used tools:</p>\n<ol>\n  <li>RNA-STAR</li>\n  <li>FeatureCounts</li>\n</ol>\n\n<p>The <strong>RNA-STAR</strong> tools has the ability to count reads as it maps them. <strong>FeatureCounts</strong> performs the same task, but is capable of counting not just at the Read level, but also at the UMI level too, such that 10 duplicate reads will be counted only once.</p>\n\n<p>Unfortunately, both are currently limited to counting without being able to distinguish between different cells.</p>\n\n<blockquote class=\"details\">\n  <details-title>Example</details-title>\n\n  <p>If we consider the number of reads that align to <em>GeneA</em>, the output given by these two tools is as follows:</p>\n\n  <blockquote class=\"matrix\">\n    <table>\n      <thead>\n        <tr>\n          <th>(reads)</th>\n          <th>RNA STAR</th>\n          <th>FeatureCounts</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>GeneA</td>\n          <td>12</td>\n          <td>12</td>\n        </tr>\n      </tbody>\n    </table>\n  </blockquote>\n\n  <p>But what we actually require is:</p>\n\n  <blockquote class=\"matrix\">\n    <table>\n      <thead>\n        <tr>\n          <th>(reads)</th>\n          <th>C1</th>\n          <th>C2</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>GeneA</td>\n          <td>10</td>\n          <td>2</td>\n        </tr>\n      </tbody>\n    </table>\n  </blockquote>\n\n  <p>or more specifically:</p>\n\n  <blockquote class=\"matrix\">\n    <table>\n      <thead>\n        <tr>\n          <th>(UMIs)</th>\n          <th>C1</th>\n          <th>C2</th>\n        </tr>\n      </thead>\n      <tbody>\n        <tr>\n          <td>GeneA</td>\n          <td>2</td>\n          <td>1</td>\n        </tr>\n      </tbody>\n    </table>\n  </blockquote>\n\n</blockquote>\n\n<p>In order to obtain this desired format, we must use <strong>UMI-tools count</strong> to perform the counting. However, this tool is dependent on <strong>FeatureCounts</strong> to annotate our reads with the one crucial piece of information that is missing from our BAM file: the name of the gene.</p>\n\n<blockquote class=\"comment\">\n  <comment-title>Verifying missing gene name</comment-title>\n  <p>You can check this yourself by examining the <i class=\"far fa-eye\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-eye</span> of the BAM file <em>“STAR Alignment file”</em></p>\n</blockquote>\n\n<h3 id=\"annotating-gene-name-with-featurecounts\">Annotating Gene name with FeatureCounts</h3>\n\n<p>Let us annotate our BAM file with desired gene tags.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Quantification assist via FeatureCounts</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/featurecounts/featurecounts/2.0.1\" title=\"FeatureCounts tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>FeatureCounts</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 2.0.1)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Alignment file”</em>: <code class=\"language-plaintext highlighter-rouge\">mapped_reads</code> (output of <strong>Filter BAM</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n        <li><em>“Specify strand information”</em>:<code class=\"language-plaintext highlighter-rouge\">Stranded (Forward)</code></li>\n        <li><em>“Gene annotation file”</em>: <code class=\"language-plaintext highlighter-rouge\">in your history</code>\n          <ul>\n            <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Gene annotation file”</em>: <code class=\"language-plaintext highlighter-rouge\">Mus_musculus.GRCm38.93.mm10.UCSC.ncbiRefSeq.gtf</code></li>\n          </ul>\n        </li>\n        <li>In <em>“Advanced options”</em>:\n          <ul>\n            <li><em>“Count multi-mapping reads/fragments”</em>: <code class=\"language-plaintext highlighter-rouge\">Disabled; multi-mapping reads are excluded (default)</code></li>\n            <li><em>“Exon-exon junctions”</em>: <code class=\"language-plaintext highlighter-rouge\">No (default)</code></li>\n            <li><em>“Annotates the alignment file with ‘XS:Z:’-tags to described per read or read-pair the corresponding assigned feature(s).”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li>Examine the output BAM file\n      <ul>\n        <li>Click on the <i class=\"far fa-eye\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-eye</span> for the “Feature Counts: Alignment File”</li>\n        <li>Scroll down past the header lines</li>\n        <li>Scroll horizontally to the tags, observe the new <code class=\"language-plaintext highlighter-rouge\">XT</code> tag.</li>\n      </ul>\n    </li>\n  </ol>\n</blockquote>\n\n<p>The <code class=\"language-plaintext highlighter-rouge\">XS</code> and <code class=\"language-plaintext highlighter-rouge\">XT</code> tags in the BAM file will now form the basis for counting reads.\nWith all the relevant data now in our BAM file, we can actually perform the counting via <code class=\"language-plaintext highlighter-rouge\">UMI-tools count</code>.</p>\n\n<blockquote class=\"comment\">\n  <comment-title>Verifying added gene name</comment-title>\n  <p>You can once again check this yourself by examining the <i class=\"far fa-eye\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-eye</span> of the BAM file <em>“STAR Alignment file”</em></p>\n</blockquote>\n\n<h3 id=\"counting-genes--cell\">Counting Genes / Cell</h3>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Final Quantification</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/umi_tools_count/umi_tools_count/0.5.5.1\" title=\"UMI-tools count tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>UMI-tools count</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.5.5.1)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Sorted BAM file”</em>: <code class=\"language-plaintext highlighter-rouge\">out_file1</code> (output of <strong>FeatureCounts</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n        <li><em>“UMI Extract Method”</em>: <code class=\"language-plaintext highlighter-rouge\">Barcodes are contained at the end of the read separated by a delimiter</code></li>\n        <li><em>“Bam is paired-end”</em>:<code class=\"language-plaintext highlighter-rouge\">No</code></li>\n        <li><em>“Method to identify group of reads”</em>:<code class=\"language-plaintext highlighter-rouge\">Unique</code></li>\n        <li><em>“Extra Parameters”</em>:\n          <ul>\n            <li><em>“Deduplicate per gene.”</em>:<code class=\"language-plaintext highlighter-rouge\">XT</code></li>\n            <li><em>“Group reads only if they have the same cell barcode.”</em>:<code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n          </ul>\n        </li>\n        <li><em>“Prepend a label to all column headers”</em>:<code class=\"language-plaintext highlighter-rouge\">No modifications</code></li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>The important parameters to take note of are those given in the <em>Extra Parameters</em> where we specify that each of the reads with a <code class=\"language-plaintext highlighter-rouge\">XT:Z</code> tag in the BAM file will be counted on a per cell basis. Reads sharing the same UMI and cell Barcodes will be de-duplicated into a single count, reducing PCR duplicate bias from the analysis.</p>\n\n<p>At this stage, we now have a tabular file containing genes/features as rows, and cell labels as headers.</p>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>How many genes do we have in the matrix?</li>\n    <li>How many cells?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <ol>\n      <li>\n        <p>2,140 lines\nThis information can be seen in the file preview window by clicking on the name of the file (<strong>NOT</strong> the <i class=\"far fa-eye\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-eye</span> symbol).</p>\n      </li>\n      <li>\n        <p>180 columns (not including the first column of gene names)\nThe number of columns can be seen by scrolling the file preview window completely to the right. 192 cell barcodes were given, but due to the subsetted data, only 180 were detected.</p>\n      </li>\n    </ol>\n\n  </blockquote>\n</blockquote>\n\n<p>The generation of a single count matrix is now complete, with the emphasis on the word <em>single</em> due to the fact that we often deal in multiple batches of sequencing data.</p>\n\n<blockquote class=\"comment\">\n  <comment-title>Recap of previous stages</comment-title>\n\n  <ol>\n    <li>\n      <p><em>Barcode Extraction</em>:</p>\n\n      <p>Here we used <code class=\"language-plaintext highlighter-rouge\">UMI_tools extract</code> on our input forward and reverse FASTQ files, and extracted the UMI and cell barcode from the forward read <em>sequence</em>, and placed it into the <em>header</em> of both forward and reverse FASTQ files. i.e. FASTQ files → Modified FASTQ files</p>\n    </li>\n    <li>\n      <p><em>Mapping</em>:</p>\n\n      <p>We took the sequencing data from the reverse FASTQ file (with modified headers) and aligned it to the mouse genome, using annotations presented in the GTF file for that genome. i.e. Modified FASTQ file (reverse) → BAM file</p>\n    </li>\n    <li>\n      <p><em>Quality Filtering</em>:</p>\n\n      <p>Reads with alignment mismatches greater than 2 were discarded, and only non multi-mapped reads that mapped to the forward or reverse strand were kept</p>\n    </li>\n    <li>\n      <p><em>Quantification</em>:</p>\n\n      <p>Gene tags were added to our alignment file, and reads were grouped according those sharing the same gene tag, with further reduction performed by collapsing all reads sharing the same cell and UMI barcode to be counted only once.</p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>This concludes the first part of the tutorial which focused on the transformation of raw FASTQ data from a single batch into a count matrix. The second part of this tutorial guides us through the process of merging multiple processed batches from the first stage, and performing qualitative filtering.</p>\n\n<blockquote class=\"details\">\n  <details-title>Workflows For All Steps</details-title>\n\n  <p>Galaxy provides a workflow that captures the process of all the above stages for a <a href=\"workflows/scrna_pp_celseq.ga\">single pair of FASTQ data</a>:</p>\n\n  <figure id=\"figure-5\" style=\"max-width: 90%;\"><img src=\"/training-material/topics/single-cell/images/scrna-pre-processing/scrna_workflow_single.png\" alt=\"Single Batch Workflow. \" width=\"1416\" height=\"935\" loading=\"lazy\" /><a target=\"_blank\" href=\"/training-material/topics/single-cell/images/scrna-pre-processing/scrna_workflow_single.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 5</strong>:</span> Single Batch Workflow</figcaption></figure>\n\n  <p>For multiple batch processing, Galaxy can make use of <em>Nested Workflows</em> that in this case can take in a <a href=\"workflows/scrna_mp_celseq.ga\">list of input paired FASTQ data</a> and process them in parallel.</p>\n\n  <figure id=\"figure-6\" style=\"max-width: 90%;\"><img src=\"/training-material/topics/single-cell/images/scrna-pre-processing/scrna_workflow_nested.png\" alt=\"Multiple Batch Workflow. \" width=\"971\" height=\"715\" loading=\"lazy\" /><a target=\"_blank\" href=\"/training-material/topics/single-cell/images/scrna-pre-processing/scrna_workflow_nested.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 6</strong>:</span> Nested Multiple Batch Workflow</figcaption></figure>\n\n</blockquote>\n\n<p>For the processing of 10x Genomics datasets, please refer to the <a href=\"/training-material/topics/single-cell/tutorials/scrna-preprocessing-tenx/tutorial.html\"><em>Pre-processing of 10X Single-Cell RNA Datasets</em></a> tutorial.</p>\n\n<h1 id=\"multi-batch-processing\">Multi-Batch Processing</h1>\n\n<figure id=\"figure-7\" style=\"max-width: 90%;\"><img src=\"/training-material/topics/single-cell/images/scrna-pre-processing/scrna_workflow_lower.png\" alt=\"Workflow Lower. \" width=\"2500\" height=\"1016\" loading=\"lazy\" /><a target=\"_blank\" href=\"/training-material/topics/single-cell/images/scrna-pre-processing/scrna_workflow_lower.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 7</strong>:</span> Multiple batch processing</figcaption></figure>\n\n<p>Handling more than one batch of sequencing data is rather trivial when we take into account our main goals and requirements:</p>\n\n<ol>\n  <li>For each batch, convert FASTQ reads from into a count matrix.</li>\n  <li>Merge all count matrices into a single count matrix</li>\n</ol>\n\n<p>The first step merely requires us to run the same workflow on each of our batches, using the exact same inputs except for the FASTQ paired data. The second step requires a minimal level of interaction from us; namely using a merge tool and selecting our matrices.</p>\n\n<h2 id=\"data-upload-and-organisation\">Data upload and organisation</h2>\n\n<p>The count matrix we have generated in the previous section is too sparse to perform any reasonable analysis upon, and constitutes data only of a single batch. Here we will use more populated count matrices from multiple batches, under the assumption that we now know how to generate each individual one of them using the steps provided in the previous section. This data is available at <a href=\"https://zenodo.org/record/3253142\"><code class=\"language-plaintext highlighter-rouge\">Zenodo</code></a>.</p>\n\n<p>Once again, file naming is important, and so we will rename our matrix files appropriately to the plate and batch they are supposed to originate from.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Data upload and organisation</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Create a new history and rename it (<em>e.g.</em> scRNA-seq multiple-batch tutorial)</p>\n    </li>\n    <li>Import the eight matrices (<code class=\"language-plaintext highlighter-rouge\">P1_B1.tsv</code>, <code class=\"language-plaintext highlighter-rouge\">P1_B2.tsv</code>, etc.) and the barcodes file from <a href=\"https://zenodo.org/record/3253142\"><code class=\"language-plaintext highlighter-rouge\">Zenodo</code></a> or from the data library (ask your instructor)\n      <ul>\n        <li>Set the datatype of the files to <strong>tabular</strong></li>\n      </ul>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>https://zenodo.org/record/3253142/files/P1_B1.tsv\nhttps://zenodo.org/record/3253142/files/P1_B2.tsv\nhttps://zenodo.org/record/3253142/files/P1_B3.tsv\nhttps://zenodo.org/record/3253142/files/P1_B4.tsv\nhttps://zenodo.org/record/3253142/files/P2_B5.tsv\nhttps://zenodo.org/record/3253142/files/P2_B6.tsv\nhttps://zenodo.org/record/3253142/files/P2_B7.tsv\nhttps://zenodo.org/record/3253142/files/P2_B8.tsv\nhttps://zenodo.org/record/3253142/files/celseq_barcodes.192.tabular\n</code></pre></div>      </div>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-importing-via-links-1\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-importing-via-links-1\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Importing via links</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Copy the link location</li>   <li>     <p>Click <i class=\"fas fa-upload\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-upload</span> <strong>Upload Data</strong> at the top of the tool panel</p>   </li>   <li>Select <i class=\"fa fa-edit\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-wf-edit</span> <strong>Paste/Fetch Data</strong></li>   <li>     <p>Paste the link(s) into the text field</p>   </li>   <li>     <p>Press <strong>Start</strong></p>   </li>   <li><strong>Close</strong> the window</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-importing-data-from-a-data-library\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-importing-data-from-a-data-library\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Importing data from a data library</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <p>As an alternative to uploading the data from a URL or your computer, the files may also have been made available from a <em>shared data library</em>:</p>   <ol>   <li>Go into <strong>Shared data</strong> (top panel) then <strong>Data libraries</strong></li>   <li>Navigate to  the correct folder as indicated by your instructor.     <ul>       <li>On most Galaxies tutorial data will be provided in a folder named <strong>GTN - Material –&gt; Topic Name -&gt; Tutorial Name</strong>.</li>     </ul>   </li>   <li>Select the desired files</li>   <li>Click on <strong>Add to History</strong> <i class=\"fas fa-caret-down\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-dropdown</span> near the top and select <strong>as Datasets</strong> from the dropdown menu</li>   <li>     <p>In the pop-up window, choose</p>     <ul>       <li><em>“Select history”</em>: the history you want to import the data to (or create a new one)</li>     </ul>   </li>   <li>Click on <strong>Import</strong></li> </ol> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li>Rename a matrix\n      <ul>\n        <li>Click on <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> of the <em><code class=\"language-plaintext highlighter-rouge\">P1_B1.tsv</code></em> file</li>\n        <li>Set the Name field such that it is affixed with “_P1_B1” (e.g. ‘multibatch_P1_B1’)</li>\n        <li>Click <em>Save</em></li>\n      </ul>\n    </li>\n    <li>Repeat for all matrices\n<strong>Pay attention to the Plate number which changes after Batch 4</strong></li>\n  </ol>\n\n</blockquote>\n\n<h2 id=\"merging-count-matrices\">Merging Count Matrices</h2>\n\n<p>Before we begin, we must consider that our matrices are not equal – e.g. Batch1 has 3 cells that describe <em>Genes{A,B,C,D}</em> whereas Batch2 has 4 cells that describe <em>Genes{C,D,E}</em>.</p>\n\n<p>We have the problem that only <em>GeneC</em> and <em>GeneD</em> appear in both batches, whilst describing 7 different cells in total.</p>\n\n<p>To resolve this we can perform a “Full Table Join” where the missing data for <em>GeneE</em> and <em>GeneA</em> in Batch1 and Batch2 respectively are replaced with zeroes:</p>\n\n<figure id=\"figure-8\" style=\"max-width: 90%;\"><img src=\"/training-material/topics/single-cell/images/scrna-scanpy-pbmc3k/scrna_downstream.svg\" alt=\"Table Join. \" width=\"616\" height=\"494\" loading=\"lazy\" /><a target=\"_blank\" href=\"/training-material/topics/single-cell/images/scrna-scanpy-pbmc3k/scrna_downstream.svg\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 8</strong>:</span> Full Table Join</figcaption></figure>\n\n<blockquote class=\"comment\">\n  <comment-title></comment-title>\n  <p>For more information on table joins, see <a href=\"http://www.sql-join.com/sql-join-types/\">this guide</a></p>\n</blockquote>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>Why is it required to change the column headers in the Full matrix?</li>\n    <li>Why were the cell labels in B1 and B2 the same, if they were labelling completely different cells?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <ol>\n      <li>Although the cell headers in each batch matrix is the same, the cells they label are <em>not</em> the same and need to be relabelled in the final matrix to tell us which batch they originated from.</li>\n      <li>The reason the cell headers are the same is because the cells use the same barcodes, due to fact that the <em>same</em> barcodes are sometimes used across <em>different</em> batches.</li>\n    </ol>\n\n  </blockquote>\n\n</blockquote>\n\n<p>Let us now merge our matrices from different batches. In order to ensure that our batches are merged in the order that we wish, we should first create a list of datasets so that our matrices are merged in the order given by the list.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Table Merge</hands-on-title>\n\n  <ol>\n    <li>\n      <p><strong>Create a Dataset List</strong></p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-creating-a-dataset-collection\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-creating-a-dataset-collection\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Creating a dataset collection</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Click on <i class=\"far fa-check-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-selector</span> <strong>Select Items</strong> at the top of the history panel <img src=\"/training-material/topics/galaxy-interface/images/historyItemControls.png\" alt=\"Select Items button\" /></li>   <li>Check all the datasets in your history you would like to include</li>   <li>     <p>Click <strong>n of N selected</strong> and choose <strong>Build Dataset List</strong></p>     <p><img src=\"/training-material/topics/galaxy-interface/images/buildList.png\" alt=\"build list collection menu item\" width=\"15%\" /></p>   </li>   <li>Enter a name for your collection</li>   <li>Click <strong>Create collection</strong> to build your collection</li>   <li>Click on the checkmark icon at the top of your history again</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li>\n      <p><strong>Column Join on Collections</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with the following parameters:</p>\n      <ul>\n        <li><em>“Tabular Files”</em>: (Select the Dataset Collection icon <i class=\"far fa-folder\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-collection</span>, and select the Collection from the previous step each of the matrices that you wish to join)</li>\n        <li><em>“Identifier column”</em>:<code class=\"language-plaintext highlighter-rouge\">1</code></li>\n        <li><em>“Number of Header lines in each item”</em>:<code class=\"language-plaintext highlighter-rouge\">1</code></li>\n        <li><em>“Add column name to header”</em>:<code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n        <li><em>“Fill character”</em>:<code class=\"language-plaintext highlighter-rouge\">0</code></li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>The identifier column refers to the column where the gene names are listed. A 1:1 correspondence between matrices is checked, so that the merge does not concatenate the wrong rows between matrices. The <em>Fill character</em> provides a default value of 0 for cases where a Gene appears only in one of the matrices as per our example earlier.</p>\n\n<p>Once the merge is complete, we can now peek at our full combined matrix by once again clicking on the file name to see a small summary.</p>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <p>Each of these matrices/batches come from the same organism.</p>\n\n  <ol>\n    <li>How much overlap in their detected genes did you expect?</li>\n    <li>How much overlap in their detected genes did you observe?</li>\n    <li>Why is this?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <ol>\n      <li>\n        <p>Given that they come from the same sample, and each matrix has ~15,000 genes, we would have expected a high overlap between matrices, yielding ~18,000 genes in the combined matrix if we assume a difference of +/- 500 genes per batch.</p>\n      </li>\n      <li>\n        <p>We observe 20,800 genes, giving less overlap between batches of the same organism than we originally thought.</p>\n      </li>\n      <li>\n        <p>The batches were sequenced at different time points along the organisms development, and therefore different genes were expressed/detected at different time points. For early development data, the overlap can be very sparse.</p>\n      </li>\n    </ol>\n  </blockquote>\n</blockquote>\n\n<p>In the new combined matrix we see that we have 1536 cells, but this number is greatly overestimated.  This is because <em>not all batches use the same barcodes</em>, and yet we applied the full set of 192 barcodes against our FASTQ data during the <a href=\"#barcode-extraction\"><em>Barcode Extraction</em></a> stage previously.</p>\n\n<p>The reason we do this is to test for cross-contamination between batches, the details of which are better explained in the <a href=\"/training-material/topics/single-cell/tutorials/scrna-preprocessing/slides.html\"><em>accompanying slides</em></a>.</p>\n\n<h2 id=\"guarding-against-cross-contamination\">Guarding against Cross-Contamination</h2>\n\n<p>There are multiple possible ways to configure a plate for sequencing multiple batches. Thankfully, Galaxy provides a tool that caters for this, and checks for cross-contamination in any experimental setup. It requires only the following information:</p>\n\n<ol>\n  <li>A full list of barcodes</li>\n  <li>Which barcodes apply to which batches</li>\n  <li>Which batches apply to which plates</li>\n</ol>\n\n<p>Since the plating protocol we are using is that designed by the Freiburg MPI Grün lab, we will follow their structure.</p>\n\n<blockquote class=\"details\">\n  <details-title>Plating protocol</details-title>\n\n  <ul>\n    <li>\n      <p>Barcodes:\n  These are each 8bp long, with an edit distance of 2, and there 192 of them.</p>\n\n      <blockquote class=\"matrix\">\n        <table>\n          <tbody>\n            <tr>\n              <td>001-006</td>\n              <td>AACACC AACCTC AACGAG AACTGG AAGCAC AAGCCA</td>\n            </tr>\n            <tr>\n              <td>007-012</td>\n              <td>AAGGTG AAGTGC ACAAGC ACAGAC ACAGGA ACAGTG</td>\n            </tr>\n            <tr>\n              <td>.</td>\n              <td>.</td>\n            </tr>\n            <tr>\n              <td>.</td>\n              <td>.</td>\n            </tr>\n            <tr>\n              <td>180-186</td>\n              <td>TTACGC TTCACC TTCCAG TTCGAC TTCTCG TTGCAC</td>\n            </tr>\n            <tr>\n              <td>187-192</td>\n              <td>TTGCGA TTGCTG TTGGAG TTGGCA TTGGTC TTGTGC</td>\n            </tr>\n          </tbody>\n        </table>\n      </blockquote>\n    </li>\n    <li>\n      <p>Plates:\n  Here we have 8 batches spread out over 2 plates, with alternate barcode striping.</p>\n\n      <blockquote class=\"matrix\">\n        <table>\n          <thead>\n            <tr>\n              <th> </th>\n              <th>001-096</th>\n              <th>097-192</th>\n              <th>001-096</th>\n              <th>097-192</th>\n            </tr>\n          </thead>\n          <tbody>\n            <tr>\n              <td>Plate 1</td>\n              <td>B1</td>\n              <td>B2</td>\n              <td>B3</td>\n              <td>B4</td>\n            </tr>\n            <tr>\n              <td>Plate 2</td>\n              <td>B5</td>\n              <td>B6</td>\n              <td>B7</td>\n              <td>B8</td>\n            </tr>\n          </tbody>\n        </table>\n      </blockquote>\n    </li>\n  </ul>\n\n</blockquote>\n\n<p>This plating protocol can be converted into a more textual format, which allows for many variable setups (see <em>Help</em> section of <em>Cross-contamination Barcode Filter</em> tool).</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>[Barcodes → Batches]\n001-096: B1 , B3 , B5 , B7\n097-192: B2 , B4 , B6 , B8\n\n[Plates → Batches]\n1: B1 , B2 , B3 , B4\n2: B5 , B6 , B7 , B8\n</code></pre></div></div>\n\n<p>Let us now apply this protocol to our count matrix, and look for any cross-contamination.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Barcode Filtering</hands-on-title>\n\n  <p>Select <strong>Cross-contamination Barcode Filter</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with the following parameters:</p>\n  <ul>\n    <li><em>“Input Matrix”</em>:<code class=\"language-plaintext highlighter-rouge\">Column Join output</code> (merged matrices)</li>\n    <li><em>“Complete Barcodes”</em>:<code class=\"language-plaintext highlighter-rouge\">celseq_barcodes.192.tabular</code> (barcodes file)</li>\n    <li><em>“Plate Protocol”</em>:<code class=\"language-plaintext highlighter-rouge\">Custom</code>\n      <ul>\n        <li><em>“Under ‘Barcode Format’“</em>:\n          <ul>\n            <li>Select <code class=\"language-plaintext highlighter-rouge\">+ Insert Barcode Format</code>:\n              <ul>\n                <li><em>“1: Barcode Format”</em>:\n                  <ul>\n                    <li><em>“Barcode Range: Start”</em>:<code class=\"language-plaintext highlighter-rouge\">1</code></li>\n                    <li><em>“Barcode Range: End”</em>:<code class=\"language-plaintext highlighter-rouge\">96</code></li>\n                    <li><em>“Batches utilizing this Range”</em>:<code class=\"language-plaintext highlighter-rouge\">1,3,5,7</code></li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n            <li>Select <code class=\"language-plaintext highlighter-rouge\">+ Insert Barcode Format</code>:\n              <ul>\n                <li><em>“2: Barcode Format”</em>:\n                  <ul>\n                    <li><em>“Barcode Range: Start”</em>:<code class=\"language-plaintext highlighter-rouge\">97</code></li>\n                    <li><em>“Barcode Range: End”</em>:<code class=\"language-plaintext highlighter-rouge\">192</code></li>\n                    <li><em>“Batches utilizing this Range”</em>:<code class=\"language-plaintext highlighter-rouge\">2,4,6,8</code></li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n        <li><em>“Under ‘Plate Format’“</em>:\n          <ul>\n            <li>Select <code class=\"language-plaintext highlighter-rouge\">+ Insert Plate Format</code>:\n              <ul>\n                <li><em>“1: Plate Format”</em>:\n                  <ul>\n                    <li><em>“Plate Number”</em>:<code class=\"language-plaintext highlighter-rouge\">1</code></li>\n                    <li><em>“Batches within this Plate Number”</em>:<code class=\"language-plaintext highlighter-rouge\">1,2,3,4</code></li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n            <li>Select <code class=\"language-plaintext highlighter-rouge\">+ Insert Plate Format</code>:\n              <ul>\n                <li><em>“2: Plate Format”</em>:\n                  <ul>\n                    <li><em>“Plate Number”</em>:<code class=\"language-plaintext highlighter-rouge\">2</code></li>\n                    <li><em>“Batches within this Plate Number”</em>:<code class=\"language-plaintext highlighter-rouge\">5,6,7,8</code></li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li>Expand the <em>“RegEx Parameters”</em> section:\n      <ul>\n        <li><em>“RegEx to extract Plate, Batch, and Barcodes from headers”</em>:<code class=\"language-plaintext highlighter-rouge\">.*P(\\\\d)_B(\\\\d)_([ACTG]+)</code></li>\n        <li><em>“RegEx to replace Plate, Batch, and Barcodes from headers”</em>:<code class=\"language-plaintext highlighter-rouge\">P\\\\1_B\\\\2_\\\\3</code></li>\n      </ul>\n    </li>\n  </ul>\n\n</blockquote>\n\n<blockquote class=\"comment\">\n  <comment-title>Regular Expressions</comment-title>\n  <p>The <a href=\"https://www.regular-expressions.info/quickstart.html\">regular expression</a> (RegEx) used in the final steps of the above <em>Hands-On</em> is required in order to tell us how to capture the important information in the cell headers contained in brackets <code class=\"language-plaintext highlighter-rouge\">(</code> <code class=\"language-plaintext highlighter-rouge\">)</code>, where <code class=\"language-plaintext highlighter-rouge\">\\\\d</code> denotes an expected digit, and <code class=\"language-plaintext highlighter-rouge\">[ACTG]+</code> denotes 1 or more characters matching A or C or T or G.</p>\n\n  <p>The information captured in the brackets <code class=\"language-plaintext highlighter-rouge\">(</code> <code class=\"language-plaintext highlighter-rouge\">)</code> can then be placed in the desired arrangement, where <code class=\"language-plaintext highlighter-rouge\">Place \\\\1 Matches \\\\2 Here \\\\3</code> would place the first <code class=\"language-plaintext highlighter-rouge\">\\\\d</code> after “Place “, the second after “Matches “, and so on.</p>\n\n</blockquote>\n\n<p>The plot that follows tells us everything we need to know about each of our batches. Each batch is essentially tested against the full set of barcodes in order to assert that only the desired or ‘Real’ barcodes have been sequenced.</p>\n\n<h3 id=\"cross-contamination-plot\">Cross-contamination Plot</h3>\n\n<figure id=\"figure-9\" style=\"max-width: 90%;\"><img src=\"/training-material/topics/single-cell/images/scrna-pre-processing/scrna_crosscontamination.png\" alt=\"Contamination Plots. \" width=\"2348\" height=\"1050\" loading=\"lazy\" /><a target=\"_blank\" href=\"/training-material/topics/single-cell/images/scrna-pre-processing/scrna_crosscontamination.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 9</strong>:</span> The Pre-filter and Post-filter plots</figcaption></figure>\n\n<p>Two things to take note of:</p>\n\n<ol>\n  <li>In the pre-filter plot, we can see how only half of the sequences in each batch map to half the barcodes. This shows very little cross-contamination, and proves that our data is real.</li>\n  <li>The post-filter plot essentially removes the false barcodes from each batch and retains only the ‘Real’ barcodes.</li>\n</ol>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>The count matrix that is output from this tool has only half the number of cells as the original input count matrix. Why is this?</li>\n    <li>Which batches yield worrying levels of cross-contamination?</li>\n    <li>Which batches should we remove from all further analysis?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <ol>\n      <li>Because only half the barcodes in each batch were real. The <em>UMI-tools extract</em> took the entire barcodes file to filter against each batch, and the <em>UMI-tools count</em> also took the entire barcodes file to count against each batch. Naturally, each batch produced 192 cells, even though 96 were real. As a result of joining each of these matrices we ended up with a count-matrix of \\(8 * 192 = 1536\\) cells. The cross-contamination tool removes the false barcodes (50% in each batch), resulting in \\(768\\) cells.</li>\n      <li>Batch 4 and Batch 6 both appear to have a significant number of mid-to-high range counts in cells under the <em>False Positives</em> section in these batches. This means that the cell barcodes that we should <em>not</em> be detecting in those batches, did in fact detect cells.</li>\n      <li>Batch 4 does still have a good number of <em>True Positives</em>, despite the many mid-level <em>False Positives</em> so we could still perhaps use the cells from that Batch. Batch 6 on the other hand appears to derive most of its counts from the <em>False Positives</em>, and therefore is likely not so suitable for further analysis.</li>\n    </ol>\n  </blockquote>\n</blockquote>\n\n<p>All <em>False Positives</em> from all batches are filtered out, leaving only the <em>True Positives</em> (or ‘Real’ barcodes) in the remaining filtered matrix. It is up to the user to filter further based on the contamination information that they derive from this step. With this, a QC filtered count-matrix is produced that can then be used for further downstream analysis.</p>\n\n<!--\nFactoid: We can convert the number of UMIs to the number of molecules using a transformation script.\n-->\n\n<h1 id=\"conclusion\">Conclusion</h1>\n\n<p>In this tutorial we have learned the importance of barcoding; namely how to define, extract, and annotate them from our reads and into the read headers, in order to preserve them during mapping. We have discovered how these barcoded reads are transformed into counts, where the cell barcode and UMI barcode are used to denote individual cells and to correct against reads that are PCR duplicates. Finally, we have learned how to combine separate batch data as well as being able to check and correct against cross-contamination.</p>\n\n<figure id=\"figure-10\" style=\"max-width: 90%;\"><img src=\"/training-material/topics/single-cell/images/scrna-pre-processing/scrna_workflow.svg\" alt=\"Recap of workflow. \" width=\"933\" height=\"978\" loading=\"lazy\" /><a target=\"_blank\" href=\"/training-material/topics/single-cell/images/scrna-pre-processing/scrna_workflow.svg\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 10</strong>:</span> A recap of the entire workflow</figcaption></figure>\n\n<p>This tutorial is part of the https://singlecell.usegalaxy.eu portal (<span class=\"citation\"><a href=\"#tekman2020single\">Tekman <i>et al.</i> 2020</a></span>).</p>\n"],"ref_slides":["### Fixed Barcode Protocols and Multiplexing\n\n\nThe main contending questions are:\n\n 1. How large is each batch?\n\n???\nHow many slots in a batch that we need to barcode for\n\n--\n\n 2. How many batches on a plate?\n\n--\n\n 3. Should each batch use the same barcodes?\n\n--\n\n 4. What **constraints** are there on the plate?\n\n\n\n???\nA technician always has to balance quality against cost, and this is illustrated in the following examples:\n\n---\n\n### Example Setup\n\n.pull-left[\n* Barcodes:\n  * 24 unique barcodes, with an edit distance of E=2:\n\n             AAA ACC AGG TTT TAA TCC\n             ATT CCC CAA TGG NAA NCC\n             CGG CTT GGG NGG NTT ANN\n             GAA GCC GTT CNN GNN TNN\n\n]\n--\n.pull-right[\n* Plates and Batches:\n  * 12 slots per lane (3x4)\n  * 4 batches per plate\n\n* Constraints\n  * Only 2 batches sequenced at the same time\n    * i.e. half the plate is sequenced at the same time\n]\n\n???\nHere we use N as an extra base just for example purposes, but you do sometimes see this in other barcodes.\n2 batches at a time, only half\n\n---\n\n### Example 1: Single Plate with a Single Lane\n\n.bottom-info-box[\nAvailable Barcodes\n\n    AAA ACC AGG TTT TAA TCC\n    ATT CCC CAA TGG NAA NCC\n    CGG CTT GGG NGG NTT ANN\n    GAA GCC GTT CNN GNN TNN\n\n]\n--\n\n.image-75[![slide36](../../images/scrna-pre-processing/scrna-plates-batches-barcodes_slide36.svg)]\n\n.pull-left[\n* 12 total slots in Plate 1\n\n* 12 slots in Lane 1\n\n* All slots filled\n]\n\n--\n.pull-right[\n* We only need to use half of our barcodes\n\n* Why is this wasteful?\n]\n\n\n???\n* Half of the barcodes used for that lane, and the other half we can ignore.\n* Wasteful because we are not getting full use of our 24 barcodes in a single sequencing run\n\n---\n\n### Example 2: Single Plate with 2 Batches\n\n.bottom-info-box[\nAvailable Barcodes\n\n    AAA ACC AGG TTT TAA TCC\n    ATT CCC CAA TGG NAA NCC\n    CGG CTT GGG NGG NTT ANN\n    GAA GCC GTT CNN GNN TNN\n\n]\n\n* 24 total slots in Plate 1\n* 12 slots in Lane 1, and 12 slots in Lane 2\n* All slots filled\n\n.image-75[![slide38](../../images/scrna-pre-processing/scrna-plates-batches-barcodes_slide38.svg)]\n\n--\n* We can use all of our barcodes\n* Maximum number of cells can be sequenced in a single run\n* Why might this be too optimal?\n\n\n???\nHere we use all barcodes since these batches will be sequenced at the same time\nLet's look at one final example to see why using all our barcodes on a plate might not be optimal.\n\n---\n\n### Example 3: Single Plate with 2 Batches, only 1 active\n\n.bottom-info-box[\nAvailable Barcodes\n\n    AAA ACC AGG TTT TAA TCC\n    ATT CCC CAA TGG NAA NCC\n    CGG CTT GGG NGG NTT ANN\n    GAA GCC GTT CNN GNN TNN\n\n]\n\n* 24 total slots in Plate 1\n* 12 slots in Lane 1, and 12 slots in Lane 2\n* Only slots in Lane 1 filled\n\n.image-75[![slide40](../../images/scrna-pre-processing/scrna-plates-batches-barcodes_slide40.svg)]\n\n\n--\n* Why are we still using all barcodes?\n* Why have we not filled in Lane 2?\n\n\n???\nAll barcodes used, why leave one lane empty?\n\n---\n\n### Example 3: Single Plate with 2 Batches, only 1 active\n\n.bottom-info-box[\nAvailable Barcodes\n\n    AAA ACC AGG TTT TAA TCC\n    ATT CCC CAA TGG NAA NCC\n    CGG CTT GGG NGG NTT ANN\n    GAA GCC GTT CNN GNN TNN\n\n]\n\n* What would it mean if we sequenced reads with {TTT,TAA,...,TNN} as their Cell Barcodes?\n\n.image-75[![slide40](../../images/scrna-pre-processing/scrna-plates-batches-barcodes_slide40.svg)]\n\n\n--\n* **Cross-Contamination**\n  * There should be *no cells in that lane*!\n  * These are contaminants from Lane 1\n  * We can ignore these reads and select for the {AAA,ACC,...,GTT}\n\n\n???\nIf we see any reads in the Plate which contain barcodes {TTT,TAA,TCC, etc} then we know that some contamination has occurred *because there should be no cells there*. One reason is that the second lane was not completely cleaned before being used.\n\n---\n\n### Example 4: 2 Plates with 2 Batches, only 1 active (alternate)\n\n.bottom-info-box[\nAvailable Barcodes\n\n    AAA ACC AGG TTT TAA TCC\n    ATT CCC CAA TGG NAA NCC\n    CGG CTT GGG NGG NTT ANN\n    GAA GCC GTT CNN GNN TNN\n\n]\n\n\n* Same as before but extra plate. A single lane used to check for contaminants.\n* Alternate barcodes used for each plate\n\n.image-50[![slide44](../../images/scrna-pre-processing/scrna-plates-batches-barcodes_slide44.svg)]\n\n\n<small>\n* Why alternate active batches across plates?\n</small>\n\n--\n<small>\n  * Plate 1 and Plate 2 are sometimes the *same plate*\n  * Contaminants might carry over *undetected* if same lane is used!\n</small>\n\n???\n* Here we have repeated previous example, but with an extra plate. In the first plate, the first half of the barcodes are used, and in the second plate, the second half of the barcodes are used.\n\n* Why alternate the barcodes between plates? The full set of barcodes does not change, so why not keep the same format?\n\n* Loaded at different times, washed clean, re-used.\n\n* Again, the answer is to reduce cross-contamination. Plate2 will be loaded after Plate1 (and perhaps Plate2 and Plate1 will use the same plate!) If we see any reads in Plate2 that should not be there, we can now surmise where they came from. We also have the added benefit of protecting the cells in Plate2 from those that may have been used in Plate1, since they are in completely different positions across plates.\n\n---\n\n### Example 5: 1 Plate with 2 Batches, both active\n\n.bottom-info-box[\nAvailable Barcodes\n\n    AAA ACC AGG TTT TAA TCC\n    ATT CCC CAA TGG NAA NCC\n    CGG CTT GGG NGG NTT ANN\n    GAA GCC GTT CNN GNN TNN\n\n]\n\n* Both batches filled. *All barcodes* are applied individually to *each* lane\n\n.image-100[![slide46](../../images/scrna-pre-processing/scrna-plates-batches-barcodes_slide46.svg)]\n\n.pull-left[\n\n* Why check all barcodes against each lane?\n\n* Why not separate batches across different plates?\n\n]\n--\n.pull-right[\n* If <small>{TTT,TAA,...,TNN}</small> is detected in Lane 1, or vice versa → **Contamination!**\n\n* *Benefit of* **detecting cross-contamination** *whilst still* **maximising plate usage**\n]\n???\n1. Why apply the full set of barcodes to each lane, when only half will actually label?\n2. What benefit does this serve, instead of separating them over different plates as in the previous example?\n\nA1. This setup is actually the same as example 4, but with the two plates merged. Here we can check for cross-contamination in each lane by measuring the real cell labels against the false barcodes. If in lane 1, we detect a significant number of reads with cell barcodes of `TAA` or `ANN`, we can assume that some cross-contamination has occurred since we should not be able to detect these barcodes in that lane. The converse is also true of lane 2.\n\nA2. We have the benefit of detecting cross-contamination with the same advantages as example 4, but with the cost advantage of sequencing two batches at the same time.\n\n---\n\n# Summary\n\n* Barcodes are often reused across batches if there is a fixed and limited number of them\n\n* Intelligent plating strategies reduce sequencing errors\n\n* Cross contamination can be detected by examining false positives across plates\n"],"hands_on":true,"slides":true,"mod_date":"2023-10-10 11:02:05 +0000","pub_date":"2019-02-22 19:53:50 +0000","version":10,"workflows":[{"workflow":"scrna_mp_celseq.ga","tests":false,"url":"https://training.galaxyproject.org/training-material/topics/single-cell/tutorials/scrna-preprocessing/workflows/scrna_mp_celseq.ga","path":"topics/single-cell/tutorials/scrna-preprocessing/workflows/scrna_mp_celseq.ga","wfid":"single-cell-scrna-preprocessing","wfname":"scrna_mp_celseq","trs_endpoint":"https://training.galaxyproject.org/training-material/api/ga4gh/trs/v2/tools/single-cell-scrna-preprocessing/versions/scrna_mp_celseq","license":null,"creators":[],"name":"CelSeq2: Multi Batch (mm10)","title":"CelSeq2: Multi Batch (mm10)","test_results":null,"modified":"2024-06-17 00:06:04 +0000","mermaid":"flowchart TD\n  0[\"ℹ️ Input Collection\\nList of FACS pairs\"];\n  style 0 stroke:#2c3143,stroke-width:4px;\n  1[\"ℹ️ Input Dataset\\nBarcodes\"];\n  style 1 stroke:#2c3143,stroke-width:4px;\n  2[\"ℹ️ Input Dataset\\nGTF file UCSC\"];\n  style 2 stroke:#2c3143,stroke-width:4px;\n  3[\"Flatten Collection\"];\n  0 -->|output| 3;\n  4[\"🛠️ Subworkflow\\nCelSeq2: Single Batch mm10\"];\n  style 4 fill:#edd,stroke:#900,stroke-width:4px;\n  1 -->|output| 4;\n  3 -->|output| 4;\n  2 -->|output| 4;\n  5[\"Column Join\"];\n  4 -->|9:out_counts| 5;"},{"workflow":"scrna_pp_celseq.ga","tests":false,"url":"https://training.galaxyproject.org/training-material/topics/single-cell/tutorials/scrna-preprocessing/workflows/scrna_pp_celseq.ga","path":"topics/single-cell/tutorials/scrna-preprocessing/workflows/scrna_pp_celseq.ga","wfid":"single-cell-scrna-preprocessing","wfname":"scrna_pp_celseq","trs_endpoint":"https://training.galaxyproject.org/training-material/api/ga4gh/trs/v2/tools/single-cell-scrna-preprocessing/versions/scrna_pp_celseq","license":null,"creators":[],"name":"CelSeq2: Single Batch (mm10)","title":"CelSeq2: Single Batch (mm10)","test_results":null,"modified":"2024-06-17 00:06:04 +0000","mermaid":"flowchart TD\n  0[\"ℹ️ Input Collection\\nBatch\"];\n  style 0 stroke:#2c3143,stroke-width:4px;\n  1[\"ℹ️ Input Dataset\\nBarcodes single-col\"];\n  style 1 stroke:#2c3143,stroke-width:4px;\n  2[\"ℹ️ Input Dataset\\nGTF file UCSC\"];\n  style 2 stroke:#2c3143,stroke-width:4px;\n  3[\"UMI-tools extract\"];\n  1 -->|output| 3;\n  0 -->|output| 3;\n  4[\"Alignment Choose a Genome\"];\n  2 -->|output| 4;\n  3 -->|out2| 4;\n  5[\"Filter\"];\n  4 -->|mapped_reads| 5;\n  6[\"featureCounts\"];\n  5 -->|out_file1| 6;\n  2 -->|output| 6;\n  7[\"UMI-tools count\"];\n  6 -->|output_bam| 7;"}],"api":"https://training.galaxyproject.org/training-material/api/topics/single-cell/tutorials/scrna-preprocessing/tutorial.json","tools":["__FLATTEN__","toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_sed_tool/1.1.1","toolshed.g2.bx.psu.edu/repos/devteam/bamtools_filter/bamFilter/2.4.1","toolshed.g2.bx.psu.edu/repos/devteam/samtools_stats/samtools_stats/2.0.1","toolshed.g2.bx.psu.edu/repos/iuc/collection_column_join/collection_column_join/0.0.3","toolshed.g2.bx.psu.edu/repos/iuc/featurecounts/featurecounts/1.6.2","toolshed.g2.bx.psu.edu/repos/iuc/featurecounts/featurecounts/2.0.1","toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc/1.5.0","toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc/1.9","toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star/2.5.2b-2","toolshed.g2.bx.psu.edu/repos/iuc/rgrnastar/rna_star/2.7.7a","toolshed.g2.bx.psu.edu/repos/iuc/umi_tools_count/umi_tools_count/0.5.3.2","toolshed.g2.bx.psu.edu/repos/iuc/umi_tools_count/umi_tools_count/0.5.5.1","toolshed.g2.bx.psu.edu/repos/iuc/umi_tools_extract/umi_tools_extract/0.5.3.2","toolshed.g2.bx.psu.edu/repos/iuc/umi_tools_extract/umi_tools_extract/0.5.5.1"],"supported_servers":{"exact":[{"url":"https://usegalaxy.eu","name":"UseGalaxy.eu","usegalaxy":true}],"inexact":[{"url":"https://usegalaxy.be/","name":"UseGalaxy.be","usegalaxy":false},{"url":"https://usegalaxy.cz/","name":"UseGalaxy.cz","usegalaxy":false},{"url":"https://usegalaxy.fr/","name":"UseGalaxy.fr","usegalaxy":false},{"url":"https://usegalaxy.no/","name":"UseGalaxy.no","usegalaxy":false},{"url":"https://usegalaxy.org","name":"UseGalaxy.org (Main)","usegalaxy":true},{"url":"https://usegalaxy.org.au","name":"UseGalaxy.org.au","usegalaxy":true}]},"topic_name_human":"Single Cell","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[{"name":"text_processing","owner":"bgruening","revisions":"d698c222f354","tool_panel_section_label":"Text Manipulation","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"bamtools_filter","owner":"devteam","revisions":"cb20f99fd45b","tool_panel_section_label":"SAM/BAM","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"samtools_stats","owner":"devteam","revisions":"24c5d43cb545","tool_panel_section_label":"SAM/BAM","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"collection_column_join","owner":"iuc","revisions":"3ddd99c7efee","tool_panel_section_label":"Join, Subtract and Group","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"featurecounts","owner":"iuc","revisions":"f3a5f075498f","tool_panel_section_label":"RNA Analysis","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"featurecounts","owner":"iuc","revisions":"ea04b737afa0","tool_panel_section_label":"RNA Analysis","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"multiqc","owner":"iuc","revisions":"df99138d2776","tool_panel_section_label":"Quality Control","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"multiqc","owner":"iuc","revisions":"c1a4b5f3b432","tool_panel_section_label":"Quality Control","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"rgrnastar","owner":"iuc","revisions":"2055c2667eb3","tool_panel_section_label":"Mapping","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"rgrnastar","owner":"iuc","revisions":"7ed2edc1337f","tool_panel_section_label":"Mapping","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"umi_tools_count","owner":"iuc","revisions":"b557acca0b56","tool_panel_section_label":"FASTA/FASTQ","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"umi_tools_count","owner":"iuc","revisions":"8250ea3a1501","tool_panel_section_label":"FASTA/FASTQ","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"umi_tools_extract","owner":"iuc","revisions":"828dba98cdb4","tool_panel_section_label":"FASTA/FASTQ","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"umi_tools_extract","owner":"iuc","revisions":"6a675c3aa610","tool_panel_section_label":"FASTA/FASTQ","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"}]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools:\n- name: text_processing\n  owner: bgruening\n  revisions: d698c222f354\n  tool_panel_section_label: Text Manipulation\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: bamtools_filter\n  owner: devteam\n  revisions: cb20f99fd45b\n  tool_panel_section_label: SAM/BAM\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: samtools_stats\n  owner: devteam\n  revisions: 24c5d43cb545\n  tool_panel_section_label: SAM/BAM\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: collection_column_join\n  owner: iuc\n  revisions: 3ddd99c7efee\n  tool_panel_section_label: Join, Subtract and Group\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: featurecounts\n  owner: iuc\n  revisions: f3a5f075498f\n  tool_panel_section_label: RNA Analysis\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: featurecounts\n  owner: iuc\n  revisions: ea04b737afa0\n  tool_panel_section_label: RNA Analysis\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: multiqc\n  owner: iuc\n  revisions: df99138d2776\n  tool_panel_section_label: Quality Control\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: multiqc\n  owner: iuc\n  revisions: c1a4b5f3b432\n  tool_panel_section_label: Quality Control\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: rgrnastar\n  owner: iuc\n  revisions: 2055c2667eb3\n  tool_panel_section_label: Mapping\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: rgrnastar\n  owner: iuc\n  revisions: 7ed2edc1337f\n  tool_panel_section_label: Mapping\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: umi_tools_count\n  owner: iuc\n  revisions: b557acca0b56\n  tool_panel_section_label: FASTA/FASTQ\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: umi_tools_count\n  owner: iuc\n  revisions: 8250ea3a1501\n  tool_panel_section_label: FASTA/FASTQ\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: umi_tools_extract\n  owner: iuc\n  revisions: 828dba98cdb4\n  tool_panel_section_label: FASTA/FASTQ\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: umi_tools_extract\n  owner: iuc\n  revisions: 6a675c3aa610\n  tool_panel_section_label: FASTA/FASTQ\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n","tours":false,"video":false,"slides_recordings":false,"translations":{"tutorial":[],"slides":[],"video":false},"license":"CC-BY-4.0","type":"tutorial"}