{"layout":"tutorial_hands_on","title":"Inferring single cell trajectories with Monocle3","subtopic":"single-cell-CS","priority":5,"zenodo_link":"https://zenodo.org/records/10397366","redirect_from":["/topics/transcriptomics/tutorials/scrna-case_monocle3-trajectories/tutorial","/short/single-cell/scrna-case_monocle3-trajectories","/short/T00249"],"questions":["How can I prepare input files for Monocle starting from an AnnData object?","How can I infer lineage relationships between clusters, without a time series?","What can trajectory analysis tell us?"],"objectives":["Identify which operations to perform on an AnnData object to obtain the files needed for Monocle","Follow the Monocle3 workflow and choose the right parameter values","Compare the outputs from Scanpy and Monocle","Interpet trajectory analysis results"],"time_estimation":"2H","key_points":["You should understand your data object sufficiently to be able to extract relevant information for further analysis.","Trajectory analysis is highly dependent on the parameter values you choose, as such ‘inferred relationships’ are a bigger mathematical leap. Therefore, you should always check if the output makes biological sense before proceeding to the next step.","Comparing the output of two different methods applied on the same dataset might be useful to confirm the results, to ensure that the findings are reliable and even sometimes to find a new piece of information."],"requirements":[{"type":"internal","topic_name":"single-cell","tutorials":["scrna-case_alevin","scrna-case_alevin-combine-datasets","scrna-case_basic-pipeline","scrna-case_JUPYTER-trajectories","scrna-data-ingest"]}],"tags":["10x","paper-replication","R"],"contributions":{"authorship":["wee-snufkin"],"editing":["hexylena","nomadscientist"],"testing":["nomadscientist"],"funding":["epsrc-training-grant"]},"js_requirements":{"mathjax":null,"mermaid":false},"short_id":"T00249","url":"/topics/single-cell/tutorials/scrna-case_monocle3-trajectories/tutorial.html","topic_name":"single-cell","tutorial_name":"scrna-case_monocle3-trajectories","dir":"topics/single-cell/tutorials/scrna-case_monocle3-trajectories","symlink":null,"id":"single-cell/scrna-case_monocle3-trajectories","ref_tutorials":["<p>This tutorial is a follow-up to the <a href=\"/training-material/topics/single-cell/index.html\">‘Single-cell RNA-seq: Case Study’</a>. We will use the same sample from the previous tutorials. If you haven’t done them yet, it’s highly recommended that you go through them to get an idea how to <a href=\"/training-material/topics/single-cell/tutorials/scrna-case_alevin/tutorial.html\">prepare a single cell matrix</a>, <a href=\"/training-material/topics/single-cell/tutorials/scrna-case_alevin-combine-datasets/tutorial.html\">combine datasets</a> and <a href=\"/training-material/topics/single-cell/tutorials/scrna-case_basic-pipeline/tutorial.html\">filter, plot and process scRNA-seq data</a> to get the data in the form we’ll be working on today.</p>\n\n<p>In this tutorial we will perform trajectory analysis using <a href=\"https://cole-trapnell-lab.github.io/monocle3/\">monocle3</a>. You can find out more about the theory behind trajectory analysis in our <a href=\"/training-material/topics/single-cell/tutorials/scrna-trajectories/slides.html\">slide deck</a>. We have already analysed the trajectory of our sample using the ScanPy toolkit in another tutorial: <a href=\"/training-material/topics/single-cell/tutorials/scrna-case_JUPYTER-trajectories/tutorial.html\">Inferring Trajectories using Scanpy</a>. However, trajectory analysis is quite sensitive and some methods work better for specific datasets. In this tutorial, you will perform the same steps but using a different method for inferring trajectories. You will then compare the results, usability and outcomes! Sounds exciting, let’s dive into that!</p>\n\n<!--SNIPPET-->\n<blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-using-tutorial-mode\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-using-tutorial-mode\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Using tutorial mode</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <p>Tools are frequently updated to new versions. Your Galaxy may have multiple versions of the same tool available. By default, you will be shown the latest version of the tool. This may NOT be the same tool used in the tutorial you are accessing. Furthermore, if you use a newer tool in one step, and try using an older tool in the next step… this may fail! To ensure you use the same tool versions of a given tutorial, use the <strong>Tutorial mode</strong> feature.</p>   <ul>   <li>Open your Galaxy server</li>   <li>Click on the <i class=\"fas fa-graduation-cap\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">curriculum</span> icon on the top menu, this will open the GTN inside Galaxy.</li>   <li>Navigate to your tutorial</li>   <li>Tool names in tutorials will be blue buttons that open the correct tool for you</li>   <li><strong>Note:</strong> this does not work for all tutorials (yet)   <img src=\"/training-material/topics/contributing/images/88277962-ddda4a80-cce1-11ea-92cd-41b1df063db0.gif\" alt=\"gif showing how GTN-in-Galaxy works\" /></li>   <li>You can click anywhere in the grey-ed out area outside of the tutorial box to return back to the Galaxy analytical interface</li> </ul>   <blockquote class=\"warning\">   <warning-title>Not all browsers work!</warning-title>   <ul>     <li>We’ve had some issues with Tutorial mode on Safari for Mac users.</li>     <li>Try a <strong>different browser</strong> if you aren’t seeing the button.</li>   </ul> </blockquote> </blockquote>\n<p><!--END_SNIPPET--></p>\n\n<blockquote class=\"agenda\">\n  <agenda-title></agenda-title>\n\n  <p>In this tutorial, we will cover:</p>\n\n<ol id=\"markdown-toc\">\n  <li><a href=\"#get-data\" id=\"markdown-toc-get-data\">Get data</a></li>\n  <li><a href=\"#monocle3-workflow\" id=\"markdown-toc-monocle3-workflow\">Monocle3 workflow</a></li>\n  <li><a href=\"#pre-processing\" id=\"markdown-toc-pre-processing\">Pre-processing</a></li>\n  <li><a href=\"#dimensionality-reduction\" id=\"markdown-toc-dimensionality-reduction\">Dimensionality reduction</a></li>\n  <li><a href=\"#plotting\" id=\"markdown-toc-plotting\">Plotting</a>    <ol>\n      <li><a href=\"#clustering\" id=\"markdown-toc-clustering\">Clustering</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#gene-expression\" id=\"markdown-toc-gene-expression\">Gene expression</a></li>\n  <li><a href=\"#top-marker-genes\" id=\"markdown-toc-top-marker-genes\">Top marker genes</a></li>\n  <li><a href=\"#learn-the-trajectory-graph\" id=\"markdown-toc-learn-the-trajectory-graph\">Learn the trajectory graph</a></li>\n  <li><a href=\"#pseudotime-analysis\" id=\"markdown-toc-pseudotime-analysis\">Pseudotime analysis</a></li>\n  <li><a href=\"#conclusion\" id=\"markdown-toc-conclusion\">Conclusion</a></li>\n</ol>\n\n</blockquote>\n\n<h1 id=\"get-data\">Get data</h1>\n<p>We will continue to work on the case study data from a mouse model of fetal growth restriction <span class=\"citation\"><a href=\"#Bacon2018\">Bacon <i>et al.</i> 2018</a></span> (see <a href=\"https://www.ebi.ac.uk/gxa/sc/experiments/E-MTAB-6945/results/tsne\">the study in Single Cell Expression Atlas</a> and <a href=\"https://www.ebi.ac.uk/arrayexpress/experiments/E-MTAB-6945/\">the project submission</a>).</p>\n\n<p>In the previous tutorials, we first created an AnnData object and performed downstream analysis on that file. However, Monocle3 uses another datatype which is Cell Data Set (CDS). To be able to infer trajectories in Monocle, we need to transform our AnnData object into CDS file. And guess what - we already have a tutorial for that! We did it in <a href=\"/training-material/topics/single-cell/tutorials/scrna-data-ingest/tutorial.html\">format conversion tutorial</a>, in the <a href=\"/training-material/topics/single-cell/tutorials/scrna-data-ingest/tutorial.html#anndata---cell-data-set-cds\">Anndata -&gt; Cell Data Set (CDS) subsection</a>. To better understand the structure of CDS object and learn how to create it from expression matrix, cell and gene annotations, it is highly recommended that you complete the mentioned tutorial before importing the prepared CDS file.</p>\n\n<p>You have two options for uploading the dataset. Importing via history is often faster.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Option 1: Data upload - Import history</hands-on-title>\n\n  <ol>\n    <li>\n      <p>You can import history where we went from AnnData to CDS file. Then you will also have access to extracted cell metadata, gene metadata, and an expression matrix: <a href=\"https://singlecell.usegalaxy.eu/u/j.jakiela/w/copy-of-trajectory-analysis-using-monocle3\">Input history</a></p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-importing-a-history\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-importing-a-history\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Importing a history</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ol>   <li>Open the link to the shared history</li>   <li>Click on the <i class=\"fas fa-plus\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">new-history</span> <em>Import history</em> button on the top right</li>   <li>Enter a title for the new history</li>   <li>Click on <strong>Import</strong></li> </ol> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li>\n      <p><strong>Rename</strong> <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> the the history to your name of choice.</p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Option 2: Data upload - Add to history</hands-on-title>\n\n  <ol>\n    <li>Create a new history for this tutorial</li>\n    <li>\n      <p>Import the AnnData object from <a href=\"https://zenodo.org/records/10397366\">Zenodo</a></p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>https://zenodo.org/records/10397366/files/CDS_input_for_Monocle3_tutorial.rdata\n</code></pre></div>      </div>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-importing-via-links\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-importing-via-links\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Importing via links</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Copy the link location</li>   <li>     <p>Click <i class=\"fas fa-upload\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-upload</span> <strong>Upload Data</strong> at the top of the tool panel</p>   </li>   <li>Select <i class=\"fa fa-edit\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-wf-edit</span> <strong>Paste/Fetch Data</strong></li>   <li>     <p>Paste the link(s) into the text field</p>   </li>   <li>     <p>Press <strong>Start</strong></p>   </li>   <li><strong>Close</strong> the window</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"details\">\n  <details-title>Input files for Monocle3</details-title>\n\n  <p>Monocle3 turns the expression matrix, cell and gene annotations into an object called cell_data_set (CDS), which holds single-cell expression data. We provided you with the CDS file already, but it was created by combining the three mentioned elements. Check out <a href=\"/training-material/topics/single-cell/tutorials/scrna-data-ingest/tutorial.html#anndata---cell-data-set-cds\">data conversion tutorial</a> to see how to do it!\nHere is what <a href=\"https://cole-trapnell-lab.github.io/monocle3/docs/starting/\">Monocle3 documentation</a> says about the three input files required to create a CDS object:</p>\n  <ul>\n    <li><strong>expression_matrix</strong>: a numeric matrix of expression values, where rows are genes, and columns are cells. Must have the same number of columns as the cell_metadata has rows and the same number of rows as the gene_metadata has rows.</li>\n    <li><strong>cell_metadata</strong>: a data frame, where rows are cells, and columns are cell attributes (such as cell type, culture condition, day captured, etc.)</li>\n    <li><strong>gene_metadata</strong>: a data frame, where rows are features (e.g. genes), and columns are gene attributes, such as biotype, gc content, etc. One of its columns should be named “gene_short_name”, which represents the gene symbol or simple name (generally used for plotting) for each gene.</li>\n  </ul>\n\n</blockquote>\n\n<p>Once you get the CDS file in your history, let’s have a closer look at this dataset to understand it a little bit better.</p>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <p>What are the dimensions of the created CDS object?</p>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <p>Just click on that dataset - on the preview you’ll see that the dimensions are 15395 x 8569 - so exactly as we predicted genes x cells!</p>\n    <figure id=\"figure-1\" style=\"max-width: 90%;\"><img src=\"../../images/scrna-casestudy-monocle/monocle_dimensions.png\" alt=\"The dataset preview shows class: cell_data_set, dim: 15395 8569. \" width=\"269\" height=\"323\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/scrna-casestudy-monocle/monocle_dimensions.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 1</strong>:</span> Monocle Object Dimensions</figcaption></figure>\n\n  </blockquote>\n</blockquote>\n\n<h1 id=\"monocle3-workflow\">Monocle3 workflow</h1>\n\n<p>The Monocle3 workflow looks like the following, which should seem pretty similar to what you’ve done throughout the case study.</p>\n\n<figure id=\"figure-2\" style=\"max-width: 90%;\"><img src=\"../../images/scrna-casestudy-monocle/monocle3_new_workflow.png\" alt=\"Monocle workflow: scRNA-seq dataset, pre-process data (normalise, remove batch effects), non-linear dimensionality reduction (t-SNE, UMAP), cluster cells, compare clusters (identify top markers, targeted contrasts), trajectory analysis. \" width=\"8000\" height=\"1374\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/scrna-casestudy-monocle/monocle3_new_workflow.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 2</strong>:</span> Workflow provided by Monocle3 documentation</figcaption></figure>\n\n<p>We will follow those steps and see how it all works in practice.</p>\n\n<h1 id=\"pre-processing\">Pre-processing</h1>\n\n<p>In Galaxy, there are currently 2 methods of initial dimensionality reduction included in the pre-processing step: principal component analysis (PCA) and latent semantic indexing (LSI).\nGiven that PCA is more commonly used, and it allows us to perform further steps on the CDS object, we’ll use this method. There is one parameter here that has a great impact on how our analysis will look - the <code class=\"language-plaintext highlighter-rouge\">dimensionality of the initially reduced space</code>. This is a highly subjective choice - you will want to test a lot of different parameters on your dataset. After much trial and error, we were able to find the value that made the most sense biologically. Have a look at the image below to see how different values affect the outcomes.</p>\n\n<figure id=\"figure-3\" style=\"max-width: 90%;\"><img src=\"../../images/scrna-casestudy-monocle/num_dim_legend.jpg\" alt=\"Six graphs showing the output of depending on the number of dimensions that the space was reduced to during pre-processing. Chosen numbers: 10 (really disjoint cell groups), 50 (disjoint cell groups), 150 (two bigger groups), 200 (cell groups start to come together), 250 (cell groups well aligned into a semicircle), 300 (cell groups start to fold and become biologically irrelevant). \" width=\"1765\" height=\"1107\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/scrna-casestudy-monocle/num_dim_legend.jpg\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 3</strong>:</span> Different outputs depending on the number of dimensions that the space was reduced to during pre-processing. Currently the label size in Monocle graphs in Galaxy is a nightmare, so for clarity additional legend was added to this image. We're working on the label size so that you can generate clear, readable and pretty graphs. However in this particular figure, the main point is to show the differences in shapes depending on the num-dim.</figcaption></figure>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <p>Looking at the image above, which value would you choose?</p>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <p>It might be hard to tell at this point without any explanation! Don’t worry, after a few more steps you’ll understand what all those colors mean and how to generate those plots. But look - we want to infer trajectories and find relationships between cells, ideally we would see the development of cells or transition from one type to another. In the graphs where num-dim is from 10 to 200, you see that the clusters are quite disjoint, while we want to see smooth transitions from one to another. I can tell you now that we’ll go ahead with the value of <strong>250</strong>. We’re not choosing 300, because the arrangement of the cells on that graph is not really biologically relevant.</p>\n\n  </blockquote>\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Pre-processing</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/ebi-gxa/monocle3_preprocess/monocle3_preprocess/0.1.4+galaxy0\" title=\"Monocle3 preprocess tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Monocle3 preprocess</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.1.4+galaxy0)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Input object in RDS format”</em>: output of <strong>Monocle3 create</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span></li>\n        <li><em>“The dimensionality of the reduced space.”</em>: <code class=\"language-plaintext highlighter-rouge\">250</code></li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h1 id=\"dimensionality-reduction\">Dimensionality reduction</h1>\n\n<p>Now it’s time for the proper dimensionality reduction, to turn the original thousands of dimensions (genes), into a 2-dimensional graph. There are several algorithms to do this: UMAP, tSNE, PCA and LSI (only possible when preprocess_method is set to <code class=\"language-plaintext highlighter-rouge\">LSI</code>), but due to the same reasons as above, we’ll use UMAP (most common + allows further operations + best results). But I’ll let you see how the outputs from the other algorithms look to convince you that <strong>UMAP</strong> is indeed the best for this dataset. Of course, it’s possible that by choosing different pre-processing values, tSNE or PCA plots would look better, so don’t be afraid to play around with the parameters and test them!</p>\n\n<figure id=\"figure-4\" style=\"max-width: 90%;\"><img src=\"../../images/scrna-casestudy-monocle/dim_red_methods.png\" alt=\"Four graphs showing the alignment of cell types depending on the algorithm of dimensionality reduction that was chosen: UMAP, tSNE, PCA, LSI. UMAP shows distinct cell groups, transitioning smoothly from one to another, creating kind of semicircle. tSNE shows distinct cell groups, however no smooth transitions are observed, all groups gathered into one big grouping. PCA shows cell groups whose boundaries are blurred between each other. On LSI graph, the cell types are all mixed together.\" width=\"1935\" height=\"539\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/scrna-casestudy-monocle/dim_red_methods.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 4</strong>:</span> The preview of alignment of cell types depending on the algorithm of dimensionality reduction that was chosen: UMAP, tSNE, PCA, LSI. The methods were applied to the output of the PCA-preprocessed data (except LSI method which was called on LSI-preprocessed data). LSI failed in forming distinct cell groups, PCA managed to cluster cells according to their types but tSNE did it more precisely. However, UMAP gave the best results, not only showing distinct cell type groups, but also ordering them in a way that makes sense biologically - DN to T-mat.</figcaption></figure>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Dimensionality reduction</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/ebi-gxa/monocle3_reducedim/monocle3_reduceDim/0.1.4+galaxy0\" title=\"Monocle3 reduceDim tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Monocle3 reduceDim</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.1.4+galaxy0)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Input object in RDS format”</em>: output of <strong>Monocle3 preprocess</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span></li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h1 id=\"plotting\">Plotting</h1>\n\n<p>Alright, now let’s have a look at our output! Above you got a sneak peek of how the plot would look, but now you’ll generate the plots on your own!</p>\n\n<p>Thanks to the fact that we provided Monocle3 with annotated data, we can now color the cells by any attribute that was in the cell metadata file! Similarly to the previous tutorial, we’ll color them by cell type, genotype, batch and sex. At least for now…</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Plotting</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/ebi-gxa/monocle3_plotcells/monocle3_plotCells/0.1.5+galaxy1\" title=\"Monocle3 plotCells tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Monocle3 plotCells</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.1.5+galaxy1)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Input object in RDS format”</em>: output of <strong>Monocle3 reduceDim</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span></li>\n        <li><em>“The cell attribute (e.g. the column of pData(cds)) to map to each cell’s color, or one of {cluster, partition, pseudotime}.”</em>: <code class=\"language-plaintext highlighter-rouge\">cell_type</code></li>\n        <li><em>“If set, display the cell group names directly on the plot. Otherwise include a color legend on the side of the plot.”</em>: <i class=\"fas fa-toggle-on\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-toggle</span> <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n      </ul>\n    </li>\n    <li>\n      <p>Rename <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> the output: <code class=\"language-plaintext highlighter-rouge\">Cell type plot</code></p>\n    </li>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/ebi-gxa/monocle3_plotcells/monocle3_plotCells/0.1.5+galaxy1\" title=\"Monocle3 plotCells tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Monocle3 plotCells</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.1.5+galaxy1)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Input object in RDS format”</em>: output of <strong>Monocle3 reduceDim</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span></li>\n        <li><em>“The cell attribute (e.g. the column of pData(cds)) to map to each cell’s color, or one of {cluster, partition, pseudotime}.”</em>: <code class=\"language-plaintext highlighter-rouge\">genotype</code></li>\n        <li><em>“If set, display the cell group names directly on the plot. Otherwise include a color legend on the side of the plot.”</em>: <i class=\"fas fa-toggle-on\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-toggle</span> <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n      </ul>\n    </li>\n    <li>\n      <p>Rename <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> the output: <code class=\"language-plaintext highlighter-rouge\">Genotype plot</code></p>\n    </li>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/ebi-gxa/monocle3_plotcells/monocle3_plotCells/0.1.5+galaxy1\" title=\"Monocle3 plotCells tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Monocle3 plotCells</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.1.5+galaxy1)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Input object in RDS format”</em>: output of <strong>Monocle3 reduceDim</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span></li>\n        <li><em>“The cell attribute (e.g. the column of pData(cds)) to map to each cell’s color, or one of {cluster, partition, pseudotime}.”</em>: <code class=\"language-plaintext highlighter-rouge\">batch</code></li>\n        <li><em>“If set, display the cell group names directly on the plot. Otherwise include a color legend on the side of the plot.”</em>: <i class=\"fas fa-toggle-on\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-toggle</span> <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n      </ul>\n    </li>\n    <li>\n      <p>Rename <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> the output: <code class=\"language-plaintext highlighter-rouge\">Batch plot</code></p>\n    </li>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/ebi-gxa/monocle3_plotcells/monocle3_plotCells/0.1.5+galaxy1\" title=\"Monocle3 plotCells tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Monocle3 plotCells</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.1.5+galaxy1)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Input object in RDS format”</em>: output of <strong>Monocle3 reduceDim</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span></li>\n        <li><em>“The cell attribute (e.g. the column of pData(cds)) to map to each cell’s color, or one of {cluster, partition, pseudotime}.”</em>: <code class=\"language-plaintext highlighter-rouge\">sex</code></li>\n        <li><em>“If set, display the cell group names directly on the plot. Otherwise include a color legend on the side of the plot.”</em>: <i class=\"fas fa-toggle-on\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-toggle</span> <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n      </ul>\n    </li>\n    <li>Rename <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> the output: <code class=\"language-plaintext highlighter-rouge\">Sex plot</code></li>\n  </ol>\n\n</blockquote>\n\n<p>The <a href=\"/training-material/topics/single-cell/tutorials/scrna-case_basic-pipeline/tutorial.html\">Previous tutorial</a> discussed in detail the biological interpretation of data, so we will quickly go through similar analysis to see if the results are consistent and if we can draw any new conclusions.</p>\n\n<p>As a reminder, here’s the comparision between cell type annotation done in the other tutorial using Scanpy, and the output from the previous step of this Monocle tutorial. The main difference is that Scanpy was used to identify the cell types and assign them to clusters. That data was then passed on to Force-Directed + PAGA algorithms to infer trajectory, and then the arrangement of the cell groups changed a bit. In Monocle, trajectory analysis will be based on the clustering you see now.</p>\n\n<figure id=\"figure-5\" style=\"max-width: 90%;\"><img src=\"../../images/scrna-casestudy-monocle/cell_types.png\" alt=\"Each cell type forms a distinct group but they lie next to each other: DN, DP-M2, DP-M3, then DP-M4 has DP-M1 on the right and DP-L on the left, and DP-L neighbors with T-mat. \" width=\"480\" height=\"480\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/scrna-casestudy-monocle/cell_types.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 5</strong>:</span> Cells coloured in Monocle by their type.</figcaption></figure>\n\n<p>In the mentioned tutorial, we annotated the cells so that we know what type they are. Above you can see how Monocle used this information to colour cells by their type. It is important to see the ‘form’ of the graph and how the cell types are arranged within its confines. But why is it important? Well, in Monocle, our trajectory analysis will be based on the same arrangement of the cells that you see now. And if you now recall our choice of the number of dimensions during pre-processing, you’ll understand why it was crucial - choosing the right value at the beginning determines the ‘shape’ of the graph that is then retained for the trajectory analysis. Therefore, the fact that on the plot above we clearly see DN cells on one side of the graph and T-mat on the other, going through DP cells, looks promising. But there is DP-M1 group that suspiciously branches out… Let’s investigate that and wait until the trajectory is inferred!</p>\n\n<blockquote class=\"question\">\n  <question-title>Genotype</question-title>\n  <p>Based on our results, can we confirm findings from the previous tutorial that DP-L and mature T-cells (particularly the top half) are missing some knockout cells?</p>\n  <figure id=\"figure-6\" style=\"max-width: 90%;\"><img src=\"../../images/scrna-casestudy-monocle/genotypes.png\" alt=\"Genotype data plotted on the obtained graph, compared with the cell types graph. Cell types DP-M1, DP-L and T-mat are mainly wildtypes, while for other cell types the distribution is fairly even.\" width=\"1007\" height=\"505\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/scrna-casestudy-monocle/genotypes.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 6</strong>:</span> Genotype differences</figcaption></figure>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <p>Indeed, that’s what we see in our graph! But look closer, there is something more…Additionally, we also discovered that the vast majority of DP-M1 is only wildtype cells. That’s interesting, isn’t it?</p>\n\n  </blockquote>\n</blockquote>\n\n<blockquote class=\"question\">\n  <question-title>Batch effect</question-title>\n  <p>Can we confirm the previous findings that DP-L looks to be mainly comprised of N705?</p>\n  <figure id=\"figure-7\" style=\"max-width: 90%;\"><img src=\"../../images/scrna-casestudy-monocle/batch_1.png\" alt=\"Batch data plotted on the obtained graph, compared with the cell types graph. DP-L and DP-M1 seem to consist mostly of N705 and N706, while other cell types have quite even batch distribution.\" width=\"1007\" height=\"505\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/scrna-casestudy-monocle/batch_1.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 7</strong>:</span> Checking for batch effect</figcaption></figure>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <p>Both DP-L and DP-M1 seem to consist mostly of N705 and N706. There might be indeed a bit of batch effect, so you could consider using batch correction on this dataset. In the absence of batch correction, we will focus on those clusters where there is batch mixing for biological interpretation. Finally, we will look at the confounding effect of sex.</p>\n    <figure id=\"figure-8\" style=\"max-width: 90%;\"><img src=\"../../images/scrna-casestudy-monocle/sex_1.png\" alt=\"Sex data plotted on the obtained graph, compared with the cell types and genotype graphs. No female cells in DP-L and DP-M1 can be observed, but they appear in other cell types.\" width=\"1460\" height=\"501\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/scrna-casestudy-monocle/sex_1.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 8</strong>:</span> Sex distribution across the sample</figcaption></figure>\n    <p>There are also no female cells in DP-L and DP-M1. The one female sample - which is one of the mere three knockout samples - seems to be distributed in the same areas as the knockout samples at large. Luckily, this doesn’t seem to be a confounding factor and we can still learn from our data.</p>\n\n  </blockquote>\n</blockquote>\n\n<h2 id=\"clustering\">Clustering</h2>\n\n<p>Don’t get confused - we haven’t clustered our cells yet, for now we have only plotted them based on cell type annotation. Now it’s time to create clusters, which - in an ideal world where all computation picks up the exact biological phenomenons - would yield the same areas as the clusters determined by the Scanpy algorithms. Is this the case here? Do Monocle and Scanpy identify the same clusters?</p>\n\n<p>Monocle uses a technique called “community detection” (<span class=\"citation\"><a href=\"#Traag_2019\">Traag <i>et al.</i> 2019</a></span>) to group cells. This approach was introduced by <span class=\"citation\"><a href=\"#Levine_2015\">Levine <i>et al.</i> 2015</a></span> as part of the phenoGraph algorithm.</p>\n\n<p>Monocle also divides the cells into larger, more well separated groups called partitions, using a statistical test from <span class=\"citation\"><a href=\"#Wolf_2019\">Wolf <i>et al.</i> 2019</a></span>, introduced as part of their <a href=\"https://github.com/theislab/paga\">PAGA</a> algorithm.</p>\n\n<blockquote class=\"details\">\n  <details-title>Clusters vs partitions</details-title>\n\n  <p>Clusters are particularly useful while trying to assign cells to a certain type, because they are based on the similarity in gene expression. The relationships between different clusters are analysed to identify possible trajectories.</p>\n\n  <p>Partitions, meanwhile, are larger groups of cells that usually contain several clusters. Trajectory inference is performed only within one partition, so it is essential that all the cells that we want to analyse in pseudotime belong to the same partition.</p>\n\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Clustering </hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/ebi-gxa/monocle3_partition/monocle3_partition/0.1.4+galaxy0\" title=\"Monocle3 partition tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Monocle3 partition</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.1.4+galaxy0)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Input object in RDS format”</em>: output of <strong>Monocle3 reduceDim</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span></li>\n        <li><em>“Resolution of clustering result, specifying the granularity of clusters. Not used by default and the standard igraph louvain clustering algorithm will be used.”</em>: <code class=\"language-plaintext highlighter-rouge\">0.00015</code></li>\n        <li><em>“The q-value threshold used to determine the partition of cells.”</em>: <code class=\"language-plaintext highlighter-rouge\">1.0</code></li>\n        <li>The clusters and partitions are now stored in your CDS file. To see them, just plot the output, coloring the cells with the corresponding attributes.</li>\n      </ul>\n    </li>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/ebi-gxa/monocle3_plotcells/monocle3_plotCells/0.1.5+galaxy1\" title=\"Monocle3 plotCells tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Monocle3 plotCells</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.1.5+galaxy1)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Input object in RDS format”</em>: output of <strong>Monocle3 partition</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span></li>\n        <li><em>“The cell attribute (e.g. the column of pData(cds)) to map to each cell’s color, or one of {cluster, partition, pseudotime}.”</em>: <code class=\"language-plaintext highlighter-rouge\">partition</code></li>\n      </ul>\n    </li>\n    <li>\n      <p>Rename <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> the output: <code class=\"language-plaintext highlighter-rouge\">Partition plot</code></p>\n    </li>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/ebi-gxa/monocle3_plotcells/monocle3_plotCells/0.1.5+galaxy1\" title=\"Monocle3 plotCells tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Monocle3 plotCells</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.1.5+galaxy1)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Input object in RDS format”</em>: output of <strong>Monocle3 partition</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span></li>\n        <li><em>“The cell attribute (e.g. the column of pData(cds)) to map to each cell’s color, or one of {cluster, partition, pseudotime}.”</em>: <code class=\"language-plaintext highlighter-rouge\">cluster</code></li>\n      </ul>\n    </li>\n    <li>Rename <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> the output: <code class=\"language-plaintext highlighter-rouge\">Cluster plot</code></li>\n  </ol>\n\n</blockquote>\n<blockquote class=\"tip\">\n  <tip-title>If the partition does not contain all your cells of interest...</tip-title>\n\n  <p>Sometimes it might happen that cells are grouped into several partitions, while you want them all to be in just one in order to perform trajectory analysis on all of them. Then, you can try to increase the <code class=\"language-plaintext highlighter-rouge\">q-value</code> threshold that is used to determine the partition of cells.</p>\n  <figure id=\"figure-9\" style=\"max-width: 90%;\"><img src=\"../../images/scrna-casestudy-monocle/partition_qval.png\" alt=\"Two graphs showing the difference between q-value used. For q-value=0.05 there are two partitions formed and for q-value=1.0 all cells were assigned to one partition so that there is only one in total.\" width=\"1001\" height=\"544\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/scrna-casestudy-monocle/partition_qval.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 9</strong>:</span> q-value threshold affecting the span of partition. Note that 0.05 is the default value.</figcaption></figure>\n\n</blockquote>\n<blockquote class=\"tip\">\n  <tip-title>If the granularity of clusters does not make sense...</tip-title>\n\n  <p>When using standard igraph louvain clustering, the value of <code class=\"language-plaintext highlighter-rouge\">resolution</code> parameter is by default set to <code class=\"language-plaintext highlighter-rouge\">NULL</code>, which means that it is determined automatically. If you are not satisfied with the results of the standard igraph louvain clustering, you may set the <code class=\"language-plaintext highlighter-rouge\">resolution</code> value manually, and thus specify the granularity of the clustering.</p>\n  <figure id=\"figure-10\" style=\"max-width: 90%;\"><img src=\"../../images/scrna-casestudy-monocle/clusters_resolution.png\" alt=\"Three graphs showing the difference between the resolution of clustering. During automatic determination of this value, there were 6 clusters formed, corresponding to cell types. Manually set resolution=0.001 resulted in 11 clusters so that more than one cluster corresponds to one cell type, and resolution=0.1 resulted in almost 200 very small clusters.\" width=\"1465\" height=\"548\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/scrna-casestudy-monocle/clusters_resolution.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 10</strong>:</span> Different granularity of clusters based on the resolution set automatically and manually.</figcaption></figure>\n</blockquote>\n\n<blockquote class=\"warning\">\n  <warning-title>Ambiguous clusters!</warning-title>\n  <p>As mentioned above, standard igraph louvain clustering determines the resolution automatically, unless the specific value is provided by the user. Therefore, it sometimes returns slightly different outputs. To ensure that your clusters are reproducible, you might want to pass a certain value to the <code class=\"language-plaintext highlighter-rouge\">resolution</code> parameter. In case of our data, the resolution value of 0.00015 gave the same results as the best output of igraph louvain clustering, and ensured reproducibility.</p>\n  <figure id=\"figure-11\" style=\"max-width: 90%;\"><img src=\"../../images/scrna-casestudy-monocle/igraph.png\" alt=\"Four graphs showing slight changes in clustering: 1) 5 clusters, 2) 5 clusters but with other cells assigned, 3) 4 clusters, 4) 6 clusters.\" width=\"1874\" height=\"471\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/scrna-casestudy-monocle/igraph.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 11</strong>:</span> Standard igraph louvain clustering giving different results despite the same input becasue of the automatic determination of resolution vaule.</figcaption></figure>\n\n</blockquote>\n\n<p>If we compare the annotated cell types and the clusters that were just formed, we see that they nicely correspond to one another.</p>\n<figure id=\"figure-12\" style=\"max-width: 90%;\"><img src=\"../../images/scrna-casestudy-monocle/cell_type_vs_cluster.png\" alt=\"When projected onto a graph, clusters quite accurately corresponding to the cell type.\" width=\"980\" height=\"529\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/scrna-casestudy-monocle/cell_type_vs_cluster.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 12</strong>:</span> Comparision between annotated cell types and formed clusters.</figcaption></figure>\n\n<h1 id=\"gene-expression\">Gene expression</h1>\n\n<p>We haven’t looked at gene expression yet! This step is particularly important when working with data which is not annotated. Then, based on the expression of marker genes, you are able to identify which clusters correspond to which cell types. This is indeed what we did in the previous tutorial using scanpy. We can do the same using Monocle3! Since we work on annotated data, we can directly check if the expressed genes actually correspond to the previously assigned cell types. If they do, that’s great - if two different methods are consistent, that gives us more confidence that our results are valid.\nBelow is the table that we used in the previous tutorial to identify the cell types.</p>\n\n<table>\n  <thead>\n    <tr>\n      <th>Marker</th>\n      <th>Cell type</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>Il2ra</td>\n      <td>Double negative (early T-cell)</td>\n    </tr>\n    <tr>\n      <td>Cd8b1, Cd8a, Cd4</td>\n      <td>Double positive (middle T-cell)</td>\n    </tr>\n    <tr>\n      <td>Cd8b1, Cd8a, Cd4 - high</td>\n      <td>Double positive (late middle T-cell)</td>\n    </tr>\n    <tr>\n      <td>Itm2a</td>\n      <td>Mature T-cell</td>\n    </tr>\n    <tr>\n      <td>Aif1</td>\n      <td>Macrophages</td>\n    </tr>\n    <tr>\n      <td>Hba-a1</td>\n      <td>RBC</td>\n    </tr>\n  </tbody>\n</table>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Gene expression</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/ebi-gxa/monocle3_plotcells/monocle3_plotCells/0.1.5+galaxy1\" title=\"Monocle3 plotCells tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Monocle3 plotCells</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.1.5+galaxy1)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Input object in RDS format”</em>: output of <strong>Monocle3 partition</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span></li>\n        <li><em>“The cell attribute (e.g. the column of pData(cds)) to map to each cell’s color, or one of {cluster, partition, pseudotime}.”</em>: <code class=\"language-plaintext highlighter-rouge\">cell_type</code></li>\n        <li><em>“A list of gene IDs/short names to plot.”</em>: <code class=\"language-plaintext highlighter-rouge\">Il2ra,Cd8b1,Cd8a,Cd4,Itm2a,Aif1,Hba-a1</code></li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<figure id=\"figure-13\" style=\"max-width: 90%;\"><img src=\"../../images/scrna-casestudy-monocle/gene_expression.png\" alt=\"Expression on the genes: Il2ra expressed in DN, Cd8b1, Cd8a expressed in the areas where middle DP, Cd4 mostly expressed in late DP cluster, Itm2a expressed in mature T-cells, Aif1 – no expression, Hba-a1 - very high expression in small branch of DP-M4.\" width=\"480\" height=\"480\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/scrna-casestudy-monocle/gene_expression.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 13</strong>:</span> Expression of the genes across analysed sample</figcaption></figure>\n\n<blockquote class=\"question\">\n  <question-title>Genes and cell types</question-title>\n  <p>Based on the gene expression graph that we just generated, the table above and your knowledge from the previous tutorial, how would you interpret the results?</p>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <ul>\n      <li><code class=\"language-plaintext highlighter-rouge\">Il2ra</code>: expressed in the cluster where DN cells are - an indication of where the trajectory should start</li>\n      <li><code class=\"language-plaintext highlighter-rouge\">Cd8b1, Cd8a</code>: expressed in the areas where middle DP were assigned - great</li>\n      <li>high <code class=\"language-plaintext highlighter-rouge\">Cd4</code>: mostly in late DP cluster - as expected</li>\n      <li><code class=\"language-plaintext highlighter-rouge\">Itm2a</code>: expressed in mature T-cells - tells us where the trajectory should end</li>\n      <li><code class=\"language-plaintext highlighter-rouge\">Aif1</code>: nothing here - correct! We filtered out macrophages from the sample</li>\n      <li><code class=\"language-plaintext highlighter-rouge\">Hba-a1</code>: look at this! Very high expression in just one, tiny bit, which hasn’t even been grouped into a cluster! So wait, why do we see hemoglobin gene here? Do we have red blood cells in our sample?! Let’s investigate that further…</li>\n    </ul>\n\n  </blockquote>\n</blockquote>\n\n<blockquote class=\"tip\">\n  <tip-title>Purity of the sample - Hba-a1 gene</tip-title>\n\n  <p>The Hba-a1 gene creates hemoglobin which is found in red blood cells. This is highly expressed in a tiny bit of the middle DP cluster. Interestingly, it forms a a clearly visible, distinct, little branch. Hemoglobin should NOT be found in T-cells. However, if you remember, the gene was found to be expressed in the previous Scanpy tutorial (see the image below). That marker appeared throughout the entire sample in low numbers, suggesting some background contamination of red blood cell debris in the cell samples during library generation. Unlike Scanpy, Monocle algorithms allowed us to gather the cells expressing that gene into a distinct group! That’s great!</p>\n\n  <figure id=\"figure-14\" style=\"max-width: 90%;\"><img src=\"../../images/scrna-casestudy-monocle/hb.png\" alt=\"In Monocle graph, the cells expressing hemoglobin gene were grouped into a small branch of DP-M4, while in Scanpy the marker appears throughout the entire sample in low numbers, not allowing to group those cells.\" width=\"1022\" height=\"588\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/scrna-casestudy-monocle/hb.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 14</strong>:</span> Hemoglobin across clusters - comparision between Monocle and Scanpy</figcaption></figure>\n\n</blockquote>\n\n<h1 id=\"top-marker-genes\">Top marker genes</h1>\n\n<p>Here we used a priori knowledge regarding the marker genes. If we wanted to approach this problem in an unsupervised manner, we could use Monocle to tell us the top marker genes in each group of cells. This is very useful if we are trying to identify a cell type, or if we want to find novel marker genes for known cell types.</p>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <p>If I cluster cells that are not annotated, can I assign clusters to a cell type based on gene expression using Monocle3?</p>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <p>Theoretically…yes! That’s the point of the clustering and gene expression analysis. However, as of the writing of this tutorial, this function hasn’t been turned into a Galaxy tool yet and is only available in R.</p>\n\n  </blockquote>\n\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Top marker genes</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/ebi-gxa/monocle3_topmarkers/monocle3_topmarkers/0.1.5+galaxy0\" title=\"Monocle3 top markers tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Monocle3 top markers</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.1.5+galaxy0)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Input Object”</em>: output of <strong>Monocle3 partition</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span></li>\n        <li><em>“Group cell by”</em>: <code class=\"language-plaintext highlighter-rouge\">cell_type</code></li>\n      </ul>\n    </li>\n    <li>Rename <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> the tabular output: <code class=\"language-plaintext highlighter-rouge\">Top markers table</code></li>\n    <li>Rename <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> the pdf output: <code class=\"language-plaintext highlighter-rouge\">Top markers plot</code></li>\n  </ol>\n\n</blockquote>\n\n<figure id=\"figure-15\" style=\"max-width: 90%;\"><img src=\"../../images/scrna-casestudy-monocle/top_markers.jpg\" alt=\"A table showing top markers - which genes (and their percentage) are the most expressed in each cell type.\" width=\"878\" height=\"885\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/scrna-casestudy-monocle/top_markers.jpg\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 15</strong>:</span> Identification of the genes most specifically expressed in groups of cells.</figcaption></figure>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <p>What genes are uniquely expressed in DP-M1?</p>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <p>By looking at the table, you might give the 5 top gene IDs expressed in DP-M1. To save you some time and make the analysis more readable, we converted the gene IDs to gene names and they are as follows: Rps17, Rpl41, Rps26, Rps29, Rps28. They are all ribosomal! [You can do this yourself if you want by following this section of a previous tutorial that <a href=\"/training-material/topics/single-cell/tutorials/scrna-case_basic-pipeline/tutorial.html#findmarkers\">uses the gene names in one object to add to a table of Ensembl IDs</a>. These ribosomal differences might be due to housekeeping background, cell cycling, or even something more bioligically interesting…or all three!\nThe plot also indicates other specifically expressed genes, such as Hmgb2, Pclaf, Rpl13, Rps19, Ybx1, Ncl, Hsp90ab1, Npm1.</p>\n\n    <p>Whenever you want to explore what might be the function of a particular cluster or why it branches out from the trajectory, check the top markers for that cluster to draw biological conclusions. Thank you Maths!</p>\n  </blockquote>\n\n</blockquote>\n\n<p>But what if you want to know how gene expression changes across a trajectory? This is where Monocle is particularly powerful. But in order to do that, we have to infer that trajectory first!</p>\n\n<h1 id=\"learn-the-trajectory-graph\">Learn the trajectory graph</h1>\n\n<p>We’re getting closer and closer! The next step is to learn the trajectory graph, which means to fit a principal graph within each partition. In that way, we’ll ‘connect’ the existing clusters by creating a path between them.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Learn graph</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/ebi-gxa/monocle3_learngraph/monocle3_learnGraph/0.1.4+galaxy0\" title=\"Monocle3 learnGraph tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Monocle3 learnGraph</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.1.4+galaxy0)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Input object in RDS format”</em>: output of <strong>Monocle3 partition</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span></li>\n        <li>Again, the graph is now stored in your CDS file. To see it, just plot the output, you can color the cells by any attribute that you want. We’ll use cell types to see how they are connected.</li>\n      </ul>\n    </li>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/ebi-gxa/monocle3_plotcells/monocle3_plotCells/0.1.5+galaxy1\" title=\"Monocle3 plotCells tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Monocle3 plotCells</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.1.5+galaxy1)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Input object in RDS format”</em>: output of <strong>Monocle3 learnGraph</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span></li>\n        <li><em>“The cell attribute (e.g. the column of pData(cds)) to map to each cell’s color, or one of {cluster, partition, pseudotime}.”</em>: <code class=\"language-plaintext highlighter-rouge\">cell_type</code></li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>As you can see, the learned trajectory path is just a line connecting the clusters. However, there are some important points to understand here.\nIf the resolution of the clusters is high, then the trajectory path will be very meticulous, strongly branched and curved. There’s a danger here that we might start seeing things that don’t really exist.\nYou can set an option to learn a single tree structure for all the partitions or use the partitions calculated when clustering and identify disjoint graphs in each. To make the right decision, you have to understand how/if the partitions are related and what would make more biolgical sense. In our case, we were only interested in a big partition containing all the cells and we ignored the small ‘dot’ classified as another partition.\nThere are many trajectory patterns: linear, cycle, bifurcation, tree and so on. Those patterns might correspond to various biological processes: transition events for different phases, cell cycle, cell differentiation. Therefore, branching points are quite important on the trajectory path. You can always plot them, <i class=\"fas fa-toggle-on\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-toggle</span> checking the correct box in <span><strong>Monocle3 plotCells</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i></span>.</p>\n\n<figure id=\"figure-16\" style=\"max-width: 90%;\"><img src=\"../../images/scrna-casestudy-monocle/learned_trajectory.png\" alt=\"A trajectory path, branching out to connect all the clusters and thus show their relationships.\" width=\"480\" height=\"480\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/scrna-casestudy-monocle/learned_trajectory.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 16</strong>:</span> Learned trajectory path</figcaption></figure>\n\n<blockquote class=\"tip\">\n  <tip-title>Comparing the trajectories</tip-title>\n\n  <p>As a reminder, here’s the comparision between our trajectory and the one from the previous tutorial, where we used Scanpy for clustering, and then appplied Force-Directed + PAGA algorithms to infer trajectory. As you remember from those tutorials, the arrangement of the cell groups changed a bit during these steps. Indeed - by using the mentioned methods, we get different graphs for clusters and trajectory, while in Monocle the general ‘shape’ of the graph stays the same from the beginning. ‘Leranig the trajectory’ step in Monocle is about finding a path, along which the cells can be then ordered in pseudotime.</p>\n  <figure id=\"figure-17\" style=\"max-width: 90%;\"><img src=\"../../images/scrna-casestudy-monocle/scanpy_monocle_trajectories.png\" alt=\"First graph shows the trajectory inferred by using Scanpy + Force-Directed + PAGA (DN connecting equally with DP-M2 and DP-M3, then going to DP-M1, and branching out to DP-M4, then going down to DP-L and finally turning into T-mat).  Second graph shows the trajectory inferred by using Monocle (DN connected to DP-M2 and DP-M3, then DP-M4 has DP-M1 on the right and DP-L on the left, and DP-L comes to T-mat).\" width=\"713\" height=\"317\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/scrna-casestudy-monocle/scanpy_monocle_trajectories.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 17</strong>:</span> Comparison between the trajectory inferred in the previous 'case study' tutorials (Scanpy + Force-Directed + PAGA) and the trajectory obtained in Monocle.</figcaption></figure>\n</blockquote>\n\n<h1 id=\"pseudotime-analysis\">Pseudotime analysis</h1>\n\n<p>Finally, it’s time to see our cells in pseudotime! We have already learned a trajectory, now we only have to order the cells along it. Monocle3 requires information on where to start ordering the cells, so we need to provide it with this information. We annotated early T-cells as double negative (DN), so those will be our root cells!</p>\n\n<blockquote class=\"details\">\n  <details-title>Pseudotime</details-title>\n\n  <p>To infer trajectories, we need data from cells at different points along a path of differentiation. The assumption is that in any given sample, some cells are further along a trajectory than others. This inferred temporal dimension is known as pseudotime. Pseudotime measures the cells’ progress through the transition.  See <span class=\"citation\"><a href=\"#Reid_2016\">Reid and Wernisch 2016</a></span> for more.</p>\n\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Ordering the cells along trajectory</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/ebi-gxa/monocle3_ordercells/monocle3_orderCells/0.1.4+galaxy0\" title=\"Monocle3 orderCells tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Monocle3 orderCells</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.1.4+galaxy0)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Input object in RDS format”</em>: output of <strong>Monocle3 learnGraph</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span></li>\n        <li><em>“The cell phenotype (column in pdata) used to identify root principal nodes.”</em>: <code class=\"language-plaintext highlighter-rouge\">cell_type</code></li>\n        <li><em>“The value in the cell phenotype column used to extract root nodes.”</em>: <code class=\"language-plaintext highlighter-rouge\">DN</code></li>\n        <li>Alright - we were waiting for this plot the whole tutorial: once we have the cells ordered, we can finally color them by pseudotime!</li>\n      </ul>\n    </li>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/ebi-gxa/monocle3_plotcells/monocle3_plotCells/0.1.5+galaxy1\" title=\"Monocle3 plotCells tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Monocle3 plotCells</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.1.5+galaxy1)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Input object in RDS format”</em>: output of <strong>Monocle3 orderCells</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span></li>\n      </ul>\n    </li>\n    <li>Rename <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> the output: <code class=\"language-plaintext highlighter-rouge\">Pseudotime plot</code></li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"tip\">\n  <tip-title>Other ways to specify the root cells</tip-title>\n\n  <p>The method to specify the root cells shown above is not the only one available in Galaxy! However, it is probably the most intuitive one.</p>\n  <ol>\n    <li><strong>Annotated cell type as root cells</strong>\n      <ul>\n        <li>fill <em>(–cell-phenotype)</em> with the colname (heading) where the cell types are stored</li>\n        <li>fill <em>(–root-type)</em> with the name of the cell type that you want to start ordering from</li>\n      </ul>\n    </li>\n    <li><strong>Cell ID as root cell</strong>\n      <ul>\n        <li>fill <em>(–root-cells)</em> with the cell ID that you want to start ordering from</li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>Now we can see how all our hard work has come together to give a final pseudotime trajectory analysis. DN cells gently switching to DP-M which change into DP-L to finally become mature T-cells. Isn’t it beautiful? But wait, don’t be too enthusiastic - why on earth DP-M1 group branches out? We didn’t expect that… What could that mean?</p>\n\n<p>There are a lot of such questions in bioinformatics, and we’re always get excited to try to answer them. However, with analysing scRNA-seq data, it’s almost like you need to know about 75% of your data to make sure that your analysis is reasonable, before you can identify the 25% new information. Additionally, pseudotime analysis crucially depends on choosing the right analysis and parameter values, as we showed for example with initial dimensionality reduction during pre-processing. The outputs here, at least in our hands, are more sensitive to parameter choice than standard clustering analysis with Scanpy.</p>\n\n<figure id=\"figure-18\" style=\"max-width: 90%;\"><img src=\"../../images/scrna-casestudy-monocle/pseudotime.png\" alt=\"Pseudotime plot, showing the development of T-cells – starting in dark blue on DN cells and ending up on mature T-cells, marked in yellow on pseudotime scale and (going in the opposite direction) DP-M1 branch which is marked in light orange.\" width=\"480\" height=\"480\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/scrna-casestudy-monocle/pseudotime.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 18</strong>:</span> Trajectory analysis - pseudotime</figcaption></figure>\n\n<p>Last but not least, you can now identify genes that define the inferred trajectories.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Differentially expressed genes</hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/ebi-gxa/monocle3_diffexp/monocle3_diffExp/0.1.4+galaxy1\" title=\"Monocle3 diffExp tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Monocle3 diffExp</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.1.4+galaxy1)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Input object in RDS format”</em>: output of <strong>Monocle3 orderCells</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span></li>\n      </ul>\n    </li>\n    <li>Rename <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> the output: <code class=\"language-plaintext highlighter-rouge\">Differential gene expression table</code></li>\n  </ol>\n\n</blockquote>\n\n<h1 id=\"conclusion\">Conclusion</h1>\n\n<p><i class=\"far fa-thumbs-up\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">congratulations</span> Well done, you’ve made it to the end! You might want to consult your results with this <a href=\"https://humancellatlas.usegalaxy.eu/u/j.jakiela/h/monoce3-tutorial-workflow\">control history</a> (which also includes AnnData to CDS conversion), and check out the <a href=\"https://singlecell.usegalaxy.eu/u/j.jakiela/w/copy-of-trajectory-analysis-using-monocle3-1\">workflow</a> for this tutorial. There is also a separate workflow for <a href=\"https://humancellatlas.usegalaxy.eu/u/j.jakiela/w/copy-of-trajectory-analysis-using-monocle3\">preparing the input files for Monocle3, starting from AnnData</a>, and <a href=\"https://humancellatlas.usegalaxy.eu/u/j.jakiela/w/copy-of-anndata-to-monocle-right-1\">full analysis workflow</a>. You can use them to accelerate analysis of your own data, paying attention to the requirements of the input data that are mentioned in this tutorial.</p>\n\n<figure id=\"figure-19\" style=\"max-width: 90%;\"><img src=\"../../images/scrna-casestudy-monocle/workflow.jpg\" alt=\"A scheme connecting all the tools used in this tutorial.\" width=\"1175\" height=\"562\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/scrna-casestudy-monocle/workflow.jpg\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 19</strong>:</span> Full workflow for this tutorial, including AnnData to CDS format conversion.</figcaption></figure>\n\n<p>If you’re following the Case Study tutorials from the beginning, you have already experienced what it’s like to analyse and question a dataset, potentially without clear cut-offs or clear answers. You now know that trajectory analysis is even more sensitive to parameter values, so it’s often trying to find the best set of values that would give the most reasonable results and go in accordance with biology. Moreover, not all trajectory analysis methods are designed to infer all kinds of biological processes - due to the fact that they use different algorithms, some would work better for analysing your sample. Since Monocle is quite widely used for trajectory analysis, it might be a good practice to compare its results with other methods. The more evidence you have to confirm your findings, the more confident you can be about their reliability!</p>\n\n<!--SNIPPET-->\n<blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-how-can-i-talk-with-other-users\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-how-can-i-talk-with-other-users\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: How can I talk with other users?</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <p><i class=\"far fa-comments\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">feedback</span> To discuss with like-minded scientists, join our <a href=\"http://gxy.io/gtn-slack\">Galaxy Training Network chatspace in Slack</a> and discuss with fellow users of Galaxy single cell analysis tools on <a href=\"https://gtnsmrgsbord.slack.com/archives/C06PBRR40D7\">#single-cell-users</a></p>   <p>We also post new tutorials / workflows there from time to time, as well as any other news.</p>   <p><i class=\"far fa-hand-point-right\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">point-right</span> If you’d like to contribute ideas, requests or feedback as part of the wider community building single-cell and spatial resources within Galaxy, you can also join our <a href=\"https://galaxyproject.org/community/sig/singlecell/\">Single cell &amp; sPatial Omics Community of Practice</a>.</p>   <p><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> You can request tools here on our <a href=\"https://docs.google.com/spreadsheets/d/15hqgqA-RMDhXR-ylKhRF-Dab9Ij2arYSKiEVoPl2df4/edit?usp=sharing\">Single Cell and Spatial Omics Community Tool Request Spreadsheet</a></p> </blockquote>\n<p><!--END_SNIPPET--></p>\n"],"ref_slides":[],"video_library":{"tutorial":null,"slides":null,"demo":null,"both":{"description":null,"materials":[{"link":"topics/single-cell/tutorials/scrna-case_monocle3-trajectories/tutorial.html","type":"Tutorial"}],"tags":["single-cell","transcriptomics"],"type":"Tutorial","versions":[{"link":"Espl6qSbu3Y","date":"2023-04-11","length":"15M","speakers":["wee-snufkin"],"captions":["wee-snufkin"]}],"gtn_id":"single-cell/scrna-case_monocle3-trajectories","title":"Inferring single cell trajectories (Monocle3)","captioned":true},"session":null},"hands_on":true,"slides":false,"mod_date":"2024-06-06 21:32:12 +0000","pub_date":"2022-09-30 20:06:34 +0000","version":32,"workflows":[{"workflow":"Galaxy-Workflow-AnnData_object_to_Monocle_input_files.ga","tests":false,"url":"https://training.galaxyproject.org/training-material/topics/single-cell/tutorials/scrna-case_monocle3-trajectories/workflows/Galaxy-Workflow-AnnData_object_to_Monocle_input_files.ga","path":"topics/single-cell/tutorials/scrna-case_monocle3-trajectories/workflows/Galaxy-Workflow-AnnData_object_to_Monocle_input_files.ga","wfid":"single-cell-scrna-case_monocle3-trajectories","wfname":"galaxy-workflow-anndata_object_to_monocle_input_files","trs_endpoint":"https://training.galaxyproject.org/training-material/api/ga4gh/trs/v2/tools/single-cell-scrna-case_monocle3-trajectories/versions/galaxy-workflow-anndata_object_to_monocle_input_files","license":null,"creators":[],"name":"AnnData object to Monocle input files","title":"AnnData object to Monocle input files","test_results":null,"modified":"2024-06-13 10:00:06 +0000","mermaid":"flowchart TD\n  0[\"ℹ️ Input Dataset\\nAnnData to extract genes & cells annotations\"];\n  style 0 stroke:#2c3143,stroke-width:4px;\n  1[\"ℹ️ Input Dataset\\nAnnData before processing to extract clean expression matrix\"];\n  style 1 stroke:#2c3143,stroke-width:4px;\n  2[\"Extract cell annotations\"];\n  0 -->|output| 2;\n  9d66a217-4269-4fb4-9a4e-520eedbb0c9d[\"Output\\nExtracted cell annotations (obs)\"];\n  2 --> 9d66a217-4269-4fb4-9a4e-520eedbb0c9d;\n  style 9d66a217-4269-4fb4-9a4e-520eedbb0c9d stroke:#2c3143,stroke-width:4px;\n  3[\"Extract gene annotations\"];\n  0 -->|output| 3;\n  03537e97-d668-4ce2-ba6b-2952a18a2752[\"Output\\nExtracted gene annotations (var)\"];\n  3 --> 03537e97-d668-4ce2-ba6b-2952a18a2752;\n  style 03537e97-d668-4ce2-ba6b-2952a18a2752 stroke:#2c3143,stroke-width:4px;\n  4[\"Extract clean expression matrix\"];\n  1 -->|output| 4;\n  963462c8-4ae0-486c-8173-d98339127850[\"Output\\nUnprocessed expression matrix\"];\n  4 --> 963462c8-4ae0-486c-8173-d98339127850;\n  style 963462c8-4ae0-486c-8173-d98339127850 stroke:#2c3143,stroke-width:4px;\n  5[\"Filter out unwanted cell types\"];\n  2 -->|obs| 5;\n  5dcb7029-8d03-445d-bb3e-a3119e502be4[\"Output\\nCells without macrophages\"];\n  5 --> 5dcb7029-8d03-445d-bb3e-a3119e502be4;\n  style 5dcb7029-8d03-445d-bb3e-a3119e502be4 stroke:#2c3143,stroke-width:4px;\n  6[\"gene_short_name annotation\"];\n  3 -->|var| 6;\n  15fd415b-2d73-4a1d-92ad-200bb2e73853[\"Output\\nGenes table with gene_short_name colname\"];\n  6 --> 15fd415b-2d73-4a1d-92ad-200bb2e73853;\n  style 15fd415b-2d73-4a1d-92ad-200bb2e73853 stroke:#2c3143,stroke-width:4px;\n  7[\"Cut cells IDs\"];\n  5 -->|out_file1| 7;\n  f9bde249-43b9-4424-8285-e437549223e2[\"Output\\nFiltered cells IDs \"];\n  7 --> f9bde249-43b9-4424-8285-e437549223e2;\n  style f9bde249-43b9-4424-8285-e437549223e2 stroke:#2c3143,stroke-width:4px;\n  8[\"Cut genes IDs\"];\n  6 -->|out_file1| 8;\n  b22efa1d-db99-435f-9357-74150ac9a437[\"Output\\nGenes IDs\"];\n  8 --> b22efa1d-db99-435f-9357-74150ac9a437;\n  style b22efa1d-db99-435f-9357-74150ac9a437 stroke:#2c3143,stroke-width:4px;\n  9[\"Filter matrix by cells\"];\n  7 -->|out_file1| 9;\n  4 -->|X| 9;\n  b45f18b6-e385-41a1-a8f0-f94e6616e2b3[\"Output\\nPre-filtered matrix (by cells)\"];\n  9 --> b45f18b6-e385-41a1-a8f0-f94e6616e2b3;\n  style b45f18b6-e385-41a1-a8f0-f94e6616e2b3 stroke:#2c3143,stroke-width:4px;\n  10[\"Remove duplicate column cells IDs\"];\n  9 -->|out_file1| 10;\n  f4d6a581-9b42-41dc-9a4a-278fe5d6591c[\"Output\\nFiltered matrix (by cells) \"];\n  10 --> f4d6a581-9b42-41dc-9a4a-278fe5d6591c;\n  style f4d6a581-9b42-41dc-9a4a-278fe5d6591c stroke:#2c3143,stroke-width:4px;\n  11[\"Transpose matrix\"];\n  10 -->|output| 11;\n  e4eb8fb3-2028-41fb-8aca-b1c0a6e6bfe5[\"Output\\nfiltered matrix (by cells) transposed\"];\n  11 --> e4eb8fb3-2028-41fb-8aca-b1c0a6e6bfe5;\n  style e4eb8fb3-2028-41fb-8aca-b1c0a6e6bfe5 stroke:#2c3143,stroke-width:4px;\n  12[\"Filter matrix by genes\"];\n  8 -->|out_file1| 12;\n  11 -->|out_file| 12;\n  c0481255-0187-407c-9f29-f4c0069d9285[\"Output\\nPre-filtered matrix (by cells & genes)\"];\n  12 --> c0481255-0187-407c-9f29-f4c0069d9285;\n  style c0481255-0187-407c-9f29-f4c0069d9285 stroke:#2c3143,stroke-width:4px;\n  13[\"Remove duplicate column genes IDs\"];\n  12 -->|out_file1| 13;\n  4dcd8e60-1298-4886-be8f-af1eac9f20f7[\"Output\\nFiltered matrix (by cells & genes)\"];\n  13 --> 4dcd8e60-1298-4886-be8f-af1eac9f20f7;\n  style 4dcd8e60-1298-4886-be8f-af1eac9f20f7 stroke:#2c3143,stroke-width:4px;"},{"workflow":"Galaxy-Workflow-Monocle3_workflow.ga","tests":false,"url":"https://training.galaxyproject.org/training-material/topics/single-cell/tutorials/scrna-case_monocle3-trajectories/workflows/Galaxy-Workflow-Monocle3_workflow.ga","path":"topics/single-cell/tutorials/scrna-case_monocle3-trajectories/workflows/Galaxy-Workflow-Monocle3_workflow.ga","wfid":"single-cell-scrna-case_monocle3-trajectories","wfname":"galaxy-workflow-monocle3_workflow","trs_endpoint":"https://training.galaxyproject.org/training-material/api/ga4gh/trs/v2/tools/single-cell-scrna-case_monocle3-trajectories/versions/galaxy-workflow-monocle3_workflow","license":null,"creators":[],"name":"Monocle3 workflow","title":"Monocle3 workflow","test_results":null,"modified":"2024-06-13 10:00:06 +0000","mermaid":"flowchart TD\n  0[\"ℹ️ Input Dataset\\nExpression matrix input\"];\n  style 0 stroke:#2c3143,stroke-width:4px;\n  1[\"ℹ️ Input Dataset\\nCell annotations input\"];\n  style 1 stroke:#2c3143,stroke-width:4px;\n  2[\"ℹ️ Input Dataset\\nGene annotations input\"];\n  style 2 stroke:#2c3143,stroke-width:4px;\n  3[\"Monocle3 create\"];\n  1 -->|output| 3;\n  0 -->|output| 3;\n  2 -->|output| 3;\n  30db218d-f9e5-426d-ac9b-7823743ab5fb[\"Output\\nMonocle3 create on input dataset(s): cds3\"];\n  3 --> 30db218d-f9e5-426d-ac9b-7823743ab5fb;\n  style 30db218d-f9e5-426d-ac9b-7823743ab5fb stroke:#2c3143,stroke-width:4px;\n  4[\"Monocle3 preprocess\"];\n  3 -->|output_rds| 4;\n  38996ee0-0c00-4a01-ad18-f2e505eaf780[\"Output\\nMonocle3 preprocess on input dataset(s): cds3\"];\n  4 --> 38996ee0-0c00-4a01-ad18-f2e505eaf780;\n  style 38996ee0-0c00-4a01-ad18-f2e505eaf780 stroke:#2c3143,stroke-width:4px;\n  5[\"Monocle3 reduceDim\"];\n  4 -->|output_rds| 5;\n  21edf68f-72df-457d-aad7-c5fc5afa2b6b[\"Output\\nMonocle3 reduceDim on input dataset(s): cds3\"];\n  5 --> 21edf68f-72df-457d-aad7-c5fc5afa2b6b;\n  style 21edf68f-72df-457d-aad7-c5fc5afa2b6b stroke:#2c3143,stroke-width:4px;\n  6[\"Monocle3 partition\"];\n  5 -->|output_rds| 6;\n  fdb0e520-27c4-43a0-8f27-a25832a0816d[\"Output\\nMonocle3 partition on input dataset(s): cds3\"];\n  6 --> fdb0e520-27c4-43a0-8f27-a25832a0816d;\n  style fdb0e520-27c4-43a0-8f27-a25832a0816d stroke:#2c3143,stroke-width:4px;\n  7[\"Plot cell type\"];\n  5 -->|output_rds| 7;\n  5e309658-e20f-4da1-8841-818f16fa8f01[\"Output\\nCell type plot\"];\n  7 --> 5e309658-e20f-4da1-8841-818f16fa8f01;\n  style 5e309658-e20f-4da1-8841-818f16fa8f01 stroke:#2c3143,stroke-width:4px;\n  8[\"Plot genotype\"];\n  5 -->|output_rds| 8;\n  aca3b2c0-2d3b-4a4e-8732-cf6ddc7844a4[\"Output\\nGenotype plot\"];\n  8 --> aca3b2c0-2d3b-4a4e-8732-cf6ddc7844a4;\n  style aca3b2c0-2d3b-4a4e-8732-cf6ddc7844a4 stroke:#2c3143,stroke-width:4px;\n  9[\"Plot batch\"];\n  5 -->|output_rds| 9;\n  c8eec2e4-1a64-47bb-812b-4002968c57c8[\"Output\\nBatch plot\"];\n  9 --> c8eec2e4-1a64-47bb-812b-4002968c57c8;\n  style c8eec2e4-1a64-47bb-812b-4002968c57c8 stroke:#2c3143,stroke-width:4px;\n  10[\"Plot sex\"];\n  5 -->|output_rds| 10;\n  c75954dd-34d5-4a20-bcf3-e5cd92d74885[\"Output\\nSex plot\"];\n  10 --> c75954dd-34d5-4a20-bcf3-e5cd92d74885;\n  style c75954dd-34d5-4a20-bcf3-e5cd92d74885 stroke:#2c3143,stroke-width:4px;\n  11[\"Monocle3 top markers\"];\n  6 -->|output_rds| 11;\n  12[\"Plot genes\"];\n  6 -->|output_rds| 12;\n  f91c22a3-8c6d-432a-92c5-cb010115fa86[\"Output\\nGene expression plot\"];\n  12 --> f91c22a3-8c6d-432a-92c5-cb010115fa86;\n  style f91c22a3-8c6d-432a-92c5-cb010115fa86 stroke:#2c3143,stroke-width:4px;\n  13[\"Plot partition\"];\n  6 -->|output_rds| 13;\n  f4c5f89b-edd7-489c-b4a2-a7a3e7d6a89d[\"Output\\nPartition plot\"];\n  13 --> f4c5f89b-edd7-489c-b4a2-a7a3e7d6a89d;\n  style f4c5f89b-edd7-489c-b4a2-a7a3e7d6a89d stroke:#2c3143,stroke-width:4px;\n  14[\"Plot cluster\"];\n  6 -->|output_rds| 14;\n  a2c1a628-d79d-4e37-ad33-de92033021a8[\"Output\\nCluster plot\"];\n  14 --> a2c1a628-d79d-4e37-ad33-de92033021a8;\n  style a2c1a628-d79d-4e37-ad33-de92033021a8 stroke:#2c3143,stroke-width:4px;\n  15[\"Monocle3 learnGraph\"];\n  6 -->|output_rds| 15;\n  ed2003aa-4680-409f-8d79-e79b878a786c[\"Output\\nMonocle3 learnGraph on input dataset(s): cds3\"];\n  15 --> ed2003aa-4680-409f-8d79-e79b878a786c;\n  style ed2003aa-4680-409f-8d79-e79b878a786c stroke:#2c3143,stroke-width:4px;\n  16[\"Plot learned trajectory\"];\n  15 -->|output_rds| 16;\n  6fa555f1-b4f2-4e5d-bce1-ed462d8e056d[\"Output\\nCell types & learned trajectory path plot\"];\n  16 --> 6fa555f1-b4f2-4e5d-bce1-ed462d8e056d;\n  style 6fa555f1-b4f2-4e5d-bce1-ed462d8e056d stroke:#2c3143,stroke-width:4px;\n  17[\"Monocle3 orderCells\"];\n  15 -->|output_rds| 17;\n  96d10412-3d7f-4970-b541-6f4367fa3f37[\"Output\\nMonocle3 orderCells on input dataset(s): cds3\"];\n  17 --> 96d10412-3d7f-4970-b541-6f4367fa3f37;\n  style 96d10412-3d7f-4970-b541-6f4367fa3f37 stroke:#2c3143,stroke-width:4px;\n  18[\"Monocle3 diffExp\"];\n  17 -->|output_rds| 18;\n  db1dc457-2d6e-47cc-b7ce-d0a4d23e9498[\"Output\\nDifferential expression of genes - table\"];\n  18 --> db1dc457-2d6e-47cc-b7ce-d0a4d23e9498;\n  style db1dc457-2d6e-47cc-b7ce-d0a4d23e9498 stroke:#2c3143,stroke-width:4px;\n  19[\"Plot pseudotime\"];\n  17 -->|output_rds| 19;\n  d1b3efd2-0a81-4dad-8652-589c2678fbaa[\"Output\\nPseudotime plot\"];\n  19 --> d1b3efd2-0a81-4dad-8652-589c2678fbaa;\n  style d1b3efd2-0a81-4dad-8652-589c2678fbaa stroke:#2c3143,stroke-width:4px;"},{"workflow":"Trajectory-analysis-using-Monocle3---full-tutorial-workflow.ga","tests":true,"url":"https://training.galaxyproject.org/training-material/topics/single-cell/tutorials/scrna-case_monocle3-trajectories/workflows/Trajectory-analysis-using-Monocle3---full-tutorial-workflow.ga","path":"topics/single-cell/tutorials/scrna-case_monocle3-trajectories/workflows/Trajectory-analysis-using-Monocle3---full-tutorial-workflow.ga","wfid":"single-cell-scrna-case_monocle3-trajectories","wfname":"trajectory-analysis-using-monocle3---full-tutorial-workflow","trs_endpoint":"https://training.galaxyproject.org/training-material/api/ga4gh/trs/v2/tools/single-cell-scrna-case_monocle3-trajectories/versions/trajectory-analysis-using-monocle3---full-tutorial-workflow","license":"CC-BY-4.0","creators":[{"class":"Organization","identifier":"0009-0001-2017-8805","name":"Julia Jakiela"}],"name":"Trajectory analysis using Monocle3 - full tutorial workflow","title":"Trajectory analysis using Monocle3 - full tutorial workflow","test_results":null,"modified":"2024-06-13 10:00:06 +0000","mermaid":"flowchart TD\n  0[\"ℹ️ Input Dataset\\nAnnData to extract genes & cells annotations\"];\n  style 0 stroke:#2c3143,stroke-width:4px;\n  1[\"ℹ️ Input Dataset\\nAnnData before processing to extract clean expression matrix\"];\n  style 1 stroke:#2c3143,stroke-width:4px;\n  2[\"Extract cell annotations\"];\n  0 -->|output| 2;\n  0646798d-3a5d-420a-a7cf-cde6cec722d5[\"Output\\nExtracted cell annotations (obs)\"];\n  2 --> 0646798d-3a5d-420a-a7cf-cde6cec722d5;\n  style 0646798d-3a5d-420a-a7cf-cde6cec722d5 stroke:#2c3143,stroke-width:4px;\n  3[\"Extract gene annotations\"];\n  0 -->|output| 3;\n  84162745-68b0-41a5-b06e-a285440ba095[\"Output\\nExtracted gene annotations (var)\"];\n  3 --> 84162745-68b0-41a5-b06e-a285440ba095;\n  style 84162745-68b0-41a5-b06e-a285440ba095 stroke:#2c3143,stroke-width:4px;\n  4[\"Extract clean expression matrix\"];\n  1 -->|output| 4;\n  3f03af0c-ac41-4450-b5ba-639a79ea543b[\"Output\\nUnprocessed expression matrix\"];\n  4 --> 3f03af0c-ac41-4450-b5ba-639a79ea543b;\n  style 3f03af0c-ac41-4450-b5ba-639a79ea543b stroke:#2c3143,stroke-width:4px;\n  5[\"Filter out macrophages\"];\n  2 -->|obs| 5;\n  fb81e9a1-0603-419a-83f5-0c9f94939b16[\"Output\\nCells without macrophages\"];\n  5 --> fb81e9a1-0603-419a-83f5-0c9f94939b16;\n  style fb81e9a1-0603-419a-83f5-0c9f94939b16 stroke:#2c3143,stroke-width:4px;\n  6[\"gene_short_name annotation\"];\n  3 -->|var| 6;\n  94a60e6c-cdf7-48e5-8b55-d221cef22688[\"Output\\nGenes table with gene_short_name colname\"];\n  6 --> 94a60e6c-cdf7-48e5-8b55-d221cef22688;\n  style 94a60e6c-cdf7-48e5-8b55-d221cef22688 stroke:#2c3143,stroke-width:4px;\n  7[\"Cut cells IDs\"];\n  5 -->|out_file1| 7;\n  34146c30-2666-481f-8d49-a849d5d3aa91[\"Output\\nFiltered cells IDs \"];\n  7 --> 34146c30-2666-481f-8d49-a849d5d3aa91;\n  style 34146c30-2666-481f-8d49-a849d5d3aa91 stroke:#2c3143,stroke-width:4px;\n  8[\"Cut genes IDs\"];\n  6 -->|out_file1| 8;\n  8f38fb93-cb30-4fbc-90c5-7f6bd023feea[\"Output\\nGenes IDs\"];\n  8 --> 8f38fb93-cb30-4fbc-90c5-7f6bd023feea;\n  style 8f38fb93-cb30-4fbc-90c5-7f6bd023feea stroke:#2c3143,stroke-width:4px;\n  9[\"Filter matrix by cells\"];\n  7 -->|out_file1| 9;\n  4 -->|X| 9;\n  f654c045-5fea-43f9-96d6-492c810593d2[\"Output\\nPre-filtered matrix (by cells)\"];\n  9 --> f654c045-5fea-43f9-96d6-492c810593d2;\n  style f654c045-5fea-43f9-96d6-492c810593d2 stroke:#2c3143,stroke-width:4px;\n  10[\"Remove duplicate column cells IDs\"];\n  9 -->|out_file1| 10;\n  f633c125-a4d0-4fa7-ab87-022349f4ac70[\"Output\\nFiltered matrix (by cells) \"];\n  10 --> f633c125-a4d0-4fa7-ab87-022349f4ac70;\n  style f633c125-a4d0-4fa7-ab87-022349f4ac70 stroke:#2c3143,stroke-width:4px;\n  11[\"Transpose matrix\"];\n  10 -->|output| 11;\n  3202091e-1afc-4f50-8922-1f9e50c490fc[\"Output\\nfiltered matrix (by cells) transposed\"];\n  11 --> 3202091e-1afc-4f50-8922-1f9e50c490fc;\n  style 3202091e-1afc-4f50-8922-1f9e50c490fc stroke:#2c3143,stroke-width:4px;\n  12[\"Filter matrix by genes\"];\n  8 -->|out_file1| 12;\n  11 -->|out_file| 12;\n  6c23cbd5-a1b5-428e-8ff9-ebac4893ad88[\"Output\\nPre-filtered matrix (by cells & genes)\"];\n  12 --> 6c23cbd5-a1b5-428e-8ff9-ebac4893ad88;\n  style 6c23cbd5-a1b5-428e-8ff9-ebac4893ad88 stroke:#2c3143,stroke-width:4px;\n  13[\"Remove duplicate column genes IDs\"];\n  12 -->|out_file1| 13;\n  25839326-0b5d-4e74-91ec-24e22c08f7c5[\"Output\\nFiltered matrix (by cells & genes)\"];\n  13 --> 25839326-0b5d-4e74-91ec-24e22c08f7c5;\n  style 25839326-0b5d-4e74-91ec-24e22c08f7c5 stroke:#2c3143,stroke-width:4px;\n  14[\"Monocle3 create\"];\n  5 -->|out_file1| 14;\n  13 -->|output| 14;\n  6 -->|out_file1| 14;\n  f8c5589c-a70d-416e-a9de-ebc987f61fc3[\"Output\\nMonocle3 create on input dataset(s): cds3\"];\n  14 --> f8c5589c-a70d-416e-a9de-ebc987f61fc3;\n  style f8c5589c-a70d-416e-a9de-ebc987f61fc3 stroke:#2c3143,stroke-width:4px;\n  15[\"Monocle3 preprocess\"];\n  14 -->|output_rds| 15;\n  c134942f-60e7-4cd0-8c32-da4a303b879d[\"Output\\nMonocle3 preprocess on input dataset(s): cds3\"];\n  15 --> c134942f-60e7-4cd0-8c32-da4a303b879d;\n  style c134942f-60e7-4cd0-8c32-da4a303b879d stroke:#2c3143,stroke-width:4px;\n  16[\"Monocle3 reduceDim\"];\n  15 -->|output_rds| 16;\n  2c9fb108-2a1c-41df-a8d8-81a18b66d2a1[\"Output\\nMonocle3 reduceDim on input dataset(s): cds3\"];\n  16 --> 2c9fb108-2a1c-41df-a8d8-81a18b66d2a1;\n  style 2c9fb108-2a1c-41df-a8d8-81a18b66d2a1 stroke:#2c3143,stroke-width:4px;\n  17[\"Monocle3 partition\"];\n  16 -->|output_rds| 17;\n  93371c10-6583-47fc-830f-9a90dc980766[\"Output\\nMonocle3 partition on input dataset(s): cds3\"];\n  17 --> 93371c10-6583-47fc-830f-9a90dc980766;\n  style 93371c10-6583-47fc-830f-9a90dc980766 stroke:#2c3143,stroke-width:4px;\n  18[\"Plot cell type\"];\n  16 -->|output_rds| 18;\n  f096d060-82e8-4847-9e8f-b22c9288f565[\"Output\\nCell type plot\"];\n  18 --> f096d060-82e8-4847-9e8f-b22c9288f565;\n  style f096d060-82e8-4847-9e8f-b22c9288f565 stroke:#2c3143,stroke-width:4px;\n  19[\"Plot genotype\"];\n  16 -->|output_rds| 19;\n  aab28bb1-e2e7-4b7d-9b2b-1cab64bea287[\"Output\\nGenotype plot\"];\n  19 --> aab28bb1-e2e7-4b7d-9b2b-1cab64bea287;\n  style aab28bb1-e2e7-4b7d-9b2b-1cab64bea287 stroke:#2c3143,stroke-width:4px;\n  20[\"Plot batch\"];\n  16 -->|output_rds| 20;\n  9b362eee-9238-47c5-a4c2-85f3995430f4[\"Output\\nBatch plot\"];\n  20 --> 9b362eee-9238-47c5-a4c2-85f3995430f4;\n  style 9b362eee-9238-47c5-a4c2-85f3995430f4 stroke:#2c3143,stroke-width:4px;\n  21[\"Plot sex\"];\n  16 -->|output_rds| 21;\n  c2a1e104-ef2d-4b66-ac2b-bf0251714434[\"Output\\nSex plot\"];\n  21 --> c2a1e104-ef2d-4b66-ac2b-bf0251714434;\n  style c2a1e104-ef2d-4b66-ac2b-bf0251714434 stroke:#2c3143,stroke-width:4px;\n  22[\"Monocle3 top markers\"];\n  17 -->|output_rds| 22;\n  23[\"Plot genes\"];\n  17 -->|output_rds| 23;\n  e8867379-82c6-4c32-a2d3-0b24670269ae[\"Output\\nGene expression plot\"];\n  23 --> e8867379-82c6-4c32-a2d3-0b24670269ae;\n  style e8867379-82c6-4c32-a2d3-0b24670269ae stroke:#2c3143,stroke-width:4px;\n  24[\"Plot partition\"];\n  17 -->|output_rds| 24;\n  3f7b0a7c-85d6-430b-8385-fa9a76385c0e[\"Output\\nPartition plot\"];\n  24 --> 3f7b0a7c-85d6-430b-8385-fa9a76385c0e;\n  style 3f7b0a7c-85d6-430b-8385-fa9a76385c0e stroke:#2c3143,stroke-width:4px;\n  25[\"Plot cluster\"];\n  17 -->|output_rds| 25;\n  40b65826-f73e-4054-a56d-b241985d6996[\"Output\\nCluster plot\"];\n  25 --> 40b65826-f73e-4054-a56d-b241985d6996;\n  style 40b65826-f73e-4054-a56d-b241985d6996 stroke:#2c3143,stroke-width:4px;\n  26[\"Monocle3 learnGraph\"];\n  17 -->|output_rds| 26;\n  294b1a49-cec6-49d0-bcd4-3a954da67bec[\"Output\\nMonocle3 learnGraph on input dataset(s): cds3\"];\n  26 --> 294b1a49-cec6-49d0-bcd4-3a954da67bec;\n  style 294b1a49-cec6-49d0-bcd4-3a954da67bec stroke:#2c3143,stroke-width:4px;\n  27[\"Plot learned trajectory\"];\n  26 -->|output_rds| 27;\n  c85ddefe-8eaf-4d21-93ed-ca0859286bf0[\"Output\\nCell types & learned trajectory path plot\"];\n  27 --> c85ddefe-8eaf-4d21-93ed-ca0859286bf0;\n  style c85ddefe-8eaf-4d21-93ed-ca0859286bf0 stroke:#2c3143,stroke-width:4px;\n  28[\"Monocle3 orderCells\"];\n  26 -->|output_rds| 28;\n  5aea5752-b767-4fc8-8741-1f4d1c659a41[\"Output\\nMonocle3 orderCells on input dataset(s): cds3\"];\n  28 --> 5aea5752-b767-4fc8-8741-1f4d1c659a41;\n  style 5aea5752-b767-4fc8-8741-1f4d1c659a41 stroke:#2c3143,stroke-width:4px;\n  29[\"Monocle3 diffExp\"];\n  28 -->|output_rds| 29;\n  3c298624-9f06-4e52-b2a8-fb834b87c296[\"Output\\nDifferential expression of genes - table\"];\n  29 --> 3c298624-9f06-4e52-b2a8-fb834b87c296;\n  style 3c298624-9f06-4e52-b2a8-fb834b87c296 stroke:#2c3143,stroke-width:4px;\n  30[\"Plot pseudotime\"];\n  28 -->|output_rds| 30;\n  813d15bb-0771-4aed-9226-4874c1ddba59[\"Output\\nPseudotime plot\"];\n  30 --> 813d15bb-0771-4aed-9226-4874c1ddba59;\n  style 813d15bb-0771-4aed-9226-4874c1ddba59 stroke:#2c3143,stroke-width:4px;"}],"api":"https://training.galaxyproject.org/training-material/api/topics/single-cell/tutorials/scrna-case_monocle3-trajectories/tutorial.json","tools":["Cut1","Filter1","join1","toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_cut_tool/1.1.0","toolshed.g2.bx.psu.edu/repos/ebi-gxa/monocle3_create/monocle3_create/0.1.4+galaxy2","toolshed.g2.bx.psu.edu/repos/ebi-gxa/monocle3_diffexp/monocle3_diffExp/0.1.4+galaxy1","toolshed.g2.bx.psu.edu/repos/ebi-gxa/monocle3_learngraph/monocle3_learnGraph/0.1.4+galaxy0","toolshed.g2.bx.psu.edu/repos/ebi-gxa/monocle3_ordercells/monocle3_orderCells/0.1.4+galaxy0","toolshed.g2.bx.psu.edu/repos/ebi-gxa/monocle3_partition/monocle3_partition/0.1.4+galaxy0","toolshed.g2.bx.psu.edu/repos/ebi-gxa/monocle3_plotcells/monocle3_plotCells/0.1.5+galaxy1","toolshed.g2.bx.psu.edu/repos/ebi-gxa/monocle3_preprocess/monocle3_preprocess/0.1.4+galaxy0","toolshed.g2.bx.psu.edu/repos/ebi-gxa/monocle3_reducedim/monocle3_reduceDim/0.1.4+galaxy0","toolshed.g2.bx.psu.edu/repos/ebi-gxa/monocle3_topmarkers/monocle3_topmarkers/0.1.5+galaxy0","toolshed.g2.bx.psu.edu/repos/galaxyp/regex_find_replace/regexColumn1/1.0.2","toolshed.g2.bx.psu.edu/repos/iuc/anndata_inspect/anndata_inspect/0.7.5+galaxy1","toolshed.g2.bx.psu.edu/repos/iuc/datamash_transpose/datamash_transpose/1.1.0+galaxy2"],"supported_servers":{"exact":[{"url":"https://usegalaxy.eu","name":"UseGalaxy.eu","usegalaxy":true},{"url":"https://usegalaxy.org","name":"UseGalaxy.org (Main)","usegalaxy":true}],"inexact":[]},"topic_name_human":"Single Cell","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[{"name":"text_processing","owner":"bgruening","revisions":"d698c222f354","tool_panel_section_label":"Text Manipulation","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"monocle3_create","owner":"ebi-gxa","revisions":"ada68a9d0aec","tool_panel_section_label":"Monocle3","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"monocle3_diffexp","owner":"ebi-gxa","revisions":"d43a608d14ac","tool_panel_section_label":"Monocle3","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"monocle3_learngraph","owner":"ebi-gxa","revisions":"5f877012f7af","tool_panel_section_label":"Monocle3","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"monocle3_ordercells","owner":"ebi-gxa","revisions":"3e77dc421569","tool_panel_section_label":"Monocle3","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"monocle3_partition","owner":"ebi-gxa","revisions":"d98b4705eb4c","tool_panel_section_label":"Monocle3","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"monocle3_plotcells","owner":"ebi-gxa","revisions":"91980addce5e","tool_panel_section_label":"Monocle3","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"monocle3_preprocess","owner":"ebi-gxa","revisions":"c150370b514c","tool_panel_section_label":"Monocle3","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"monocle3_reducedim","owner":"ebi-gxa","revisions":"8900e2a18603","tool_panel_section_label":"Monocle3","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"monocle3_topmarkers","owner":"ebi-gxa","revisions":"a4ab4af54b1a","tool_panel_section_label":"Monocle3","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"regex_find_replace","owner":"galaxyp","revisions":"399da6b5ec21","tool_panel_section_label":"Text Manipulation","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"anndata_inspect","owner":"iuc","revisions":"ee98d611afc6","tool_panel_section_label":"Single-cell","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"datamash_transpose","owner":"iuc","revisions":"ac092723240d","tool_panel_section_label":"Join, Subtract and Group","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"}]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools:\n- name: text_processing\n  owner: bgruening\n  revisions: d698c222f354\n  tool_panel_section_label: Text Manipulation\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: monocle3_create\n  owner: ebi-gxa\n  revisions: ada68a9d0aec\n  tool_panel_section_label: Monocle3\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: monocle3_diffexp\n  owner: ebi-gxa\n  revisions: d43a608d14ac\n  tool_panel_section_label: Monocle3\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: monocle3_learngraph\n  owner: ebi-gxa\n  revisions: 5f877012f7af\n  tool_panel_section_label: Monocle3\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: monocle3_ordercells\n  owner: ebi-gxa\n  revisions: 3e77dc421569\n  tool_panel_section_label: Monocle3\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: monocle3_partition\n  owner: ebi-gxa\n  revisions: d98b4705eb4c\n  tool_panel_section_label: Monocle3\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: monocle3_plotcells\n  owner: ebi-gxa\n  revisions: 91980addce5e\n  tool_panel_section_label: Monocle3\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: monocle3_preprocess\n  owner: ebi-gxa\n  revisions: c150370b514c\n  tool_panel_section_label: Monocle3\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: monocle3_reducedim\n  owner: ebi-gxa\n  revisions: 8900e2a18603\n  tool_panel_section_label: Monocle3\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: monocle3_topmarkers\n  owner: ebi-gxa\n  revisions: a4ab4af54b1a\n  tool_panel_section_label: Monocle3\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: regex_find_replace\n  owner: galaxyp\n  revisions: 399da6b5ec21\n  tool_panel_section_label: Text Manipulation\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: anndata_inspect\n  owner: iuc\n  revisions: ee98d611afc6\n  tool_panel_section_label: Single-cell\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: datamash_transpose\n  owner: iuc\n  revisions: ac092723240d\n  tool_panel_section_label: Join, Subtract and Group\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n","tours":false,"video":false,"translations":{"tutorial":[],"slides":[],"video":false},"license":"CC-BY-4.0","type":"tutorial","contributors":[{"name":"Julia Jakiela","email":"juliajot36@gmail.com","joined":"2022-06","id":"wee-snufkin","url":"https://training.galaxyproject.org/training-material/api/contributors/wee-snufkin.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/wee-snufkin/"},{"name":"Helena Rasche","orcid":"0000-0001-9760-8992","maintainer_contact":"gitter","matrix":"hexylena:matrix.org","joined":"2017-09","elixir_node":"nl","affiliations":["gallantries","by-covid","erasmusmc","elixir-europe","elixir-converge"],"former_affiliations":["deNBI","avans-atgm","uni-freiburg"],"contact_for_training":false,"location":{"country":"NL","lat":51.91,"lon":4.46},"id":"hexylena","url":"https://training.galaxyproject.org/training-material/api/contributors/hexylena.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/hexylena/"},{"name":"Wendi Bacon","email":"wendi.bacon@open.ac.uk","twitter":"WendiBacon1","matrix":"nomadscientist:matrix.org","joined":"2020-03","elixir_node":"uk","orcid":"0000-0002-8170-8806","bio":"Lecturer at The Open University","fediverse":"https://mstdn.science/@wendibacon1","fediverse_flavor":"mastodon","affiliations":["elixir-europe"],"id":"nomadscientist","url":"https://training.galaxyproject.org/training-material/api/contributors/nomadscientist.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/nomadscientist/"},{"name":"Wendi Bacon","email":"wendi.bacon@open.ac.uk","twitter":"WendiBacon1","matrix":"nomadscientist:matrix.org","joined":"2020-03","elixir_node":"uk","orcid":"0000-0002-8170-8806","bio":"Lecturer at The Open University","fediverse":"https://mstdn.science/@wendibacon1","fediverse_flavor":"mastodon","affiliations":["elixir-europe"],"id":"nomadscientist","url":"https://training.galaxyproject.org/training-material/api/contributors/nomadscientist.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/nomadscientist/"},{"name":"EPSRC Training Grant DTP 2020-2021 Open University","short_name":"EPSRC/OU","github":false,"joined":"2022-09","funder":true,"funding_statement":"The research internship was supported through EPSRC Training Grant DTP 2020-2021 Open University","url":"https://training.galaxyproject.org/training-material/api/funders/epsrc-training-grant.json","id":"epsrc-training-grant","page":"https://training.galaxyproject.org/training-material/hall-of-fame/epsrc-training-grant/"}]}