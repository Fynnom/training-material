{"layout":"tutorial_hands_on","title":"Preparing genomic data for phylogeny reconstruction","zenodo_link":"https://zenodo.org/record/6610704","questions":["How do I find a set of common proteins (orthologs) across related species or strains?","How do I organize a set of orthologs to infer evolutionary relations between species or strains (phylogenetic reconstruction)?"],"objectives":["Mask repetitive elements from a genome","Annotate (predict protein-coding genes) the genomes of the samples to compare","Find a set of common proteins across the samples (orthologs)","Align orthologs across samples"],"time_estimation":"3H","requirements":[{"type":"internal","topic_name":"assembly","tutorials":["general-introduction"]}],"key_points":["You now are able to","Predict proteins in a nucleotide sequence *de-novo* using **funannotate_predict**","Find orthologs across different samples with **orthofinder**","Align orthologs with **ClustalW** in preparation for phylogeny reconstruction <!-- link to phylogeny reconstruction training. -->"],"tags":["phylogeny","data handling","functional annotation"],"contributors":[{"name":"Miguel Roncoroni","joined":"2021-08","email":"miguel.roncoroni@elixir-belgium.org","id":"roncoronimiguel","url":"https://training.galaxyproject.org/training-material/api/contributors/roncoronimiguel.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/roncoronimiguel/"},{"name":"Brigida Gallone","orcid":"0000-0003-3045-5949","joined":"2022-05","id":"brigidagallone","url":"https://training.galaxyproject.org/training-material/api/contributors/brigidagallone.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/brigidagallone/"}],"js_requirements":{"mathjax":null,"mermaid":false},"short_id":"T00132","url":"/topics/ecology/tutorials/phylogeny-data-prep/tutorial.html","topic_name":"ecology","tutorial_name":"phylogeny-data-prep","dir":"topics/ecology/tutorials/phylogeny-data-prep","symlink":null,"id":"ecology/phylogeny-data-prep","ref_tutorials":["<p>A robust and well-resolved phylogenetic classification is essential to understand genetic relationships within and between species and the evolution of their phenotypic diversity. In the last decade the genomic revolution has represented a drastic change in the amount of data used for phylogenetic inference. The single-gene approach using universal phylogenetic markers for the different lineages across the tree of life, is now being replaced by the assembly of taxon-rich and genome-scale data matrices, the so called phylogenomic approach.</p>\n\n<p>Molecular sequence data can be used to construct a phylogeny by comparing differences between nucleotide or amino acid sequences across species or strains, a technique called phylogenomics. <span class=\"citation\"><a href=\"#Young2019\">Young and Gillung 2019</a></span> have written a comprehensive review on the topic of phylogenomics.</p>\n\n<p>In this tutorial we prepare genetic sequence data for phylogenetic reconstruction, using sequences from chromosome 5 of five strains of the yeast <em>Saccharomyces cerevisiae</em>.</p>\n\n<p>To prepare the data, we will:</p>\n<ol>\n  <li>Predict protein coding genes from the genome using Funannotate</li>\n  <li>Find the proteins that are present in more than one genome, called orthologs, using Proteinortho and extract a subset with orthologs that are present in all samples.</li>\n  <li>Align each set of orthologs using ClustalW.</li>\n</ol>\n\n<p>The resulting dataset is ready to be used for phylogenetic reconstruction.</p>\n\n<p><strong>If you are starting from sequence reads, please follow\n<a href=\"/training-material/topics/assembly/tutorials/general-introduction/tutorial.html\">An Introduction to Genome Assembly</a>, and the appropriate genome assembly training for your sequencing technology from GTN’s <a href=\"/training-material/topics/assembly/index.html\">Assembly</a> section</strong></p>\n\n<blockquote class=\"agenda\">\n  <agenda-title></agenda-title>\n\n  <p>In this tutorial, we will cover:</p>\n\n<ol id=\"markdown-toc\">\n  <li><a href=\"#get-data\" id=\"markdown-toc-get-data\">Get data</a></li>\n  <li><a href=\"#protein-coding-gene-prediction\" id=\"markdown-toc-protein-coding-gene-prediction\">Protein coding gene prediction</a>    <ol>\n      <li><a href=\"#mask-repetitive-sequences\" id=\"markdown-toc-mask-repetitive-sequences\">Mask repetitive sequences</a></li>\n      <li><a href=\"#annotate-with-funannotate\" id=\"markdown-toc-annotate-with-funannotate\">Annotate with Funannotate</a></li>\n      <li><a href=\"#extract-orfs-into-fasta-files\" id=\"markdown-toc-extract-orfs-into-fasta-files\">Extract ORFs into FASTA files</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#find-orthologs\" id=\"markdown-toc-find-orthologs\">Find orthologs</a>    <ol>\n      <li><a href=\"#quality-control-with-busco\" id=\"markdown-toc-quality-control-with-busco\">Quality control with <strong>Busco</strong></a></li>\n      <li><a href=\"#extract-proteins-with-proteinortho\" id=\"markdown-toc-extract-proteins-with-proteinortho\">Extract proteins with Proteinortho</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#align-ortholog-sequences\" id=\"markdown-toc-align-ortholog-sequences\">Align ortholog sequences</a></li>\n  <li><a href=\"#conclusion\" id=\"markdown-toc-conclusion\">Conclusion</a></li>\n</ol>\n\n</blockquote>\n\n<h1 id=\"get-data\">Get data</h1>\n<p>For this training we will use a subset of the genome (chromosome 5) from four strains of <em>S. cerevisiae</em>. The GenBank annotated sequenced were produced using ‘funannotate predict annotation’ (Galaxy Version 1.8.9+galaxy2) on the nucleotide sequences sequences.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Data upload</hands-on-title>\n\n  <ol>\n    <li>Create a new history for this tutorial</li>\n    <li>\n      <p>Import the files from <a href=\"https://zenodo.org/record/6610704\">Zenodo</a> or from\nthe shared data library (<code class=\"language-plaintext highlighter-rouge\">GTN - Material</code> -&gt; <code class=\"language-plaintext highlighter-rouge\">ecology</code>\n -&gt; <code class=\"language-plaintext highlighter-rouge\">Preparing genomic data for phylogeny reconstruction</code>):</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>https://zenodo.org/record/6610704/files/BK006939.2.genbank\nhttps://zenodo.org/record/6610704/files/BK006939.2.genome.fasta\nhttps://zenodo.org/record/6610704/files/CM000925.1.genbank\nhttps://zenodo.org/record/6610704/files/CM000925.1.genome.fasta\nhttps://zenodo.org/record/6610704/files/CM005043.2.genbank\nhttps://zenodo.org/record/6610704/files/CM005043.2.genome.fasta\nhttps://zenodo.org/record/6610704/files/CM005299.1.genbank\nhttps://zenodo.org/record/6610704/files/CM005299.1.genome.fasta\n</code></pre></div>      </div>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-importing-via-links\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-importing-via-links\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Importing via links</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Copy the link location</li>   <li>     <p>Click <i class=\"fas fa-upload\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-upload</span> <strong>Upload Data</strong> at the top of the tool panel</p>   </li>   <li>Select <i class=\"fa fa-edit\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-wf-edit</span> <strong>Paste/Fetch Data</strong></li>   <li>     <p>Paste the link(s) into the text field</p>   </li>   <li>     <p>Press <strong>Start</strong></p>   </li>   <li><strong>Close</strong> the window</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li>Optional: Rename each dataset to its accession number followed by ‘.genome.fasta’ or ‘.genbank’.</li>\n    <li>\n      <p>Group the datasets into <a href=\"/training-material/topics/galaxy-interface/tutorials/collections/tutorial.html\">collections</a>. These will ease data handling and help minimize the clutter in your history. Make a collection of nucleotide sequences and another of protein sequences.</p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-creating-a-dataset-collection\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-creating-a-dataset-collection\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Creating a dataset collection</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Click on <i class=\"far fa-check-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-selector</span> <strong>Select Items</strong> at the top of the history panel <img src=\"/training-material/topics/galaxy-interface/images/historyItemControls.png\" alt=\"Select Items button\" /></li>   <li>Check all the datasets in your history you would like to include</li>   <li>     <p>Click <strong>n of N selected</strong> and choose <strong>Build Dataset List</strong></p>     <p><img src=\"/training-material/topics/galaxy-interface/images/buildList.png\" alt=\"build list collection menu item\" width=\"15%\" /></p>   </li>   <li>Enter a name for your collection</li>   <li>Click <strong>Create collection</strong> to build your collection</li>   <li>Click on the checkmark icon at the top of your history again</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h1 id=\"protein-coding-gene-prediction\">Protein coding gene prediction</h1>\n\n<h2 id=\"mask-repetitive-sequences\">Mask repetitive sequences</h2>\n\n<p>Before we can annotate the genome, we will prepare the data by masking repetitive sequences in the genome.\nRepeat-rich regions can interfere with genome annotation tools. In this step we find and soft-mask repetitive regions in the genome. The annotation tool can then take this information into account (<a href=\"/training-material/topics/genome-annotation/tutorials/repeatmasker/tutorial.html\">see RepeatMasker tutorial for more details</a>).\nWe use <strong>RepeatMasker</strong>\n<span class=\"citation\"><a href=\"#RepeatMasker\">Smit <i>et al.</i> 2013</a></span>, a program that screens DNA sequences for interspersed repeats and low complexity DNA sequences.\nThis program has historically made use of <a href=\"https://www.girinst.org/repbase/update/index.html\">RepBase</a> (<span class=\"citation\"><a href=\"#Kohany2006-ks\">Kohany <i>et al.</i> 2006</a></span>), a service of the Genetic Information Research Institute, but this database in no longer open access. Instead, we will use <a href=\"https://www.dfam.org/home\">Dfam</a> (<span class=\"citation\"><a href=\"#Storer2021\">Storer <i>et al.</i> 2021</a></span>) an open collection of Transposable Element DNA sequence alignments,  HMMs derived from Repbase sequences and consensus sequences. For this reason, the annotation of repetitive sequences might be incomplete.</p>\n\n<p>RepeatMasker will only accept compact fasta headers. Before we can mask repetitive regions with RepeatMasker we must trim the NCBI long header (<code class=\"language-plaintext highlighter-rouge\">BK006939.2 TPA_inf: Saccharomyces cerevisiae S288C chromosome V, complete sequence</code>) to leave only the accession number (<code class=\"language-plaintext highlighter-rouge\">&gt;BK006939.2</code>) by using a regular expression.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title> Mask repetitive sequences </hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_replace_in_line/1.1.2\" title=\"Replace Text tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Replace Text</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 1.1.2)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-folder\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-collection</span> <em>“File to process”</em>: <code class=\"language-plaintext highlighter-rouge\">output</code> (Input dataset collection)</li>\n        <li>In <em>“Replacement”</em>:\n          <ul>\n            <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <em>“Insert Replacement”</em>\n              <ul>\n                <li><em>“Find pattern”</em>: <code class=\"language-plaintext highlighter-rouge\">(&gt;[^ ]+).+</code></li>\n                <li>\n                  <p><em>“Replace with:”</em>: <code class=\"language-plaintext highlighter-rouge\">\\1</code></p>\n\n                  <blockquote class=\"comment\">\n                    <comment-title></comment-title>\n\n                    <p><code class=\"language-plaintext highlighter-rouge\">\\1</code> replaces the text in the header with the first matched text in the header, the accession number in this case.</p>\n                  </blockquote>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/bgruening/repeat_masker/repeatmasker_wrapper/4.1.2-p1+galaxy0\" title=\"RepeatMasker tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>RepeatMasker</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 4.1.2-p1+galaxy0)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Genomic DNA”</em>: <code class=\"language-plaintext highlighter-rouge\">outfile</code> (output of <strong>Replace Text</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n        <li><em>“Repeat library source”</em>: <code class=\"language-plaintext highlighter-rouge\">DFam (curated only, bundled with RepeatMasker)</code>\n          <ul>\n            <li><em>“Select species name from a list?”</em>: <code class=\"language-plaintext highlighter-rouge\">No</code>\n              <ul>\n                <li><em>“Repeat source species”</em>: <code class=\"language-plaintext highlighter-rouge\">\"Saccharomyces cerevisiae\"</code></li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n      </ul>\n\n      <blockquote class=\"comment\">\n        <comment-title></comment-title>\n\n        <p>If you don’t select the species from the list, you must provide a species name (“Saccharomyces cerevisiae” in this example). In principal, all unique clade names occurring in <a href=\"https://www.ncbi.nlm.nih.gov/Taxonomy/taxonomyhome.html\">NCBI taxonomy database</a> can be used for species. Capitalization is ignored, multiple words need to bound by apostrophes. Not all “common” English names occur in the taxonomy database. Using Latin names is always safest.</p>\n      </blockquote>\n    </li>\n    <li>Inspect the ‘RepeatMasker masked sequence on data’ output file. Scroll down and you will find stretches of ‘N’ on the location of repetitive sequences. The file is now ready for annotation with Funannotate.</li>\n  </ol>\n</blockquote>\n\n<h2 id=\"annotate-with-funannotate\">Annotate with Funannotate</h2>\n\n<p>We will predict protein-coding genes from genomic sequences using <a href=\"https://funannotate.readthedocs.io/\">Funannotate</a> (<span class=\"citation\"><a href=\"#Young2019\">Young and Gillung 2019</a></span>), which collects evidence from different ab-initio gene predictors as well as from RNA-seq or ESTs data. Funannotate has been developed for Fungi but it works with any Eukaryotic genome. The output of Funannotate is a list of ORFs and their translation in GenBank format.</p>\n\n<blockquote class=\"comment\">\n  <comment-title></comment-title>\n\n  <p>If you would like to learn about genome annotation in more depth, the GTN has a <a href=\"/training-material/topics/genome-annotation/index.html\">section</a> dedicated to training on genome annotation, including a hands-on tutorial on <a href=\"/training-material/topics/genome-annotation/tutorials/funannotate/tutorial.html\">Funannotate</a>.</p>\n</blockquote>\n\n<blockquote class=\"warning\">\n  <warning-title> Slow Step Ahead! </warning-title>\n  <p>Even for a small dataset, Funannotate can take a very long time to run. You can skip this step and use the Genbank files downloaded from Zenodo for the following step. These were generated using Funannotate as described in the hands-on below.</p>\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title> Annotate genome </hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/funannotate_predict/funannotate_predict/1.8.9+galaxy2\" title=\"Funannotate predict annotation tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Funannotate predict annotation</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 1.8.9+galaxy2)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Assembly to annotate”</em>: <code class=\"language-plaintext highlighter-rouge\">output_masked_genome</code> (output of <strong>RepeatMasker</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n        <li>In <em>“Organism”</em>:\n          <ul>\n            <li><em>“Name of the species to annotate”</em>: <code class=\"language-plaintext highlighter-rouge\">Saccharomyces cerevisiae</code></li>\n            <li><em>“Is it a fungus species?”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n            <li><em>“Ploidy of assembly”</em>: <code class=\"language-plaintext highlighter-rouge\">1</code></li>\n          </ul>\n        </li>\n        <li>In <em>“Evidences”</em>:\n          <ul>\n            <li><em>“Select protein evidences”</em>: <code class=\"language-plaintext highlighter-rouge\">Use UniProtKb/SwissProt (from selected Funannotate database)</code></li>\n          </ul>\n        </li>\n      </ul>\n\n      <blockquote class=\"tip\">\n        <tip-title></tip-title>\n\n        <p>If available, include mRNA and/or ESTs in this evidence section to increase sensitivity of predictions.</p>\n      </blockquote>\n\n      <ul>\n        <li>In <em>“Busco”</em>:\n          <ul>\n            <li><em>“BUSCO models to align”</em>: <code class=\"language-plaintext highlighter-rouge\">saccharomycetes</code></li>\n            <li><em>“Initial Augustus species training set for BUSCO alignment”</em>: <code class=\"language-plaintext highlighter-rouge\">saccharomyces</code></li>\n          </ul>\n        </li>\n        <li>In <em>“Augustus settings (advanced)”</em>:\n          <ul>\n            <li><em>“Minimum number of models to train Augustus”</em>: <code class=\"language-plaintext highlighter-rouge\">15</code></li>\n          </ul>\n        </li>\n      </ul>\n\n      <blockquote class=\"comment\">\n        <comment-title></comment-title>\n\n        <p>When annotating full genomes, increase the number of <em>‘Minimum number of models to train Augustus’</em> to an appropriate value. For the small sample dataset used here, values larger than 15 will result in failure.</p>\n      </blockquote>\n    </li>\n    <li>Inspect the output GenBank file. The FEATURES section contains the genome annotation of protein predictions, their location and their translation. Each predicted protein is given a unique ID, which will become the FASTA header in the next step.</li>\n  </ol>\n</blockquote>\n\n<h2 id=\"extract-orfs-into-fasta-files\">Extract ORFs into FASTA files</h2>\n\n<p>In this step, we extract the protein sequences from the GenBank files into multi-FASTA files. Additionally, we modify the headers to include the accession number of the sample. This creates an unique accession-proteinID header for each predicted protein, and will allow us to retrieve them after we combine all predicted proteins into one multi-FASTA file.</p>\n\n<p>So far, we have kept sequence files in a collection. Now we will combine all predicted proteins from all samples into one big multi-fasta file. Later, we will retrieve ortholog sequences from this file.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title> Extract ORFs </hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/bgruening/glimmer_gbk_to_orf/glimmer_gbk_to_orf/3.02\" title=\"Extract ORF tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Extract ORF</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 3.02)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“gene bank file”</em>: <code class=\"language-plaintext highlighter-rouge\">annot_gbk</code> (output of <strong>Funannotate predict annotation</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> - or the genbank files downloaded from Zenodo)</li>\n      </ul>\n    </li>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/galaxyp/regex_find_replace/regex1/1.0.1\" title=\"Regex Find And Replace tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Regex Find And Replace</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 1.0.1)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Select lines from”</em>: <code class=\"language-plaintext highlighter-rouge\">aa_output</code> (output of <strong>Extract ORF</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n        <li>In <em>“Check”</em>:\n          <ul>\n            <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <em>“Insert Check”</em>\n              <ul>\n                <li><em>“Find Regex”</em>: <code class=\"language-plaintext highlighter-rouge\">&gt;([^ ]+).+</code></li>\n                <li><em>“Replacement”</em>: <code class=\"language-plaintext highlighter-rouge\">&gt;#{input_name}_\\1</code></li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/nml/collapse_collections/collapse_dataset/4.2\" title=\"Collapse Collection tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Collapse Collection</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 4.2)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Collection of files to collapse into single dataset”</em>: <code class=\"language-plaintext highlighter-rouge\">out_file1</code> (output of <strong>Regex Find And Replace</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n        <li><em>“Prepend File name”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>Is the number of predicted ORFs the same across the samples?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <ol>\n      <li>No, the number of predicted ORFs ranges from 193 to 199.</li>\n    </ol>\n\n  </blockquote>\n\n</blockquote>\n\n<h1 id=\"find-orthologs\">Find orthologs</h1>\n\n<p>Orthologs are genes in different species evolved from a common ancestral gene by a speciation (lineage-splitting) event and contain the information needed for building phylogenies. The input for this step is the collection of multi-FASTA extracted from the GenBank file and modified to have unique headers.\nThe result file ‘orthology-groups’ contains one row per orthogroup and one column per sample.</p>\n\n<p>Next, we select orthogroups where all the species are represented by only one protein, 1:1 single copy orthologs (a total of 4 proteins per orthogroup for this dataset).</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title> Find and filter orthologs </hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/proteinortho/proteinortho/6.0.14+galaxy2.9.1\" title=\"Proteinortho tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Proteinortho</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 6.0.14+galaxy2.9.1)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Select the input fasta files (&gt;2)”</em>: <code class=\"language-plaintext highlighter-rouge\">out_file1</code> (output of <strong>Regex Find And Replace</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n        <li><em>“Activate synteny feature (POFF)”</em>: <code class=\"language-plaintext highlighter-rouge\">no</code></li>\n      </ul>\n    </li>\n    <li><span class=\"tool\" data-tool=\"Filter1\" title=\"Filter tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Filter</strong></span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Filter”</em>: <code class=\"language-plaintext highlighter-rouge\">proteinortho</code> (output of <strong>Proteinortho</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n        <li><em>“With following condition”</em>: <code class=\"language-plaintext highlighter-rouge\">c1==4 and c2==4</code></li>\n      </ul>\n    </li>\n    <li>Inspect the ‘orthology-groups’ tabular file.</li>\n  </ol>\n</blockquote>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>\n      <p>Inspect the the ‘orthology-groups’ tabular file.</p>\n\n      <ol>\n        <li>Do any samples contain more than one gene for any given orthogroup?</li>\n        <li>What is the name given to these homologous genes within the same genome?</li>\n      </ol>\n\n      <blockquote class=\"solution\">\n        <solution-title></solution-title>\n\n        <ol>\n          <li>Yes, <em>CM000925.1</em> contains two genes on the first orthogroup.</li>\n          <li>Paralogs. These are gene copies created by a duplication event within the same genome.</li>\n        </ol>\n\n      </blockquote>\n    </li>\n    <li>\n      <p>Look at the filtered orthogroups.</p>\n      <ol>\n        <li>How many orthogroups are represented once only in all four samples?</li>\n      </ol>\n\n      <blockquote class=\"solution\">\n        <solution-title></solution-title>\n\n        <ol>\n          <li>173</li>\n        </ol>\n\n      </blockquote>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h2 id=\"quality-control-with-busco\">Quality control with <strong>Busco</strong></h2>\n\n<p>Busco is a dataset of nearl-universal, single-copy orthologs.\nHere we use it for quality control of the assembly and annotation produced above.\nIt outputs a proxy of completeness, duplication and fragmentation of the annotation (Busco can also be used to assess the completeness of a genome assembly).</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title> QC with Busco </hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/busco/busco/4.1.4\" title=\"Busco tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Busco</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 4.1.4)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Sequences to analyse”</em>: <code class=\"language-plaintext highlighter-rouge\">out_file1</code> (output of <strong>Regex Find And Replace</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n        <li><em>“Mode”</em>: <code class=\"language-plaintext highlighter-rouge\">Proteome</code></li>\n        <li><em>“Lineage”</em>: <code class=\"language-plaintext highlighter-rouge\">Saccharomycetes</code></li>\n        <li>In <em>“Advanced Options”</em>:\n          <ul>\n            <li><em>“Augustus species model”</em>: <code class=\"language-plaintext highlighter-rouge\">Use the default species for selected lineage</code></li>\n          </ul>\n        </li>\n      </ul>\n\n      <blockquote class=\"tip\">\n        <tip-title></tip-title>\n        <p>Make sure you select the ‘lineage’ closest to the species(s) you are analyzing.</p>\n\n      </blockquote>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>The <a href=\"https://busco.ezlab.org/busco_userguide.html#complete\">Complete (‘C’) metric</a> stands for complete Busco genes identified. Look at the Busco output file ‘Short summary’ for sample BK006939.2. What is the ‘C’ number?</li>\n    <li>Why is it so low?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <ol>\n      <li>4.0%</li>\n      <li>Our dataset contains only chromosome 5 of the yeast genome.</li>\n    </ol>\n\n  </blockquote>\n\n</blockquote>\n\n<h2 id=\"extract-proteins-with-proteinortho\">Extract proteins with Proteinortho</h2>\n\n<p>Next we extract 1:1 single copy orthologs and generate one multi fasta file per ortholog.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title> Extract protein sequences </hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/proteinortho_grab_proteins/proteinortho_grab_proteins/6.0.14+galaxy2.9.1\" title=\"Proteinortho grab proteins tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Proteinortho grab proteins</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 6.0.14+galaxy2.9.1)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Select the input fasta files”</em>: <code class=\"language-plaintext highlighter-rouge\">output</code> (output of <strong>Collapse Collection</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n        <li><em>“Query type”</em>: <code class=\"language-plaintext highlighter-rouge\">orthology-groups output file</code>\n          <ul>\n            <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“A orthology-groups file”</em>: <code class=\"language-plaintext highlighter-rouge\">out_file1</code> (output of <strong>Filter</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>The output is a collection of multi-fasta ortholog files. All species are represented in each file and are ready to be aligned.</p>\n\n<h1 id=\"align-ortholog-sequences\">Align ortholog sequences</h1>\n\n<p>Alignment of sequences allows cross-species (or other taxonomic level, strain, taxa) comparison. An alignment is a hypothesis of positional homology between bases/amino acids of different sequences. A correct alignment is crucial for phylogenetic inference. Here we use ClustaW, a well-established pairwise sequence aligner.</p>\n\n<p>First we modify the headers of the multi-fasta file, such that only the sample name is retained. This is important for future conatenation of alignment into a supermatrix (see Maximum likelihood GTN training)</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title> Align orthologs with ClustalW </hands-on-title>\n\n  <ol>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/galaxyp/regex_find_replace/regex1/1.0.1\" title=\"Regex Find And Replace tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Regex Find And Replace</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 1.0.1)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Select lines from”</em>: <code class=\"language-plaintext highlighter-rouge\">listproteinorthograbproteins</code> (output of <strong>Proteinortho grab proteins</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n        <li>In <em>“Check”</em>:\n          <ul>\n            <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <em>“Insert Check”</em>\n              <ul>\n                <li><em>“Find Regex”</em>: <code class=\"language-plaintext highlighter-rouge\">(&gt;[^_]+).+</code></li>\n                <li><em>“Replacement”</em>: <code class=\"language-plaintext highlighter-rouge\">\\1</code></li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li><span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/devteam/clustalw/clustalw/2.1\" title=\"ClustalW tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>ClustalW</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 2.1)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“FASTA file”</em>: <code class=\"language-plaintext highlighter-rouge\">out_file1</code> (output of <strong>Regex Find And Replace</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n        <li><em>“Data type”</em>: <code class=\"language-plaintext highlighter-rouge\">Protein sequences</code></li>\n        <li><em>“Output alignment format”</em>: <code class=\"language-plaintext highlighter-rouge\">FASTA format</code></li>\n        <li><em>“Output complete alignment (or specify part to output)”</em>: <code class=\"language-plaintext highlighter-rouge\">Complete alignment</code></li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>Open the ClustalW output ‘queryOrthoGroup121.fasta’ and its corresponding multifasta input. You can compare them side by side activating the ‘Scratchbook’ on the top panel. What is the main difference between the sequences in the unaligned multifasta (input) and the ClustalW output multifasta?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n\n    <ol>\n      <li>Two of the sequences from this orthogroup are truncated (early stop codon). The alignment program inserts ‘-‘ to represent indels in the alignment.</li>\n    </ol>\n\n  </blockquote>\n\n</blockquote>\n\n<h1 id=\"conclusion\">Conclusion</h1>\n<p>In this tutorial, you have prepared genome sequence data for phylogenetic analysis. First, you have extracted information from these in the form of predicted protein sequences. You then grouped the predicted proteins into orthogroups and aligned them. These aligned sequences can now be used for reconstructing a phylogeny and building a phylogenetic tree.</p>\n\n"],"ref_slides":[],"hands_on":true,"slides":false,"mod_date":"2022-10-28 13:34:08 +0000","pub_date":"2022-10-21 11:45:57 +0000","version":22,"workflows":[{"workflow":"main_workflow.ga","tests":false,"url":"https://training.galaxyproject.org/training-material/topics/ecology/tutorials/phylogeny-data-prep/workflows/main_workflow.ga","path":"topics/ecology/tutorials/phylogeny-data-prep/workflows/main_workflow.ga","wfid":"ecology-phylogeny-data-prep","wfname":"main_workflow","trs_endpoint":"https://training.galaxyproject.org/training-material/api/ga4gh/trs/v2/tools/ecology-phylogeny-data-prep/versions/main_workflow","license":"CC-BY-4.0","creators":[{"class":"Person","identifier":"","name":"Miguel Roncoroni"}],"name":"preparing genomic data for phylogeny recostruction (GTN)","title":"preparing genomic data for phylogeny recostruction (GTN)","test_results":null,"modified":"2024-06-14 10:38:29 +0000","mermaid":"flowchart TD\n  0[\"ℹ️ Input Collection\\nInput genomes as collection\"];\n  style 0 stroke:#2c3143,stroke-width:4px;\n  1[\"Replace Text\"];\n  0 -->|output| 1;\n  6a2d3fcd-b557-4440-910d-b4c537feef20[\"Output\\nheaders_shortened\"];\n  1 --> 6a2d3fcd-b557-4440-910d-b4c537feef20;\n  style 6a2d3fcd-b557-4440-910d-b4c537feef20 stroke:#2c3143,stroke-width:4px;\n  2[\"RepeatMasker\"];\n  1 -->|outfile| 2;\n  1db6607a-343a-4a61-9a3b-43101eb8223b[\"Output\\nrepeat_masked\"];\n  2 --> 1db6607a-343a-4a61-9a3b-43101eb8223b;\n  style 1db6607a-343a-4a61-9a3b-43101eb8223b stroke:#2c3143,stroke-width:4px;\n  3[\"Funannotate predict annotation\"];\n  2 -->|output_masked_genome| 3;\n  642c1c09-82f4-4ef4-bd53-d14a583044e2[\"Output\\nfunannotate_predicted_proteins\"];\n  3 --> 642c1c09-82f4-4ef4-bd53-d14a583044e2;\n  style 642c1c09-82f4-4ef4-bd53-d14a583044e2 stroke:#2c3143,stroke-width:4px;\n  4[\"Extract ORF\"];\n  3 -->|annot_gbk| 4;\n  07fb8c04-990e-4bc7-b607-9c4161b4786d[\"Output\\nextracted_ORFs\"];\n  4 --> 07fb8c04-990e-4bc7-b607-9c4161b4786d;\n  style 07fb8c04-990e-4bc7-b607-9c4161b4786d stroke:#2c3143,stroke-width:4px;\n  5[\"Regex Find And Replace\"];\n  4 -->|aa_output| 5;\n  8dc378a8-d485-42df-8322-6cf8230257a0[\"Output\\nsample_names_to_headers\"];\n  5 --> 8dc378a8-d485-42df-8322-6cf8230257a0;\n  style 8dc378a8-d485-42df-8322-6cf8230257a0 stroke:#2c3143,stroke-width:4px;\n  6[\"Collapse Collection\"];\n  5 -->|out_file1| 6;\n  e9a55459-4a2c-4238-8494-e99ec67307ea[\"Output\\nproteomes_to_one_file\"];\n  6 --> e9a55459-4a2c-4238-8494-e99ec67307ea;\n  style e9a55459-4a2c-4238-8494-e99ec67307ea stroke:#2c3143,stroke-width:4px;\n  7[\"Proteinortho\"];\n  5 -->|out_file1| 7;\n  ee688b7a-2a9e-4480-a27a-db8cf795b635[\"Output\\nProteinortho on input dataset(s): orthology-groups\"];\n  7 --> ee688b7a-2a9e-4480-a27a-db8cf795b635;\n  style ee688b7a-2a9e-4480-a27a-db8cf795b635 stroke:#2c3143,stroke-width:4px;\n  8[\"Busco\"];\n  5 -->|out_file1| 8;\n  9[\"Filter\"];\n  7 -->|proteinortho| 9;\n  10[\"Proteinortho grab proteins\"];\n  6 -->|output| 10;\n  9 -->|out_file1| 10;\n  8625e8b1-e3af-4afa-bf85-1a3258cbbfb2[\"Output\\nProteinortho_extract_by_orthogroup\"];\n  10 --> 8625e8b1-e3af-4afa-bf85-1a3258cbbfb2;\n  style 8625e8b1-e3af-4afa-bf85-1a3258cbbfb2 stroke:#2c3143,stroke-width:4px;\n  11[\"Regex Find And Replace\"];\n  10 -->|listproteinorthograbproteins| 11;\n  b072d32e-f725-4833-af0b-74f4df526d9a[\"Output\\nfasta_header_cleaned\"];\n  11 --> b072d32e-f725-4833-af0b-74f4df526d9a;\n  style b072d32e-f725-4833-af0b-74f4df526d9a stroke:#2c3143,stroke-width:4px;\n  12[\"ClustalW\"];\n  11 -->|out_file1| 12;\n  f704b4b2-5214-4393-8a85-6274bda27c8c[\"Output\\nClustalW on input dataset(s): clustal\"];\n  12 --> f704b4b2-5214-4393-8a85-6274bda27c8c;\n  style f704b4b2-5214-4393-8a85-6274bda27c8c stroke:#2c3143,stroke-width:4px;\n  13[\"ClipKIT. Alignment trimming software for phylogenetics.\"];\n  12 -->|output| 13;\n  37092981-191a-4413-8f60-51802dd95f9c[\"Output\\nTrimmed alignment.\"];\n  13 --> 37092981-191a-4413-8f60-51802dd95f9c;\n  style 37092981-191a-4413-8f60-51802dd95f9c stroke:#2c3143,stroke-width:4px;\n  14[\"PhyKit - Alignment-based functions\"];\n  13 -->|trimmed_output| 14;\n  09ad25e3-cd68-4fb4-9c57-3e79212b8e01[\"Output\\nConcatenated fasta alignment file\"];\n  14 --> 09ad25e3-cd68-4fb4-9c57-3e79212b8e01;\n  style 09ad25e3-cd68-4fb4-9c57-3e79212b8e01 stroke:#2c3143,stroke-width:4px;\n  1d546e4c-7e3c-499d-870c-4846feb7a46d[\"Output\\nA partition file ready for input into RAxML or IQ-tree\"];\n  14 --> 1d546e4c-7e3c-499d-870c-4846feb7a46d;\n  style 1d546e4c-7e3c-499d-870c-4846feb7a46d stroke:#2c3143,stroke-width:4px;\n  26846814-d43a-4ce7-9f26-cfb70f184dce[\"Output\\nAn occupancy file that summarizes the taxon occupancy per sequence\"];\n  14 --> 26846814-d43a-4ce7-9f26-cfb70f184dce;\n  style 26846814-d43a-4ce7-9f26-cfb70f184dce stroke:#2c3143,stroke-width:4px;"}],"api":"https://training.galaxyproject.org/training-material/api/topics/ecology/tutorials/phylogeny-data-prep/tutorial.json","tools":["Filter1","toolshed.g2.bx.psu.edu/repos/bgruening/glimmer_gbk_to_orf/glimmer_gbk_to_orf/3.02","toolshed.g2.bx.psu.edu/repos/bgruening/repeat_masker/repeatmasker_wrapper/4.1.2-p1+galaxy0","toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_replace_in_line/1.1.2","toolshed.g2.bx.psu.edu/repos/devteam/clustalw/clustalw/2.1","toolshed.g2.bx.psu.edu/repos/galaxyp/regex_find_replace/regex1/1.0.1","toolshed.g2.bx.psu.edu/repos/iuc/busco/busco/4.1.4","toolshed.g2.bx.psu.edu/repos/iuc/funannotate_predict/funannotate_predict/1.8.9+galaxy2","toolshed.g2.bx.psu.edu/repos/iuc/proteinortho/proteinortho/6.0.14+galaxy2.9.1","toolshed.g2.bx.psu.edu/repos/iuc/proteinortho_grab_proteins/proteinortho_grab_proteins/6.0.14+galaxy2.9.1","toolshed.g2.bx.psu.edu/repos/nml/collapse_collections/collapse_dataset/4.2","toolshed.g2.bx.psu.edu/repos/padge/clipkit/clipkit/0.1.0","toolshed.g2.bx.psu.edu/repos/padge/phykit/phykit_alignment_based/0.1.0"],"supported_servers":{"exact":[{"url":"https://usegalaxy.be/","name":"UseGalaxy.be","usegalaxy":false}],"inexact":[]},"topic_name_human":"Ecology","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[{"name":"glimmer_gbk_to_orf","owner":"bgruening","revisions":"04861c9bbf45","tool_panel_section_label":"Ecology","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"repeat_masker","owner":"bgruening","revisions":"39b40a9a6296","tool_panel_section_label":"Annotation","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"text_processing","owner":"bgruening","revisions":"d698c222f354","tool_panel_section_label":"Text Manipulation","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"clustalw","owner":"devteam","revisions":"d6694932c5e0","tool_panel_section_label":"Multiple Alignments","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"regex_find_replace","owner":"galaxyp","revisions":"ae8c4b2488e7","tool_panel_section_label":"Text Manipulation","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"busco","owner":"iuc","revisions":"602fb8e63aa7","tool_panel_section_label":"Annotation","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"funannotate_predict","owner":"iuc","revisions":"2bba2ff070d9","tool_panel_section_label":"Annotation","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"proteinortho","owner":"iuc","revisions":"4850f0d15f01","tool_panel_section_label":"Proteomics","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"collapse_collections","owner":"nml","revisions":"830961c48e42","tool_panel_section_label":"Collection Operations","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"clipkit","owner":"padge","revisions":"770695339600","tool_panel_section_label":"Phylogenetics","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"phykit","owner":"padge","revisions":"1ac6ee298657","tool_panel_section_label":"Ecology","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"}]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools:\n- name: glimmer_gbk_to_orf\n  owner: bgruening\n  revisions: '04861c9bbf45'\n  tool_panel_section_label: Ecology\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: repeat_masker\n  owner: bgruening\n  revisions: 39b40a9a6296\n  tool_panel_section_label: Annotation\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: text_processing\n  owner: bgruening\n  revisions: d698c222f354\n  tool_panel_section_label: Text Manipulation\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: clustalw\n  owner: devteam\n  revisions: d6694932c5e0\n  tool_panel_section_label: Multiple Alignments\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: regex_find_replace\n  owner: galaxyp\n  revisions: ae8c4b2488e7\n  tool_panel_section_label: Text Manipulation\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: busco\n  owner: iuc\n  revisions: 602fb8e63aa7\n  tool_panel_section_label: Annotation\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: funannotate_predict\n  owner: iuc\n  revisions: 2bba2ff070d9\n  tool_panel_section_label: Annotation\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: proteinortho\n  owner: iuc\n  revisions: 4850f0d15f01\n  tool_panel_section_label: Proteomics\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: collapse_collections\n  owner: nml\n  revisions: 830961c48e42\n  tool_panel_section_label: Collection Operations\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: clipkit\n  owner: padge\n  revisions: '770695339600'\n  tool_panel_section_label: Phylogenetics\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: phykit\n  owner: padge\n  revisions: 1ac6ee298657\n  tool_panel_section_label: Ecology\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n","tours":false,"video":false,"slides_recordings":false,"translations":{"tutorial":[],"slides":[],"video":false},"license":"CC-BY-4.0","type":"tutorial"}