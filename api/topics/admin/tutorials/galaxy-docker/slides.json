{"layout":"tutorial_slides","logo":"assets/images/gat.png","title":"Docker and Galaxy","zenodo_link":"","questions":["Why Docker? What is it?","How to use Docker?","How to integrate Galaxy in Docker to facilitate its deployment?"],"objectives":["Docker basics","Galaxy Docker image (usage)","Galaxy Docker (internals)","Galaxy flavours"],"time_estimation":"1h","key_points":["Use Docker","Integrate your tools into Galaxy","Use Galaxy inside Docker to have a flavoured Galaxy instance"],"contributors":["bebatut","bgruening"],"js_requirements":{"mathjax":null,"mermaid":false},"short_id":"S00011","url":"/topics/admin/tutorials/galaxy-docker/slides.html","topic_name":"admin","tutorial_name":"galaxy-docker","dir":"topics/admin/tutorials/galaxy-docker","symlink":null,"id":"admin/galaxy-docker","ref_tutorials":[],"ref_slides":["### Preparing Admin Training VMs\n\nIf you're falling along on Galaxy Admin Training VMs, you will need to setup Docker.\n\nYou can modify your Ansible setup to configure this as described at [bit.ly/gxadmin-docker-playbook](http://bit.ly/gxadmin-docker-playbook).\n\nYou will also need to stop Galaxy running on the VM so that you can run Galaxy in a container.\n\n```\nsudo supervisorctl stop galaxy\n```\n\n???\n\nTODO: Remove this slide after the training, it isn't general.\n\n---\n\n\n### Preparation\n\n```\n$ docker pull bgruening/galaxy-stable:18.05\n$ git clone https://github.com/bgruening/docker-galaxy-stable.git\n```\n\n???\n\nHere you will learn the internals of the Docker Galaxy Image.\nWe will show you tips and tricks on how to run the Galaxy Docker\nImage successfully in production, how to manage updates and how\nto bind the container to a cluster scheduler. Moreover,\nyou will learn how to create your own Galaxy flavour mixing a\nvariety of different tools and visualisations\n\n---\n\n## Why Docker? <br>What is it?\n\n![Image of a blue whale with containers on its back.](../../images/docker_whale.png)\n\n---\n\n### Deployment issues of bioinformatics tools\n\n- Different environments\n- Different OS\n- Different packaging\n- Conflict between tools or versions\n\n<i class=\"fa fa-long-arrow-right\"></i> Impact on usability and reproducibility\n\n---\n\n### Deployment issue\n\n![Galaxy is a box with many dependencies like node, java, nginx, python, uwsgi, anaconda. On the right knime is another box with java and eclipse dependencies. Lines show the multiplicity of tools and dependencies trying to run on multiple environments with windows/osx/linux desktops, servers, and the cloud.](../../images/deployment_issue.svg)\n\n---\n\n### Deployment issue\n\nMatrix from Hell\n\n![Galaxy and knime form the y axis of a table with a lot of question marks about which environments support them.](../../images/deployment_issue_matrix.svg)\n\n---\n\n### Transport Pre 1960\n\n![Icons for multiple types of goods shown multiple methods for transport and storing.](../../images/cargo_transport_issue.svg)\n\n---\n\n### Transport Pre 1960\n\nMatrix from Hell\n\n![A similar table full of question marks between goods and shipment methods is shown.](../../images/cargo_transport_matrix.svg)\n\n---\n\n### Intermodal shipping container\n\n![A blue shipping container is shown solving the transport problem by being a one size container to fit all sorts of goods, on all sorts of transports.](../../images/cargo_transport_solution.svg)\n\n???\n\nA standard container\n- Virtually loading any goods\n- Sealed until it reaches final delivery\n- Can be\n  - loaded and unloaded\n  - stacked\n  - transported efficiently over long distances\n  - transferred from one mode of transport to another\n\n---\n\n### Docker\n\n![Docker logo on a blue shipping container solves the galaxy/knime deployment problem across environments.](../../images/deployment_solution.svg)\n\n\n???\n\nDocker = An engine that encapsulated any tools as a\n- lightweight\n- portable\n- self sufficient container\n- manipulated using standard operations\n- run consistently on virtually any hardware platform\n\n---\n\n### A Docker container?\n\n![A schematic with the kernal below and two containers is shown, each container has different stacks.](../../images/WhatIsDocker_1_kernal-2_1.png)\n\nLightweight and Open\n\n???\n\n- lightweight: same OS kernel, instant start, less RAM use\n- open: open standard, run on all major unix distributions and windows\n\n---\n\n### Virtual machines vs Containers\n\n![A cartoon comparing containers vs VMs. On the left the VMs are presented as a layer of server, host os, and hypervisor (type 2) followed by several tall pillars of guest OS, bin/libs and finally their respective apps. Everything is siloed. On the right is containers where the layers are server, host os, and docker engine. Above those are very short pillars of each different app, and when duplicate apps are run, the bin/libs are shown as shared. Text reads: containers are isolated but share OS and where appropriate, bins/libraries.](../../images/container_vs_vm.svg)\n\nContainers more portable and efficient\n\n???\n\nSimilar resource isolation and allocation benefits\n\n*but* a different architectural approach\n\n- VM: application +  necessary binaries and libraries + entire guest operating system\n  - All of which can amount to tens of GBs\n- Container: application and all of its dependencies\n  - Share the kernel with other containers\n  - Running as isolated processes in user space on the host operating system\n\n---\n\n## How to use Docker?\n\n![A cartoon of a whale with shipping containers atop it.](../../images/docker-usage.jpg)\n\n---\n\n### The client\n\n![A command line is explained, docker is the program you're using, run is the subcommand that creates and runs a container, and hello-world is the image you want to load.](../../images/docker_command.png)\n\n???\n\nDocker Engine = the core Docker technology on your computer\n\nClient: to talk with Docker\n\n`docker --help`\n\n---\n\n### Containers? Images?\n\n![A single container labelled galaxy with postgres, nginx, and python inside is shown pointing to three other galaxy containers.](../../images/docker_concept_image_container.png)\n\n???\n\nImage:\n- recipe that tell how to build your container\n- A filesystem and parameters to use at runtime\n- snapshot of the content of a container: it doesn't have state and never changes once built\n\nContainer\n- a running instance of an image\n- you can execute several time the same recipe and if you follow every time the same recipe, you will have the same meal several time. Same for containers\n\n---\n\n### How to get images?\n\n![Images are stored in an image registry which are downloaded with docker pull onto a docker host, where you can run multiple instances of galaxy.](../../images/docker_concept_pull.png)\n\n???\n\nDocker Registry:\n\n- stateless\n- highly scalable server side application\n\nto stores and distribute Docker images\n\nExample: docker hub, quay.io\n\n---\n\n### `docker pull`\n\n```sh\n$ docker pull hello-world\nUsing default tag: latest\nlatest: Pulling from library/hello-world\nc04b14da8d14: Pull complete\nDigest: sha256:0256e8a36e2070f7bf2d0b0763dbabdd67798512411de4cdcf9431a1feb60fd9\nStatus: Downloaded newer image for hello-world:latest\n```\n\n---\n\n### Creation of containers\n\n![Images are stored in an image registry which are downloaded with docker pull onto a docker host, where you can run multiple instances of galaxy.](../../images/docker_concept_run.png)\n\n---\n\n### `docker run`\n\n```sh\n$ docker run hello-world\n\nHello from Docker!\nThis message shows that your installation appears to be working correctly.\n\nTo generate this message, Docker took the following steps:\n 1. The Docker client contacted the Docker daemon.\n 2. The Docker daemon pulled the \"hello-world\" image from the Docker Hub.\n 3. The Docker daemon created a new container from that image which runs the\n    executable that produces the output you are currently reading.\n 4. The Docker daemon streamed that output to the Docker client, which sent it\n    to your terminal.\n\nTo try something more ambitious, you can run an Ubuntu container with:\n $ docker run -it ubuntu bash\n\nShare images, automate workflows, and more with a free Docker Hub account:\n https://hub.docker.com\n\nFor more examples and ideas, visit:\n https://docs.docker.com/engine/userguide/\n```\n\n---\n\n### `docker run`\n\n```sh\n$ docker run docker/whalesay cowsay Galaxy\nUnable to find image 'docker/whalesay:latest' locally\nlatest: Pulling from docker/whalesay\ne190868d63f8: Pull complete\n909cd34c6fd7: Pull complete\n0b9bfabab7c1: Pull complete\na3ed95caeb02: Pull complete\n00bf65475aba: Pull complete\nc57b6bcc83e3: Pull complete\n8978f6879e2f: Pull complete\n8eed3712d2cf: Pull complete\nDigest: sha256:178598e51a26abbc958b8a2e48825c90bc22e641de3d31e18aaf55f3258ba93b\nStatus: Downloaded newer image for docker/whalesay:latest\n ________\n< Galaxy >\n --------\n    \\\n     \\\n      \\\n                    ##        .\n              ## ## ##       ==\n           ## ## ## ##      ===\n       /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"___/ ===\n  ~~~ {~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~\n       \\______ o          __/\n        \\    \\        __/\n          \\____\\______/\n```\n\n???\n\n- Automatic `pull` if image not findable\n- Interaction with the container to say something\n\n---\n\n### `docker run`\n\n```sh\n$ docker run --help\n\nUsage:  docker run [OPTIONS] IMAGE [COMMAND] [ARG...]\n\nRun a command in a new container\n\n  -a, --attach=[]                 Attach to STDIN, STDOUT or STDERR\n  --add-host=[]                   Add a custom host-to-IP mapping (host:ip)\n  --cpu-shares                    CPU shares (relative weight)\n  ...\n  -d, --detach                    Run container in background and print container ID\n  -e, --env=[]                    Set environment variables\n  --entrypoint                    Overwrite the default ENTRYPOINT of the image\n  --env-file=[]                   Read in a file of environment variables\n  ...\n  -h, --hostname                  Container host name\n  -i, --interactive               Keep STDIN open even if not attached\n  --name                          Assign a name to the container\n  --net=default                   Connect a container to a network\n  ...\n  -P, --publish-all               Publish all exposed ports to random ports\n  -p, --publish=[]                Publish a container's port(s) to the host\n  --privileged                    Give extended privileges to this container\n  --rm                            Automatically remove the container when it exits\n  -t, --tty                       Allocate a pseudo-TTY\n  -v, --volume=[]                 Bind mount a volume\n  ...\n```\n\n---\n\n### Run an interactive container\n\n```sh\n$ docker run -t -i docker/whalesay\nroot@7de97f8dd5eb:/cowsay#\nroot@7de97f8dd5eb:/cowsay# cowsay Galaxy\n ________\n< Galaxy >\n --------\n    \\\n     \\\n      \\\n                    ##        .\n              ## ## ##       ==\n           ## ## ## ##      ===\n       /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"___/ ===\n  ~~~ {~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~\n       \\______ o          __/\n        \\    \\        __/\n          \\____\\______/\nroot@7de97f8dd5eb:/cowsay#\n```\n\n---\n\n### Control during startup\n\n```\n$ docker run -i -t\n    -p 8080:80 -p 8021:21 -p 9002:9002\n    --privileged=true\n    -e \"NONUSE=reports\"\n    -e \"GALAXY_CONFIG_ADMIN_USERS=albert@einstein.gov\"\n    -e \"GALAXY_CONFIG_MASTER_API_KEY=83D4jaba7330aDKHkakjGa937\"\n    -e \"GALAXY_CONFIG_BRAND='My own Galaxy flavour'\"\n    -e \"GALAXY_LOGGING=full\"\n\n    bgruening/galaxy-stable:18.05\n```\n\n???\n\npossibility to add many different parameters to control the container when starting it\n\n---\n\n### Management of data\n\n```sh\n$ mkdir data\n$ docker run docker/whalesay cowsay Galaxy > data/cowsay\n$ more data/cowsay\n ________\n< Galaxy >\n --------\n    \\\n     \\\n      \\\n                    ##        .\n              ## ## ##       ==\n           ## ## ## ##      ===\n       /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"___/ ===\n  ~~~ {~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~\n       \\______ o          __/\n        \\    \\        __/\n          \\____\\______/\n$ docker run -t -i docker/whalesay\nroot@f4fa8ed32ef8:/cowsay# ls\nChangeLog  INSTALL  LICENSE  MANIFEST  README  Wrap.pm.diff  cows  cowsay  cowsay.1  install.pl  install.sh  pgp_public_key.txt\nroot@f4fa8ed32ef8:/cowsay# cowsay Hello Galaxy > cowsay2\n```\n\nCan we access the `cowsay` file inside the container? <br>And the `cowsay2` file outside the container?\n\n---\n\n### Management of data\n\n![A container is shown with an arrow pointing to data and a big x over it.](../../images/docker_volume_closed.png)\n\n???\n\nA container is closed\n\n---\n\n### Management of data\n\n![The same as before, but inside the container it wants to create a new file in that same folder but it cannot.](../../images/docker_volume_open.png)\n\n???\n\nA container is closed\n\n---\n\n### Data volume\n\n![A data volume with two files is shown as a folder, now this is moutned inside two containers.](../../images/docker_volume.png)\n\n???\n\nData volume\n- a specially-designated directory\n- within one or more containers\n- bypasses the Union File System\n\nData volumes designed to persist data, independent of the container’s life cycle:\n- Initialisation when a container is created\n- Possibility of sharing and reusing among containers\n- Direct changes to a data volume\n- Persistence of data volumes even if the container itself is deleted\n\n---\n\n### Data volume\n\n![Another command line explained, now docker run -v host_dir:container_dir ..., where host_dir is the absolute path or data volume name, and container_dir is where it should be mounted.](../../images/docker_run_volume.png)\n\n???\n\nHow to get a data volume?\n\n---\n\n### Data volume\n\n```sh\n$ ls data/\ncowsay_Galaxy\n$ docker run -t -i -v $PWD/data:/data docker/whalesay\nroot@f4fa8ed32ef8:/cowsay# ls /data\ncowsay_Galaxy\nroot@f4fa8ed32ef8:/cowsay# cowsay Galaxy2 > /data/cowsay_Galaxy2\nroot@f4fa8ed32ef8:/cowsay# ls /data\ncowsay_Galaxy  cowsay_Galaxy2\nroot@f4fa8ed32ef8:/cowsay# exit\n$ ls data/\ncowsay_Galaxy   cowsay_Galaxy2\n```\n\n---\n\n### Execution of commands <br>inside a running container\n\n![The schematic of a docker host with three galaxies is running, docker exec points to one of the galaxy containers.](../../images/docker_concept_exec.png)\n\n???\n\nRun a command in a running container\n\n---\n\n### `docker exec`\n\n```sh\n$ docker run -d docker/whalesay /bin/sh -c \"while true; do sleep 1; done\"\n7179e85085ef14634f8b50f908a255707743dec0a5d1fd7fb3cd9036334d5177\n$ docker exec 7179e85085ef14634f8b50f908a255707743dec0a5d1fd7fb3cd9036334d5177 \\\ncowsay Galaxy\n ________\n< Galaxy >\n --------\n    \\\n     \\\n      \\\n                    ##        .\n              ## ## ##       ==\n           ## ## ## ##      ===\n       /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"___/ ===\n  ~~~ {~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~\n       \\______ o          __/\n        \\    \\        __/\n          \\____\\______/\n```\n\n\n---\n\n### Stop/Start containers\n\n![Again the same graphic, but now one of the galaxy containers becomes stopped through the docker stop command and turns grey. Docker start brings it back to running.](../../images/docker_concept_start_stop.png)\n\nNote: Sending SIGTERM and then SIGKILL after a grace period\n\n---\n\n### `docker stop` & `docker start`\n\n```sh\n$ docker stop 7179e85085ef14634f8b50f908a255707743dec0a5d1fd7fb3cd9036334d5177\n7179e85085ef14634f8b50f908a255707743dec0a5d1fd7fb3cd9036334d5177\n$\n$ docker exec 7179e85085ef14634f8b50f908a255707743dec0a5d1fd7fb3cd9036334d5177 \\\ncowsay Galaxy\nError response from daemon: Container 7179e85085ef14634f8b50f908a255707743dec0a5d1fd7fb3cd9036334d5177 \\\nis not running\n$\n$ docker start 7179e85085ef14634f8b50f908a255707743dec0a5d1fd7fb3cd9036334d5177\n7179e85085ef14634f8b50f908a255707743dec0a5d1fd7fb3cd9036334d5177\n$\n$ docker exec 7179e85085ef14634f8b50f908a255707743dec0a5d1fd7fb3cd9036334d5177 \\\ncowsay Galaxy\n ________\n< Galaxy >\n --------\n    \\\n     \\\n      \\\n                    ##        .\n              ## ## ##       ==\n           ## ## ## ##      ===\n       /\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"\"___/ ===\n  ~~~ {~~ ~~~~ ~~~ ~~~~ ~~ ~ /  ===- ~~~\n       \\______ o          __/\n        \\    \\        __/\n          \\____\\______/\n```\n\n---\n\n### View all containers\n\n![docker ps shows a box around the previous graphic and shows running and stopped container.](../../images/docker_concept_ps.png)\n\n---\n\n### `docker ps`\n\n```sh\n$ docker ps\nCONTAINER ID        IMAGE               COMMAND                  CREATED             STATUS              PORTS               NAMES\n7179e85085ef        docker/whalesay     \"/bin/sh -c 'while tr\"   12 minutes ago      Up 2 seconds                            agitated_lovelace\n$\n$ docker ps -a\nCONTAINER ID        IMAGE                  COMMAND                  CREATED             STATUS                        PORTS               NAMES\n7de97f8dd5eb        docker/whalesay        \"/bin/bash\"              4 minutes ago       Exited (0) About a minute ago                       trusting_swanson\n9218bbee9c48        docker/whalesay        \"/bin/bash\"              5 minutes ago       Exited (0) 4 minutes ago                            evil_swirles\n7179e85085ef        docker/whalesay        \"/bin/sh -c 'while tr\"   13 minutes ago      Up 55 seconds                                       agitated_lovelace\nad275579c454        ubuntu                 \"/bin/sh -c 'while tr\"   15 minutes ago      Exited (137) 13 minutes ago                         condescending_mestorf\n66179c4d16da        ubuntu                 \"/bin/bash\"              About an hour ago   Exited (130) 15 minutes ago                         determined_pasteur\n27386c8b69b3        ubuntu                 \"/bin/sh\"                About an hour ago   Exited (0) About an hour ago                        lonely_ramanujan\n4cfefa19e6fa        docker/whalesay        \"/bin/bash\"              About an hour ago   Exited (0) About an hour ago                        thirsty_chandrasekhar\n82687eb94ab9        docker/whalesay        \"cowsay Galaxy\"          2 hours ago         Exited (0) 2 hours ago                              fervent_babbage\n6dbabb9384ad        tmp-bioconda-builder   \"/usr/local/bin/tini \"   8 days ago          Exited (0) 7 days ago                               tender_bhaskara\n5d6f09b94727        tmp-bioconda-builder   \"/usr/local/bin/tini \"   8 days ago          Exited (0) 8 days ago                               jolly_brattain\n4e6f38b4c34c        tmp-bioconda-builder   \"/usr/local/bin/tini \"   8 days ago          Created                                             angry_colden\nb3e6c7412a75        tmp-bioconda-builder   \"/usr/local/bin/tini \"   8 days ago          Created                                             desperate_visvesvaraya\n1ec56c9e37f8        tmp-bioconda-builder   \"/usr/local/bin/tini \"   8 days ago          Created                                             hopeful_khorana\n2b129d00eb10        tmp-bioconda-builder   \"/usr/local/bin/tini \"   8 days ago          Created                                             gigantic_ptolemy\nda45ab698f58        fb77c13d04c0           \"/usr/local/bin/tini \"   13 days ago         Exited (0) 13 days ago                              jovial_yalow\n48dc3ed4e173        fb77c13d04c0           \"/usr/local/bin/tini \"   13 days ago         Created                                             focused_ritchie\ne9195b6512dd        a2107450fdf2           \"/usr/local/bin/tini \"   2 weeks ago         Created                                             thirsty_bardeen\n```\n\nNote: Name of containers and id\n\n---\n\n### Creation of a new image\n\n![A dockerfile built with docker build builds a new container on the local docker host.](../../images/docker_concept_build.png)\n\n???\n\nNeed a Dockerfile. I will describe it later. Here it is just to give you a broad overview of the principles\n\n---\n\n### View all images\n\n![Docker image shows a list of all the images on the docker host that can be run.](../../images/docker_concept_image.png)\n\n---\n\n### Push your image on a registry\n\n![Docker push is shown pushing the locally built container to the image registry.](../../images/docker_concept_push.png)\n\n---\n\n<hands-on-title>Hands on! (1)</hands-on-title>\n\nPlay with `quay.io/biocontainers/samtools:1.3--1`\n\n1. Get the image\n2. Launch `samtools` container interactively\n  1. Print the help page for `samtools`\n3. Launch a `samtools` container in detach mode\n  1. Check if it exists and find its name\n  2. Stop it and restart it\n  3. Print the help page using this container\n\n---\n\n<hands-on-title>Hands on! (2)</hands-on-title>\n\nPlay with `quay.io/biocontainers/samtools:1.3--1`\n\n1. Create a local `samtool_dir` directory\n2. Launch an interactive container with a volume pointing at the `samtool_dir` directory\n  1. Add a [toy sam file](https://raw.githubusercontent.com/samtools/samtools/develop/examples/toy.sam) into the local `samtool_dir` directory\n  2. Check if the existence of the file from inside the container\n  3. Visualize the content of the toy file with `samtools view` commands\n  4. Generate stats of the toy file into a `toy_stat` file into the local `samtool_dir` directory\n\n???\n\ndata volume is the way to make your tool connecting\n\n---\n\n## How to containerize your tools?\n\n![Cartoon of a docker container](../../images/docker-container.jpg)\n\n???\n\nNow I am sure all of you want to containerize his tool :)\n\n---\n\n### How to create your image?\n\n![Cartoon showing a dockerfile building a container with docker build.](../../images/docker_build.svg)\n\n---\n\n### A Dockerfile?\n\nA text document that contains all the commands a user could call on the command line to assemble an image\n\n```sh\n# Comment\nINSTRUCTION arguments\n```\n\n.footnote[[Best practices](https://docs.docker.com/develop/develop-images/dockerfile_best-practices/)]\n\n???\n\nThe paper describing the recipe for you container\n\nReview of the commands\n\n---\n\n### Dockerfile & Layers\n\n![dockerfile with steps like run and add and set user and command are shown inverted as the layers of an image, each building on the last.](../../images/dockerfile_layers.svg)\n\n---\n\n### But Don't Do it Manually, Use Biocontainers\n\n[Tool Dependencies and Containers](/training-material/topics/dev/tutorials/containers/slides.html)\n\n---\n\n## How to integrate Galaxy inside Docker Container?\n\n---\n\n### Galaxy Docker Container\n\nA Docker launching a Galaxy instance and\n\n- FTP-Server\n- Webserver\n- Scheduler\n- Process control UI\n- ToolShed ready\n- Interactive Environment ready\n\n\n```\ndocker run -i -t -p 8080:80 bgruening/galaxy-stable:18.05\n```\n\nVisit your machine on port 8080 to see Galaxy running.\n\nhttps://github.com/bgruening/docker-galaxy-stable\n\n---\n\n<hands-on-title>Hands on!</hands-on-title>\n\nLaunch a Galaxy Docker Container and try to\n\n- Add Data\n- Become an Admin\n- Restart Galaxy\n- Use export mounts (persistent data)\n- Trouble shooting (logging)\n- Install tools\n- ...\n\n---\n\n### Galaxy + SLURM = <i class=\"fa fa-heart\" aria-hidden=\"true\"></i>\n\nhttps://github.com/bgruening/docker-galaxy-stable/tree/dev/docs/Running_jobs_outside_of_the_container.md\n\n---\n\n### Docker flavours\n\n![Schematic of multiple docker containers and how they layer upon one another. ubuntu forms the base, and requirements builds on that, then galaxy-stable on top of that.](../../images/rna-workbench-chart.png)\n\n---\n\n### Galactic Flavours\n\n- [NCBI-Blast](https://github.com/bgruening/docker-galaxy-blast)\n- [ChemicalToolBox](https://github.com/bgruening/docker-galaxy-chemicaltoolbox)\n- [ballaxy](https://github.com/anhi/docker-scripts/tree/master/ballaxy)\n- [NGS-deepTools](https://github.com/bgruening/docker-recipes/blob/master/galaxy-deeptools)\n- [Galaxy ChIP-exo](https://github.com/gregvonkuster/docker-galaxy-ChIP-exo)\n- [Galaxy Proteomics](https://github.com/bgruening/docker-galaxyp)\n- [Imaging](https://github.com/bgruening/docker-galaxy-imaging)\n- [Constructive Solid Geometry](https://github.com/gregvonkuster/docker-galaxy-csg)\n- [Galaxy for metagenomics](https://github.com/bgruening/galaxy-metagenomics)\n- [Galaxy with the Language Application Grid tools](https://github.com/lappsgrid-incubator)\n- [RNAcommender](https://github.com/gianlucacorrado/galaxy-RNAcommender)\n- [OpenMoleculeGenerator](https://github.com/bgruening/galaxy-open-molecule-generator)\n\n---\n\n### Create your own Flavour\n\n```\n# Galaxy - My own flavour\n#\n# VERSION       0.1\n\nFROM bgruening/galaxy-stable:18.05\n\nMAINTAINER Björn A. Grüning, bjoern.gruening@gmail.com\n\nENV GALAXY_CONFIG_BRAND deepTools\n\n# Adding the tool definitions to the container\nADD my_tool_list.yml $GALAXY_ROOT/my_tool_list.yml\n\n# Install deepTools\nRUN install-tools $GALAXY_ROOT/my_tool_list.yml\n```\n\n---\n\n### The tools file\n\n```\ngalaxy_instance: http://localhost:8080\ntools:\n- name: fastqc\n  owner: devteam\n  tool_panel_section_id: cshl_library_information\n  tool_shed_url: https://toolshed.g2.bx.psu.edu\n  #revisions:\n```\n\n---\n\n<hands-on-title>Hands on!</hands-on-title>\n\nCreate a Galaxy Flavour\n\n---\n\n### Galaxy Flavor Generator\n\n![Website used to build custom flavours of galaxy docker containers](../../images/galaxy_flavour_generator.png)\n\nhttps://github.com/galaxyFlavorsGenerators/galaxyFlavorGenerator\n"],"video_library":{"tutorial":null,"slides":null,"demo":null,"both":null,"session":null},"hands_on":false,"slides":true,"mod_date":"2022-10-18 08:58:35 +0000","pub_date":"2016-09-29 17:43:47 +0000","version":24,"api":"https://training.galaxyproject.org/training-material/api/topics/admin/tutorials/galaxy-docker/tutorial.json","tools":[],"supported_servers":[],"topic_name_human":"Galaxy Server administration","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools: []\n","tours":false,"video":false,"translations":{"tutorial":[],"slides":[],"video":false},"license":"CC-BY-4.0","type":"tutorial","redirect_from":["/short/admin/galaxy-docker/slides","/short/S00011"]}