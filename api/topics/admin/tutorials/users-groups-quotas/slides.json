{"layout":"tutorial_slides","logo":"assets/images/gat.png","video":true,"title":"User, Role, Group, Quota, and Authentication managment","zenodo_link":"","questions":["How does Galaxy manage users and groups?","How can I assign Quotas to specific users/groups?","How should I manage groups vs roles","What authentication methods are available?","How is dataset privacy managed?","Authentication Systems, what is available and how can I enable it?"],"objectives":["Learn the Galaxy user/group management and assign Quotas.","Understand the Role Based Access Control (RBAC) of Galaxy."],"time_estimation":"15m","key_points":["Galaxy has a powerful user and group managment system that can be utilized for Quota management."],"contributions":{"authorship":["natefoo","bgruening","hexylena"]},"subtopic":"maintenance","js_requirements":{"mathjax":null,"mermaid":false},"short_id":"S00027","url":"/topics/admin/tutorials/users-groups-quotas/slides.html","topic_name":"admin","tutorial_name":"users-groups-quotas","dir":"topics/admin/tutorials/users-groups-quotas","symlink":null,"id":"admin/users-groups-quotas","ref_tutorials":[],"ref_slides":["# Users\n\n???\n\nUsers\n\n---\n\n## User Control\n\noption | description\n---- | ----\n`require_login` | Prevent anonymous access.\n`show_welcome_with_login` | Show welcome page next to login page.\n`allow_user_creation` | Allow user registration. When False, admins must create users; often coupled with `require_login`.\n`allow_user_dataset_purge` | Users can purge (permanently delete) their datasets.\n`api_allow_run_as` | List of email addresses of API users who can make calls on behalf of other users.\n`expose_dataset_path` | Users to see the full path of datasets via the \"View Details\" option in the history.\n\n.footnote[.center[options in `galaxy.yml`]]\n\n???\n\n- These options let you control user login.\n- For example, are anonymous users permitted?\n- Are users able to register themselves?\n- Are users able to purge datasets themselves?\n- All of these are questions you will need to consider.\n- The API allow run as option can be useful if you have an external system submitting jobs to Galaxy on behalf of your users.\n\n---\n\n## User Activation\n\nRequire verification that a user's email is real. You must enable SMTP first.\n\noption | description\n---- | ----\n`user_activation_on` | Require users to click link in email before running jobs.\n`activation_grace_period` | Time (hours) that a user can 'explore' Galaxy before activation lockout.\n`inactivity_box_content` | Message provided to non-activated users.\n`email_domain_blocklist_file` | Defines domains in XXX.YYY format that will be rejected as user emails.\n\n.footnote[.center[options in `galaxy.yml`]]\n\n???\n\n- Whenever a user registers, user activation settings control how this process happens\n- If you want to require activation they cannot run tools until they receive the confirmation email\n- If you want to prevent users registering from specific domains\n\n\n---\n\n## Admin Control\n\noption | description\n---- | ----\n`admin_users` | Comma-separated list of admin users' emails.\n`allow_user_deletion` | Admins can delete users.\n`allow_user_impersonation` | Admins can become other users. Great for debugging / user assistance.\n`bootstrap_admin_api_key` | Admin super-key allows many API admin actions without having a real admin user.\n\n.footnote[.center[options in `galaxy.yml`]]\n\n???\n\n- In the ansible galaxy training, you set the admin_users variable to define an admin email\n- User impersonation is a very commonly used feature\n- It allows admins to debug issues in their users' histories\n- A bootstrap api key cannot be used for every task an admin API key can be used for\n- This is because it is not tied to an individual user\n\n---\n\n## User Privacy\n\noption | description\n---- | ----\n`expose_user_name` | Users can view other registered usernames.\n`expose_user_email` | Users can view other registered emails.\n`new_user_dataset_access_role_default_private` | Newly created datasets are private to the creating user.\n\n.footnote[.center[options in `galaxy.yml`]]\n\n???\n\n- These options control if the username or email are shown as a dropdown in the sharing menus\n- The option \"new user dataset access role default private\" is important\n- By default when users share by link, all datasets are public\n- When you set this option, datasets are private, even though the history is shared via link\n- Users will complain when it doesn't work, and have to be educated to click the appropriate buttons\n\n---\n\n# Roles and Groups\n\n???\n\nRoles and Groups\n\n---\n\n### Role Based Access Control (RBAC)\n\n**Admin** can:\n* create roles (each user automatically has their own 'private' role)\n* create groups\n* assign roles to groups\n* assign users to groups\n* assign groups to roles\n* assign users to roles\n* assign permission sets to roles\n* assign permission sets to groups\n\n???\n\n- Galaxy uses RBAC for permissions in many places\n- Roles can be created, and assigned permissions\n- Roles and groups behave similarly, grouping users together and granting permissions\n\n---\n\n## Dataset Roles\n\n\n.left-column50[\n**manage permissions**\n* Users who have associated role on a dataset can manage the roles associated it.\n\n**access**\n* Users having associated role can use/view/download a dataset for analysis. Users must have every role associated with a dataset in order to access it\n\n**new_user_dataset_access_role_default_private** (`galaxy.yml`)\n* When this is set, datasets are private by default.\n]\n\n.right-column50[.middle[.image-90[\n![User_roles](../../images/dataset_roles.png)\n]]]\n\n???\n\n- The manage permission controls which accounts can manage permissions of datasets\n- Access permission is those who can see and work with the data\n- These can be controlled in the permissions menu of datasets\n- Or more generally at the history level\n- Users must have every role listed in order to access that dataset\n- This leads to the odd case where users wish to share with multiple groups\n- But by adding more roles, it becomes unavailable to everyone\n\n---\n\n## Library Roles\n\n\n.left-column50[\n* **access library**: Restrict access to this library to only users having associated role\n* **manage library permissions**: Users having associated role can manage roles associated with permissions on this library item\n* **add library item**: Users having associated role can add library items to this library item\n* **modify library item**: Users having associated role can modify this library item\n]\n.left-column50[.image-90[\n![Library_roles](../../images/Library_roles.png)\n]]\n\n???\n\n- Access library permits users with any of the listed roles to access the library\n- No roles means a public library\n- Generally the last three are set to the same values, unless you have complicated requirements\n- In the library management, someone with any subset of the roles listed may make changes\n- This is very different from dataset permission management, where users must have every role\n\n---\n\n# Quotas\n\n???\n\nQuotas\n\n---\n\n## Quotas\n\nUsed to control user disk usage.\n\noption | description\n---- | ----\n`enable_quotas` | Enable enforcement of quotas.  Quotas can be set from the Admin interface (under Data).\n\nMust create quotas in admin interface before any quota will be enforced, otherwise 'unlimited'\n\nAmounts:\n - Examples: \"10000MB\", \"99 gb\", \"0.2T\", \"unlimited\"\n - = / + / -\n\nDefault for user class:\n - None (No)\n - Unregistered Users\n - Registered Users\n\nor associated with Groups or Users\n\n.footnote[.center[options in `galaxy.yml`]]\n\n???\n\n- You can enable quotas in your galaxy.yml file\n- When the user has more data than their quotum permits, they are prevented from starting new jobs.\n- many sites setup a \"quote increase request\" form, to let users request increases for specific, temporary projects\n\n---\nclass: left\n\n## Quota Details\n\n- Quotas can be set for Users, or all users of a Group\n- But it is not a \"group quota\"\n- The quota is applied to individual users\n\nStorage\n\n- Quotas are stored in the DB tables `galaxy_user`, `galaxy_group`, and `quota`\n\n???\n\n- Quotas can be set for Users or Groups\n- But it is applied individually, as users may receive multiple quota changes\n- E.g. a user working for two groups, might receive two different quota increases\n\n---\n\n## Quota Automation\n\n- There is currently no quota automation.\n- Some individuals have written their own quota automation but it is quite ugly ([usegalaxy-eu/quota-sync](https://github.com/usegalaxy-eu/quota-sync))\n- Could be nicer with a lot of work\n- Quotas are like group/user management: not managed by files, only within UI/API\n\n???\n\n- Quotas can be managed through the API\n- Some people want to automate this process, but it needs more work.\n\n---\n\n# Authentication Systems\n\n???\n\nAuthentication Systems\n\n---\n\n## LDAP / AD\n\n- Galaxy can be configured to use LDAP or Active Directory for authentication\n- There is a config file named `config/auth_conf.xml`\n- User login then triggers an LDAP search for the user\n   - (optional) Galaxy binds with some bind credentials\n   - Searches for the user DN\n   - Re-binds with the user DN and password\n   - If the user is found, they are logged in\n\n???\n\n- LDAP and Active Directory can be used as an authentication method\n- This is done through the auth_conf.xml file\n- When the user logs in, the LDAP server is queried for the user\n\n\n---\n\n## Shibboleth, CAS\n\n- Many alternative authentication systems are widely used at universities and organisations\n- Galaxy itself does not natively support these systems\n- However, you can use a proxy to authenticate users\n- nginx and apache have modules for both of these methods\n\n???\n\n- Shibboleth and CAS are commonly used at some universities\n- While Galaxy does not natively support these, you can use a proxy to authenticate users\n- Nginx and apache both support this\n\n---\n\n## OIDC\n\n- Galaxy can be configured to use OpenID Connect for authentication\n- There are two configuration files:\n  - `config/oidc_backends_config.xml`\n  - `config/oidc_config.xml`\n- Supports a variety of providers:\n  - Google\n  - Custos\n  - Globus\n  - ORCID\n  - LS Login (Elixir AAI)\n  - KeyCloack\n\n???\n\n- OIDC is a common authentication method\n- There are two configuration files required for this\n- Galaxy supports a variety of providers\n- OIDC means you as an administrator don't have to worry about validating the account, or storing passwords\n\n---\n\n## Built in Authentication\n\n- Galaxy has it's own authentication system\n- Enabled by default\n\noption | description\n---- | ----\n`password_expiration_period` | Days before requiring a user to change password. ([NIST recommends not requiring password changes.](https://en.wikipedia.org/wiki/Password_policy#NIST_guidelines))\n`session_duration` | Minutes before invaliding a user's session, requiring re-login.\n\n.footnote[.center[options in `galaxy.yml`]]\n\n???\n\n- Galaxy has it's own authentication system\n- There are some options are related to IT security policies\n- Check with your local IT authority for best practices for your organisation\n- Please consider not setting a password expiration period, as NIST recommends against it\n\n---\n\n## Others (`REMOTE_USER`)\n\n- For all other authentication systems\n- If your authentication system provides a username in some secure way to the webserver\n- Then you can use it to authenticate users\n- The webserver must set the `REMOTE_USER` header\n- Galaxy will **trust** this header\n\n???\n\n- If you use a different authentication system than one previously mentioned\n- and your users are authenticated in some manner through your webserver/proxy\n- Then you can take advantage of `REMOTE_USER` authentication\n- It is a very simple authentication method, the webserver sets a header, and galaxy implicitly trusts it.\n\n---\n\n### Remote User (Security)\n\n- If you have local users on the Galaxy head node\n- Then please set `remote_user_secret`\n- This will send an additional secret header to Galaxy that will be validated\n- Otherwise local users can `curl` your Galaxy server, and impersonate any user.\n\n???\n\n- An important aspect for security is that if you have local users on the Galaxy head node\n- Then you should set the `remote_user_secret` option, to prevent them impersonating other users\n"],"video_library":{"tutorial":null,"slides":{"description":null,"materials":[{"link":"topics/admin/tutorials/users-groups-quotas/slides.html","type":"Slides"}],"tags":["admin"],"type":"Lecture","versions":[{"captions":["galaxycommunity"],"date":"2021-02-15","galaxy_version":"21.01","length":"4M","link":"crywu31L8qg","speakers":["awspolly"]}],"gtn_id":"admin/users-groups-quotas","title":"User, Role, Group, Quota, and Authentication managment","captioned":true},"demo":null,"both":null,"session":null},"hands_on":false,"slides":true,"mod_date":"2023-04-20 15:15:50 +0000","pub_date":"2018-01-07 13:28:18 +0000","version":26,"api":"https://training.galaxyproject.org/training-material/api/topics/admin/tutorials/users-groups-quotas/tutorial.json","tools":[],"supported_servers":[],"topic_name_human":"Galaxy Server administration","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools: []\n","tours":false,"translations":{"tutorial":[],"slides":[],"video":true},"license":"CC-BY-4.0","type":"tutorial","contributors":[{"name":"Nate Coraor","matrix":"natefoo:matrix.org","twitter":"natefoo","email":"nate@bx.psu.edu","joined":"2017-12","orcid":"0000-0001-8083-2963","id":"natefoo","url":"https://training.galaxyproject.org/training-material/api/contributors/natefoo.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/natefoo/"},{"name":"Björn Grüning","email":"bjoern.gruening@gmail.com","twitter":"bjoerngruening","fediverse":"https://fosstodon.org/@bgruening","fediverse_flavor":"mastodon","matrix":"bgruening:matrix.org","orcid":"0000-0002-3079-6586","elixir_node":"de","linkedin":"bgruening","contact_for_training":true,"joined":"2017-09","location":{"country":"DE","lat":47.997791,"lon":7.842609},"affiliations":["eurosciencegateway","eosc-life","by-covid","deNBI","sfb992","elixir-converge","uni-freiburg","elixir-europe"],"id":"bgruening","url":"https://training.galaxyproject.org/training-material/api/contributors/bgruening.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/bgruening/"},{"name":"Helena Rasche","orcid":"0000-0001-9760-8992","maintainer_contact":"gitter","matrix":"hexylena:matrix.org","joined":"2017-09","elixir_node":"nl","affiliations":["gallantries","by-covid","erasmusmc","elixir-europe","elixir-converge"],"former_affiliations":["deNBI","avans-atgm","uni-freiburg"],"contact_for_training":false,"location":{"country":"NL","lat":51.91,"lon":4.46},"id":"hexylena","url":"https://training.galaxyproject.org/training-material/api/contributors/hexylena.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/hexylena/"}],"redirect_from":["/short/admin/users-groups-quotas/slides","/short/S00027"]}