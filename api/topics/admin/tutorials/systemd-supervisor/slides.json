{"layout":"tutorial_slides","logo":"assets/images/gat.png","video":true,"title":"Controlling Galaxy with systemd or Supervisor","contributors":["natefoo","hexylena"],"subtopic":"deprecated","js_requirements":{"mathjax":null,"mermaid":false},"short_id":"S00023","url":"/topics/admin/tutorials/systemd-supervisor/slides.html","topic_name":"admin","tutorial_name":"systemd-supervisor","dir":"topics/admin/tutorials/systemd-supervisor","symlink":null,"id":"admin/systemd-supervisor","ref_tutorials":[],"ref_slides":["class: special\n\n# systemd\n\nThe current Linux init system\n\nUsed to bootstrap the user space and to manage system processes after booting\n\n???\n\n- systemd is a popular linux init system.\n- It manages processes and ensures they are running after boot.\n- It can restart processes when they crash.\n\n---\nclass: left\n\n# systemd\n\nReplaces:\n- `/etc/init.d/*`, `/etc/rc?.d`\n- `service` command\n- Upstart\n- `update-rc.d`\n\nINI config format\n\n???\n\n- systemd replaces many previous alternative init systems\n- it is quite easy to work with\n\n---\n# systemd - Layout\n\n- `/lib/systemd/system` - System service definitions\n- `/etc/systemd/system` - User-defined service definitions\n\n???\n\n- systemd has two separate pools of service definitions.\n- in lib are the system and package provided definitions.\n- in etc are the user provided definitions.\n- Galaxy's will be in /etc.\n\n---\n# systemd - Galaxy service unit\n\n```ini\n[Unit]\nDescription=Galaxy\nAfter=network.target\nAfter=time-sync.target\n\n[Service]\nUMask=022\nType=simple\nUser=galaxy\nGroup=galaxy\nWorkingDirectory=/srv/galaxy/server\nTimeoutStartSec=10\nExecStart=/srv/galaxy/venv/bin/uwsgi --yaml /srv/galaxy/config/galaxy.yml --stats 127.0.0.1:4010\nEnvironment=HOME=/srv/galaxy VIRTUAL_ENV=/srv/galaxy/venv PATH=/srv/galaxy/venv/bin:/usr/local/bin:/bin:/usr/bin:/usr/local/sbin:/usr/sbin:/sbin DOCUTILSCONFIG= PYTHONPATH=/srv/galaxy/server/lib/galaxy/jobs/rules\nMemoryLimit=32G\nRestart=always\n\nMemoryAccounting=yes\nCPUAccounting=yes\nBlockIOAccounting=yes\n\n[Install]\nWantedBy=multi-user.target\n```\n\n???\n\n- Here is an example systemd service definition, or a unit.\n- At the top section, it describes the service name, and any dependencies.\n- For galaxy, we only want it to start when the network is available.\n- Next is the service section.\n- here we define that it is a simple service, run by the user and group galaxy.\n- it starts in a particular working directory.\n- and if it does not start within 10 seconds, something is wrong.\n- We provide a command that should be run.\n- And some environment variables like the path or home directory.\n- A memory limit is provided, which systemd enforces through cgroups.\n- next, the process should always restart if it crashes.\n- And various accounting is enabled.\n\n---\n# systemd - systemctl\n\n`systemctl` is the command line interface to systemd\n\n- `systemctl status <name>[.service]`\n- `systemctl <start|stop|restart|...> <name>[.service]`\n- `systemctl <enable|disable> <name>[.service]`\n\n???\n\n- the systemctl command lets you interact with the service.\n- You can start, stop, or restart the service.\n- You can enable or disable the service if you do or do not want it to start at boot.\n\n---\n# systemd - Galaxy service\n\n```console\n$ systemctl status galaxy\n● galaxy.service - Galaxy\n   Loaded: loaded (/etc/systemd/system/galaxy.service; enabled; vendor preset: enabled)\n   Active: active (running) since Wed 2020-02-26 19:46:03 UTC; 1 day 20h ago\n Main PID: 7845 (uwsgi)\n    Tasks: 45 (limit: 4915)\n   Memory: 569.2M (limit: 32.0G)\n      CPU: 5h 43min 35.436s\n   CGroup: /system.slice/galaxy.service\n           ├─7845 /srv/galaxy/venv/bin/python3 /srv/galaxy/venv/bin/uwsgi --yaml /srv/galaxy/config/galaxy.yml --stats 127.0.0.1:4010\n           ├─8106 /srv/galaxy/venv/bin/python3 /srv/galaxy/venv/bin/uwsgi --yaml /srv/galaxy/config/galaxy.yml --stats 127.0.0.1:4010\n           ├─8111 /srv/galaxy/venv/bin/python3 /srv/galaxy/venv/bin/uwsgi --yaml /srv/galaxy/config/galaxy.yml --stats 127.0.0.1:4010\n           └─8112 /srv/galaxy/venv/bin/python3 /srv/galaxy/venv/bin/uwsgi --yaml /srv/galaxy/config/galaxy.yml --stats 127.0.0.1:4010\n```\n\n???\n\n- Here is an example output of the status command.\n- The word enabled in the loaded line shows that the service will start at boot\n- The service is running since 1 day and 20 hours.\n- We are told the main PID.\n- And shown the memory usage next to the memory usage limit.\n- systemd starts services in a cgroup, so all children can be kept track of.\n- Child processes which are started by the parent process are likewise listed.\n\n---\n\n# Supervisor\n\nThe former recommended method for managing multiple Galaxy processes\n\n???\n\n- Before systemd there was supervisor.\n- We do not use this as much anymore.\n\n---\n# Supervisor\n\nA process manager written in Python\n\n- `supervisord` daemon\n  - Privileged or unprivileged\n- `supervisorctl` command line interface\n- INI config format\n- `[program:x]` defines a program to control\n\n???\n\n- Supervisor was a process manager written in python.\n- It could run as an unprivileged user, and was similar to systemd.\n\n---\nclass: smaller\n# Supervisor - supervisorctl\n\n```console\n$ supervisorctl help\n\ndefault commands (type help <topic>):\n=====================================\nadd    clear  fg        open  quit    remove  restart   start   stop  update\navail  exit   maintail  pid   reload  reread  shutdown  status  tail  version\n\n$ supervisorctl status\ngalaxy_main:handler0             RUNNING    pid 30554, uptime 7 days, 23:15:11\ngalaxy_main:handler1             RUNNING    pid 30555, uptime 7 days, 23:15:11\ngalaxy_main:handler2             RUNNING    pid 30556, uptime 7 days, 23:15:10\ngalaxy_main:impersonate          RUNNING    pid 30567, uptime 7 days, 23:15:08\ngalaxy_main:installer            RUNNING    pid 30574, uptime 7 days, 23:15:07\ngalaxy_main:reports              RUNNING    pid 30563, uptime 7 days, 23:15:09\ngalaxy_main_supervisord          RUNNING    pid 2108, uptime 8 days, 6:43:54\ngalaxy_main_uwsgi                RUNNING    pid 3568, uptime 8 days, 6:39:07\nnginx                            RUNNING    pid 1917, uptime 8 days, 6:44:21\nproftpd                          RUNNING    pid 1916, uptime 8 days, 6:44:21\n```\n\n???\n\n- The supervisor status command would show running parent processes.\n- Very similar to systemd\n\n---\n# Supervisor - program\n\nA config for running a Galaxy server under uWSGI has been installed at `/etc/supervisor/conf.d/galaxy.conf`:\n\n```ini\n[program:galaxy]\ncommand         = uwsgi --plugin python --virtualenv /srv/galaxy/server/.venv --ini-paste /srv/galaxy/server/galaxy.yml\ndirectory       = /srv/galaxy/server\nautostart       = true\nautorestart     = true\nstartsecs       = 10\nuser            = galaxy\nstopsignal      = INT\n```\n\n???\n\n- The service definition for a supervisor process group.\n- Here it is named galaxy.\n- A command and working directory are provided.\n- A user to run the command is listed.\n- comparable to systemd service definitions.\n\n---\n# Supervisor + systemd\n\nIf you prefer, you can use Supervisor to manage the Galaxy processes. The OS needs to ensure the Supervisor daemon is running, and probably manages it with systemd, as is common on most systems currently.\n\n```console\n$ systemctl status supervisor\n● supervisor.service - Supervisor process control system for UNIX\n   Loaded: loaded (/lib/systemd/system/supervisor.service; enabled)\n   Active: active (running) since Mon 2016-10-10 14:19:34 EDT; 3 weeks 3 days ago\n Main PID: 481 (supervisord)\n   CGroup: /system.slice/supervisor.service\n           ├─  481 /usr/bin/python /usr/bin/supervisord -n -c /etc/supervisor/supervisord.conf\n           ├─ 6264 /usr/bin/uwsgi --plugin python --virtualenv /srv/galaxy/server/.venv --ini-paste /srv/galaxy/server/galaxy.yml\n           ├─ 6268 /usr/bin/uwsgi --plugin python --virtualenv /srv/galaxy/server/.venv --ini-paste /srv/galaxy/server/galaxy.yml\n           ├─10109 /srv/galaxy/server/.venv/bin/python ./scripts/galaxy-main -c /srv/galaxy/server/galaxy.yml --server-name=handler0\n           └─10142 /srv/galaxy/server/.venv/bin/python ./scripts/galaxy-main -c /srv/galaxy/server/galaxy.yml --server-name=handler1\n```\n\n???\n\n- These two can be combined.\n- systemd can start supervisor, if you have reason to need supervisor.\n"],"hands_on":false,"slides":true,"mod_date":"2023-03-29 08:13:40 +0000","pub_date":"2019-01-28 04:08:04 +0000","version":11,"api":"https://training.galaxyproject.org/training-material/api/topics/admin/tutorials/systemd-supervisor/tutorial.json","tools":[],"supported_servers":[],"topic_name_human":"Galaxy Server administration","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools: []\n","tours":false,"slides_recordings":false,"translations":{"tutorial":[],"slides":[],"video":true},"license":"CC-BY-4.0","type":"tutorial","redirect_from":["/short/admin/systemd-supervisor/slides","/short/S00023"]}