{"layout":"tutorial_slides","logo":"assets/images/gat.png","title":"Galaxy Monitoring","contributors":["natefoo","bgruening","slugger70","hexylena"],"subtopic":"monitoring","js_requirements":{"mathjax":null,"mermaid":false},"short_id":"S00012","url":"/topics/admin/tutorials/general-monitoring/slides.html","topic_name":"admin","tutorial_name":"general-monitoring","dir":"topics/admin/tutorials/general-monitoring","symlink":null,"id":"admin/general-monitoring","ref_tutorials":[],"ref_slides":["## Manage Jobs\n\nAn admin interface to list current unfinished jobs and finished jobs of a certain age.\n\n* You can stop unfinished jobs\n* You can show details of old jobs\n* You can lock the server from spawning new jobs. (e.g. for maintenance.)\n\n---\n\n# Log Files\n\n- Galaxy logs (`journalctl -f -u galaxy`)\n  - Web (uWSGI)\n  - Handler\n- nginx logs (`/var/log/nginx/*`)\n\n---\n\n# Analytics\n\nCan we make better walltime decisions?\n\n`scripts/runtime_stats.py`: Database-driven job runtime statistics\n\n---\n\n# Reports\n\nGalaxy ships with its own app that reports usage (user, job, data, etc numbers)\n\n---\n# Nagios\n\n[Nagios](https://www.nagios.com/) is a general-purpose tool for monitoring systems and services.\n\nGalaxy-specific check in `contrib/nagios/`: Runs Galaxy jobs\n\n---\n\n# Sentry\n\n* Motto: *\"Stop hoping your users will report errors\"*\n* Error tracking and analysing tool.\n* Galaxy has Sentry middleware that you can enable in configuration.\n\n---\n# Job Metrics\n\nGalaxy can collect metrics on each job through configurable plugins in `job_metrics_conf.xml`.\n\nSome plugins:\n- `core`: Captures Galaxy slots, start and end of job, runtime\n- `cpuinfo`: processor count for each job\n- `env`: dump environment for each job\n- `collectl`: monitor a wide array of system performance data\n\n---\n\n# Telegraf, InfluxDB, and Grafana\n\nGeneral purpose tools for monitoring systems and services.\n\nTool     | Use\n---      | ---\n[Telegraf](https://github.com/influxdata/telegraf) | plugin-driven server agent for collecting & reporting metrics\n[Influxdb](https://github.com/influxdata/influxdb/) | purpose built time series database\n[Grafana](https://grafana.com/)  | dashboard for beautiful analytics and monitoring\n\nDataflow:\n\n- Galaxy produces data\n- Telegraf consumes and buffers it, before sending it to\n- InfluxDB which stores the data\n- And Grafana is used to visualise it\n\n---\n# Infrastructure for Grafana\n\n* Everything captured in Galaxy Ansible [infrastructure-playbook](https://github.com/galaxyproject/infrastructure-playbook/) repository.\n* Ansible [playbook](https://github.com/dj-wasabi/ansible-telegraf) to install Telegraf.\n* Ansible [tasks](https://github.com/galaxyproject/infrastructure-playbook/blob/master/roles/stats/tasks/redhat.yml) for installing InfluxDB and Grafana.\n\n---\n# Grafana showcase\n\n* usegalaxy.eu [public server](https://stats.usegalaxy.eu)\n* usegalaxy.org.au [public server](https://stats.genome.edu.au)\n* usegalaxy.org private server\n\nIf you see a dashboard you can export its configuration and put it on your Grafana with your data. Copy away!\n"],"video_library":{"tutorial":null,"slides":null,"demo":null,"both":null,"session":null},"hands_on":false,"slides":true,"mod_date":"2022-03-01 12:21:57 +0000","pub_date":"2019-04-26 16:41:13 +0000","version":5,"api":"https://training.galaxyproject.org/training-material/api/topics/admin/tutorials/general-monitoring/tutorial.json","tools":[],"supported_servers":[],"topic_name_human":"Galaxy Server administration","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools: []\n","tours":false,"video":false,"translations":{"tutorial":[],"slides":[],"video":false},"license":"CC-BY-4.0","type":"tutorial","redirect_from":["/short/admin/general-monitoring/slides","/short/S00012"]}