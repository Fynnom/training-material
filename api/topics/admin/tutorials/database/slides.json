{"layout":"tutorial_slides","logo":"assets/images/gat.png","video":true,"title":"Galactic Database","contributors":["martenson","nsoranzo","natefoo","hexylena"],"js_requirements":{"mathjax":null,"mermaid":false},"short_id":"S00008","url":"/topics/admin/tutorials/database/slides.html","topic_name":"admin","tutorial_name":"database","dir":"topics/admin/tutorials/database","symlink":null,"id":"admin/database","ref_tutorials":[],"ref_slides":["# Galactic Database\n\n.left[Galaxy uses a database for:]\n* Galaxy objects and all their relations (users, histories, datasets, workflows)\n* Job state persistence, job dispatching\n\n.left[Galaxy does not use a database for:]\n* Dataset **contents**: files on disk\n\n???\n\n- Galaxy objects like users, histories, datasets, and workflows are stored in the database.\n- All job information is likewise stored there.\n- User and reference data, however, are stored outside of the database.\n- You will want to backup both user data and your database.\n\n---\n\n# Defaults\n\n* Galaxy uses the [SQLAlchemy](http://www.sqlalchemy.org/) database abstraction layer. This allows for different database servers to be plugged in.\n* By default Galaxy automatically creates and uses an [SQLite](https://sqlite.org/) database during the first startup.\n  * The database is in the file `database/universe.sqlite`\n\n???\n\n- Galaxy uses SQLAlchemy for interacting with databases.\n- This allows Galaxy to transparently use sqlite or postgres.\n\n---\n# Choices\n\n* SQLite\n  * Useful for single-user Galaxy or development.\n* **PostgreSQL**\n  * The recommended standard for anything serious.\n* ~~MySQL~~\n  * Supported by SQLAlchemy but Galaxy is not tested against it.\n\n???\n\n- sqlite is fine in development, but should not be used for production.\n- postgres is the best for any production server.\n- Do not use mysql if possible.\n\n---\n# Sizing\n\nGalaxy rarely deletes from the database, most objects are *marked* deleted.\n\nAllocate at least 20 GB of disk to start, 50+ GB if expanding would be difficult.\n\n8-16 GB memory should be sufficient.\n\nRecommended: Run PostgreSQL on a different server for resource isolation.\n\n???\n\n- Data is not removed from the database, so plan accordingly.\n- Allocated at least 20 GB of disk to start, and 50 if expanding later is difficult.\n- The RAM usage is usually not significant.\n- We recommend running the database on a separate server from Galaxy for better isolation.\n\n---\n# Configuration\n\n`database_connection` is specified as a [database URL](http://docs.sqlalchemy.org/en/latest/core/engines.html#database-urls) in `galaxy.yml`\n  * Default SQLite:\n      `sqlite:///./database/universe.sqlite?isolation_level=IMMEDIATE`\n\n  * Local PostgreSQL (socket):\n       `postgresql:///<db_name>[?host=/var/run/postgresql]`\n\n  * Network PostgreSQL:\n      `postgresql://[user][:password]@<host>[:5432]/<db_name>`\n\n???\n\n- The parameter database_connection tells galaxy where the database is.\n- There are several styles, depending on how you connect to your database.\n\n---\n# New Database\n\nOn first startup with an empty database, Galaxy creates its schema\n\n???\n\n- On first startup with an empty database, Galaxy creates its schema.\n\n---\n# Migrations\n\nChanges in the Galaxy DB model (when upgrading Galaxy) are captured incrementally in the form of [atomic scripts](https://github.com/galaxyproject/galaxy/tree/dev/lib/galaxy/model/migrate/versions).\n\nEach script can both upgrade and downgrade a DB.\n\n```console\n$ ./manage_db.sh upgrade\n$ ./manage_db.sh downgrade --version=132\n```\n\n???\n\n- Whenever Galaxy is upgraded, there may be changes to the database schema.\n- These are stored in migration scripts, and you can use the manage db script to up or downgrade.\n\n---\n# Tuning - Pool\n\nIf the server logs errors about not having enough database pool connections.\n\n| Galaxy config option                  | default value | usegalaxy.org value |\n| ------                                | ------------- | ------------------- |\n| `database_engine_option_pool_size`    | `5`           | `10`                |\n| `database_engine_option_max_overflow` | `10`          | `20`                |\n\n[Values for usegalaxy.org](https://github.com/galaxyproject/usegalaxy-playbook/blob/master/env/main/group_vars/all/galaxy_config_vars.yml)\n\n???\n\n- Databases have a limited number of connection slots.\n- Galaxy can pool connections, and re-use existing connections from a pool when it needs to query the DB.\n- There are a couple of options for controlling pooling.\n- The defaults are generally fine until you see errors.\n\n---\n# Tuning - Server-side cursors\n\nIf large database query results are causing memory or response time issues in the Galaxy process, leave it on server\n(PostgreSQL only, recommended).\n\n| Galaxy config option                         | default value | usegalaxy.org value |\n| ------                                       | ------------- | ------------------- |\n| `database_engine_option_server_side_cursors` | `false`       | `true`              |\n\n???\n\n- Large queries may slow down Galaxy or the DB.\n- You can enable server side cursors to help with this.\n\n---\n# Tuning - Slow query logging\n\nQueries slower than this threshold (in s) will be logged at debug level.\n\n| Galaxy config option       | default value | usegalaxy.org value |\n| ------                     | ------------- | ------------------- |\n| `slow_query_log_threshold` | `0`           | `2`                 |\n\n???\n\n- If you notice slow responses, you can enable slow query logging.\n- This will print a message in your Galaxy log if a query takes more than a specified time period.\n- This can be useful to help you debug issues.\n\n---\n# Tuning - TS install database\n\nGalaxy can track Tool Shed data in a separate DB.\n\n| Galaxy config option          | default value                  | usegalaxy.org value |\n| ------                        | -------------                  | ------------------- |\n| `install_database_connection` | value of `database_connection` | SQLite DB in CVMFS  |\n\nAll other database config options but prefixed with `install_` are also available.\n\n.left[This allows:]\n* Bootstrapping fresh Galaxy instances with prebuilt/tested tool sets\n* Atomic installation/rollback (esp. with SQLite: backup and restore DB file)\n\n???\n\n- Galaxy can track tool shed data in a separate database\n- This can enable deploying Galaxies with prebuilt tool sets\n\n---\n# Access through model\n\nPython script to access Galaxy's database layer **via the Galaxy model**.\n\n```console\n(venv)$ python -i scripts/db_shell.py --config config/galaxy.yml\n>>> new_user = User('foo@example.org', 'secret')\n>>> new_user.username = 'foo'\n>>> sa_session.add(new_user)\n>>> sa_session.flush()\n>>> sa_session.query(User).all()\n```\n\n???\n\n- You can use the Galaxy python models to interact with the database.\n- After activating the galaxy virtual environment, you can use the DB shell script to interface.\n- This can allow scripting tasks like resetting passwords.\n\n---\n# Useful queries\n\nCaptured in [gxadmin](/training-material/topics/admin/tutorials/gxadmin/slides.html) ([tutorial](/training-material/topics/admin/tutorials/gxadmin/tutorial.html))\n\n???\n\n- Many useful DB queries are captured in gxadmin\n- Look into this if you need to query the database for information like running jobs or recent users.\n"],"video_library":{"tutorial":null,"slides":null,"demo":null,"both":null,"session":null},"hands_on":false,"slides":true,"mod_date":"2022-06-14 10:31:33 +0000","pub_date":"2019-01-28 04:08:04 +0000","version":8,"api":"https://training.galaxyproject.org/training-material/api/topics/admin/tutorials/database/tutorial.json","tools":[],"supported_servers":[],"topic_name_human":"Galaxy Server administration","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools: []\n","tours":false,"translations":{"tutorial":[],"slides":[],"video":true},"license":"CC-BY-4.0","type":"tutorial","redirect_from":["/short/admin/database/slides","/short/S00008"]}