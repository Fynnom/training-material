{"layout":"tutorial_hands_on","title":"Managing Galaxy on Kubernetes","level":"Intermediate","questions":["How do I change Galaxy configs?","How can I upgrade to a new version?","How do I rollback my changes?","How do I scale Galaxy?"],"objectives":["Have an understanding of how to modify Galaxy configuration","Be able to upgrade and scale galaxy"],"time_estimation":"30m","key_points":["Modifying configuration is a matter of having some local config files that are mapped in their entirety into the Galaxy container.","Scaling is a simple matter of changing the number of replicas.","K8S enables zero downtime upgrades and sets the stage for continuous delivery"],"contributors":[{"name":"Nuwan Goonasekera","joined":"2019-06","id":"nuwang","url":"https://training.galaxyproject.org/training-material/api/contributors/nuwang.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/nuwang/"},{"name":"Enis Afgan","joined":"2018-06","id":"afgane","url":"https://training.galaxyproject.org/training-material/api/contributors/afgane.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/afgane/"},{"name":"Alex Mahmoud","joined":"2019-06","id":"almahmoud","url":"https://training.galaxyproject.org/training-material/api/contributors/almahmoud.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/almahmoud/"},{"name":"Pablo Moreno","joined":"2019-06","id":"pcm32","url":"https://training.galaxyproject.org/training-material/api/contributors/pcm32.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/pcm32/"},{"name":"John Davis","email":"jdavcs@gmail.com","joined":"2019-06","orcid":"0000-0002-1363-1245","id":"jdavcs","url":"https://training.galaxyproject.org/training-material/api/contributors/jdavcs.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/jdavcs/"}],"tags":["kubernetes"],"subtopic":"cloud","requirements":[{"type":"internal","topic_name":"admin","tutorials":["k8s-deploying-galaxy"]}],"priority":1,"js_requirements":{"mathjax":null,"mermaid":false},"short_id":"T00014","url":"/topics/admin/tutorials/k8s-managing-galaxy/tutorial.html","topic_name":"admin","tutorial_name":"k8s-managing-galaxy","dir":"topics/admin/tutorials/k8s-managing-galaxy","symlink":null,"id":"admin/k8s-managing-galaxy","ref_tutorials":["<h1 id=\"managing-galaxy-on-kubernetes\">Managing Galaxy on Kubernetes</h1>\n\n<h2 id=\"overview\">Overview</h2>\n\n<p>A primary advantage of Galaxy on <a href=\"https://kubernetes.io/\">Kubernetes</a> is the ease with which common\nadministrative tasks can be performed reliably and without disruption of\nservice. In particular, because of containerization, Kubernetes provides a significant\nadvantage over managing individual virtual machines, where updates to system\nlibraries or components can cause unexpected breakage of dependent components.\nWith containerization, this becomes a simpler problem of swapping out a\ncontainer and replacing it with an updated version. It also reduces reliance\non the underlying operating system, allowing the OS to be upgraded and\nhave the latest security patches applied without having to worry about\nhow it will affect the applications running within. Kubernetes has built-in\nfunctionality for draining a node of all containers and for transparently\nmoving those containers to a different node, allowing maintenance tasks to be\nperformed on the underlying node without disruption of service.</p>\n\n<p>In this section, we will look at how to perform common management tasks on\na Galaxy deployment on Kubernetes, including:</p>\n<ul>\n  <li>How to upgrade a deployment</li>\n  <li>Change the configuration of a running Galaxy instance</li>\n  <li>Map arbitrary files into Galaxy’s config folder</li>\n  <li>Rollback changes in the case of an error</li>\n  <li>Scale the number of job and web handlers</li>\n  <li>Delete a deployment</li>\n</ul>\n\n<blockquote class=\"agenda\">\n  <agenda-title></agenda-title>\n\n<ol id=\"markdown-toc\">\n  <li><a href=\"#managing-galaxy-on-kubernetes\" id=\"markdown-toc-managing-galaxy-on-kubernetes\">Managing Galaxy on Kubernetes</a>    <ol>\n      <li><a href=\"#overview\" id=\"markdown-toc-overview\">Overview</a></li>\n      <li><a href=\"#prerequisites\" id=\"markdown-toc-prerequisites\">Prerequisites</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#changing-the-configuration-of-a-galaxy-instance\" id=\"markdown-toc-changing-the-configuration-of-a-galaxy-instance\">Changing the configuration of a Galaxy instance</a>    <ol>\n      <li><a href=\"#changing-tool-configuration\" id=\"markdown-toc-changing-tool-configuration\">Changing tool configuration</a></li>\n      <li><a href=\"#setting-the-admin-user-and-changing-the-brand\" id=\"markdown-toc-setting-the-admin-user-and-changing-the-brand\">Setting the admin user and changing the brand</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#scaling-galaxy\" id=\"markdown-toc-scaling-galaxy\">Scaling Galaxy</a></li>\n  <li><a href=\"#testing-kubernetes-resilience\" id=\"markdown-toc-testing-kubernetes-resilience\">Testing Kubernetes resilience</a></li>\n  <li><a href=\"#deleting-galaxy\" id=\"markdown-toc-deleting-galaxy\">Deleting Galaxy</a></li>\n  <li><a href=\"#next-steps\" id=\"markdown-toc-next-steps\">Next Steps</a></li>\n</ol>\n\n</blockquote>\n\n<h2 id=\"prerequisites\">Prerequisites</h2>\n<p>This tutorial builds on the material of the previous\n<a href=\"/training-material/topics/admin/tutorials/k8s-deploying-galaxy/tutorial.html\">tutorial</a>\nand we recommend following it first to setup the required environment.\nYou must have some familiarity with Helm commands, know how to change values\nin a Helm Chart and how to use the <code class=\"language-plaintext highlighter-rouge\">kubectl</code> command.</p>\n\n<h1 id=\"changing-the-configuration-of-a-galaxy-instance\">Changing the configuration of a Galaxy instance</h1>\n<p>We will start off by looking at how to change the configuration of a Galaxy\ninstance. We will first reduce the number of tools that are loaded for faster\nstartup, and then change some common settings in <code class=\"language-plaintext highlighter-rouge\">galaxy.yml</code>.</p>\n\n<h2 id=\"changing-tool-configuration\">Changing tool configuration</h2>\n<p>We will change the Galaxy configuration to limit the initial list of tools\nthat Galaxy will use by pointing to our custom <code class=\"language-plaintext highlighter-rouge\">tool_conf.xml</code>. This will make\nyour chart start up much faster for the remainder of this tutorial, as the\ndefault configuration loads the full list of tools used by\n<a href=\"https://usegalaxy.org/\">https://usegalaxy.org/</a>.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Creating a custom tool set</hands-on-title>\n\n  <ol>\n    <li>\n      <p>First, let’s create a simpler list of tools by saving the following tool\nconfig as a file called <code class=\"language-plaintext highlighter-rouge\">custom_tool_conf.xml</code>.</p>\n\n      <div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">&lt;?xml version=\"1.0\" ?&gt;</span>\n<span class=\"nt\">&lt;toolbox</span> <span class=\"na\">tool_path=</span><span class=\"s\">\"/cvmfs/main.galaxyproject.org/shed_tools\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;section</span> <span class=\"na\">id=</span><span class=\"s\">\"get_data\"</span> <span class=\"na\">name=</span><span class=\"s\">\"Get Data\"</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;tool</span> <span class=\"na\">file=</span><span class=\"s\">\"data_source/upload.xml\"</span> <span class=\"nt\">/&gt;</span>\n    <span class=\"nt\">&lt;/section&gt;</span>\n    <span class=\"nt\">&lt;section</span> <span class=\"na\">id=</span><span class=\"s\">\"chip_seq\"</span> <span class=\"na\">name=</span><span class=\"s\">\"ChIP-seq\"</span> <span class=\"na\">version=</span><span class=\"s\">\"\"</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;tool</span> <span class=\"na\">file=</span><span class=\"s\">\"toolshed.g2.bx.psu.edu/repos/rnateam/chipseeker/1b9a9409831d/chipseeker/chipseeker.xml\"</span> <span class=\"na\">guid=</span><span class=\"s\">\"toolshed.g2.bx.psu.edu/repos/rnateam/chipseeker/chipseeker/1.18.0+galaxy1\"</span><span class=\"nt\">&gt;</span>\n            <span class=\"nt\">&lt;tool_shed&gt;</span>toolshed.g2.bx.psu.edu<span class=\"nt\">&lt;/tool_shed&gt;</span>\n            <span class=\"nt\">&lt;repository_name&gt;</span>chipseeker<span class=\"nt\">&lt;/repository_name&gt;</span>\n            <span class=\"nt\">&lt;repository_owner&gt;</span>rnateam<span class=\"nt\">&lt;/repository_owner&gt;</span>\n            <span class=\"nt\">&lt;installed_changeset_revision&gt;</span>1b9a9409831d<span class=\"nt\">&lt;/installed_changeset_revision&gt;</span>\n            <span class=\"nt\">&lt;id&gt;</span>toolshed.g2.bx.psu.edu/repos/rnateam/chipseeker/chipseeker/1.18.0+galaxy1<span class=\"nt\">&lt;/id&gt;</span>\n            <span class=\"nt\">&lt;version&gt;</span>1.18.0+galaxy1<span class=\"nt\">&lt;/version&gt;</span>\n        <span class=\"nt\">&lt;/tool&gt;</span>\n    <span class=\"nt\">&lt;/section&gt;</span>\n    <span class=\"nt\">&lt;section</span> <span class=\"na\">id=</span><span class=\"s\">\"fastq_quality_control\"</span> <span class=\"na\">name=</span><span class=\"s\">\"FASTQ Quality Control\"</span> <span class=\"na\">version=</span><span class=\"s\">\"\"</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;tool</span> <span class=\"na\">file=</span><span class=\"s\">\"toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/51b771646466/trimmomatic/trimmomatic.xml\"</span> <span class=\"na\">guid=</span><span class=\"s\">\"toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.36.6\"</span><span class=\"nt\">&gt;</span>\n            <span class=\"nt\">&lt;tool_shed&gt;</span>toolshed.g2.bx.psu.edu<span class=\"nt\">&lt;/tool_shed&gt;</span>\n            <span class=\"nt\">&lt;repository_name&gt;</span>trimmomatic<span class=\"nt\">&lt;/repository_name&gt;</span>\n            <span class=\"nt\">&lt;repository_owner&gt;</span>pjbriggs<span class=\"nt\">&lt;/repository_owner&gt;</span>\n            <span class=\"nt\">&lt;installed_changeset_revision&gt;</span>51b771646466<span class=\"nt\">&lt;/installed_changeset_revision&gt;</span>\n            <span class=\"nt\">&lt;id&gt;</span>toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.36.6<span class=\"nt\">&lt;/id&gt;</span>\n            <span class=\"nt\">&lt;version&gt;</span>0.36.6<span class=\"nt\">&lt;/version&gt;</span>\n        <span class=\"nt\">&lt;/tool&gt;</span>\n    <span class=\"nt\">&lt;/section&gt;</span>\n    <span class=\"nt\">&lt;section</span> <span class=\"na\">id=</span><span class=\"s\">\"fastq_quality_control\"</span> <span class=\"na\">name=</span><span class=\"s\">\"FASTQ Quality Control\"</span> <span class=\"na\">version=</span><span class=\"s\">\"\"</span><span class=\"nt\">&gt;</span>\n        <span class=\"nt\">&lt;tool</span> <span class=\"na\">file=</span><span class=\"s\">\"toolshed.g2.bx.psu.edu/repos/devteam/fastqc/e7b2202befea/fastqc/rgFastQC.xml\"</span> <span class=\"na\">guid=</span><span class=\"s\">\"toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.72+galaxy1\"</span><span class=\"nt\">&gt;</span>\n            <span class=\"nt\">&lt;tool_shed&gt;</span>toolshed.g2.bx.psu.edu<span class=\"nt\">&lt;/tool_shed&gt;</span>\n            <span class=\"nt\">&lt;repository_name&gt;</span>fastqc<span class=\"nt\">&lt;/repository_name&gt;</span>\n            <span class=\"nt\">&lt;repository_owner&gt;</span>devteam<span class=\"nt\">&lt;/repository_owner&gt;</span>\n            <span class=\"nt\">&lt;installed_changeset_revision&gt;</span>e7b2202befea<span class=\"nt\">&lt;/installed_changeset_revision&gt;</span>\n            <span class=\"nt\">&lt;id&gt;</span>toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.72+galaxy1<span class=\"nt\">&lt;/id&gt;</span>\n            <span class=\"nt\">&lt;version&gt;</span>0.72+galaxy1<span class=\"nt\">&lt;/version&gt;</span>\n        <span class=\"nt\">&lt;/tool&gt;</span>\n    <span class=\"nt\">&lt;/section&gt;</span>\n<span class=\"nt\">&lt;/toolbox&gt;</span>\n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Next, let’s create a new <code class=\"language-plaintext highlighter-rouge\">galaxy.yml</code> file that uses this <code class=\"language-plaintext highlighter-rouge\">custom_tool_conf.xml</code>.</p>\n\n      <p>Note that the content below is the same as the <code class=\"language-plaintext highlighter-rouge\">configs</code> section of\n<code class=\"language-plaintext highlighter-rouge\">values-cvmfs.yaml</code> file from the Galaxy Helm chart with one exception:\n<code class=\"language-plaintext highlighter-rouge\">tool_config_file</code> entry is pointing to our custom tool list instead of the\nfull list from CVMFS.</p>\n\n      <div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">uwsgi</span><span class=\"pi\">:</span>\n  <span class=\"na\">virtualenv</span><span class=\"pi\">:</span> <span class=\"s\">/galaxy/server/.venv</span>\n  <span class=\"na\">processes</span><span class=\"pi\">:</span> <span class=\"m\">1</span>\n  <span class=\"na\">http</span><span class=\"pi\">:</span> <span class=\"s\">0.0.0.0:8080</span>\n  <span class=\"na\">static-map</span><span class=\"pi\">:</span> <span class=\"s\">/static/style=/galaxy/server/static/style/blue</span>\n  <span class=\"na\">static-map</span><span class=\"pi\">:</span> <span class=\"s\">/static=/galaxy/server/static</span>\n  <span class=\"na\">static-map</span><span class=\"pi\">:</span> <span class=\"s\">/favicon.ico=/galaxy/server/static/favicon.ico</span>\n  <span class=\"na\">pythonpath</span><span class=\"pi\">:</span> <span class=\"s\">/galaxy/server/lib</span>\n  <span class=\"na\">thunder-lock</span><span class=\"pi\">:</span> <span class=\"kc\">true</span>\n  <span class=\"na\">manage-script-name</span><span class=\"pi\">:</span> <span class=\"kc\">true</span>\n  <span class=\"na\">mount</span><span class=\"pi\">:</span> <span class=\"pi\">{{</span><span class=\"nv\">.Values.ingress.path</span><span class=\"pi\">}}</span><span class=\"s\">=galaxy.webapps.galaxy.buildapp:uwsgi_app()</span>\n  <span class=\"na\">buffer-size</span><span class=\"pi\">:</span> <span class=\"m\">16384</span>\n  <span class=\"na\">offload-threads</span><span class=\"pi\">:</span> <span class=\"m\">2</span>\n  <span class=\"na\">threads</span><span class=\"pi\">:</span> <span class=\"m\">4</span>\n  <span class=\"na\">die-on-term</span><span class=\"pi\">:</span> <span class=\"kc\">true</span>\n  <span class=\"na\">master</span><span class=\"pi\">:</span> <span class=\"kc\">true</span>\n  <span class=\"na\">hook-master-start</span><span class=\"pi\">:</span> <span class=\"s\">unix_signal:2 gracefully_kill_them_all</span>\n  <span class=\"na\">enable-threads</span><span class=\"pi\">:</span> <span class=\"kc\">true</span>\n  <span class=\"na\">py-call-osafterfork</span><span class=\"pi\">:</span> <span class=\"kc\">true</span>\n<span class=\"na\">galaxy</span><span class=\"pi\">:</span>\n  <span class=\"na\">database_connection</span><span class=\"pi\">:</span> <span class=\"s1\">'</span><span class=\"s\">postgresql://{{.Values.postgresql.galaxyDatabaseUser}}:{{.Values.postgresql.galaxyDatabasePassword}}@{{</span><span class=\"nv\"> </span><span class=\"s\">template</span><span class=\"nv\"> </span><span class=\"s\">\"galaxy-postgresql.fullname\"</span><span class=\"nv\"> </span><span class=\"s\">.</span><span class=\"nv\"> </span><span class=\"s\">}}/galaxy'</span>\n  <span class=\"na\">integrated_tool_panel_config</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">/galaxy/server/config/mutable/integrated_tool_panel.xml\"</span>\n  <span class=\"na\">sanitize_whitelist_file</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">/galaxy/server/config/mutable/sanitize_whitelist.txt\"</span>\n  <span class=\"na\">tool_config_file</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">{{.Values.persistence.mountPath}}/config/editable_shed_tool_conf.xml,/galaxy/server/config/custom_tool_conf.xml\"</span>\n  <span class=\"na\">tool_data_table_config_path</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">{{</span><span class=\"nv\"> </span><span class=\"s\">.Values.cvmfs.main.mountPath</span><span class=\"nv\"> </span><span class=\"s\">}}/config/shed_tool_data_table_conf.xml,{{.Values.cvmfs.data.mountPath}}/managed/location/tool_data_table_conf.xml,{{.Values.cvmfs.data.mountPath}}/byhand/location/tool_data_table_conf.xml\"</span>\n  <span class=\"na\">tool_dependency_dir</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">{{.Values.persistence.mountPath}}/deps\"</span>\n  <span class=\"na\">builds_file_path</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">{{.Values.cvmfs.data.mountPath}}/managed/location/builds.txt\"</span>\n  <span class=\"na\">datatypes_config_file</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">{{</span><span class=\"nv\"> </span><span class=\"s\">.Values.cvmfs.main.mountPath</span><span class=\"nv\"> </span><span class=\"s\">}}/config/datatypes_conf.xml\"</span>\n  <span class=\"na\">containers_resolvers_config_file</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">/galaxy/server/config/container_resolvers_conf.xml\"</span>\n  <span class=\"na\">workflow_schedulers_config_file</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">/galaxy/server/config/workflow_schedulers_conf.xml\"</span>\n  <span class=\"na\">build_sites_config_file</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">/galaxy/server/config/build_sites.yml\"</span>\n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Now, let’s upgrade the chart to use <code class=\"language-plaintext highlighter-rouge\">custom_tool_conf.xml</code> and\n<code class=\"language-plaintext highlighter-rouge\">galaxy.yml</code> by running the <code class=\"language-plaintext highlighter-rouge\">helm upgrade</code> command.</p>\n\n      <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>helm upgrade <span class=\"nt\">--reuse-values</span> <span class=\"nt\">--set-file</span> <span class=\"s2\">\"configs.custom_tool_conf</span><span class=\"se\">\\.</span><span class=\"s2\">xml\"</span><span class=\"o\">=</span>custom_tool_conf.xml <span class=\"nt\">--set-file</span> <span class=\"s2\">\"configs.galaxy</span><span class=\"se\">\\.</span><span class=\"s2\">yml\"</span><span class=\"o\">=</span>configs/galaxy.yml galaxy galaxy/galaxy\n</code></pre></div>      </div>\n\n      <p>Note the <code class=\"language-plaintext highlighter-rouge\">--reuse-values</code> flag, which instructs Helm to reuse any\npreviously set values, and apply the new ones on top.  The <code class=\"language-plaintext highlighter-rouge\">--set-file</code>\noption will set the value of the <code class=\"language-plaintext highlighter-rouge\">configs.custom_tool_conf.xml</code>\nkey in your values file to the contents of the specified file, as a text\nstring. Each file under <code class=\"language-plaintext highlighter-rouge\">configs</code> key in <code class=\"language-plaintext highlighter-rouge\">values.yaml</code> is automatically\nmapped into Galaxy’s <code class=\"language-plaintext highlighter-rouge\">config</code> directory within the running container.</p>\n    </li>\n    <li>\n      <p>Notice that while the chart is upgrading, the existing version continues\nto function. The changeover will occur when the new container is online\nand signals readiness to Kubernetes by responding to web requests on\nthe relevant port. Log into the Kubernetes dashboard and watch the logs\nas the new pods come online.</p>\n    </li>\n    <li>\n      <p>List the installed helm charts again and note that the revision of the chart\nhas changed. These revisions are useful because it allows us to rollback\nour changes if they are incorrect. This will be covered in a later section.</p>\n\n      <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>helm list\nNAME  \tREVISION\tUPDATED                 \tSTATUS  \tCHART                 \tAPP VERSION\tNAMESPACE\ncvmfs \t1       \tWed Jun 26 14:47:46 2019\tDEPLOYED\tgalaxy-cvmfs-csi-1.0.1\t1.0        \tcvmfs\ngalaxy\t2       \tWed Jun 26 14:51:17 2019\tDEPLOYED\tgalaxy-3.0.0          \tv19.05     \tdefault\n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Let’s now exec into the running container and check where the files were\nmapped in. First, let’s get a list of running pods.</p>\n\n      <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>kubectl get pods\nNAME                          READY   STATUS    RESTARTS   AGE\ngalaxy-galaxy-postgres-0      1/1     Running   0          2d6h\ngalaxy-job-69864b6797-zs5mn   1/1     Running   0          2d6h\ngalaxy-web-7568c58b94-jzkvm   1/1     Running   0          2d6h\n</code></pre></div>      </div>\n\n      <p>Exec into the web pod by running:</p>\n\n      <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>kubectl <span class=\"nb\">exec</span> <span class=\"nt\">-it</span> galaxy-web-7568c58b94-jzkvm /bin/bash\n</code></pre></div>      </div>\n\n      <p>Now run <code class=\"language-plaintext highlighter-rouge\">ls /galaxy/server/config/</code> and note that the <code class=\"language-plaintext highlighter-rouge\">galaxy.yml</code> contains\nthe content that you’ve provided and that <code class=\"language-plaintext highlighter-rouge\">custom_tool_conf.xml</code> has also been\nmapped into the config folder. In this same way, any of Galaxy’s config\nfiles can be overridden by simply mapping in the relevant file into the\nconfig folder.</p>\n    </li>\n  </ol>\n</blockquote>\n\n<h2 id=\"setting-the-admin-user-and-changing-the-brand\">Setting the admin user and changing the brand</h2>\n<p>Next, we will set the admin user and change the brand in <code class=\"language-plaintext highlighter-rouge\">galaxy.yml</code>. We will\nrollback our change to understand how Helm manages configuration.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Setting admin user and changing the brand</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Modify the following entries in your <code class=\"language-plaintext highlighter-rouge\">galaxy.yml</code>. Make sure to add these\nkeys under the <code class=\"language-plaintext highlighter-rouge\">galaxy:</code> section of the file.</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>brand: \"Hello World\"\nadmin_users: \"admin@mydomain.com\"\n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Now, let’s upgrade the chart to apply the new configuration.</p>\n\n      <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>helm upgrade <span class=\"nt\">--reuse-values</span> <span class=\"nt\">--set-file</span> <span class=\"s2\">\"configs.galaxy</span><span class=\"se\">\\.</span><span class=\"s2\">yml\"</span><span class=\"o\">=</span>galaxy.yml galaxy galaxy/galaxy\n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Inspect the currently set Helm values by:</p>\n\n      <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>helm get values galaxy\n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>List the installed Helm charts again and note that the revision of the chart has changed as expected.</p>\n\n      <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>helm list\nNAME  \tREVISION\tUPDATED                 \tSTATUS  \tCHART                 \tAPP VERSION\tNAMESPACE\ncvmfs \t1       \tWed Jun 26 14:47:46 2019\tDEPLOYED\tgalaxy-cvmfs-csi-1.0.1\t1.0        \tcvmfs\ngalaxy\t3       \tWed Jun 26 14:51:17 2019\tDEPLOYED\tgalaxy-3.0.0          \tv19.05     \tdefault\n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Let’s now roll back to the previous revision.</p>\n\n      <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>helm rollback galaxy 2\n</code></pre></div>      </div>\n\n      <p>Use <code class=\"language-plaintext highlighter-rouge\">helm get values</code> again to observe that the values have reverted to\nthe previous revision. After a short while, once the new container is up\nand running, Kubernetes will automatically switch over to it and you can\nsee that the previous configuration has been restored.</p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h1 id=\"scaling-galaxy\">Scaling Galaxy</h1>\n<p>In Galaxy deployment on Kubernetes, there are two containers by default, one\nweb handler and one job handler. We will now look at how these can be scaled.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Setting admin user and changing the brand</hands-on-title>\n\n  <ol>\n    <li>\n      <p>View the <code class=\"language-plaintext highlighter-rouge\">values-cvmfs.yaml</code> file in the Galaxy Helm chart and note down the\nnumber of web and job handlers.</p>\n\n      <div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">webHandlers</span><span class=\"pi\">:</span>\n    <span class=\"na\">replicaCount</span><span class=\"pi\">:</span> <span class=\"m\">1</span>\n<span class=\"na\">jobHandlers</span><span class=\"pi\">:</span>\n    <span class=\"na\">replicaCount</span><span class=\"pi\">:</span> <span class=\"m\">1</span>\n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Let’s increase the number of web handlers by simply setting new values for the number of replicas.</p>\n\n      <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>helm upgrade <span class=\"nt\">--reuse-values</span> <span class=\"nt\">--set</span> webHandlers.replicaCount<span class=\"o\">=</span>2 galaxy galaxy/galaxy\n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Check whether the new replicas have been created.</p>\n\n      <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>kubectl get pods\nNAME                          READY   STATUS    RESTARTS   AGE\ngalaxy-galaxy-postgres-0      1/1     Running   0          2d9h\ngalaxy-job-5cc75c6588-8dsbg   1/1     Running   0          7m13s\ngalaxy-web-7c9576cf89-49nlm   1/1     Running   0          7m13s\ngalaxy-web-7c9576cf89-r6rcj   0/1     Running   0          9s\n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Follow the pod logs and check whether the new handler is receiving web requests\nas expected.</p>\n\n      <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>kubectl logs <span class=\"nt\">-f</span> galaxy-web-7c9576cf89-r6rcj\n</code></pre></div>      </div>\n\n      <p>You will notice that Kubernetes automatically load balances requests between the\navailable web handler replicas in a round-robin fashion.</p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h1 id=\"testing-kubernetes-resilience\">Testing Kubernetes resilience</h1>\n<p>To observe how Kubernetes handles failures, let’s exec into a running container and\nmanually kill a process to simulate a possible process failure. Kubernetes\ncontinuously monitors running containers, and attempts to bring the environment\nback to the “desired” state. The moment it notices a failure, it will respawn\na new pod to replace the failed one. Typically, a Kubernetes container will also\nhave a <a href=\"https://kubernetes.io/docs/tasks/configure-pod-container/configure-liveness-readiness-probes/\">liveness probe</a> defined. A liveness probe can be an http\nrequest to a port, or even a manually executed shell script, which will test\nwhether the relevant container is healthy, and if not, Kubernetes will immediately\nprovision a new replacement.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Handling failures</hands-on-title>\n\n  <ol>\n    <li>\n      <p>First list the available pods.</p>\n\n      <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>kubectl get pods\nNAME                          READY   STATUS    RESTARTS   AGE\ngalaxy-galaxy-postgres-0      1/1     Running   0          2d9h\ngalaxy-job-5cc75c6588-8dsbg   1/1     Running   0          14m\ngalaxy-web-7c9576cf89-49nlm   1/1     Running   0          14m\ngalaxy-web-7c9576cf89-r6rcj   0/1     Running   1          7m36s\n</code></pre></div>      </div>\n\n      <p>Then exec into one:</p>\n\n      <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>kubectl <span class=\"nb\">exec</span> <span class=\"nt\">-it</span> galaxy-web-7c9576cf89-r6rcj /bin/bash\n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Now kill the main container process.</p>\n\n      <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">kill </span>1\n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>If we run <code class=\"language-plaintext highlighter-rouge\">kubectl get pods</code>, we can notice how Kubernetes immediately\nstarts a new pod to replace the failed one, bringing the environment back to\nthe desired state. Take a look at the liveness probe defined for the galaxy\nweb container in the helm chart source code\n(<code class=\"language-plaintext highlighter-rouge\">templates/deployment-web.yaml</code>).</p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h1 id=\"deleting-galaxy\">Deleting Galaxy</h1>\n<p>Finally, let’s take a look at how we can uninstall Galaxy and remove all\nrelated containers.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Deleting Galaxy</hands-on-title>\n\n  <ol>\n    <li>\n      <p>To permanently delete the Galaxy release, run:</p>\n\n      <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>helm delete <span class=\"nt\">--purge</span> galaxy\n</code></pre></div>      </div>\n\n      <p>The purge flag instructs helm to permanently remove galaxy from its history.</p>\n    </li>\n    <li>\n      <p>Use <code class=\"language-plaintext highlighter-rouge\">kubectl get pods</code> to verify that the pods have been deleted.</p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h1 id=\"next-steps\">Next Steps</h1>\n<p>This tutorial provided an overview of some common Galaxy administration tasks.\nAdvanced customizations would include running custom shell scripts on Galaxy\nstartup to perform additional tasks, running additional containers on\nstartup, administering and managing storage, building custom Galaxy containers\nwith desired modifications etc. For more info on some of these\ntopics, take a look at the <a href=\"https://github.com/galaxyproject/galaxy-helm\">Galaxy Helm chart</a> repository as well as\n<a href=\"../..\">other tutorials</a> tagged with <em>kubernetes</em>. Also, feel free to reach out\non Gitter: <a href=\"https://gitter.im/galaxyproject/FederatedGalaxy\">https://gitter.im/galaxyproject/FederatedGalaxy</a>.</p>\n\n"],"ref_slides":[],"hands_on":true,"slides":false,"mod_date":"2022-10-18 14:23:35 +0000","pub_date":"2019-07-02 18:24:39 +0000","version":11,"api":"https://training.galaxyproject.org/training-material/api/topics/admin/tutorials/k8s-managing-galaxy/tutorial.json","tools":[],"supported_servers":[],"topic_name_human":"Galaxy Server administration","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools: []\n","tours":false,"video":false,"slides_recordings":false,"translations":{"tutorial":[],"slides":[],"video":false},"license":"CC-BY-4.0","type":"tutorial"}