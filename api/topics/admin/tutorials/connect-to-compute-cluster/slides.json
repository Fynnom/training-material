{"layout":"tutorial_slides","title":"Connecting Galaxy to a compute cluster","redirect_from":["/short/admin/connect-to-compute-cluster/slides","/short/S00005"],"questions":["How to connect Galaxy to a compute cluster?","How can I configure job dependent resources, like cores, memory for my DRM?"],"objectives":["Understand all components of the Galaxy job running stack","Understand how the job conf controls Galaxy's jobs subsystem","Know how to map tools to job destinations","The various ways in which tools can be mapped to destinations, both statically and dynamically"],"time_estimation":"1h","key_points":["Galaxy supports a variety of different DRMs.","Total Perspective Vortex is a convenient way to map"],"contributors":[{"name":"Nate Coraor","matrix":"natefoo:matrix.org","twitter":"natefoo","email":"nate@bx.psu.edu","joined":"2017-12","orcid":"0000-0001-8083-2963","id":"natefoo","url":"https://training.galaxyproject.org/training-material/api/contributors/natefoo.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/natefoo/"},{"name":"Björn Grüning","email":"bjoern.gruening@gmail.com","twitter":"bjoerngruening","fediverse":"https://fosstodon.org/@bgruening","fediverse_flavor":"mastodon","matrix":"bgruening:matrix.org","orcid":"0000-0002-3079-6586","elixir_node":"de","linkedin":"bgruening","contact_for_training":true,"joined":"2017-09","location":{"country":"DE","lat":47.997791,"lon":7.842609},"affiliations":["eurosciencegateway","eosc-life","by-covid","deNBI","sfb992","elixir-converge","uni-freiburg","elixir-europe"],"id":"bgruening","url":"https://training.galaxyproject.org/training-material/api/contributors/bgruening.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/bgruening/"},{"name":"Helena Rasche","orcid":"0000-0001-9760-8992","maintainer_contact":"gitter","matrix":"hexylena:matrix.org","joined":"2017-09","elixir_node":"nl","affiliations":["gallantries","by-covid","erasmusmc","elixir-europe","elixir-converge"],"former_affiliations":["deNBI","avans-atgm","uni-freiburg"],"contact_for_training":false,"location":{"country":"NL","lat":51.91,"lon":4.46},"id":"hexylena","url":"https://training.galaxyproject.org/training-material/api/contributors/hexylena.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/hexylena/"}],"tags":["features"],"subtopic":"jobs","requirements":[{"type":"internal","topic_name":"admin","tutorials":["ansible","ansible-galaxy"]}],"follow_up_training":[{"type":"internal","topic_name":"admin","tutorials":["job-destinations"]}],"js_requirements":{"mathjax":null,"mermaid":false},"short_id":"S00005","url":"/topics/admin/tutorials/connect-to-compute-cluster/slides.html","topic_name":"admin","tutorial_name":"connect-to-compute-cluster","dir":"topics/admin/tutorials/connect-to-compute-cluster","symlink":null,"id":"admin/connect-to-compute-cluster","ref_tutorials":["<p>The tools that are added to Galaxy can have a wide variance in the compute resources that they require and work efficiently on.\nTo account for this, Galaxy’s job configuration needs to be tuned to run these tools properly. In addition, site-specific variables must\nbe taken into consideration when choosing where to run jobs and what parameters to run them with.</p>\n\n<!--SNIPPET-->\n<blockquote class=\"comment\">   <div class=\"box-title comment-title\" id=\"comment-results-may-vary\"><i class=\"far fa-comment-dots\" aria-hidden=\"true\"></i> Comment: Results may vary</div>   <p>Your results may be slightly different from the ones presented in this tutorial due to differing versions of tools, reference data, external databases, or because of stochastic processes in the algorithms.</p> </blockquote>\n<p><!--END_SNIPPET--></p>\n\n<blockquote class=\"agenda\">\n  <agenda-title></agenda-title>\n\n<ol id=\"markdown-toc\">\n  <li><a href=\"#installing-slurm\" id=\"markdown-toc-installing-slurm\">Installing Slurm</a></li>\n  <li><a href=\"#using-slurm\" id=\"markdown-toc-using-slurm\">Using Slurm</a></li>\n  <li><a href=\"#slurm-drmaa\" id=\"markdown-toc-slurm-drmaa\">Slurm-DRMAA</a></li>\n  <li><a href=\"#galaxy-and-slurm\" id=\"markdown-toc-galaxy-and-slurm\">Galaxy and Slurm</a>    <ol>\n      <li><a href=\"#running-a-job\" id=\"markdown-toc-running-a-job\">Running a Job</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#recording-job-metrics\" id=\"markdown-toc-recording-job-metrics\">Recording Job Metrics</a>    <ol>\n      <li><a href=\"#setting-up-galaxy\" id=\"markdown-toc-setting-up-galaxy\">Setting up Galaxy</a></li>\n      <li><a href=\"#generating-metrics\" id=\"markdown-toc-generating-metrics\">Generating Metrics</a></li>\n      <li><a href=\"#what-should-i-collect\" id=\"markdown-toc-what-should-i-collect\">What should I collect?</a></li>\n      <li><a href=\"#accessing-the-data\" id=\"markdown-toc-accessing-the-data\">Accessing the data</a></li>\n      <li><a href=\"#further-reading\" id=\"markdown-toc-further-reading\">Further Reading</a></li>\n    </ol>\n  </li>\n</ol>\n\n</blockquote>\n\n<!--SNIPPET-->\n<blockquote class=\"comment\">   <div class=\"box-title comment-title\" id=\"comment-galaxy-admin-training-path\"><i class=\"far fa-comment-dots\" aria-hidden=\"true\"></i> Comment: Galaxy Admin Training Path</div>   <p>The yearly Galaxy Admin Training follows a specific ordering of tutorials. Use this timeline to help keep track of where you are in Galaxy Admin Training.</p>   <ol id=\"git-gat-timeline\">                    <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/ansible-galaxy/tutorial.html\">             <div>Step 1</div>             <div>ansible-galaxy</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/backup-cleanup/tutorial.html\">             <div>Step 2</div>             <div>backup-cleanup</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/customization/tutorial.html\">             <div>Step 3</div>             <div>customization</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/tus/tutorial.html\">             <div>Step 4</div>             <div>tus</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/cvmfs/tutorial.html\">             <div>Step 5</div>             <div>cvmfs</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/apptainer/tutorial.html\">             <div>Step 6</div>             <div>apptainer</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/tool-management/tutorial.html\">             <div>Step 7</div>             <div>tool-management</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/reference-genomes/tutorial.html\">             <div>Step 8</div>             <div>reference-genomes</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/data-library/tutorial.html\">             <div>Step 9</div>             <div>data-library</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/dev/tutorials/bioblend-api/tutorial.html\">             <div>Step 10</div>             <div>dev/bioblend-api</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"active\">         <a href=\"/training-material/topics/admin/tutorials/connect-to-compute-cluster/tutorial.html\">             <div>Step 11</div>             <div>connect-to-compute-cluster</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"\">         <a href=\"/training-material/topics/admin/tutorials/job-destinations/tutorial.html\">             <div>Step 12</div>             <div>job-destinations</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"\">         <a href=\"/training-material/topics/admin/tutorials/pulsar/tutorial.html\">             <div>Step 13</div>             <div>pulsar</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"\">         <a href=\"/training-material/topics/admin/tutorials/celery/tutorial.html\">             <div>Step 14</div>             <div>celery</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"\">         <a href=\"/training-material/topics/admin/tutorials/gxadmin/tutorial.html\">             <div>Step 15</div>             <div>gxadmin</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"\">         <a href=\"/training-material/topics/admin/tutorials/reports/tutorial.html\">             <div>Step 16</div>             <div>reports</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"\">         <a href=\"/training-material/topics/admin/tutorials/monitoring/tutorial.html\">             <div>Step 17</div>             <div>monitoring</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"\">         <a href=\"/training-material/topics/admin/tutorials/tiaas/tutorial.html\">             <div>Step 18</div>             <div>tiaas</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"\">         <a href=\"/training-material/topics/admin/tutorials/sentry/tutorial.html\">             <div>Step 19</div>             <div>sentry</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"\">         <a href=\"/training-material/topics/admin/tutorials/ftp/tutorial.html\">             <div>Step 20</div>             <div>ftp</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"\">         <a href=\"/training-material/topics/admin/tutorials/beacon/tutorial.html\">             <div>Step 21</div>             <div>beacon</div>         </a>     </li>           </ol> </blockquote>\n<p><!--END_SNIPPET--></p>\n\n<h2 id=\"installing-slurm\">Installing Slurm</h2>\n\n<blockquote class=\"comment\">\n  <comment-title>Ansible Best Practices</comment-title>\n  <p>If you’ve set up your Galaxy server using the <a href=\"/training-material/topics/admin/tutorials/ansible-galaxy/tutorial.html\">Galaxy Installation with Ansible</a> tutorial, you will have created a <code class=\"language-plaintext highlighter-rouge\">galaxyservers</code> group in your inventory file, <code class=\"language-plaintext highlighter-rouge\">hosts</code>, and placed your variables in <code class=\"language-plaintext highlighter-rouge\">group_vars/galaxyservers.yml</code>. Although for the purposes of this tutorial, the Galaxy server and Slurm controller/node are one and the same, in a real world deployment they are very likely to be different hosts. We will continue to use the <code class=\"language-plaintext highlighter-rouge\">galaxyservers</code> group for simplicity, but in your own deployment you should consider creating some additional groups for Slurm controller(s), Slurm nodes, and Slurm clients.</p>\n</blockquote>\n\n<blockquote class=\"tip\">\n  <tip-title>Do you need a DRM?</tip-title>\n  <p>If you have a smaller server, do you still need a DRM? Yes! You should definitely run Slurm or a similar option. If you don’t, as soon as you restart Galaxy with local runners, any running jobs will be killed. Even with a handful of users, it is a good idea to keep 1-2 CPU cores/4GB RAM reserved for Galaxy.</p>\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Installing Slurm</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Edit your <code class=\"language-plaintext highlighter-rouge\">requirements.yml</code> and include the following contents:</p>\n\n      <div data-commit=\"Add requirements\" class=\"language-diff highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gd\">--- a/requirements.yml\n</span><span class=\"gi\">+++ b/requirements.yml\n</span><span class=\"p\">@@ -23,3 +23,8 @@</span>\n # Singularity/Apptainer\n - src: usegalaxy_eu.apptainer\n   version: 0.0.1\n<span class=\"gi\">+# SLURM as our DRM\n+- src: galaxyproject.repos\n+  version: 0.0.3\n+- src: galaxyproject.slurm\n+  version: 1.0.2\n</span>   \n</code></pre></div>      </div>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-how-to-read-a-diff\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-how-to-read-a-diff\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: How to read a Diff</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <p>If you haven’t worked with diffs before, this can be something quite new or different.</p>   <p>If we have two files, let’s say a grocery list, in two files. We’ll call them ‘a’ and ‘b’.</p>   <blockquote class=\"code-2col\">   <blockquote class=\"code-in\">     <code-in-title>Old</code-in-title>     <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ cat old<br />🍎<br />🍐<br />🍊<br />🍋<br />🍒<br />🥑<br /></code></pre></div>    </div>   </blockquote>   <blockquote class=\"code-out\">     <code-out-title>New</code-out-title>     <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ cat new<br />🍎<br />🍐<br />🍊<br />🍋<br />🍍<br />🥑<br /></code></pre></div>    </div>   </blockquote> </blockquote>   <p>We can see that they have some different entries. We’ve removed 🍒 because they’re awful, and replaced them with an 🍍</p>   <p>Diff lets us compare these files</p>   <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>diff old new<br />5c5<br />&lt; 🍒<br /><span class=\"nt\">---</span><br /><span class=\"o\">&gt;</span> 🍍<br /></code></pre></div></div>   <p>Here we see that 🍒 is only in a, and 🍍 is only in b. But otherwise the files are identical.</p>   <p>There are a couple different formats to diffs, one is the ‘unified diff’</p>   <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>diff <span class=\"nt\">-U2</span> old new<br /><span class=\"nt\">---</span> old\t2022-02-16 14:06:19.697132568 +0100<br />+++ new\t2022-02-16 14:06:36.340962616 +0100<br />@@ <span class=\"nt\">-3</span>,4 +3,4 @@<br /> 🍊<br /> 🍋<br />-🍒<br />+🍍<br /> 🥑<br /></code></pre></div></div>   <p>This is basically what you see in the training materials which gives you a lot of context about the changes:</p>   <ul>   <li><code class=\"language-plaintext highlighter-rouge\">--- old</code> is the ‘old’ file in our view</li>   <li><code class=\"language-plaintext highlighter-rouge\">+++ new</code> is the ‘new’ file</li>   <li>@@ these lines tell us where the change occurs and how many lines are added or removed.</li>   <li>Lines starting with a - are removed from our ‘new’ file</li>   <li>Lines with a + have been added.</li> </ul>   <p>So when you go to apply these diffs to your files in the training:</p>   <ol>   <li>Ignore the header</li>   <li>Remove lines starting with - from your file</li>   <li>Add lines starting with + to your file</li> </ol>   <p>The other lines (🍊/🍋 and 🥑) above just provide “context”, they help you know where a change belongs in a file, but <strong>should not be edited</strong> when you’re making the above change. Given the above diff, you would find a line with a 🍒, and replace it with a 🍍</p>   <h4 id=\"added--removed-lines\">Added &amp; Removed Lines</h4>   <p>Removals are very easy to spot, we just have removed lines</p>   <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">---</span> old\t2022-02-16 14:06:19.697132568 +0100<br />+++ new\t2022-02-16 14:10:14.370722802 +0100<br />@@ <span class=\"nt\">-4</span>,3 +4,2 @@<br /> 🍋<br /> 🍒<br />-🥑<br /></code></pre></div></div>   <p>And additions likewise are very easy, just add a new line, between the other lines in your file.</p>   <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">---</span> old\t2022-02-16 14:06:19.697132568 +0100<br />+++ new\t2022-02-16 14:11:11.422135393 +0100<br />@@ <span class=\"nt\">-1</span>,3 +1,4 @@<br /> 🍎<br />+🍍<br /> 🍐<br /> 🍊<br /></code></pre></div></div>   <h4 id=\"completely-new-files\">Completely new files</h4>   <p>Completely new files look a bit different, there the “old” file is <code class=\"language-plaintext highlighter-rouge\">/dev/null</code>, the empty file in a Linux machine.</p>   <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>diff <span class=\"nt\">-U2</span> /dev/null old<br /><span class=\"nt\">---</span> /dev/null\t2022-02-15 11:47:16.100000270 +0100<br />+++ old\t2022-02-16 14:06:19.697132568 +0100<br />@@ <span class=\"nt\">-0</span>,0 +1,6 @@<br />+🍎<br />+🍐<br />+🍊<br />+🍋<br />+🍒<br />+🥑<br /></code></pre></div></div>   <p>And removed files are similar, except with the new file being /dev/null</p>   <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">---</span> old\t2022-02-16 14:06:19.697132568 +0100<br />+++ /dev/null\t2022-02-15 11:47:16.100000270 +0100<br />@@ <span class=\"nt\">-1</span>,6 +0,0 @@<br />-🍎<br />-🍐<br />-🍊<br />-🍋<br />-🍒<br />-🥑<br /></code></pre></div></div> </blockquote>\n      <p><!--END_SNIPPET--></p>\n\n      <p>The <code class=\"language-plaintext highlighter-rouge\">galaxyproject.repos</code> role adds the <a href=\"https://depot.galaxyproject.org/yum/\">Galaxy Packages for Enterprise Linux (GPEL)</a> repository for RedHat/CentOS, which provides both Slurm and Slurm-DRMAA (neither are available in standard repositories or EPEL). For Ubuntu versions 18.04 or newer, it adds the <a href=\"https://launchpad.net/~natefoo/+archive/ubuntu/slurm-drmaa\">Slurm-DRMAA PPA</a> (Slurm-DRMAA was removed from Debian/Ubuntu in buster/bionic).</p>\n    </li>\n    <li>\n      <p>In the same directory, run:</p>\n\n      <blockquote class=\"code-in\">\n        <code-in-title>Bash</code-in-title>\n        <div data-cmd=\"true\" class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>ansible-galaxy <span class=\"nb\">install</span> <span class=\"nt\">-p</span> roles <span class=\"nt\">-r</span> requirements.yml\n</code></pre></div>        </div>\n      </blockquote>\n    </li>\n    <li>\n      <p>Add <code class=\"language-plaintext highlighter-rouge\">galaxyproject.repos</code>, <code class=\"language-plaintext highlighter-rouge\">galaxyproject.slurm</code> to the <em>beginning</em> of your roles section in your <code class=\"language-plaintext highlighter-rouge\">galaxy.yml</code> playbook:</p>\n\n      <div data-commit=\"Add the repos and slurm roles\" class=\"language-diff highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gd\">--- a/galaxy.yml\n</span><span class=\"gi\">+++ b/galaxy.yml\n</span><span class=\"p\">@@ -34,6 +34,8 @@</span>\n         dest: /libraries/\n   roles:\n     - galaxyproject.tusd\n<span class=\"gi\">+    - galaxyproject.repos\n+    - galaxyproject.slurm\n</span>     - usegalaxy_eu.apptainer\n     - galaxyproject.galaxy\n     - role: galaxyproject.miniconda\n   \n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Add the slurm variables to your <code class=\"language-plaintext highlighter-rouge\">group_vars/galaxyservers.yml</code>:</p>\n\n      <div data-commit=\"Add slurm configuration\" class=\"language-diff highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gd\">--- a/group_vars/galaxyservers.yml\n</span><span class=\"gi\">+++ b/group_vars/galaxyservers.yml\n</span><span class=\"p\">@@ -194,6 +194,16 @@</span> nginx_ssl_role: usegalaxy_eu.certbot\n nginx_conf_ssl_certificate: /etc/ssl/certs/fullchain.pem\n nginx_conf_ssl_certificate_key: /etc/ssl/user/privkey-www-data.pem\n    \n<span class=\"gi\">+# Slurm\n+slurm_roles: ['controller', 'exec'] # Which roles should the machine play? exec are execution hosts.\n+slurm_nodes:\n+- name: localhost # Name of our host\n+  CPUs: 2         # Here you would need to figure out how many cores your machine has. For this training we will use 2 but in real life, look at `htop` or similar.\n+slurm_config:\n+  SlurmdParameters: config_overrides   # Ignore errors if the host actually has cores != 2\n+  SelectType: select/cons_res\n+  SelectTypeParameters: CR_CPU_Memory  # Allocate individual cores/memory instead of entire node\n+\n</span> # TUS\n galaxy_tusd_port: 1080\n galaxy_tus_upload_store: /data/tus\n   \n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Run the playbook</p>\n\n      <blockquote class=\"code-in\">\n        <code-in-title>Bash</code-in-title>\n        <div data-cmd=\"true\" class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>ansible-playbook galaxy.yml\n</code></pre></div>        </div>\n      </blockquote>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>Note that the above Slurm config options are only those that are useful for this training exercise. In production, you would want to use a more appropriate configuration specific to your cluster (and setting <code class=\"language-plaintext highlighter-rouge\">SlurmdParameters</code> to <code class=\"language-plaintext highlighter-rouge\">config_overrides</code> is not recommended).</p>\n\n<p>Installed with Slurm is MUNGE (MUNGE Uid ‘N Gid Emporium…) which authenticates users between cluster hosts. You would normally need to ensure the same Munge key is distributed across all cluster hosts (in <code class=\"language-plaintext highlighter-rouge\">/etc/munge/munge.key</code>) - A great task for Ansible. However, the installation of the munge package has created a random key for you, and you will not need to distribute this since you’ll run jobs only on a single host.</p>\n\n<p>You can now check that all of the daemons are running with the command <code class=\"language-plaintext highlighter-rouge\">systemctl status munge slurmd slurmctld</code></p>\n\n<div class=\"language-console highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gp\">$</span><span class=\"w\"> </span><span class=\"nb\">sudo </span>systemctl status munge slurmd slurmctld\n<span class=\"go\">● munge.service - MUNGE authentication service\n</span><span class=\"gp\">  Loaded: loaded (/usr/lib/systemd/system/munge.service;</span><span class=\"w\"> </span>enabled<span class=\"p\">;</span> vendor preset: disabled<span class=\"o\">)</span>\n<span class=\"gp\">   Active: active (running) since Sa 2019-01-26 22:38:13 CET;</span><span class=\"w\"> </span>28min ago\n<span class=\"go\">     Docs: man:munged(8)\n Main PID: 22930 (munged)\n    Tasks: 4\n   Memory: 128.0K\n   CGroup: /system.slice/munge.service\n           └─22930 /usr/sbin/munged\n\nJan 26 22:38:13 helena-test.novalocal systemd[1]: Starting MUNGE authentication service...\nJan 26 22:38:13 helena-test.novalocal systemd[1]: Started MUNGE authentication service.\n\n● slurmd.service - Slurm node daemon\n</span><span class=\"gp\">   Loaded: loaded (/usr/lib/systemd/system/slurmd.service;</span><span class=\"w\"> </span>enabled<span class=\"p\">;</span> vendor preset: disabled<span class=\"o\">)</span>\n<span class=\"gp\">   Active: active (running) since Sa 2019-01-26 23:04:21 CET;</span><span class=\"w\"> </span>2min 25s ago\n<span class=\"gp\">  Process: 15051 ExecStart=/usr/sbin/slurmd $</span>SLURMD_OPTIONS <span class=\"o\">(</span><span class=\"nv\">code</span><span class=\"o\">=</span>exited, <span class=\"nv\">status</span><span class=\"o\">=</span>0/SUCCESS<span class=\"o\">)</span>\n<span class=\"go\"> Main PID: 15054 (slurmd)\n    Tasks: 1\n   Memory: 628.0K\n   CGroup: /system.slice/slurmd.service\n           └─15054 /usr/sbin/slurmd\n\nJan 26 23:04:21 helena-test.novalocal systemd[1]: Starting Slurm node daemon...\nJan 26 23:04:21 helena-test.novalocal systemd[1]: PID file /var/run/slurmd.pid not readable (yet?) after start.\nJan 26 23:04:21 helena-test.novalocal systemd[1]: Started Slurm node daemon.\n\n● slurmctld.service - Slurm controller daemon\n</span><span class=\"gp\">   Loaded: loaded (/usr/lib/systemd/system/slurmctld.service;</span><span class=\"w\"> </span>enabled<span class=\"p\">;</span> vendor preset: disabled<span class=\"o\">)</span>\n<span class=\"gp\">   Active: active (running) since Sa 2019-01-26 23:04:20 CET;</span><span class=\"w\"> </span>2min 26s ago\n<span class=\"gp\">  Process: 15040 ExecStart=/usr/sbin/slurmctld $</span>SLURMCTLD_OPTIONS <span class=\"o\">(</span><span class=\"nv\">code</span><span class=\"o\">=</span>exited, <span class=\"nv\">status</span><span class=\"o\">=</span>0/SUCCESS<span class=\"o\">)</span>\n<span class=\"go\"> Main PID: 15042 (slurmctld)\n    Tasks: 7\n   Memory: 1.1M\n   CGroup: /system.slice/slurmctld.service\n           └─15042 /usr/sbin/slurmctld\n\nJan 26 23:04:20 helena-test.novalocal systemd[1]: Starting Slurm controller daemon...\nJan 26 23:04:20 helena-test.novalocal systemd[1]: PID file /var/run/slurmctld.pid not readable (yet?) after start.\nJan 26 23:04:20 helena-test.novalocal systemd[1]: Started Slurm controller daemon.\n</span></code></pre></div></div>\n\n<p>Running the playbook, the Slurm configuration, <code class=\"language-plaintext highlighter-rouge\">/etc/slurm/slurm.conf</code> (or <code class=\"language-plaintext highlighter-rouge\">/etc/slurm-llnl/slurm.conf</code> on Debian-based distributions) was created for you automatically. All of the variables were set by default. If you need to override the configuration yourself, Slurm provides <a href=\"https://slurm.schedmd.com/configurator.html\">an online tool</a> which will help you configure it.</p>\n\n<h2 id=\"using-slurm\">Using Slurm</h2>\n\n<p>You should now be able to see that your Slurm cluster is operational with the <code class=\"language-plaintext highlighter-rouge\">sinfo</code> command. This shows the state of nodes and partitions (synonymous with queues in other DRMs). The “node-oriented view” provided with the <code class=\"language-plaintext highlighter-rouge\">-N</code> flag is particularly useful:</p>\n\n<div class=\"language-console highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gp\">$</span><span class=\"w\"> </span>sinfo\n<span class=\"go\">PARTITION AVAIL  TIMELIMIT  NODES  STATE NODELIST\ndebug*       up   infinite      1   idle localhost\n</span><span class=\"gp\">$</span><span class=\"w\"> </span>sinfo <span class=\"nt\">-Nel</span>\n<span class=\"go\">Fri Nov  4 16:51:24 2016\nNODELIST   NODES PARTITION       STATE CPUS    S:C:T MEMORY TMP_DISK WEIGHT FEATURES REASON\nlocalhost      1    debug*        idle    1    2:1:1      1        0      1   (null) none\n</span></code></pre></div></div>\n\n<p>If your node state is not <code class=\"language-plaintext highlighter-rouge\">idle</code>, something has gone wrong. If your node state ends with an asterisk *, the Slurm controller is attempting to contact the Slurm execution daemon but has not yet been successful (the * next to the partition name is normal, it indicates the default partition).</p>\n\n<p>We want to ensure that Slurm is actually able to run jobs. There are two ways this can be done:</p>\n\n<ul>\n  <li><code class=\"language-plaintext highlighter-rouge\">srun</code>: Run an interactive job (e.g. a shell, or a specific program with its stdin, stdout, and stderr all connected to your terminal.</li>\n  <li><code class=\"language-plaintext highlighter-rouge\">sbatch</code>: Run a batch job, with stdin closed and stdout/stderr redirected to a file.</li>\n</ul>\n\n<p>Galaxy runs <code class=\"language-plaintext highlighter-rouge\">sbatch</code> jobs but we can use both <code class=\"language-plaintext highlighter-rouge\">srun</code> and <code class=\"language-plaintext highlighter-rouge\">sbatch</code> to test:</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Running commands with `srun`</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Use <a href=\"https://slurm.schedmd.com/srun.html\"><code class=\"language-plaintext highlighter-rouge\">srun</code></a> to run the command <code class=\"language-plaintext highlighter-rouge\">uname -a</code></p>\n\n      <blockquote class=\"code-in\">\n        <code-in-title>Bash</code-in-title>\n        <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>srun uname -a\n</code></pre></div>        </div>\n      </blockquote>\n\n      <blockquote class=\"code-out\">\n        <code-out-title></code-out-title>\n        <p>Your output may look slightly different:</p>\n        <div class=\"language-console highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gp\">$</span><span class=\"w\"> </span>srun <span class=\"nb\">uname</span> <span class=\"nt\">-a</span>\n<span class=\"gp\">Linux gat-1.oz.training.galaxyproject.eu 5.4.0-48-generic #</span>52-Ubuntu SMP Thu Sep 10 10:58:49 UTC 2020 x86_64 x86_64 x86_64 GNU/Linux\n</code></pre></div>        </div>\n      </blockquote>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>Although it looks like this command ran as if I had not used <code class=\"language-plaintext highlighter-rouge\">srun</code>, it was in fact routed through Slurm.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Running commands with `sbatch`</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Create a test job script somewhere, such as in <code class=\"language-plaintext highlighter-rouge\">~/sbatch-test.sh</code>. It should be a batch script which runs <code class=\"language-plaintext highlighter-rouge\">uname -a</code>, <code class=\"language-plaintext highlighter-rouge\">uptime</code>, and sleeps for 30 seconds.</p>\n\n      <blockquote class=\"question\">\n        <question-title></question-title>\n\n        <p>What does your shell script look like?</p>\n\n        <blockquote class=\"solution\">\n          <solution-title></solution-title>\n          <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"c\">#!/bin/bash</span>\n<span class=\"nb\">uname</span> <span class=\"nt\">-a</span>\n<span class=\"nb\">uptime\nsleep </span>30\n</code></pre></div>          </div>\n        </blockquote>\n      </blockquote>\n    </li>\n    <li>\n      <p>Make the script executable:</p>\n\n      <blockquote class=\"code-in\">\n        <code-in-title>Bash</code-in-title>\n        <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>chmod +x ~/sbatch-test.sh\n</code></pre></div>        </div>\n      </blockquote>\n    </li>\n    <li>\n      <p>Use <a href=\"https://slurm.schedmd.com/sbatch.html\"><code class=\"language-plaintext highlighter-rouge\">sbatch</code></a> to submit the job script</p>\n\n      <blockquote class=\"question\">\n        <question-title></question-title>\n\n        <p>What command did you run?</p>\n\n        <blockquote class=\"solution\">\n          <solution-title></solution-title>\n          <div class=\"language-console highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gp\">$</span><span class=\"w\"> </span>sbatch ~/sbatch-test.sh\n</code></pre></div>          </div>\n        </blockquote>\n      </blockquote>\n    </li>\n    <li>\n      <p>Use <a href=\"https://slurm.schedmd.com/squeue.html\"><code class=\"language-plaintext highlighter-rouge\">squeue</code></a> to check the queue</p>\n\n      <blockquote class=\"code-in\">\n        <code-in-title>Bash</code-in-title>\n        <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>squeue\n</code></pre></div>        </div>\n      </blockquote>\n\n      <blockquote class=\"code-out\">\n        <code-out-title></code-out-title>\n        <p>Your output may look slightly different:</p>\n        <div class=\"language-console highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"go\">JOBID PARTITION     NAME     USER ST       TIME  NODES NODELIST(REASON)\n   3     debug sbatch-t   ubuntu  R       0:22      1 localhost\n</span></code></pre></div>        </div>\n      </blockquote>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>If you’ve made it this far, your Slurm installation is working!</p>\n\n<h2 id=\"slurm-drmaa\">Slurm-DRMAA</h2>\n\n<p>Above Slurm in the stack is slurm-drmaa, a library that provides a translational interface from the Slurm API to the generalized DRMAA API in C.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Installing Slurm-DRMAA</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Add a <code class=\"language-plaintext highlighter-rouge\">post_task</code> to your playbook to install <code class=\"language-plaintext highlighter-rouge\">slurm-drmaa1</code> (Debian/Ubuntu) or <code class=\"language-plaintext highlighter-rouge\">slurm-drmaa</code> (RedHat/CentOS).</p>\n\n      <div data-commit=\"Add post task to install slurm-drmaa\" class=\"language-diff highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gd\">--- a/galaxy.yml\n</span><span class=\"gi\">+++ b/galaxy.yml\n</span><span class=\"p\">@@ -52,3 +52,6 @@</span>\n         minute: \"0\"\n         hour: \"0\"\n         job: \"SHELL=/bin/bash source {{ galaxy_venv_dir }}/bin/activate &amp;&amp;  GALAXY_LOG_DIR=/tmp/gxadmin/ GALAXY_ROOT={{ galaxy_root }}/server GALAXY_CONFIG_FILE={{ galaxy_config_file }} /usr/local/bin/gxadmin galaxy cleanup 60\"\n<span class=\"gi\">+    - name: Install slurm-drmaa\n+      package:\n+        name: slurm-drmaa1\n</span>   \n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Run the playbook (<code class=\"language-plaintext highlighter-rouge\">ansible-playbook galaxy.yml</code>)</p>\n\n      <blockquote class=\"code-in\">\n        <code-in-title>Bash</code-in-title>\n        <div data-cmd=\"true\" class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>ansible-playbook galaxy.yml\n</code></pre></div>        </div>\n      </blockquote>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>Moving one level further up the stack, we find DRMAA Python. This is a Galaxy framework <em>conditional dependency</em>. Conditional dependencies are only installed if, during startup, a configuration option is set that requires that dependency. The <code class=\"language-plaintext highlighter-rouge\">galaxyproject.galaxy</code> Ansible role will install these conditional dependencies, automatically.</p>\n\n<h1 id=\"galaxy-and-slurm\">Galaxy and Slurm</h1>\n\n<p>At the top of the stack sits Galaxy. Galaxy must now be configured to use the cluster we’ve just set up. The DRMAA Python documentation (and Galaxy’s own documentation) instruct that you should set the <code class=\"language-plaintext highlighter-rouge\">$DRMAA_LIBRARY_PATH</code> environment variable so that DRMAA Python can find <code class=\"language-plaintext highlighter-rouge\">libdrmaa.so</code> (aka slurm-drmaa). Because Galaxy runs under systemd, the environment that Galaxy starts under is controlled by the <code class=\"language-plaintext highlighter-rouge\">environment</code> option in systemd service unit that the ansible role manages. The galaxy task should thus be updated to refer to the path to slurm-drmaa, which is <code class=\"language-plaintext highlighter-rouge\">/usr/lib/slurm-drmaa/lib/libdrmaa.so.1</code>:</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Making Galaxy aware of DRMAA</hands-on-title>\n\n  <ol>\n    <li>\n      <p>We need to configure the Slurm job runner. First, we instruct Galaxy’s job handlers to load the Slurm job runner plugin, and set the Slurm job submission parameters. A job runner plugin definition must have a unique name as its key, and a <code class=\"language-plaintext highlighter-rouge\">load</code> attribute. Since we already have a good default destination that uses singularity, we will simply modify that to use the slurm runner. Galaxy will do the equivalent of submitting a job as <code class=\"language-plaintext highlighter-rouge\">sbatch /path/to/job_script.sh</code>. <!-- Note that we also need to set a default destination now that more than one destination is defined. --> In a job environment, the key is a unique identifier for that environment and the <code class=\"language-plaintext highlighter-rouge\">runner</code> attribute must match the key of a defined runner plugin:</p>\n\n      <div data-commit=\"Configure slurm destination\" class=\"language-diff highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gd\">--- a/group_vars/galaxyservers.yml\n</span><span class=\"gi\">+++ b/group_vars/galaxyservers.yml\n</span><span class=\"p\">@@ -18,14 +18,27 @@</span> galaxy_job_config:\n     local_runner:\n       load: galaxy.jobs.runners.local:LocalJobRunner\n       workers: 4\n<span class=\"gi\">+    slurm:\n+      load: galaxy.jobs.runners.slurm:SlurmJobRunner\n+      drmaa_library_path: /usr/lib/slurm-drmaa/lib/libdrmaa.so.1\n</span>   handling:\n     assign: ['db-skip-locked']\n   execution:\n<span class=\"gd\">-    default: singularity\n</span><span class=\"gi\">+    default: slurm\n</span>     environments:\n       local_env:\n         runner: local_runner\n         tmp_dir: true\n<span class=\"gi\">+      slurm:\n+        runner: slurm\n+        singularity_enabled: true\n+        env:\n+        - name: LC_ALL\n+          value: C\n+        - name: APPTAINER_CACHEDIR\n+          value: /tmp/singularity\n+        - name: APPTAINER_TMPDIR\n+          value: /tmp\n</span>       singularity:\n         runner: local_runner\n         singularity_enabled: true\n   \n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Run your Galaxy playbook</p>\n\n      <blockquote class=\"code-in\">\n        <code-in-title>Bash</code-in-title>\n        <div data-cmd=\"true\" class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>ansible-playbook galaxy.yml\n</code></pre></div>        </div>\n      </blockquote>\n    </li>\n    <li>\n      <p>Watch the logs to check that everything loads correctly</p>\n\n      <blockquote class=\"code-in\">\n        <code-in-title>Bash</code-in-title>\n        <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>journalctl -f -u 'galaxy-*'\n</code></pre></div>        </div>\n      </blockquote>\n\n      <blockquote class=\"code-out\">\n        <code-out-title></code-out-title>\n        <p>Your output may look slightly different:</p>\n        <div class=\"language-console highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"go\">Jan 12 15:46:01 gat-1.oz.training.galaxyproject.eu gunicorn[1821134]: galaxy.jobs.runners DEBUG 2021-01-12 15:46:01,109 [p:1821134,w:0,m:1] [MainThread] Starting 4 SlurmRunner workers\nJan 12 15:46:01 gat-1.oz.training.galaxyproject.eu gunicorn[1821134]: galaxy.jobs DEBUG 2021-01-12 15:46:01,110 [p:1821134,w:0,m:1] [MainThread] Loaded job runner 'galaxy.jobs.runners.slurm:SlurmJobRunner' as 'slurm'\n</span></code></pre></div>        </div>\n      </blockquote>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h2 id=\"running-a-job\">Running a Job</h2>\n\n<p>You should now be able to run a Galaxy job through Slurm. The simplest way to test is using the digest tool to calculate an md5sum.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Testing a Slurm Job</hands-on-title>\n\n  <ol>\n    <li>\n      <p>If you’re not still following the log files with <code class=\"language-plaintext highlighter-rouge\">journalctl</code>, do so now.</p>\n\n      <blockquote class=\"code-in\">\n        <code-in-title>Bash</code-in-title>\n        <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>journalctl -f -u 'galaxy-*'\n</code></pre></div>        </div>\n      </blockquote>\n    </li>\n    <li>Click the upload button at the top of the tool panel (on the left side of the Galaxy UI).</li>\n    <li>In the resulting modal dialog, click the “Paste/Fetch data” button.</li>\n    <li>Type some random characters into the text field that has just appeared.</li>\n    <li>Click “Start” and then “Close”</li>\n    <li>\n      <p>Open <a href=\"https://my.gat.galaxy.training/?path=/%3Ftool_id=secure_hash_message_digest\"><em>Secure Hash / Message Digest</em></a> tool</p>\n\n      <blockquote class=\"code-out\">\n        <code-out-title></code-out-title>\n        <p>Your output may look slightly different. In your <code class=\"language-plaintext highlighter-rouge\">journalctl</code> terminal window you should see the following messages:</p>\n\n        <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>galaxy.jobs.mapper DEBUG 2020-02-10 09:37:17,946 [p:9859,w:0,m:2] [JobHandlerQueue.monitor_thread] (1) Mapped job to destination id: slurm\ngalaxy.jobs.handler DEBUG 2020-02-10 09:37:17,976 [p:9859,w:0,m:2] [JobHandlerQueue.monitor_thread] (1) Dispatching to slurm runner\ngalaxy.jobs DEBUG 2020-02-10 09:37:18,016 [p:9859,w:0,m:2] [JobHandlerQueue.monitor_thread] (1) Persisting job destination (destination id: slurm)\ngalaxy.jobs DEBUG 2020-02-10 09:37:18,021 [p:9859,w:0,m:2] [JobHandlerQueue.monitor_thread] (1) Working directory for job is: /srv/galaxy/jobs/000/1\ngalaxy.jobs.runners DEBUG 2020-02-10 09:37:18,358 [p:9859,w:0,m:2] [JobHandlerQueue.monitor_thread] Job [1] queued (380.809 ms)\ngalaxy.jobs.handler INFO 2020-02-10 09:37:18,372 [p:9859,w:0,m:2] [JobHandlerQueue.monitor_thread] (1) Job dispatched\ngalaxy.jobs.command_factory INFO 2020-02-10 09:37:18,564 [p:9859,w:0,m:2] [SlurmRunner.work_thread-0] Built script [/srv/galaxy/jobs/000/1/tool_script.sh] for tool command [python '/srv/galaxy/server/tools/data_source/upload.py' /srv/galaxy/server /srv/galaxy/jobs/000/1/registry.xml /srv/galaxy/jobs/000/1/upload_params.json 1:/srv/galaxy/jobs/000/1/working/dataset_1_files:/data/000/dataset_1.dat]\n...\ngalaxy.jobs.runners.drmaa DEBUG 2020-02-10 09:37:18,645 [p:9859,w:0,m:2] [SlurmRunner.work_thread-0] (1) submitting file /srv/galaxy/jobs/000/1/galaxy_1.sh\ngalaxy.jobs.runners.drmaa INFO 2020-02-10 09:37:18,654 [p:9859,w:0,m:2] [SlurmRunner.work_thread-0] (1) queued as 4\ngalaxy.jobs DEBUG 2020-02-10 09:37:18,654 [p:9859,w:0,m:2] [SlurmRunner.work_thread-0] (1) Persisting job destination (destination id: slurm)\n</code></pre></div>        </div>\n\n        <p>At this point the job has been accepted by Slurm and is awaiting scheduling on a node. Once it’s been sent to a node and starts running, Galaxy logs this event:</p>\n\n        <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>galaxy.jobs.runners.drmaa DEBUG 2020-02-10 09:37:19,537 [p:9859,w:0,m:2] [SlurmRunner.monitor_thread] (1/4) state change: job is running\n</code></pre></div>        </div>\n\n        <p>Finally, when the job is complete, Galaxy performs its job finalization process:</p>\n\n        <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>galaxy.jobs.runners.drmaa DEBUG 2020-02-10 09:37:24,700 [p:9859,w:0,m:2] [SlurmRunner.monitor_thread] (1/4) state change: job finished normally\ngalaxy.model.metadata DEBUG 2020-02-10 09:37:24,788 [p:9859,w:0,m:2] [SlurmRunner.work_thread-1] loading metadata from file for: HistoryDatasetAssociation 1\ngalaxy.jobs INFO 2020-02-10 09:37:24,883 [p:9859,w:0,m:2] [SlurmRunner.work_thread-1] Collecting metrics for Job 1 in /srv/galaxy/jobs/000/1\ngalaxy.jobs DEBUG 2020-02-10 09:37:24,917 [p:9859,w:0,m:2] [SlurmRunner.work_thread-1] job_wrapper.finish for job 1 executed (154.514 ms)\n</code></pre></div>        </div>\n\n        <p>Note a few useful bits in the output:</p>\n        <ul>\n          <li><code class=\"language-plaintext highlighter-rouge\">Persisting job destination (destination id: slurm)</code>: Galaxy has selected the <code class=\"language-plaintext highlighter-rouge\">slurm</code> destination we defined</li>\n          <li><code class=\"language-plaintext highlighter-rouge\">submitting file /srv/galaxy/server/database/jobs/000/2/galaxy_2.sh</code>: This is the path to the script that is submitted to Slurm as it would be with <code class=\"language-plaintext highlighter-rouge\">sbatch</code></li>\n          <li><code class=\"language-plaintext highlighter-rouge\">(1) queued as 4</code>: Galaxy job id “1” is Slurm job id “4”, this can also be seen with the <code class=\"language-plaintext highlighter-rouge\">(1/4)</code> in other output lines.</li>\n          <li>If <code class=\"language-plaintext highlighter-rouge\">job &lt;id&gt; ended</code> is reached, the job should show as done in the UI</li>\n        </ul>\n      </blockquote>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"hidden\">\n  <div data-test=\"true\" class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>1-test-cat1.sh\n</code></pre></div>  </div>\n</blockquote>\n\n<p>Slurm allows us to query the exit state of jobs for a time period of the value of Slurm’s <code class=\"language-plaintext highlighter-rouge\">MinJobAge</code> option, which defaults to 300 (seconds, == 5 minutes):</p>\n\n<blockquote class=\"code-in\">\n  <code-in-title>Bash</code-in-title>\n  <p>Your job number is potentially different.</p>\n  <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>scontrol show job 4\n</code></pre></div>  </div>\n</blockquote>\n\n<blockquote class=\"code-out\">\n  <code-out-title></code-out-title>\n  <p>Your output may also look slightly different:</p>\n  <div class=\"language-console highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"go\">JobId=4 JobName=g1_upload1_admin_example_org\n   UserId=galaxy(999) GroupId=galaxy(999) MCS_label=N/A\n   Priority=4294901757 Nice=0 Account=(null) QOS=(null)\n   JobState=COMPLETED Reason=None Dependency=(null)\n   Requeue=1 Restarts=0 BatchFlag=1 Reboot=0 ExitCode=0:0\n   RunTime=00:00:05 TimeLimit=UNLIMITED TimeMin=N/A\n   SubmitTime=2020-02-10T09:37:18 EligibleTime=2020-02-10T09:37:18\n   StartTime=2020-02-10T09:37:19 EndTime=2020-02-10T09:37:24 Deadline=N/A\n   PreemptTime=None SuspendTime=None SecsPreSuspend=0\n   LastSchedEval=2020-02-10T09:37:19\n   Partition=debug AllocNode:Sid=gcc-1:9453\n   ReqNodeList=(null) ExcNodeList=(null)\n   NodeList=localhost\n   BatchHost=localhost\n   NumNodes=1 NumCPUs=1 NumTasks=1 CPUs/Task=1 ReqB:S:C:T=0:0:*:*\n   TRES=cpu=1,mem=1M,node=1,billing=1\n   Socks/Node=* NtasksPerN:B:S:C=0:0:*:* CoreSpec=*\n   MinCPUsNode=1 MinMemoryNode=1M MinTmpDiskNode=0\n   Features=(null) DelayBoot=00:00:00\n   Gres=(null) Reservation=(null)\n   OverSubscribe=OK Contiguous=0 Licenses=(null) Network=(null)\n   Command=(null)\n   WorkDir=/srv/galaxy/jobs/000/1\n   StdErr=/srv/galaxy/jobs/000/1/galaxy_1.e\n   StdIn=StdIn=/dev/null\n   StdOut=/srv/galaxy/jobs/000/1/galaxy_1.o\n   Power=\n</span></code></pre></div>  </div>\n</blockquote>\n\n<p>After the job has been purged from the active jobs database, a bit of information (but not as much as <code class=\"language-plaintext highlighter-rouge\">scontrol</code> provides) can be retrieved from Slurm’s logs. However, it’s a good idea to set up Slurm’s accounting database to keep old job information in a queryable format.</p>\n\n<blockquote class=\"tip\">\n  <tip-title>Which directories need to be shared on a cluster?</tip-title>\n  <p>The following directories need to be accesible via the same path on both the head node and compute nodes:</p>\n  <ul>\n    <li><code class=\"language-plaintext highlighter-rouge\">galaxy_shed_tools_dir</code></li>\n    <li><code class=\"language-plaintext highlighter-rouge\">galaxy_tool_dependency_dir</code></li>\n    <li><code class=\"language-plaintext highlighter-rouge\">galaxy_file_path</code></li>\n    <li><code class=\"language-plaintext highlighter-rouge\">galaxy_job_working_directory</code></li>\n    <li><code class=\"language-plaintext highlighter-rouge\">galaxy_server_dir</code></li>\n    <li><code class=\"language-plaintext highlighter-rouge\">galaxy_venv_dir</code></li>\n  </ul>\n</blockquote>\n\n<h1 id=\"recording-job-metrics\">Recording Job Metrics</h1>\n\n<p>Job metrics record properties of the jobs that are executed, information that can help you plan for trainings or plan capacity for further expansions of your Galaxy server. These properties include details such as the number of slots (cores) assigned to a job, the amount of memory available, details about the node on which the job executed, environment variables that were set at execution time, and more.</p>\n\n<p>Galaxy collects and records very few job metrics by default, enabling more metrics plugins is recommended for any cluster-enabled Galaxy deployment. The metrics are stored in the Galaxy database, which can be queried externally to generate reports and debug job problems.</p>\n\n<p>Some work has been done to try to analyse job runtime metrics to optimise cluster allocation based on job inputs, and enhance job submission (<span class=\"citation\"><a href=\"#Tyryshkina_2019\">Tyryshkina <i>et al.</i> 2019</a></span>). More work will be done in this area.</p>\n\n<blockquote class=\"comment\">\n  <comment-title>Note</comment-title>\n\n  <p>Job metrics are only visible to Galaxy <em>admin users</em>, unless you set <code class=\"language-plaintext highlighter-rouge\">expose_potentially_sensitive_job_metrics: true</code>, like UseGalaxy.eu does. EU’s intention with this is to empower users and make everything as transparent as possible.</p>\n\n  <p>This is the only option controlling which metrics general users see. Admins see all metrics collected, and by default general users see none.\nHowever most of the metrics exposed by this setting are quite safe (e.g. cgroups information on resource consumption, walltime, etc.)</p>\n\n</blockquote>\n\n<h2 id=\"setting-up-galaxy\">Setting up Galaxy</h2>\n\n<p>By default, Galaxy enables the <code class=\"language-plaintext highlighter-rouge\">core</code> metrics:</p>\n\n<p><a href=\"../../images/job-metrics-basic.png\" rel=\"noopener noreferrer\"><img src=\"../../images/job-metrics-basic.png\" alt=\"screenshot of galaxy metrics. \" width=\"1140\" height=\"165\" loading=\"lazy\" /></a></p>\n\n<p>These include very basic submission parameters. We want more information!</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Setting up the job metrics plugin configuration</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Edit the <strong>global</strong> (for all hosts) group variables file, <code class=\"language-plaintext highlighter-rouge\">group_vars/all.yml</code>:</p>\n\n      <blockquote class=\"details\">\n        <details-title>Why are we editing \"all\" instead of \"galaxyservers\" vars?</details-title>\n        <p>Both Galaxy and Pulsar use job metrics plugins, and when we configure Pulsar later, we will want it to have the same metrics plugin configuration as Galaxy. Putting this variable in <code class=\"language-plaintext highlighter-rouge\">all.yml</code> will allow us to refer to it later when setting the corresponding variable for Pulsar.</p>\n      </blockquote>\n\n      <p>The variable we’ll set is named <code class=\"language-plaintext highlighter-rouge\">galaxy_job_metrics_plugins</code>:</p>\n\n      <div data-commit=\"Configure job metrics plugins\" class=\"language-diff highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gd\">--- a/group_vars/all.yml\n</span><span class=\"gi\">+++ b/group_vars/all.yml\n</span><span class=\"p\">@@ -10,3 +10,13 @@</span> galaxy_db_name: galaxy\n cvmfs_role: client\n galaxy_cvmfs_repos_enabled: config-repo\n cvmfs_quota_limit: 500\n<span class=\"gi\">+\n+# Galaxy vars that will be reused by Pulsar\n+galaxy_job_metrics_plugins:\n+  - type: core\n+  - type: cpuinfo\n+  - type: meminfo\n+  - type: uname\n+  - type: env\n+  - type: cgroup\n+  - type: hostname\n</span>   \n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Run your Galaxy playbook</p>\n\n      <blockquote class=\"code-in\">\n        <code-in-title>Bash</code-in-title>\n        <div data-cmd=\"true\" class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>ansible-playbook galaxy.yml\n</code></pre></div>        </div>\n      </blockquote>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>Currently, the job metrics plugin configuration is stored in a separate configuration file from Galaxy’s main configuration file (<code class=\"language-plaintext highlighter-rouge\">galaxy.yml</code>). By setting <code class=\"language-plaintext highlighter-rouge\">galaxy_job_metrics_plugins</code>, we instructed the <code class=\"language-plaintext highlighter-rouge\">galaxyproject.galaxy</code> role to create this file, and update the option (<code class=\"language-plaintext highlighter-rouge\">job_metrics_config_file</code>) in <code class=\"language-plaintext highlighter-rouge\">galaxy.yml</code> that sets the path to this file. You can inspect the contents of the new config file on your Galaxy server:</p>\n\n<blockquote class=\"code-in\">\n  <code-in-title>Bash</code-in-title>\n  <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nb\">cat</span> /srv/galaxy/config/job_metrics_conf.yml\n</code></pre></div>  </div>\n</blockquote>\n\n<blockquote class=\"code-out code-max-300\">\n  <code-out-title>Bash</code-out-title>\n  <div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nn\">---</span>\n<span class=\"c1\">##</span>\n<span class=\"c1\">## This file is managed by Ansible.  ALL CHANGES WILL BE OVERWRITTEN.</span>\n<span class=\"c1\">##</span>\n<span class=\"pi\">-</span>   <span class=\"na\">type</span><span class=\"pi\">:</span> <span class=\"s\">core</span>\n<span class=\"pi\">-</span>   <span class=\"na\">type</span><span class=\"pi\">:</span> <span class=\"s\">cpuinfo</span>\n<span class=\"pi\">-</span>   <span class=\"na\">type</span><span class=\"pi\">:</span> <span class=\"s\">meminfo</span>\n<span class=\"pi\">-</span>   <span class=\"na\">type</span><span class=\"pi\">:</span> <span class=\"s\">uname</span>\n<span class=\"pi\">-</span>   <span class=\"na\">type</span><span class=\"pi\">:</span> <span class=\"s\">env</span>\n<span class=\"pi\">-</span>   <span class=\"na\">type</span><span class=\"pi\">:</span> <span class=\"s\">cgroup</span>\n<span class=\"pi\">-</span>   <span class=\"na\">type</span><span class=\"pi\">:</span> <span class=\"s\">hostname</span>\n</code></pre></div>  </div>\n</blockquote>\n\n<h2 id=\"generating-metrics\">Generating Metrics</h2>\n\n<p>With this, the job metrics collection and recording should be set up. Now when you run a job, you will see many more metrics:</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Generate some metrics</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Run a job (any tool is fine, even upload)</p>\n    </li>\n    <li>\n      <p>View the information of the output dataset (<i class=\"fas fa-info-circle\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-info</span>)</p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p><a href=\"../../images/job-metrics-advanced.png\" rel=\"noopener noreferrer\"><img src=\"../../images/job-metrics-advanced.png\" alt=\"advanced metrics. \" width=\"1135\" height=\"990\" loading=\"lazy\" /></a></p>\n\n<h2 id=\"what-should-i-collect\">What should I collect?</h2>\n\n<p>There is not a good rule we can tell you, just choose what you think is useful or will be. Numeric parameters are “cheaper” than the text parameters (like uname to store), eventually you may find yourself wanting to remove old job metrics if you decide to collect the environment variables or similar.</p>\n\n<h2 id=\"accessing-the-data\">Accessing the data</h2>\n\n<p>You can access the data via BioBlend (<a href=\"https://bioblend.readthedocs.io/en/latest/api_docs/galaxy/all.html#bioblend.galaxy.jobs.JobsClient.get_metrics\"><code class=\"language-plaintext highlighter-rouge\">JobsClient.get_metrics</code></a>), or via SQL with <a href=\"https://galaxyproject.github.io/gxadmin/#/README.query?id=query-tool-metrics\"><code class=\"language-plaintext highlighter-rouge\">gxadmin</code></a>.</p>\n\n<!--SNIPPET-->\n<blockquote class=\"hands_on\">   <div class=\"box-title hands_on-title\" id=\"hands-on-time-to-git-commit\"><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i> Hands-on: Time to git commit</div>   <p>It’s time to commit your work! Check the status with</p>   <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>git status<br /></code></pre></div></div>   <p>Add your changed files with</p>   <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>git add ... # any files you see that are changed<br /></code></pre></div></div>   <p>And then commit it!</p>   <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>git commit -m 'Finished Connecting Galaxy to a compute cluster'<br /></code></pre></div></div> </blockquote>\n<p><!--END_SNIPPET--></p>\n\n<!--SNIPPET-->\n<blockquote class=\"comment\">   <div class=\"box-title comment-title\" id=\"comment-got-lost-along-the-way\"><i class=\"far fa-comment-dots\" aria-hidden=\"true\"></i> Comment: Got lost along the way?</div>   <p>If you missed any steps, you can compare against the <a href=\"https://github.com/hexylena/git-gat/tree/step-9\">reference files</a>, or see what changed since <a href=\"https://github.com/hexylena/git-gat/compare/step-8...step-9#files_bucket\">the previous tutorial</a>.</p>   <p>If you’re using <code class=\"language-plaintext highlighter-rouge\">git</code> to track your progress, remember to add your changes and commit with a good commit message!</p> </blockquote>\n<p><!--END_SNIPPET--></p>\n\n<h2 id=\"further-reading\">Further Reading</h2>\n\n<ul>\n  <li><a href=\"https://docs.galaxyproject.org/en/latest/admin/cluster.html\">Galaxy’s cluster documentation</a> describes in detail alternative cluster configurations.</li>\n  <li><a href=\"https://docs.galaxyproject.org/en/latest/admin/jobs.html\">The job_conf documentation</a> fully describes the syntax of the job configuration file.</li>\n  <li>The <a href=\"https://www.drmaa.org/\">Distributed Resource Management Application API (DRMAA)</a> page contains the DRMAA specification as well as documentation for various implementations. It also includes a list of DRMs supporting DRMAA.</li>\n  <li>The <a href=\"http://slurm.schedmd.com/\">Slurm documentation</a> is extensive and covers all the features and myriad of ways in which you can configure slurm.</li>\n  <li><a href=\"http://apps.man.poznan.pl/trac/slurm-drmaa\">PSNC slurm-drmaa</a>’s page includes documentation and the SVN repository, which has a few minor fixes since the last released version. PSNC also wrote the initial implementations of the DRMAA libraries for PBSPro and LSF, so all three are similar.</li>\n  <li><a href=\"http://github.com/natefoo/slurm-drmaa\">Our own fork of slurm-drmaa</a> includes support for Slurms <code class=\"language-plaintext highlighter-rouge\">-M</code>/<code class=\"language-plaintext highlighter-rouge\">--clusters</code> multi-cluster functionality and newer versions of Slurm.</li>\n  <li><a href=\"http://slurm.schedmd.com/accounting.html\">Slurm Accounting documentation</a> explains how to set up SlurmDBD.</li>\n</ul>\n\n<!--SNIPPET-->\n<blockquote class=\"comment\">   <div class=\"box-title comment-title\" id=\"comment-galaxy-admin-training-path-1\"><i class=\"far fa-comment-dots\" aria-hidden=\"true\"></i> Comment: Galaxy Admin Training Path</div>   <p>The yearly Galaxy Admin Training follows a specific ordering of tutorials. Use this timeline to help keep track of where you are in Galaxy Admin Training.</p>   <ol id=\"git-gat-timeline\">                    <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/ansible-galaxy/tutorial.html\">             <div>Step 1</div>             <div>ansible-galaxy</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/backup-cleanup/tutorial.html\">             <div>Step 2</div>             <div>backup-cleanup</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/customization/tutorial.html\">             <div>Step 3</div>             <div>customization</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/tus/tutorial.html\">             <div>Step 4</div>             <div>tus</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/cvmfs/tutorial.html\">             <div>Step 5</div>             <div>cvmfs</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/apptainer/tutorial.html\">             <div>Step 6</div>             <div>apptainer</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/tool-management/tutorial.html\">             <div>Step 7</div>             <div>tool-management</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/reference-genomes/tutorial.html\">             <div>Step 8</div>             <div>reference-genomes</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/data-library/tutorial.html\">             <div>Step 9</div>             <div>data-library</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/dev/tutorials/bioblend-api/tutorial.html\">             <div>Step 10</div>             <div>dev/bioblend-api</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"active\">         <a href=\"/training-material/topics/admin/tutorials/connect-to-compute-cluster/tutorial.html\">             <div>Step 11</div>             <div>connect-to-compute-cluster</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"\">         <a href=\"/training-material/topics/admin/tutorials/job-destinations/tutorial.html\">             <div>Step 12</div>             <div>job-destinations</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"\">         <a href=\"/training-material/topics/admin/tutorials/pulsar/tutorial.html\">             <div>Step 13</div>             <div>pulsar</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"\">         <a href=\"/training-material/topics/admin/tutorials/celery/tutorial.html\">             <div>Step 14</div>             <div>celery</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"\">         <a href=\"/training-material/topics/admin/tutorials/gxadmin/tutorial.html\">             <div>Step 15</div>             <div>gxadmin</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"\">         <a href=\"/training-material/topics/admin/tutorials/reports/tutorial.html\">             <div>Step 16</div>             <div>reports</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"\">         <a href=\"/training-material/topics/admin/tutorials/monitoring/tutorial.html\">             <div>Step 17</div>             <div>monitoring</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"\">         <a href=\"/training-material/topics/admin/tutorials/tiaas/tutorial.html\">             <div>Step 18</div>             <div>tiaas</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"\">         <a href=\"/training-material/topics/admin/tutorials/sentry/tutorial.html\">             <div>Step 19</div>             <div>sentry</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"\">         <a href=\"/training-material/topics/admin/tutorials/ftp/tutorial.html\">             <div>Step 20</div>             <div>ftp</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"\">         <a href=\"/training-material/topics/admin/tutorials/beacon/tutorial.html\">             <div>Step 21</div>             <div>beacon</div>         </a>     </li>           </ol> </blockquote>\n<p><!--END_SNIPPET--></p>\n"],"ref_slides":["# Galaxy Job Configuration\n\n- Configured in `job_config` in `galaxy.yml`, `group_vars/galaxyservers.yml`, and `files/galaxy/config/tpv*.yml`\n- Major components:\n  - **Runners**: distributed resource manager (DRM) modules to load\n  - **Handlers**: dedicated Galaxy server processes managing the lifecycle of jobs\n  - **Environments** (aka \"destinations\"): where to send jobs, and what parameters to run those jobs with\n  - **Tool** to destination/handler mappings\n  - **Resource** selection mappings: give users job execution options on the tool form\n  - **Limits**: job runtime limits, e.g. the max number of concurrent jobs\n\n???\n\n- The job_conf file is a very powerful galaxy configuration piece critical to smooth cluster operation.\n- Written in YML, it connects your server with the available cluster resources.\n- You can configure it in myriad ways.\n- Study the advanced sample provided with codebase once you get a basic understanding.\n- There are several major components of the job conf file.\n- Plugins, handlers, environments (destinations), tools, resources, and limits.\n- We'll go into detail on each of these in the tutorial.\n\n---\n\n# Why cluster?\n\nRunning jobs on the Galaxy server negatively impacts Galaxy UI performance\n\nEven adding one other host helps\n\nCan restart Galaxy without interrupting jobs\n\n???\n\n- Galaxy itself is not resource hungry, but the jobs often are.\n- Offloading the jobs to different machines is a more sustainable and reliable setup.\n- This can prevent user jobs from making Galaxy unresponsive.\n\n---\n\n# Runners\n\nCorrespond to job runner plugins in [lib/galaxy/jobs/runners](https://github.com/galaxyproject/galaxy/tree/dev/lib/galaxy/jobs/runners)\n\n.left[Plugins for:]\n- local\n- Slurm (DRMAA subclass)\n- DRMAA (Distributed Resource Management Application API)\n  - SGE\n  - PBS Pro\n  - LSF\n  - Torque\n- HTCondor\n- Torque: Using the `pbs_python` library\n- Pulsar: Galaxy's own remote job management system\n- Command Line Interface (CLI) via SSH\n- Kubernetes\n- Go-Docker\n- Chronos\n\n???\n\n- Galaxy supports plugins for various job runners covering most of the popular DRMs.\n- The Galaxy community also maintains its own job management system called Pulsar.\n- If the scheduler you use is missing, talk to us!\n\n---\n\n# Cluster library stack (DRMAA)\n\n![Cluster library stack](../../images/cluster_lib_stack.png)\n\n???\n\n- The cluster library stack we use in this tutorial will use DRMAA.\n- DRMAA is an interface that many distributed resource managers provide.\n- Galaxy can use DRMAA to interact with these in an agnostic manner.\n- However, there are more underlying technologies that you are going to depend on.\n- You don't need to have an in-depth understanding to run cluster deployment correctly.\n\n---\n\n# Handlers\n\nControl how jobs are assigned to handlers (use `db-skip-locked`)\n\nCan statically define handler configuration (uncommon)\n\n???\n\n- Handlers are the Galaxy processes which interact with the cluster.\n- You can define dedicated handlers for different types of jobs, or to interact with different clusters.\n- Additionally, handlers definition in the job configuration controls how jobs are assigned to individual processes.\n- There are many options for the assignment process, all are discussed in the advanced sample job configuration.\n- db-skip-locked is the best choice for most cases, it enables handlers to grab multiple jobs to work on at once.\n\n---\n\n# Environments\n\nFormerly \"Destinations\"\n\nDefine *how* jobs should be run\n\n- Which plugin? (Slurm, Condor, Pulsar, etc?)\n- In a Docker container? Which one?\n- **DRM params** (queue, cores, memory, walltime)?\n- Environment (variables e.g. `$PATH`, source an env file, run a command)?\n\n???\n\n- The environments section of the job configuration is a map that defines which jobs go where.\n- Jobs from any destination, can be processed by any plugin.\n- Every job will find a path through this configuration and eventually get dispatched to the matching runner.\n- These destinations can specify things like environment variables or resource requirements.\n\n---\n\n# The default job configuration\n\n```yml\nrunners:\n  local:\n    load: galaxy.jobs.runners.local:LocalJobRunner\n    workers: 4\n\nexecution:\n  default: local\n  environments:\n    local:\n      runner: local\n```\n\n???\n\n- This is the default job configuration.\n- It uses a local runner with 4 workers, or processes to process jobs.\n- As a result if you restart Galaxy, jobs will be lost.\n\n---\n\n# Job Config - Tags\n\nBoth environments and handlers can be grouped by **tags**\n\n- Allows random selection from multiple resources\n- Allows concurrency limits at the environment group level\n\n???\n\n- Tags can be applied to both environments and handlers.\n- This permits selecting randomly amongst the handlers or environments.\n- Tags can help the load distribution.\n- Tags can also be used for concurrency limits that apply across multiple environments.\n\n---\n\n# Job Environment\n\n`env` key in environments: configure the job execution environment\n\n| syntax | function |\n| ---- | ---- |\n| `- {name: NAME, value: VALUE}` | Set `$NAME` to `VALUE` |\n| `- {file: /path/to/file}` | Source shell file at `/path/to/file` |\n| `- {execute: CMD}` | Execute `CMD` |\n\nSource and command execution will be handled on the remote destination, don't need to work on the Galaxy server\n\n???\n\n- You can specify environment variables on the destination.\n- Galaxy will ensure these are executed in the same environment and ahead of the job.\n\n---\n\n# Limits\n\nAvailable limits\n\n- Walltime (if not available with your DRM)\n- Output size (if *any* tool output grows larger than this limit)\n- Concurrency: Number of \"active\" (queued or running) jobs\n\n???\n\n- Configuration of job limits is best acommplished using both the DRM provided limits and the ones from Galaxy.\n- Walltime is best set in your DRM, while output size is only possible through Galaxy.\n- We recommend you set these at the DRM level which is better equipped to terminate misbehaving jobs.\n- The most important limit however is usually concurrency.\n\n---\n\n# Concurrency Limits\n\nAvailable limits\n\n- Number of active jobs per registered user\n- Number of active jobs per unregistered user\n- Number of active jobs per registered user in a specified environment or environment tag\n- Number of total active jobs in a specified environment or environment tag\n\n???\n\n- Using concurrency limits lets you ensure quality of service for everyone.\n- By limiting jobs per user, you can prevent a single user from overwhelming the server, and ensure everyone can run jobs.\n- Additionally with concurrency limits you can balance your instance between internal and external users.\n\n---\n\n# Shared Filesystem\n\nMost job plugins require a **shared filesystem** between the Galaxy server and compute.\n\nThe exception is **Pulsar**. More on this in *Running Jobs on Remote Resources with Pulsar*.\n\n???\n\n- Most DRMs require a shared filesystem to ensure datasets are available to the jobs.\n- Galaxy's Pulsar does not, and can be used in situations where no shared filesystem is available.\n\n---\n\n# Shared Filesystem\n\nOur simple example works because of two important principles:\n\n1. Some things are located *at the same path* on Galaxy server and node(s)\n  - Galaxy application (`/srv/galaxy/server`)\n  - Tool dependencies\n2. Some things *are the same* on Galaxy server and node(s)\n  - Job working directory\n  - Input and output datasets\n\nThe first can be worked around with symlinks, copies, or Pulsar embedded\n\nThe second can be worked around with Pulsar REST/MQ (with a performance/throughput penalty)\n\n???\n\n- For the DRMs which require a shared filesystem there are additional requirements.\n- First, Galaxy and the tool dependencies are at the same location on the head and compute nodes.\n- Job directories must be in a shared location on both head and compute nodes.\n- This is mentioned in more detail in the tutorial.\n\n---\n\n# Multiprocessing\n\nSome tools can greatly improve performance by using multiple cores\n\nGalaxy automatically sets `$GALAXY_SLOTS` to the CPU/core count you specify when submitting, for example, 4:\n- Slurm: `sbatch --ntasks=4`\n- SGE: `qsub -pe threads 4`\n- Torque/PBS Pro: `qsub -l nodes=1:ppn=4`\n- Condor: `request_cpus: 4`\n\nTool configs: Consume `\\${GALAXY_SLOTS:-4}`\n\n???\n\n- For multiprocessing to be available both the tool and the Galaxy tool wrapper need to support it.\n- You need to understand what tools are being run and set destinations for them with the appropriate specification.\n- You'll need to check for presence of GALAXY_SLOTS in the tool wrappers and tool macros to see if the tool supports multiple threads.\n\n---\n\n# Memory requirements\n\nFor **Slurm and Gridengine only**, Galaxy will set `$GALAXY_MEMORY_MB` and `$GALAXY_MEMORY_MB_PER_SLOT` as integers.\n\n**Other DRMs:** Please PR the [appropriate code](https://github.com/galaxyproject/galaxy/blob/dev/lib/galaxy/jobs/runners/util/job_script/MEMORY_STATEMENT.sh).\n\nFor Java tools, be sure to set `-Xmx`, e.g.:\n\n```yml\n    java_cluster:\n      runner: drmaa\n      env:\n        - name: '_JAVA_OPTIONS'\n          value: '-Xmx6G'\n```\n\n???\n\n- Memory requirements can be set as well.\n- For some tools, you'll need to additionally provide environment variables to specify memory limits.\n- This is different per DRM.\n\n---\n\n# Run jobs as the \"real\" user\n\nIf your Galaxy users == System users:\n- Submit jobs to cluster as the actual user\n- Configurable callout scripts before/after job to change ownership\n- Probably requires limited sudo for Galaxy user\n\nSee: [Cluster documentation](https://wiki.galaxyproject.org/Admin/Config/Performance/Cluster)\n\n???\n\n- If you galaxy users map to the system users you can have Galaxy run the jobs with the account of those users.\n- This allows proper resource accounting, but comes at some additional configuration complexities.\n\n---\n\n## Job Config - Mapping Tools to Environments\n\nProblem: Tool A uses single core, Tool B uses multiple\n- Both submit to the same cluster\n- Need different submit parameters (`--ntasks=1` vs. `--ntasks=4` in Slurm)\n\n???\n\n- Mapping tools to environments is the heart of the job configuration.\n- This permits you to define which tools go to which destinations, and what resources they need.\n\n---\n\n## Job Config - Mapping Tools to Environments\n\nSolution:\n\n```yml\nexecution:\n  default: singlecore_slurm\n  environments:\n    singlecore_slurm:\n      runner: slurm\n\n    multicore_slurm:\n      runner: slurm\n      native_specification: '--ntasks=4'\ntools:\n- id: hisat2\n  handler: multicore_slurm\n```\n\n???\n\n- Here is an example mapping the hisat2 tool to an environment named multicore_slurm.\n- The multicore environment specifies that 4 cores should be allocated for each job, and uses the slurm plugin.\n\n---\n\n# The Dynamic Job Runner\n\nFor when basic tool-to-environment mapping isn't enough\n\n???\n\n- However this static mapping sometimes isn't sufficient.\n- Here a dynamic mapping can be used instead.\n- Galaxy has several different methods for accomplishing this.\n\n---\n\n## The Dynamic Job Runner\n\nA special built-in job runner plugin\n\nMap jobs to destinations on more than just tool IDs\n\n.left[Two types:]\n- Total Perspective Vortex (TPV)\n- Arbitrary Python function\n\nSee: [Dynamic Destination Mapping](https://docs.galaxyproject.org/en/master/admin/jobs.html#dynamic-destination-mapping)\n\n???\n\n- There are two built in ways to do this: TPV and custom Python functions.\n\n---\n\n## Total Perspective Vortex (TPV)\n\nPowerful, fully dynamic tool-to-environment mapping based on tool, user, resource requirements, tags, and more.\n\nDiscussed in detail in [its own tutorial](https://training.galaxyproject.org/training-material/topics/admin/tutorials/job-destinations/tutorial.html).\n\nSee also: [TPV Documentation](https://total-perspective-vortex.readthedocs.io/).\n\n---\n\n## Arbitrary Python Functions\n\n.left[Programmable mappings:]\n- Written as Python function in `lib/galaxy/jobs/rules/`\n- Map based on:\n  - Tool ID\n  - User email or username\n  - Inputs\n  - Tool Parameters\n  - Defined \"helper\" functions based on DB contents\n  - Anything else discoverable\n    - Cluster queue depth?\n    - ...?\n- Can dynamically modify destinations in job config (i.e. `sbatch` params)\n\n???\n\n- These can use any arbitrary information you want.\n- They have full access to submitter information, job parameters, and any other resource you might want.\n- They can dynamically modify destination parameters during runtime.\n- If you need flexibility, these are what you want.\n"],"video_library":{"tutorial":null,"slides":null,"demo":null,"both":null,"session":null},"hands_on":true,"slides":true,"mod_date":"2024-01-31 16:33:56 +0000","pub_date":"2018-01-07 13:46:01 +0000","version":139,"api":"https://training.galaxyproject.org/training-material/api/topics/admin/tutorials/connect-to-compute-cluster/tutorial.json","tools":[],"supported_servers":[],"topic_name_human":"Galaxy Server administration","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools: []\n","tours":false,"video":true,"translations":{"tutorial":[],"slides":[],"video":true},"license":"CC-BY-4.0","type":"tutorial","logo":"assets/images/gat.png","contributions":{"authorship":["natefoo","bgruening","nsoranzo","hexylena"]}}