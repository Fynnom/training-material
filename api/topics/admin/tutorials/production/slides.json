{"layout":"tutorial_slides","logo":"assets/images/gat.png","video":true,"title":"Gearing towards production","contributors":["natefoo","blankenberg","abdulrahmanazab","martenson"],"subtopic":"maintenance","js_requirements":{"mathjax":null,"mermaid":false},"short_id":"S00019","url":"/topics/admin/tutorials/production/slides.html","topic_name":"admin","tutorial_name":"production","dir":"topics/admin/tutorials/production","symlink":null,"id":"admin/production","ref_tutorials":[],"ref_slides":["# Production server\n\n* Used by multiple people\n* Designed to be resilient, scalable\n* Designed to be easily managed\n\n???\n\n- A production server is a server ready for any number of users.\n- It is designed to be scalable, easy to manage, and resilient in the face of many users.\n- Running a production server is not difficult, thanks to ansible.\n\n---\n\n# Configuration Options\n\n???\n\n- We will now cover many of the configuration options which are necessary for production.\n\n---\nclass: reduce90\n\n# Configuring uWSGI\n\nImportant options in the `uwsgi` section of `galaxy.yml`\n\noption | description\n---- | ----\n`http` | port and IP on which to listen for HTTP requests, `:8080` for port `8080` on all network interfaces. **For a production server, you should use `socket:` and a proxy server**.\n`socket` | port and IP on which to listen for uWSGI protocol requests, `127.0.0.1:8000` for port `8000` on localhost.\n`processes` | number of uWSGI *web workers*.\n`threads` | number of threads for each web worker.\n`offload-threads` | number of threads for internal routing requests, 1-2 is sufficient.\n`master` | use uWSGI master process manager, defaults to `false` for dev compatibility but should be `true` in production.\n`mule-reload-mercy` | time to gracefully wait for mule shutdown, set > `monitor_thread_join_timeout` galaxy option.\n\n???\n\n- Production servers should use socket instead of http in the uwsgi listen section.\n- This is because socket means using the uwsgi protocol which is more efficient.\n- Processes and threads can be set, but the defaults are usually good.\n\n---\n# Securing your Object IDs\n\n* User facing object IDs\n  * Galaxy uses the Blowfish cipher to obscure integer IDs.\n  * Prevents guessing the hashes for various Galaxy objects.\n  * `id_secret` is used as the Blowfish key.\n  * Changing the default `id_secret` is a must.\n  * Changing `id_secret` will change & invalidate existing URLs (e.g. datasets, histories, workflows, etc).\n* Setting `new_user_dataset_access_role_default_private` ensures that even guessable IDs are still private\n\n???\n\n- An extremely important setting to change is the id secret.\n- Galaxy generates a reversible hash for every numeric ID.\n- You must change this, or an attacker can guess IDs and see potentially private data.\n- There is an additional variable, new user dataset access role default private, which can be set.\n- Then, even if IDs are guessed, the data remains private.\n\n\n---\n# Customizing your \"Brand\"\n\noption | description\n---- | ----\n`brand` | appends \"/{brand}\" to the \"Galaxy\" text in the masthead.\n`logo_url` | URL linked by the \"Galaxy/brand\" text.\n`helpsite_url` | URL linked by the \"Galaxy Help\" link in the \"Help\" menu.\n`wiki_url` | URL linked by the \"Wiki\" link in the \"Help\" menu.\n`support_url` | URL linked by the \"Support\" link in the \"Help\" menu.\n`citation_url` | URL linked by the \"How to Cite Galaxy\" link in the \"Help\" menu.\n`search_url` | URL linked by the \"Search\" link in the \"Help\" menu.\n`mailing_lists_url` | URL linked by the \"Mailing Lists\" link in the \"Help\" menu.\n`screencasts_url` | URL linked by the \"Videos\" link in the \"Help\" menu.\n`terms_url` | URL linked by the \"Terms and Conditions\" link on the registration form.\n`qa_url` | URL linked by the \"Galaxy Q&A\" link in the \"Help\" menu.\n\n???\n\n- Brand can be set to denote the identity of your server.\n- Many URLs which appear in the top menu can be modified.\n\n---\n# Adding a Notice Banner\n\noption | sample value\n---- | ----\n`message_box_visible` | `true`\n`message_box_content` | `Downtime scheduled Sunday at Noon to one.`\n`message_box_class` | `warning` (also: `error`, `info`)\n\n???\n\n- Sometimes you wish to broadcast a message to your users, for example when you plan downtime.\n- The message box allows doing this.\n\n---\n# Update the welcome page\n\nWelcome page is `$GALAXY_ROOT/static/welcome.html` and is the first thing that\nusers see. It is a good idea to extend it with things like:\n- Server or Group News\n- Downtimes/Maintenance periods\n- New tools\n- Publications relating to your Galaxy\n- Current server usage / jobs running (e.g. https://usegalaxy.eu/)\n\n.left[No restarting is necessary.]\n\n???\n\n- Updating the welcome page is important as all users see this page when accessing the server.\n- This can be a great way to communicate lower-priority information to users.\n- The European Galaxy server uses it to show usage graphs which users like.\n\n---\n# Client Browser Security\n\noption | description\n---- | ----\n`sanitize_all_html` | by default, Galaxy sanitizes all \"text/html\" tool outputs. Setting to false potentially exposes users to XSS attacks.\n`sanitize_whitelist_file` | manually override html sanitization for listed tools. Can set in admin interface.\n`serve_xss_vulnerable_mimetypes` | certain filetypes (e.g. SVG) can contain JS that is vulnerable to XSS (Cross-site scripting) and are served as \"plain/text\" by default.\n`allowed_origin_hostnames` | Returns Access-Control-Allow-Origin response header that matches the Origin header of the request.\n\n\n???\n\n- Some tools produce HTML or SVG outputs.\n- By default, galaxy sanitizes these files, as malicious ones could be used to attack users.\n- If there are some tools you trust like fastqc, you might want to whitelist them.\n\n---\n# Debugging\n\nThese should never be enabled on a public site.\n\noption | description\n---- | ----\n`debug` | enable debug options, preserves cluster job data on disk (but use `cleanup_job` for this).\n`use_profile` | Python profiler on requests.\n`use_printdebug` | Anything \"print\"ed within a Galaxy Web thread is exposed to user.\n`use_interactive` | Enable live debugging in your browser.\n\n???\n\n- There are debugging options if you need, but none of these should be enabled in production.\n\n\n---\n# Configuring FTP\n\noption | description\n---- | ----\n`ftp_upload_dir` | Directory containing subdirectories matching users' identifier (defaults to e-mail).\n`ftp_upload_site` | Hostname of your FTP server provided to users in the help text. Must set to enable FTP import.\n`ftp_upload_dir_identifier` | User attribute for subdirectory naming. 'email' (${user.email}) is default, but 'id' or 'username' are also common.\n`ftp_upload_dir_template` | Python string template used to determine a users FTP upload directory (${ftp_upload_dir}/${ftp_upload_dir_identifier}).\n`ftp_upload_purge` | Delete files after FTP import (true).\n\n???\n\n- A common request is how should users upload large datasets.\n- If you setup an FTP server, this can be integrated with Galaxy.\n- Users can see their own FTP upload directory in Galaxy, if you configure it.\n\n---\nclass: reduce90\n\n# Configuring Data Library Path Uploads\n\nAdmin options\n\noption | description\n---- | ----\n`library_import_dir` | Browse and upload files from configured directory.\n`allow_path_paste` | Allow admins to paste any path to upload (e.g. `file://`), applies also to the general 'upload tool'.\n\nUser options\n\noption | description\n---- | ----\n`user_library_import_dir` | Root directory containing sub-directories named by user emails. A nifty setup is that the value is the same as for `ftp_upload_dir` allowing users to upload files via FTP and then import them either in history or data library.\n`user_library_import_dir_auto_creation` | Create user's folder upon login.\n`user_library_import_symlink_whitelist` | Directories that users are allowed to symlink to.\n`user_library_import_check_permissions` | If Galaxy usernames match system usernames enable this to use UNIX permissions.\n\n???\n\n- Library management is a common problem for servers.\n- How to manage the data and who can manage the data.\n- There are several options in galaxy yml to allow users to manage libraries.\n\n---\nclass: reduce90\n\n# Configuring SMTP\n\nSMTP server\n\noption | description\n---- | ----\n`smtp_server` | host:port of SMTP server to use. Uses STARTTLS, but will fallback.\n`smtp_username` | Username for SMTP server.\n`smtp_password` | Password for SMTP server. STARTTLS recommended on SMTP server.\n`smtp_ssl` | If SMTP server requires SSL from connection start, set to true.\n\nAddresses\n\noption | description\n---- | ----\n`error_email_to` | Address to send user error reports to.\n`email_from` | Return address used in automatic user notifications. (`<galaxy-no-reply@HOSTNAME>`)\n`mailing_join_addr` | Mailing list to subscribe users to during registration.\n\n???\n\n- Setting up an SMTP server is useful.\n- Emails can be sent to users if they forget their passwords.\n- You can require email validation to ensure users provide valid emails.\n\n---\n# galaxy.yml full options\n\na.k.a. Everything You Always Wanted to Know About `galaxy.yml`\n* [config schema](https://github.com/galaxyproject/galaxy/blob/dev/lib/galaxy/config/config_schema.yml)\n* [config sample](https://github.com/galaxyproject/galaxy/blob/dev/lib/galaxy/config/sample/galaxy.yml.sample)\n* [config docs](https://docs.galaxyproject.org/en/master/admin/config.html)\n\n???\n\n- Everything covered in this slideset is also in the galaxy yaml file.\n- You can find even more options to configure there.\n"],"video_library":{"tutorial":null,"slides":null,"demo":null,"both":null,"session":null},"hands_on":false,"slides":true,"mod_date":"2023-04-13 09:56:36 +0000","pub_date":"2019-01-28 04:08:04 +0000","version":11,"api":"https://training.galaxyproject.org/training-material/api/topics/admin/tutorials/production/tutorial.json","tools":[],"supported_servers":[],"topic_name_human":"Galaxy Server administration","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools: []\n","tours":false,"translations":{"tutorial":[],"slides":[],"video":true},"license":"CC-BY-4.0","type":"tutorial","redirect_from":["/short/admin/production/slides","/short/S00019"]}