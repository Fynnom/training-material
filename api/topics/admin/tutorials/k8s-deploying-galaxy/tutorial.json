{"layout":"tutorial_hands_on","title":"Galaxy Installation on Kubernetes","level":"Intermediate","questions":["How do I deploy Galaxy on Kubernetes using Helm?","How can I create a simple replica of usegalaxy.org?"],"objectives":["Have an understanding of how to use Galaxy's Helm chart","Be able to use Helm to install different flavors of Galaxy for different purposes"],"time_estimation":"30m","key_points":["Stock deployment of production Galaxy components on Kubernetes is simple","Helm chart allows easy configuration changes"],"contributors":[{"name":"Pablo Moreno","joined":"2019-06","id":"pcm32","url":"https://training.galaxyproject.org/training-material/api/contributors/pcm32.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/pcm32/"},{"name":"Enis Afgan","joined":"2018-06","id":"afgane","url":"https://training.galaxyproject.org/training-material/api/contributors/afgane.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/afgane/"},{"name":"Nuwan Goonasekera","joined":"2019-06","id":"nuwang","url":"https://training.galaxyproject.org/training-material/api/contributors/nuwang.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/nuwang/"},{"name":"Alex Mahmoud","joined":"2019-06","id":"almahmoud","url":"https://training.galaxyproject.org/training-material/api/contributors/almahmoud.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/almahmoud/"},{"name":"John Davis","email":"jdavcs@gmail.com","joined":"2019-06","orcid":"0000-0002-1363-1245","id":"jdavcs","url":"https://training.galaxyproject.org/training-material/api/contributors/jdavcs.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/jdavcs/"}],"tags":["kubernetes"],"subtopic":"cloud","follow_up_training":[{"type":"internal","topic_name":"admin","tutorials":["k8s-managing-galaxy"]}],"priority":2,"js_requirements":{"mathjax":null,"mermaid":false},"short_id":"T00013","url":"/topics/admin/tutorials/k8s-deploying-galaxy/tutorial.html","topic_name":"admin","tutorial_name":"k8s-deploying-galaxy","dir":"topics/admin/tutorials/k8s-deploying-galaxy","symlink":null,"id":"admin/k8s-deploying-galaxy","ref_tutorials":["<h1 id=\"galaxy-helm-chart\">Galaxy Helm Chart</h1>\n\n<h2 id=\"overview\">Overview</h2>\n\n<p>Galaxy has a minimal number of required dependencies, which makes its basic\ninstallation quick for both users and developers. However, configuring a\nmulti-user production instance is a complex undertaking due to Galaxy’s many\ninteracting and dependent systems, components, and configurations. Software\ncontainerization has become the preferred method of addressing deployment\nchallenges across operating environments. Containerization also requires\norchestration, so that multiple containers can work together to deliver a\ncomplex application. <a href=\"https://kubernetes.io/\">Kubernetes</a> has emerged as the\nprimary container orchestration technology, as it is both container agnostic and\nwidely adopted. Kubernetes allows managing, scaling, and deploying different\npieces of an application–in a standardized way–while providing excellent tooling\nfor doing so.</p>\n\n<p>In this tutorial, we’ll take a look at Kubernetes and <a href=\"https://helm.sh/\">Helm</a>\nas tools for deploying containerized Galaxy. The goals for this model of\ndeploying Galaxy is to use best-practices from the Galaxy community on how to\ndeploy the Galaxy application in a well-defined package. This model can simplify\ndeployment and management burden of running Galaxy. While it is possible to\nfollow this tutorial by simply copying and pasting supplied commands, and a\nproduction-grade Galaxy will be installed, it is desirable to have a basic\nunderstanding of the container concepts and Kubernetes and Helm technologies.</p>\n\n<p>Some of the goals for deploying and running Galaxy in this mode include:</p>\n<ul>\n  <li>Design a mostly stateless model for running Galaxy where processes can be\nhorizontally scaled as needed</li>\n  <li>Integrate components from the Galaxy project ecosystem to leverage existing\nresources</li>\n  <li>Provide a unified handling of Galaxy configurations</li>\n  <li>Minimize customized dependencies</li>\n  <li>Minimize the need to build custom components</li>\n</ul>\n\n<blockquote class=\"agenda\">\n  <agenda-title></agenda-title>\n\n<ol id=\"markdown-toc\">\n  <li><a href=\"#galaxy-helm-chart\" id=\"markdown-toc-galaxy-helm-chart\">Galaxy Helm Chart</a>    <ol>\n      <li><a href=\"#overview\" id=\"markdown-toc-overview\">Overview</a></li>\n      <li><a href=\"#prerequisites\" id=\"markdown-toc-prerequisites\">Prerequisites</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#downloading-the-galaxy-helm-chart\" id=\"markdown-toc-downloading-the-galaxy-helm-chart\">Downloading the Galaxy Helm Chart</a></li>\n  <li><a href=\"#deploying-galaxy\" id=\"markdown-toc-deploying-galaxy\">Deploying Galaxy</a>    <ol>\n      <li><a href=\"#deploying-the-default-configuration\" id=\"markdown-toc-deploying-the-default-configuration\">Deploying the Default Configuration</a></li>\n      <li><a href=\"#deploying-a-cvmfs-enabled-configuration\" id=\"markdown-toc-deploying-a-cvmfs-enabled-configuration\">Deploying a CVMFS-enabled Configuration</a></li>\n      <li><a href=\"#deleting-a-deployed-helm-release\" id=\"markdown-toc-deleting-a-deployed-helm-release\">Deleting a Deployed Helm Release</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#next-steps\" id=\"markdown-toc-next-steps\">Next Steps</a></li>\n</ol>\n\n</blockquote>\n\n<h2 id=\"prerequisites\">Prerequisites</h2>\n<p>We’ll be using the <a href=\"https://github.com/galaxyproject/galaxy-helm\">Galaxy Helm chart</a> to install and manage a Galaxy\ndeployment. To be able to use this chart, we’ll need access to a Kubernetes\ncluster, with Helm installed. For development and testing purposes this can be\neasily achieved by installing\n<a href=\"https://www.docker.com/products/kubernetes\">Docker Desktop locally and enabling Kubernetes</a>. Afterwards, also install\n<a href=\"https://helm.sh\">Helm</a>.</p>\n\n<p>For production deployments, we’ll also need some storage resources for data\npersistence. This can be done by either defining a <a href=\"https://kubernetes.io/docs/concepts/storage/storage-classes/\">storage class</a> or\ncreating a <a href=\"https://kubernetes.io/docs/concepts/storage/persistent-volumes/\">Persistent Volume and a corresponding Persistent Volume Claim</a>.\nOnce created, just keep a note of the resources Persistent Volume Claim ID and\nto use later.</p>\n\n<p>For the CVMFS-enabled version of the chart (more on this below), it is also\nnecessary to run Kubernetes version 1.13 or newer because we’ll be using the\n<a href=\"https://kubernetes.io/blog/2019/01/15/container-storage-interface-ga/\">Container Storage Interface (CSI)</a>.</p>\n\n<h1 id=\"downloading-the-galaxy-helm-chart\">Downloading the Galaxy Helm Chart</h1>\n<p>The Galaxy Helm Chart is currently under active development with enhancements\ncontinuously trickling in. As a result, there are no regular releases yet and\ninstead we recommend just cloning the GitHub repository with the chart\nimplementation. This will be the easiest method to keep up with chart changes\nfor the time being.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Download the chart</hands-on-title>\n\n  <p>Clone the chart repository from the machine where you would like to deploy\n  Galaxy and change into the chart directory.</p>\n\n  <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>  git clone https://github.com/galaxyproject/galaxy-helm\n  <span class=\"nb\">cd </span>galaxy-helm/galaxy\n</code></pre></div>  </div>\n\n</blockquote>\n\n<h1 id=\"deploying-galaxy\">Deploying Galaxy</h1>\n<p>The Galaxy Helm chart packages best-practice solutions for deploying Galaxy\ninto a single package that can be readily deployed as a unit. Behind the\nscenes, all the supporting services are started and configured into an\ninteroperable system. Specifically, this involves starting a database service\nbased on Postgres, using Nginx as a web proxy, and running an independently\nscalable set of web and job handler processes for Galaxy. This follows\nthe production-quality deployment recommendation setup for Galaxy and leverages\nsome of the Kubernetes features to help with running long-term services (e.g.,\nliveness probes that automatically restart stuck processes).</p>\n\n<h2 id=\"deploying-the-default-configuration\">Deploying the Default Configuration</h2>\n<p>The default set of values for the Galaxy chart configures only a minimal set\nof Galaxy options necessary. The configured options are required for suitable\noperation of the system. Setting other options will depend on the environment\nand it’s best to refer to the general <a href=\"https://galaxyproject.org/admin/#configuration\">Galaxy documentation</a>; we’ll\nalso take a look at how to make configuration changes in the context of the\nchart later in this tutorial.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Deploying the Galaxy Helm Chart</hands-on-title>\n\n  <ol>\n    <li>\n      <p>First, we need to fetch any dependencies for the chart. One of the\nadvantages of using Helm is that we can reuse best-practice deployment\nmethods for other software right out of the box by relying on published\ncharts and integrating them into the Galaxy chart.</p>\n\n      <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>helm dependency update\n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>We can now deploy Galaxy via the Chart. Before running this command make\nsure you are in the chart source code directory (where <code class=\"language-plaintext highlighter-rouge\">values.yaml</code> file\nresides) and note the trailing dot. Running this command will create a new\nHelm release (i.e., chart installation) called <code class=\"language-plaintext highlighter-rouge\">galaxy</code>.</p>\n\n      <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>helm <span class=\"nb\">install</span> <span class=\"nt\">--name</span> galaxy <span class=\"nb\">.</span>\n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>It will take about a minute or two for the database to be initialized,\nnecessary containers downloaded, and Galaxy processes started. Ultimately,\nwhile this may depend on the Kubernetes cluster setup you are using,\nGalaxy should be available at the root URI for the given machine. We can\nalways check the status of our release by typing <code class=\"language-plaintext highlighter-rouge\">helm status galaxy</code>.</p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h2 id=\"deploying-a-cvmfs-enabled-configuration\">Deploying a CVMFS-enabled Configuration</h2>\n<p>The Galaxy Helm chart also comes with a more comprehensive set of configuration\noptions that leverage more of the Galaxy project ecosystem. In practice this\nmeans deploying Galaxy with the same toolset as that of\n<em><a href=\"https://usegalaxy.org/\">usegalaxy.org</a></em> right out of the box. It’s important to note\nthat this deployment configuration leverages all the same chart components but\njust defines more configuration options. Namely, we attach to the\n<a href=\"https://training.galaxyproject.org/training-material/topics/admin/tutorials/cvmfs/tutorial.html\">Galaxy CVMFS</a> ready-only file system for retrieving the tool\nconfigurations while leveraging <a href=\"https://biocontainers.pro/#/\">BioContainers</a> for resolving tool dependencies.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Deploying the CVMFS-enabled Configuration</hands-on-title>\n\n  <ol>\n    <li>\n      <p>If you are following this tutorial sequentially and have a release of\nGalaxy already running, let’s delete it (assuming that’s fine and you have\nno data to keep). More details about the deletion process are available in\nthe <a href=\"#deleting-a-deployed-helm-release\">Deleting a Deployment section</a>. If\nyou’re just playing around, run <code class=\"language-plaintext highlighter-rouge\">helm delete --purge galaxy</code>.</p>\n    </li>\n    <li>\n      <p>The CVMFS variant of the Galaxy chart has an additional dependency on the\n<a href=\"https://github.com/CloudVE/galaxy-cvmfs-csi-chart\">Galaxy CVMFS chart</a>.\nWe’ll deploy this chart into its own <a href=\"https://kubernetes.io/docs/concepts/overview/working-with-objects/namespaces/\">Namespace</a> to keep its resources\nnicely grouped. We’ll also fetch the chart from a packaged chart\nrepository instead of its GitHub repo.</p>\n\n      <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>kubectl create namespace cvmfs\nhelm repo add galaxy https://raw.githubusercontent.com/CloudVE/helm-charts/master/\nhelm repo update\nhelm <span class=\"nb\">install</span> <span class=\"nt\">--name</span> cvmfs <span class=\"nt\">--namespace</span> cvmfs galaxy/galaxy-cvmfs-csi\n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>We can now install the CVMFS-enabled set of values.</p>\n\n      <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>helm <span class=\"nb\">install</span> <span class=\"nt\">--name</span> galaxy galaxy/galaxy\n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Again, it will take a few minutes for Galaxy to start up. This time most of\nthe waiting is due to the tool definition files to be cached on CVMFS and\nloaded into the tool panel. We can check the status of the deployment by\nrunning <code class=\"language-plaintext highlighter-rouge\">helm status galaxy</code>. We can also watch the boot process by tailing\nthe logs of the relevant container with a command similar to\n<code class=\"language-plaintext highlighter-rouge\">kubectl logs -f galaxy-web-7568c58b94-hjl9w</code> where the last argument is\nthe name of the desired pod, as printed following the <code class=\"language-plaintext highlighter-rouge\">helm install</code>\ncommand. Once the boot process has completed, we can access Galaxy at\n<code class=\"language-plaintext highlighter-rouge\">/galaxy/</code> URI (note the trailing <code class=\"language-plaintext highlighter-rouge\">/</code>; it’s significant).</p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h2 id=\"deleting-a-deployed-helm-release\">Deleting a Deployed Helm Release</h2>\n<p>After we’re done experimenting with an installation of the chart, we can just\nas easily delete all the resources as we’ve created them. However, that may\nnot be desirable so make sure you understand the system you’re working on to\navoid undesired surprises. Namely, deleting and recreating a Helm release is\ngenerally not a problem where the processes will just respawn and everything will go back to operational; however, underlying storage configuration may\ninterfere here with all the application data being potentially lost. This\npredominantly depends on how the relevant storage class was configured.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Deleting a Deployed Helm Release</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Before we delete a deployment, let’s ensure we understand what will happen\nwith the underlying storage used by Galaxy.</p>\n\n      <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>kubectl get pv\nNAME                                       CAPACITY   ACCESS MODES   RECLAIM POLICY   STATUS   CLAIM                                   STORAGECLASS      REASON   AGE\ncvmfs-cache-pv                             1000Mi     RWX            Retain           Bound    cvmfs/cvmfs-cache-pvc                   manual                     31m\npvc-55806281-96c6-11e9-8e96-0251cc6c62f4   1Gi        ROX            Delete           Bound    default/galaxy-cvmfs-gxy-data-pvc       cvmfs-gxy-data             28m\npvc-5580c830-96c6-11e9-8e96-0251cc6c62f4   1Gi        ROX            Delete           Bound    default/galaxy-cvmfs-gxy-main-pvc       cvmfs-gxy-main             28m\npvc-55814757-96c6-11e9-8e96-0251cc6c62f4   10Gi       RWX            Delete           Bound    default/galaxy-galaxy-pvc               nfs-provisioner            28m\npvc-70d4cc48-96be-11e9-8e96-0251cc6c62f4   8Gi        RWO            Delete           Bound    default/data-galaxy-galaxy-postgres-0   nfs-provisioner            84m\npvc-8cb27bc9-9679-11e9-8e96-0251cc6c62f4   100Gi      RWO            Delete           Bound    cloudman/data-nfs-provisioner-0         ebs-provisioner            9h\n</code></pre></div>      </div>\n\n      <p>As we can see in the command output, the storage resources associated with\nthe current deployment have the reclaim policy set to <code class=\"language-plaintext highlighter-rouge\">Delete</code>, which will\nhappen once no resources are using the given resource. If what you see is\nthe not the intended behavior, you can change the <a href=\"https://kubernetes.io/docs/tasks/administer-cluster/change-pv-reclaim-policy/\">reclaim policy</a>.</p>\n    </li>\n    <li>\n      <p>Once we’re ok with the state of the resources and are ready to delete a\na deployment, we can do so with the following commands:</p>\n\n      <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>helm delete <span class=\"nt\">--purge</span> galaxy\nhelm delete <span class=\"nt\">--purge</span> cvmfs\n</code></pre></div>      </div>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h1 id=\"next-steps\">Next Steps</h1>\n<p>This tutorial covers the basics of getting Galaxy deployed on Kubernetes using\nHelm. There is a lot more to understanding all the configuration options for\nthe chart and the available deployment models. For more info on some of these\ntopics, take a look at the <a href=\"https://github.com/galaxyproject/galaxy-helm\">Galaxy Helm chart</a> repository as well as\n<a href=\"../..\">other tutorials</a> tagged with <em>kubernetes</em>. Also, feel free to reach out\non Gitter: <a href=\"https://gitter.im/galaxyproject/FederatedGalaxy\">https://gitter.im/galaxyproject/FederatedGalaxy</a>.</p>\n\n"],"ref_slides":[],"hands_on":true,"slides":false,"mod_date":"2022-10-18 14:23:35 +0000","pub_date":"2019-07-02 18:24:39 +0000","version":8,"api":"https://training.galaxyproject.org/training-material/api/topics/admin/tutorials/k8s-deploying-galaxy/tutorial.json","tools":[],"supported_servers":[],"topic_name_human":"Galaxy Server administration","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools: []\n","tours":false,"video":false,"slides_recordings":false,"translations":{"tutorial":[],"slides":[],"video":false},"license":"CC-BY-4.0","type":"tutorial"}