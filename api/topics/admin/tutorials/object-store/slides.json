{"layout":"tutorial_slides","title":"Storage Management","questions":["How does Galaxy locate data?","How can I have Galaxy use multiple storage locations?"],"objectives":["Setup Galaxy with both the Hierarachical and Distributed Object Storages"],"time_estimation":"30m","key_points":["The distributed object store configuration allows you to easily expand that storage that is attached to your Galaxy.","You can move data around without affecting users."],"contributors":["natefoo","martenson","hexylena"],"subtopic":"data","tags":["ansible","storage"],"requirements":[{"type":"internal","topic_name":"admin","tutorials":["ansible","ansible-galaxy"]}],"js_requirements":{"mathjax":null,"mermaid":false},"short_id":"S00018","url":"/topics/admin/tutorials/object-store/slides.html","topic_name":"admin","tutorial_name":"object-store","dir":"topics/admin/tutorials/object-store","symlink":null,"id":"admin/object-store","ref_tutorials":["<blockquote class=\"warning\">\n  <warning-title>switching object store types will cause issues</warning-title>\n  <p>Do not run this tutorial on your production instance! We will switch between object stores during this tutorial which has serious implications for production servers.</p>\n</blockquote>\n\n<h1 id=\"expanding-storage\">Expanding Storage</h1>\n\n<p>You may find that your Galaxy files directory has run out of space, but you don’t want to move all of the files from one filesystem to another. One solution to this problem is to use Galaxy’s hierarchical object store to add an additional file space for Galaxy.</p>\n\n<p>Alternatively, you may wish to write new datasets to more than one filesystem. For this, you can use Galaxy’s distributed object store.</p>\n\n<p>This tutorial assumes you have done the “Ansible for installing Galaxy” tutorial, it references the base configuration set up in that tutorial in numerous places.</p>\n\n<blockquote class=\"agenda\">\n  <agenda-title></agenda-title>\n\n<ol id=\"markdown-toc\">\n  <li><a href=\"#expanding-storage\" id=\"markdown-toc-expanding-storage\">Expanding Storage</a></li>\n  <li><a href=\"#hierarchical-object-store\" id=\"markdown-toc-hierarchical-object-store\">Hierarchical Object Store</a></li>\n  <li><a href=\"#distributed-object-store\" id=\"markdown-toc-distributed-object-store\">Distributed Object Store</a></li>\n  <li><a href=\"#s3-object-store\" id=\"markdown-toc-s3-object-store\">S3 Object Store</a></li>\n  <li><a href=\"#dropbox\" id=\"markdown-toc-dropbox\">Dropbox</a></li>\n</ol>\n\n</blockquote>\n\n<h1 id=\"hierarchical-object-store\">Hierarchical Object Store</h1>\n\n<p>First, note that your Galaxy datasets have been created thus far in the directory <code class=\"language-plaintext highlighter-rouge\">/data</code>, due to <code class=\"language-plaintext highlighter-rouge\">galaxy_config: galaxy: file_path</code>. In some cases, we run out of storage in a particular location. Galaxy allows us to add additional storage locations where it will create new datasets, while still looking in the old locations for old datasets. You will not have to migrate any of your datasets, and can just “plug and play” with new storage pools.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Adding Hierarchical Storage</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Open your group variables file and set the <code class=\"language-plaintext highlighter-rouge\">object_store_config_file</code> variable:</p>\n\n      <div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">galaxy_config</span><span class=\"pi\">:</span>\n  <span class=\"na\">galaxy</span><span class=\"pi\">:</span>\n    <span class=\"na\">object_store_config_file</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">{{</span><span class=\"nv\"> </span><span class=\"s\">galaxy_config_dir</span><span class=\"nv\"> </span><span class=\"s\">}}/object_store_conf.xml\"</span>\n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>In your group variables file, add it to the <code class=\"language-plaintext highlighter-rouge\">galaxy_config_templates</code> section:</p>\n\n      <div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">galaxy_config_templates</span><span class=\"pi\">:</span>\n  <span class=\"pi\">-</span> <span class=\"na\">src</span><span class=\"pi\">:</span> <span class=\"s\">templates/galaxy/config/object_store_conf.xml.j2</span>\n    <span class=\"na\">dest</span><span class=\"pi\">:</span> <span class=\"s2\">\"</span><span class=\"s\">{{</span><span class=\"nv\"> </span><span class=\"s\">galaxy_config.galaxy.object_store_config_file</span><span class=\"nv\"> </span><span class=\"s\">}}\"</span>\n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Create and edit <code class=\"language-plaintext highlighter-rouge\">templates/galaxy/config/object_store_conf.xml.j2</code> with the following contents:</p>\n\n      <div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">&lt;?xml version=\"1.0\"?&gt;</span>\n<span class=\"nt\">&lt;object_store</span> <span class=\"na\">type=</span><span class=\"s\">\"hierarchical\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;backends&gt;</span>\n        <span class=\"nt\">&lt;backend</span> <span class=\"na\">id=</span><span class=\"s\">\"newdata\"</span> <span class=\"na\">type=</span><span class=\"s\">\"disk\"</span> <span class=\"na\">order=</span><span class=\"s\">\"0\"</span><span class=\"nt\">&gt;</span>\n            <span class=\"nt\">&lt;files_dir</span> <span class=\"na\">path=</span><span class=\"s\">\"/data2\"</span> <span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;extra_dir</span> <span class=\"na\">type=</span><span class=\"s\">\"job_work\"</span> <span class=\"na\">path=</span><span class=\"s\">\"/data2/job_work_dir\"</span> <span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;/backend&gt;</span>\n        <span class=\"nt\">&lt;backend</span> <span class=\"na\">id=</span><span class=\"s\">\"olddata\"</span> <span class=\"na\">type=</span><span class=\"s\">\"disk\"</span> <span class=\"na\">order=</span><span class=\"s\">\"1\"</span><span class=\"nt\">&gt;</span>\n            <span class=\"nt\">&lt;files_dir</span> <span class=\"na\">path=</span><span class=\"s\">\"/data\"</span> <span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;extra_dir</span> <span class=\"na\">type=</span><span class=\"s\">\"job_work\"</span> <span class=\"na\">path=</span><span class=\"s\">\"/data/job_work_dir\"</span> <span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;/backend&gt;</span>\n    <span class=\"nt\">&lt;/backends&gt;</span>\n<span class=\"nt\">&lt;/object_store&gt;</span>\n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Add a <code class=\"language-plaintext highlighter-rouge\">pre_task</code> in your playbook <code class=\"language-plaintext highlighter-rouge\">galaxy.yml</code> file to create the <code class=\"language-plaintext highlighter-rouge\">/data2</code> folder <a href=\"https://docs.ansible.com/ansible/2.9/modules/file_module.html\">using the file module</a>.</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    - name: Create the second storage directory\n      file:\n        owner: galaxy\n        group: galaxy\n        path: /data2\n        state: directory\n        mode: '0755'\n</code></pre></div>      </div>\n\n      <p>We’ve hardcoded the user/group because creating a storage directory is unusual. In normal practice someone provides you with an NFS mount and you will simply point your Galaxy there.</p>\n    </li>\n    <li>\n      <p>Run the playbook and restart Galaxy</p>\n    </li>\n    <li>\n      <p>Run a couple of jobs after Galaxy has restarted.</p>\n\n      <blockquote class=\"question\">\n        <question-title></question-title>\n\n        <p>Where is the data now stored?</p>\n\n        <blockquote class=\"solution\">\n          <solution-title></solution-title>\n\n          <p>You should see <code class=\"language-plaintext highlighter-rouge\">/data2</code> in the <code class=\"language-plaintext highlighter-rouge\">Full Path</code>, if not, something went wrong. Check that your “order” is correct</p>\n\n        </blockquote>\n\n      </blockquote>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h1 id=\"distributed-object-store\">Distributed Object Store</h1>\n\n<p>Rather than searching a hierarchy of object stores until the dataset is found, Galaxy can store the ID (in the database) of the object store in which a dataset is located when the dataset is created. This allows Galaxy to write to more than one object store for new datasets.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Distributed Object Store</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Edit your <code class=\"language-plaintext highlighter-rouge\">templates/galaxy/config/object_store_conf.xml.j2</code> file and replace the contents with:</p>\n\n      <div class=\"language-xml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"cp\">&lt;?xml version=\"1.0\"?&gt;</span>\n<span class=\"nt\">&lt;object_store</span> <span class=\"na\">type=</span><span class=\"s\">\"distributed\"</span><span class=\"nt\">&gt;</span>\n    <span class=\"nt\">&lt;backends&gt;</span>\n        <span class=\"nt\">&lt;backend</span> <span class=\"na\">id=</span><span class=\"s\">\"newdata\"</span> <span class=\"na\">type=</span><span class=\"s\">\"disk\"</span> <span class=\"na\">weight=</span><span class=\"s\">\"1\"</span><span class=\"nt\">&gt;</span>\n            <span class=\"nt\">&lt;files_dir</span> <span class=\"na\">path=</span><span class=\"s\">\"/data2\"</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;extra_dir</span> <span class=\"na\">type=</span><span class=\"s\">\"job_work\"</span> <span class=\"na\">path=</span><span class=\"s\">\"/data2/job_work_dir\"</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;/backend&gt;</span>\n        <span class=\"nt\">&lt;backend</span> <span class=\"na\">id=</span><span class=\"s\">\"olddata\"</span> <span class=\"na\">type=</span><span class=\"s\">\"disk\"</span> <span class=\"na\">weight=</span><span class=\"s\">\"1\"</span><span class=\"nt\">&gt;</span>\n            <span class=\"nt\">&lt;files_dir</span> <span class=\"na\">path=</span><span class=\"s\">\"/data\"</span><span class=\"nt\">/&gt;</span>\n            <span class=\"nt\">&lt;extra_dir</span> <span class=\"na\">type=</span><span class=\"s\">\"job_work\"</span> <span class=\"na\">path=</span><span class=\"s\">\"/data/job_work_dir\"</span><span class=\"nt\">/&gt;</span>\n        <span class=\"nt\">&lt;/backend&gt;</span>\n    <span class=\"nt\">&lt;/backends&gt;</span>\n<span class=\"nt\">&lt;/object_store&gt;</span>\n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Run the playbook, restart Galaxy</p>\n    </li>\n    <li>\n      <p>Run 4 or so jobs, and check where the output appear. You should see that they are split relatively evenly between the two data directories.</p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>Sites like UseGalaxy.eu use the distributed object store in order to balance dataset storage across 10 different storage pools.</p>\n\n<blockquote class=\"details\">\n  <details-title>More documentation</details-title>\n\n  <p>More information can be found in the <a href=\"https://github.com/galaxyproject/galaxy/blob/dev/lib/galaxy/config/sample/object_store_conf.xml.sample\">sample file</a>.</p>\n\n</blockquote>\n\n<blockquote class=\"tip\">\n  <tip-title>Can I distribute objects based on the user?</tip-title>\n\n  <p>Yes! You must write your own dynamic job handler code to handle this.\nSee <a href=\"https://github.com/galaxyproject/galaxy/pull/6552\">PR#6552</a> and <a href=\"https://github.com/galaxyproject/galaxy/pull/10233\">PR#10233</a></p>\n\n  <p>If you implement something like this, please <a href=\"https://github.com/galaxyproject/training-material/issues/new\">let the GTN\nknow</a> with\nsome example code, and we can include this as a training module for everyone.</p>\n\n</blockquote>\n\n<blockquote class=\"warning\">\n  <warning-title>switching object store types will cause issues</warning-title>\n  <p>We have switched between two different object stores here, but this is not supported. If you need to do this, you will need to update datasets in Galaxy’s database. Any datasets that were created as hierarchical will lack the <code class=\"language-plaintext highlighter-rouge\">object_store_id</code>, and you will need to supply the correct one. Do not just blindly copy these instructions, please understand what they do before running them and talk to us on <a href=\"http://gitter.im/galaxyproject/Lobby\">Gitter</a> for more help</p>\n\n  <ol>\n    <li>\n      <p>Move the datasets to their new location: <code class=\"language-plaintext highlighter-rouge\">sudo -u galaxy rsync -avr /hierarchical/000/ /distributed/000/</code></p>\n    </li>\n    <li>\n      <p>Update the database: <code class=\"language-plaintext highlighter-rouge\">sudo -Hu galaxy psql galaxy -c \"UPDATE dataset SET object_store_id='data';\" </code></p>\n    </li>\n    <li>\n      <p>Restart your Galaxy</p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h1 id=\"s3-object-store\">S3 Object Store</h1>\n\n<p>Many sites have access to an S3 service (either public AWS, or something private like Swift or Ceph), and you can take advantage of this for data storage.</p>\n\n<p>we will set up a local S3-compatible object store, and then talk to the API of this service.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Setting up an S3-compatible Object Store</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Edit your <code class=\"language-plaintext highlighter-rouge\">requirements.yml</code> file and add:</p>\n\n      <div class=\"language-yml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"pi\">-</span> <span class=\"na\">src</span><span class=\"pi\">:</span> <span class=\"s\">atosatto.minio</span>\n  <span class=\"na\">version</span><span class=\"pi\">:</span> <span class=\"s\">v1.1.0</span>\n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p><code class=\"language-plaintext highlighter-rouge\">ansible-galaxy install -p roles -r requirements.yml</code></p>\n    </li>\n    <li>\n      <p>Edit your group variables to configure the object store:</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>minio_server_datadirs: [\"/minio-test\"]\nminio_access_key: \"my-access-key\"\nminio_secret_key: \"my-super-extra-top-secret-key\"\n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Edit your playbook and add the minio role <strong>before</strong> <code class=\"language-plaintext highlighter-rouge\">galaxyproject.galaxy</code>:</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>    - atosatto.minio\n</code></pre></div>      </div>\n\n      <p>Galaxy will need to use the bucket, and will want it to be there when it boots, so we need to setup the object store first.</p>\n    </li>\n    <li>\n      <p>Edit the <code class=\"language-plaintext highlighter-rouge\">templates/galaxy/config/object_store_conf.xml.j2</code>, and configure the object store as one of the hierarchical backends. The object store does not play nicely with the distributed backend during training preparation. Additionally, reset the orders of the disk backends to be higher than the order of the swift backend.</p>\n\n      <div class=\"language-diff highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"p\">@@ -1,13 +1,21 @@</span>\n &lt;?xml version=\"1.0\"?&gt;\n<span class=\"gd\">- &lt;object_store type=\"distributed\"&gt;\n</span><span class=\"gi\">+ &lt;object_store type=\"hierarchical\"&gt;\n</span>     &lt;backends&gt;\n<span class=\"gd\">-        &lt;backend id=\"newdata\" type=\"disk\" weight=\"1\"&gt;\n</span><span class=\"gi\">+        &lt;backend id=\"newdata\" type=\"disk\" order=\"1\"&gt;\n</span>             &lt;files_dir path=\"/data2\"/&gt;\n             &lt;extra_dir type=\"job_work\" path=\"/data2/job_work_dir\"/&gt;\n         &lt;/backend&gt;\n<span class=\"gd\">-        &lt;backend id=\"olddata\" type=\"disk\" weight=\"1\"&gt;\n</span><span class=\"gi\">+        &lt;backend id=\"olddata\" type=\"disk\" order=\"2\"&gt;\n</span>             &lt;files_dir path=\"/data\"/&gt;\n             &lt;extra_dir type=\"job_work\" path=\"/data/job_work_dir\"/&gt;\n         &lt;/backend&gt;\n<span class=\"gi\">+        &lt;object_store id=\"swifty\" type=\"swift\" order=\"0\"&gt;\n+            &lt;auth access_key=\"{{ minio_access_key }}\" secret_key=\"{{ minio_secret_key }}\" /&gt;\n+            &lt;bucket name=\"galaxy\" use_reduced_redundancy=\"False\" max_chunk_size=\"250\"/&gt;\n+            &lt;connection host=\"127.0.0.1\" port=\"9091\" is_secure=\"False\" conn_path=\"\" multipart=\"True\"/&gt;\n+            &lt;cache path=\"{{ galaxy_mutable_data_dir }}/database/object_store_cache\" size=\"1000\" /&gt;\n+            &lt;extra_dir type=\"job_work\" path=\"{{ galaxy_mutable_data_dir }}/database/job_working_directory_swift\"/&gt;\n+            &lt;extra_dir type=\"temp\" path=\"{{ galaxy_mutable_data_dir }}/database/tmp_swift\"/&gt;\n+        &lt;/object_store&gt;\n</span>     &lt;/backends&gt;\n &lt;/object_store&gt;\n</code></pre></div>      </div>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-how-to-read-a-diff\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-how-to-read-a-diff\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: How to read a Diff</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <p>If you haven’t worked with diffs before, this can be something quite new or different.</p>   <p>If we have two files, let’s say a grocery list, in two files. We’ll call them ‘a’ and ‘b’.</p>   <blockquote class=\"code-2col\">   <blockquote class=\"code-in\">     <code-in-title>Old</code-in-title>     <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ cat old<br />🍎<br />🍐<br />🍊<br />🍋<br />🍒<br />🥑<br /></code></pre></div>    </div>   </blockquote>   <blockquote class=\"code-out\">     <code-out-title>New</code-out-title>     <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ cat new<br />🍎<br />🍐<br />🍊<br />🍋<br />🍍<br />🥑<br /></code></pre></div>    </div>   </blockquote> </blockquote>   <p>We can see that they have some different entries. We’ve removed 🍒 because they’re awful, and replaced them with an 🍍</p>   <p>Diff lets us compare these files</p>   <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>diff old new<br />5c5<br />&lt; 🍒<br /><span class=\"nt\">---</span><br /><span class=\"o\">&gt;</span> 🍍<br /></code></pre></div></div>   <p>Here we see that 🍒 is only in a, and 🍍 is only in b. But otherwise the files are identical.</p>   <p>There are a couple different formats to diffs, one is the ‘unified diff’</p>   <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>diff <span class=\"nt\">-U2</span> old new<br /><span class=\"nt\">---</span> old\t2022-02-16 14:06:19.697132568 +0100<br />+++ new\t2022-02-16 14:06:36.340962616 +0100<br />@@ <span class=\"nt\">-3</span>,4 +3,4 @@<br /> 🍊<br /> 🍋<br />-🍒<br />+🍍<br /> 🥑<br /></code></pre></div></div>   <p>This is basically what you see in the training materials which gives you a lot of context about the changes:</p>   <ul>   <li><code class=\"language-plaintext highlighter-rouge\">--- old</code> is the ‘old’ file in our view</li>   <li><code class=\"language-plaintext highlighter-rouge\">+++ new</code> is the ‘new’ file</li>   <li>@@ these lines tell us where the change occurs and how many lines are added or removed.</li>   <li>Lines starting with a - are removed from our ‘new’ file</li>   <li>Lines with a + have been added.</li> </ul>   <p>So when you go to apply these diffs to your files in the training:</p>   <ol>   <li>Ignore the header</li>   <li>Remove lines starting with - from your file</li>   <li>Add lines starting with + to your file</li> </ol>   <p>The other lines (🍊/🍋 and 🥑) above just provide “context”, they help you know where a change belongs in a file, but <strong>should not be edited</strong> when you’re making the above change. Given the above diff, you would find a line with a 🍒, and replace it with a 🍍</p>   <h4 id=\"added--removed-lines\">Added &amp; Removed Lines</h4>   <p>Removals are very easy to spot, we just have removed lines</p>   <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">---</span> old\t2022-02-16 14:06:19.697132568 +0100<br />+++ new\t2022-02-16 14:10:14.370722802 +0100<br />@@ <span class=\"nt\">-4</span>,3 +4,2 @@<br /> 🍋<br /> 🍒<br />-🥑<br /></code></pre></div></div>   <p>And additions likewise are very easy, just add a new line, between the other lines in your file.</p>   <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">---</span> old\t2022-02-16 14:06:19.697132568 +0100<br />+++ new\t2022-02-16 14:11:11.422135393 +0100<br />@@ <span class=\"nt\">-1</span>,3 +1,4 @@<br /> 🍎<br />+🍍<br /> 🍐<br /> 🍊<br /></code></pre></div></div>   <h4 id=\"completely-new-files\">Completely new files</h4>   <p>Completely new files look a bit different, there the “old” file is <code class=\"language-plaintext highlighter-rouge\">/dev/null</code>, the empty file in a Linux machine.</p>   <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>diff <span class=\"nt\">-U2</span> /dev/null old<br /><span class=\"nt\">---</span> /dev/null\t2022-02-15 11:47:16.100000270 +0100<br />+++ old\t2022-02-16 14:06:19.697132568 +0100<br />@@ <span class=\"nt\">-0</span>,0 +1,6 @@<br />+🍎<br />+🍐<br />+🍊<br />+🍋<br />+🍒<br />+🥑<br /></code></pre></div></div>   <p>And removed files are similar, except with the new file being /dev/null</p>   <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">---</span> old\t2022-02-16 14:06:19.697132568 +0100<br />+++ /dev/null\t2022-02-15 11:47:16.100000270 +0100<br />@@ <span class=\"nt\">-1</span>,6 +0,0 @@<br />-🍎<br />-🍐<br />-🍊<br />-🍋<br />-🍒<br />-🥑<br /></code></pre></div></div> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li>\n      <p>Run the playbook.</p>\n    </li>\n    <li>\n      <p>Galaxy should now be configure to use the object store!</p>\n    </li>\n    <li>\n      <p>When the playbook is done, upload a dataset to Galaxy, and check if it shows up in the bucket:</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ sudo ls /minio-test/galaxy/000/\ndataset_24.dat\n</code></pre></div>      </div>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h1 id=\"dropbox\">Dropbox</h1>\n\n<p>Dropbox is a well-known cloud storage service where you can store and share files with anyone.\nAs of <a href=\"https://github.com/galaxyproject/galaxy/pull/9888\">20.09</a>, Galaxy has support for a couple of different file storage backends, including NextCloud (via webdavfs) and Dropbox.</p>\n\n<p>This tutorial will help you setup the connection between Galaxy and Dropbox, allowing your users to add their account details and then access their Dropbox data within Galaxy</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Configure Galaxy to access the Dropbox service</hands-on-title>\n\n  <ol>\n    <li>\n      <p>If the folder does not exist, create <code class=\"language-plaintext highlighter-rouge\">templates/galaxy/config</code> next to your <code class=\"language-plaintext highlighter-rouge\">galaxy.yml</code> playbook.</p>\n\n      <blockquote class=\"code-in\">\n        <code-in-title>Bash</code-in-title>\n        <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>mkdir -p templates/galaxy/config\n</code></pre></div>        </div>\n      </blockquote>\n    </li>\n    <li>\n      <p>Create <code class=\"language-plaintext highlighter-rouge\">templates/galaxy/config/file_sources_conf.yml</code> with the following contents:</p>\n\n      <div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"pi\">-</span> <span class=\"na\">type</span><span class=\"pi\">:</span> <span class=\"s\">dropbox</span>\n  <span class=\"na\">id</span><span class=\"pi\">:</span> <span class=\"s\">dropbox</span>\n  <span class=\"na\">label</span><span class=\"pi\">:</span> <span class=\"s\">Your Dropbox Files</span>\n  <span class=\"na\">doc</span><span class=\"pi\">:</span> <span class=\"s\">Your Dropbox files - configure an access token via the user preferences</span>\n  <span class=\"na\">accessToken</span><span class=\"pi\">:</span> <span class=\"s\">${user.preferences.get('dropbox|access_token', '') if $user.preferences else ''}</span>\n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Create <code class=\"language-plaintext highlighter-rouge\">templates/galaxy/config/user_preferences_extra_conf.yml</code> with the following contents:</p>\n\n      <div class=\"language-yaml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"na\">preferences</span><span class=\"pi\">:</span>\n    <span class=\"na\">dropbox</span><span class=\"pi\">:</span>\n        <span class=\"na\">description</span><span class=\"pi\">:</span> <span class=\"s\">Your Dropbox account</span>\n        <span class=\"na\">inputs</span><span class=\"pi\">:</span>\n            <span class=\"pi\">-</span> <span class=\"na\">name</span><span class=\"pi\">:</span> <span class=\"s\">access_token</span>\n              <span class=\"na\">label</span><span class=\"pi\">:</span> <span class=\"s\">Dropbox access token</span>\n              <span class=\"na\">type</span><span class=\"pi\">:</span> <span class=\"s\">password</span>\n              <span class=\"na\">required</span><span class=\"pi\">:</span> <span class=\"s\">False</span>\n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Inform the <code class=\"language-plaintext highlighter-rouge\">galaxyproject.galaxy</code> role of where you would like the <code class=\"language-plaintext highlighter-rouge\">file_sources_conf.yml</code> and <code class=\"language-plaintext highlighter-rouge\">user_preferences_extra_conf.yml</code> to reside, by setting it in your <code class=\"language-plaintext highlighter-rouge\">group_vars/galaxyservers.yml</code>:</p>\n\n      <div class=\"language-diff highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gd\">--- a/group_vars/galaxyservers.yml\n</span><span class=\"gi\">+++ b/group_vars/galaxyservers.yml\n</span><span class=\"p\">@@ -35,6 +35,8 @@</span> galaxy_config:\n     tool_data_path: \"{{ galaxy_mutable_data_dir }}/tool-data\"\n     job_config_file: \"{{ galaxy_config_dir }}/job_conf.yml\"\n<span class=\"gi\">+    file_sources_config_file: \"{{ galaxy_config_dir }}/file_sources_conf.yml\"\n+    user_preferences_extra_conf_path: \"{{ galaxy_config_dir }}/user_preferences_extra_conf.yml\"\n</span></code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Deploy the new config files using the <code class=\"language-plaintext highlighter-rouge\">galaxy_config_files</code> var (also from the <code class=\"language-plaintext highlighter-rouge\">galaxyproject.galaxy</code> role) in your group vars:</p>\n\n      <div class=\"language-diff highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gd\">--- a/group_vars/galaxyservers.yml\n</span><span class=\"gi\">+++ b/group_vars/galaxyservers.yml\n</span><span class=\"p\">@@ -65,6 +67,12 @@</span> galaxy_config_templates:\n   - src: templates/galaxy/config/job_conf.yml.j2\n     dest: \"{{ galaxy_config.galaxy.job_config_file }}\"\n    \n<span class=\"gi\">+galaxy_config_files:\n+  - src: files/galaxy/config/user_preferences_extra_conf.yml\n+    dest: \"{{ galaxy_config.galaxy.user_preferences_extra_conf_path }}\"\n+  - src: files/galaxy/config/file_sources_conf.yml\n+    dest: \"{{ galaxy_config.galaxy.file_sources_config_file }}\"\n+\n</span></code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Run the playbook. At the very end, you should see output like the following indicating that Galaxy has been restarted:</p>\n\n      <blockquote class=\"code-2col\">\n        <blockquote class=\"code-in\">\n          <code-in-title>Bash</code-in-title>\n          <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>ansible-playbook galaxy.yml\n</code></pre></div>          </div>\n        </blockquote>\n\n        <blockquote class=\"code-out\">\n          <code-out-title>Output</code-out-title>\n          <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>...\nRUNNING HANDLER [restart galaxy] ****************************************\nchanged: [gat-88.training.galaxyproject.eu]\n</code></pre></div>          </div>\n        </blockquote>\n      </blockquote>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>Now we are ready to configure a Galaxy’s user account to upload dataset from Dropbox to the Galaxy server.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Configure Galaxy to access the Dropbox service</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Generate a Dropbox access token following the <a href=\"https://www.dropbox.com/lp/developers/reference/oauth-guide\">Dropbox Oauth guide</a></p>\n    </li>\n    <li>Add the Dropbox access token in the Galaxy’s user preferences\n      <ul>\n        <li>Go to https://&lt;server&gt;/user/information</li>\n        <li>Here you will find the form user will fill in with his own Dropbox access token:\n<a href=\"../../images/storage_dropbox_form.png\" rel=\"noopener noreferrer\"><img src=\"../../images/storage_dropbox_form.png\" alt=\"user preferences form. \" width=\"1243\" height=\"490\" loading=\"lazy\" /></a></li>\n      </ul>\n    </li>\n    <li>Click the upload icon toward the top left corner.\nYou will have a new “Choose remote files” button that will open the remote files windows with the link to reach your Dropbox files:\n <a href=\"../../images/storage_dropbox_remote_files_window.png\" rel=\"noopener noreferrer\"><img src=\"../../images/storage_dropbox_remote_files_window.png\" alt=\"remote files window. \" width=\"912\" height=\"628\" loading=\"lazy\" /></a></li>\n  </ol>\n\n</blockquote>\n"],"ref_slides":["# Object Store Plugins\n\nDirect:\n- Disk\n- Amazon S3/OpenStack Swift\n- Experimental\n  - Azure\n  - CloudBridge → S3, Swift, Azure, GCE\n\n---\n\n# Object Storage Strategies\n\n.pull-left[\n**Hierarchical**\n\n- Choose between options based on priority\n- Always uses first (unless max_pct_full + too full)\n\n]\n\n.pull-right[\n**Distributed**\n\n- Randomly choose between several storage options\n- Can fill up at same rate, or different (weighting)\n]\n"],"hands_on":true,"slides":true,"mod_date":"2024-05-31 14:27:26 +0000","pub_date":"2019-01-28 04:12:36 +0000","version":49,"api":"https://training.galaxyproject.org/training-material/api/topics/admin/tutorials/object-store/tutorial.json","tools":[],"supported_servers":[],"topic_name_human":"Galaxy Server administration","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools: []\n","tours":false,"video":false,"slides_recordings":[{"captioners":["cat-bro"],"date":"2021-02-15","galaxy_version":"21.01","length":"18M","youtube_id":"Hv2bvjk5sjE","speakers":["gmauro"]}],"translations":{"tutorial":[],"slides":[],"video":false},"license":"CC-BY-4.0","type":"tutorial","logo":"assets/images/gat.png","recordings":[{"captioners":["cat-bro"],"date":"2021-02-15","galaxy_version":"21.01","length":"18M","youtube_id":"Hv2bvjk5sjE","speakers":["gmauro"]}],"redirect_from":["/short/admin/object-store/slides","/short/S00018"]}