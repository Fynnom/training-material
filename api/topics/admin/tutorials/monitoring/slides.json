{"layout":"tutorial_slides","title":"Galaxy Monitoring with Telegraf and Grafana","questions":["How to monitor Galaxy with Telegraf","How do I set up InfluxDB","How can I make graphs in Grafana?","How can I best alert on important metrics?"],"objectives":["Setup InfluxDB","Setup Telegraf","Setup Grafana","Create several charts"],"time_estimation":"2h","tags":["ansible","monitoring","git-gat"],"subtopic":"monitoring","key_points":["Telegraf provides an easy solution to monitor servers","Galaxy can send metrics to Telegraf","Telegraf can run arbitrary commands like `gxadmin`, which provides influx formatted output","InfluxDB can collect metrics from Telegraf","Use Grafana to visualise these metrics, and monitor their values"],"contributors":["natefoo","bgruening","slugger70","hexylena"],"requirements":[{"type":"internal","topic_name":"admin","tutorials":["ansible","ansible-galaxy","gxadmin"]}],"abbreviations":{"TSDB":"Time Series Database"},"js_requirements":{"mathjax":null,"mermaid":false},"short_id":"S00017","url":"/topics/admin/tutorials/monitoring/slides.html","topic_name":"admin","tutorial_name":"monitoring","dir":"topics/admin/tutorials/monitoring","symlink":null,"id":"admin/monitoring","ref_tutorials":["<p>Monitoring is an incredibly important part of server monitoring and maintenance. Being able to observe trends and identify hot spots by collecting metrics gives you a significant ability to respond to any issues that arise in production. Monitoring is quite easy to get started with, it can be as simple as writing a quick shell script in order to start collecting metrics.</p>\n\n<blockquote class=\"agenda\">\n  <agenda-title></agenda-title>\n\n<ol id=\"markdown-toc\">\n  <li><a href=\"#data-flow\" id=\"markdown-toc-data-flow\">Data Flow</a></li>\n  <li><a href=\"#infrastructure\" id=\"markdown-toc-infrastructure\">Infrastructure</a>    <ol>\n      <li><a href=\"#influxdb\" id=\"markdown-toc-influxdb\">InfluxDB</a></li>\n      <li><a href=\"#telegraf\" id=\"markdown-toc-telegraf\">Telegraf</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#monitoring-with-grafana\" id=\"markdown-toc-monitoring-with-grafana\">Monitoring with Grafana</a>    <ol>\n      <li><a href=\"#grafana\" id=\"markdown-toc-grafana\">Grafana</a></li>\n      <li><a href=\"#importing-a-dashboard\" id=\"markdown-toc-importing-a-dashboard\">Importing a dashboard</a></li>\n      <li><a href=\"#setting-up-a-galaxy-dashboard\" id=\"markdown-toc-setting-up-a-galaxy-dashboard\">Setting up a Galaxy dashboard</a></li>\n      <li><a href=\"#styling\" id=\"markdown-toc-styling\">Styling</a></li>\n      <li><a href=\"#monitoring\" id=\"markdown-toc-monitoring\">Monitoring</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#telegraf--gxadmin\" id=\"markdown-toc-telegraf--gxadmin\">Telegraf &amp; <code class=\"language-plaintext highlighter-rouge\">gxadmin</code></a>    <ol>\n      <li><a href=\"#installing-gxadmin\" id=\"markdown-toc-installing-gxadmin\">Installing gxadmin</a></li>\n      <li><a href=\"#configuring-telegraf-for-gxadmin\" id=\"markdown-toc-configuring-telegraf-for-gxadmin\">Configuring Telegraf for gxadmin</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#conclusion\" id=\"markdown-toc-conclusion\">Conclusion</a></li>\n</ol>\n\n</blockquote>\n\n<!--SNIPPET-->\n<blockquote class=\"comment\">   <div class=\"box-title comment-title\" id=\"comment-galaxy-admin-training-path\"><i class=\"far fa-comment-dots\" aria-hidden=\"true\"></i> Comment: Galaxy Admin Training Path</div>   <p>The yearly Galaxy Admin Training follows a specific ordering of tutorials. Use this timeline to help keep track of where you are in Galaxy Admin Training.</p>   <ol id=\"git-gat-timeline\">                    <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/ansible-galaxy/tutorial.html\">             <div>Step 1</div>             <div>ansible-galaxy</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/backup-cleanup/tutorial.html\">             <div>Step 2</div>             <div>backup-cleanup</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/customization/tutorial.html\">             <div>Step 3</div>             <div>customization</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/tus/tutorial.html\">             <div>Step 4</div>             <div>tus</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/cvmfs/tutorial.html\">             <div>Step 5</div>             <div>cvmfs</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/apptainer/tutorial.html\">             <div>Step 6</div>             <div>apptainer</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/tool-management/tutorial.html\">             <div>Step 7</div>             <div>tool-management</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/reference-genomes/tutorial.html\">             <div>Step 8</div>             <div>reference-genomes</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/data-library/tutorial.html\">             <div>Step 9</div>             <div>data-library</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/dev/tutorials/bioblend-api/tutorial.html\">             <div>Step 10</div>             <div>dev/bioblend-api</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/connect-to-compute-cluster/tutorial.html\">             <div>Step 11</div>             <div>connect-to-compute-cluster</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/job-destinations/tutorial.html\">             <div>Step 12</div>             <div>job-destinations</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/pulsar/tutorial.html\">             <div>Step 13</div>             <div>pulsar</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/celery/tutorial.html\">             <div>Step 14</div>             <div>celery</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/gxadmin/tutorial.html\">             <div>Step 15</div>             <div>gxadmin</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/reports/tutorial.html\">             <div>Step 16</div>             <div>reports</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"active\">         <a href=\"/training-material/topics/admin/tutorials/monitoring/tutorial.html\">             <div>Step 17</div>             <div>monitoring</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"\">         <a href=\"/training-material/topics/admin/tutorials/tiaas/tutorial.html\">             <div>Step 18</div>             <div>tiaas</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"\">         <a href=\"/training-material/topics/admin/tutorials/sentry/tutorial.html\">             <div>Step 19</div>             <div>sentry</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"\">         <a href=\"/training-material/topics/admin/tutorials/ftp/tutorial.html\">             <div>Step 20</div>             <div>ftp</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"\">         <a href=\"/training-material/topics/admin/tutorials/beacon/tutorial.html\">             <div>Step 21</div>             <div>beacon</div>         </a>     </li>           </ol> </blockquote>\n<p><!--END_SNIPPET--></p>\n\n<p>This tutorial explicitly assumes you are starting with a setup like that created in the <em>Galaxy installation with Ansible</em> tutorial</p>\n\n<h1 id=\"data-flow\">Data Flow</h1>\n\n<p>The monitoring setup we (UseGalaxy.*) use involves compute nodes collecting metrics and forwarding the data to a central collector. On each node we have a data collector running (Telegraf) which collects data from numerous sources before aggregating it and forwarding it onwards. On another, sometimes public, node we accept and collect all of these metrics (InfluxDB) and provide an interface to visualise and query that data (Grafana).</p>\n\n<p>For UseGalaxy.eu, we pre-install Telegraf on our compute node images. Whenever we launch new compute nodes, they automatically start sending data to our central collection point. Telegraf additionally provides a nice feature of aggregating metrics it collects, batching them up before sending them off to InfluxDB. Telegraf has built in data collectors, or can run command line scripts and tools which output specifically formatted data.</p>\n\n<p>Telegraf communicates with InfluxDB using a JSON based HTTP API, making it easy to write custom tooling to send data there, if need be. Grafana provides the visualisation component, the most interesting component for most consumers of the metrics and monitoring.</p>\n\n<h1 id=\"infrastructure\">Infrastructure</h1>\n\n<p>Setting up the infrastructure is quite simple thanks to the automation provided by Ansible. We will first setup a playbook for a “monitoring” machine, which will collect and visualize our data using InfluxDB and Grafana. We will then expand the Galaxy playbook to include Telegraf on the machine to monitor both it and Galaxy itself. In this tutorial we will do everything on the same machine. In practice you can separate these services to different machines, if you wish. The only requirement is that Telegraf run on the machine from which you wish to collect data.</p>\n\n<h2 id=\"influxdb\">InfluxDB</h2>\n\n<p><a href=\"https://www.influxdata.com/\">InfluxDB</a> provides the data storage for monitoring. It is a Time Series Database (TSDB), so it has been designed specifically for storing time-series data like monitoring and metrics. There are other TSBD options for storing data but we have had good experiences with this one. TSBDs commonly feature some form of automatic data expiration after a set period of time. In InfluxDB these are known as “retention policies”. Outside of this feature, it is a <a href=\"https://docs.influxdata.com/influxdb/v1.7/concepts/crosswalk/\">relatively normal database</a>.</p>\n\n<p>The available Ansible roles for InfluxDB unfortunately do not support configuring databases or users or retention policies. Ansible itself contains <a href=\"https://docs.ansible.com/ansible/2.9/modules/list_of_database_modules.html#influxdb\">several modules</a> you can use to write your own roles, but nothing generic. UseGalaxy.eu wrote <a href=\"https://github.com/usegalaxy-eu/infrastructure-playbook/blob/master/roles/hxr.influxdb/tasks/main.yml\">their own role</a> for setting up their InfluxDB database, but it is not reusable enough for it to be used here yet. If you plan to automate your entire setup, this tutorial can perhaps provide inspiration for writing your own Ansible role. However, in this case it is sufficient to manually create your users and retention policies as a one-off task.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Setting up InfluxDB</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Edit your <code class=\"language-plaintext highlighter-rouge\">requirements.yml</code> and add the following:</p>\n\n      <div data-commit=\"Add requirement\" class=\"language-diff highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gd\">--- a/requirements.yml\n</span><span class=\"gi\">+++ b/requirements.yml\n</span><span class=\"p\">@@ -43,3 +43,5 @@</span>\n   version: 1.8.0\n - name: usegalaxy_eu.flower\n   version: 1.0.2\n<span class=\"gi\">+- src: usegalaxy_eu.influxdb\n+  version: v6.0.7\n</span>   \n</code></pre></div>      </div>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-how-to-read-a-diff\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-how-to-read-a-diff\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: How to read a Diff</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <p>If you haven’t worked with diffs before, this can be something quite new or different.</p>   <p>If we have two files, let’s say a grocery list, in two files. We’ll call them ‘a’ and ‘b’.</p>   <blockquote class=\"code-2col\">   <blockquote class=\"code-in\">     <code-in-title>Old</code-in-title>     <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ cat old<br />🍎<br />🍐<br />🍊<br />🍋<br />🍒<br />🥑<br /></code></pre></div>    </div>   </blockquote>   <blockquote class=\"code-out\">     <code-out-title>New</code-out-title>     <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ cat new<br />🍎<br />🍐<br />🍊<br />🍋<br />🍍<br />🥑<br /></code></pre></div>    </div>   </blockquote> </blockquote>   <p>We can see that they have some different entries. We’ve removed 🍒 because they’re awful, and replaced them with an 🍍</p>   <p>Diff lets us compare these files</p>   <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>diff old new<br />5c5<br />&lt; 🍒<br /><span class=\"nt\">---</span><br /><span class=\"o\">&gt;</span> 🍍<br /></code></pre></div></div>   <p>Here we see that 🍒 is only in a, and 🍍 is only in b. But otherwise the files are identical.</p>   <p>There are a couple different formats to diffs, one is the ‘unified diff’</p>   <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>diff <span class=\"nt\">-U2</span> old new<br /><span class=\"nt\">---</span> old\t2022-02-16 14:06:19.697132568 +0100<br />+++ new\t2022-02-16 14:06:36.340962616 +0100<br />@@ <span class=\"nt\">-3</span>,4 +3,4 @@<br /> 🍊<br /> 🍋<br />-🍒<br />+🍍<br /> 🥑<br /></code></pre></div></div>   <p>This is basically what you see in the training materials which gives you a lot of context about the changes:</p>   <ul>   <li><code class=\"language-plaintext highlighter-rouge\">--- old</code> is the ‘old’ file in our view</li>   <li><code class=\"language-plaintext highlighter-rouge\">+++ new</code> is the ‘new’ file</li>   <li>@@ these lines tell us where the change occurs and how many lines are added or removed.</li>   <li>Lines starting with a - are removed from our ‘new’ file</li>   <li>Lines with a + have been added.</li> </ul>   <p>So when you go to apply these diffs to your files in the training:</p>   <ol>   <li>Ignore the header</li>   <li>Remove lines starting with - from your file</li>   <li>Add lines starting with + to your file</li> </ol>   <p>The other lines (🍊/🍋 and 🥑) above just provide “context”, they help you know where a change belongs in a file, but <strong>should not be edited</strong> when you’re making the above change. Given the above diff, you would find a line with a 🍒, and replace it with a 🍍</p>   <h4 id=\"added--removed-lines\">Added &amp; Removed Lines</h4>   <p>Removals are very easy to spot, we just have removed lines</p>   <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">---</span> old\t2022-02-16 14:06:19.697132568 +0100<br />+++ new\t2022-02-16 14:10:14.370722802 +0100<br />@@ <span class=\"nt\">-4</span>,3 +4,2 @@<br /> 🍋<br /> 🍒<br />-🥑<br /></code></pre></div></div>   <p>And additions likewise are very easy, just add a new line, between the other lines in your file.</p>   <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">---</span> old\t2022-02-16 14:06:19.697132568 +0100<br />+++ new\t2022-02-16 14:11:11.422135393 +0100<br />@@ <span class=\"nt\">-1</span>,3 +1,4 @@<br /> 🍎<br />+🍍<br /> 🍐<br /> 🍊<br /></code></pre></div></div>   <h4 id=\"completely-new-files\">Completely new files</h4>   <p>Completely new files look a bit different, there the “old” file is <code class=\"language-plaintext highlighter-rouge\">/dev/null</code>, the empty file in a Linux machine.</p>   <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nv\">$ </span>diff <span class=\"nt\">-U2</span> /dev/null old<br /><span class=\"nt\">---</span> /dev/null\t2022-02-15 11:47:16.100000270 +0100<br />+++ old\t2022-02-16 14:06:19.697132568 +0100<br />@@ <span class=\"nt\">-0</span>,0 +1,6 @@<br />+🍎<br />+🍐<br />+🍊<br />+🍋<br />+🍒<br />+🥑<br /></code></pre></div></div>   <p>And removed files are similar, except with the new file being /dev/null</p>   <div class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"nt\">---</span> old\t2022-02-16 14:06:19.697132568 +0100<br />+++ /dev/null\t2022-02-15 11:47:16.100000270 +0100<br />@@ <span class=\"nt\">-1</span>,6 +0,0 @@<br />-🍎<br />-🍐<br />-🍊<br />-🍋<br />-🍒<br />-🥑<br /></code></pre></div></div> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li>\n      <p>Install the role</p>\n\n      <blockquote class=\"code-in\">\n        <code-in-title>Bash</code-in-title>\n        <div data-cmd=\"true\" class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>ansible-galaxy <span class=\"nb\">install</span> <span class=\"nt\">-p</span> roles <span class=\"nt\">-r</span> requirements.yml\n</code></pre></div>        </div>\n      </blockquote>\n    </li>\n    <li>\n      <p>Create a new playbook, <code class=\"language-plaintext highlighter-rouge\">monitoring.yml</code> with the following:</p>\n\n      <div data-commit=\"Setup the monitoring playbook\" class=\"language-diff highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gd\">--- /dev/null\n</span><span class=\"gi\">+++ b/monitoring.yml\n</span><span class=\"p\">@@ -0,0 +1,4 @@</span>\n<span class=\"gi\">+- hosts: monitoring\n+  become: true\n+  roles:\n+    - usegalaxy_eu.influxdb\n</span>   \n</code></pre></div>      </div>\n\n      <p>During this tutorial we will install everything on the same host, but often one keeps the monitoring infrastructure (Grafana, InfluxDB, Sentry) on a separate host.</p>\n    </li>\n    <li>\n      <p>Edit the inventory file (<code class=\"language-plaintext highlighter-rouge\">hosts</code>) an add a group for monitoring like:</p>\n\n      <div data-commit=\"Add the monitoring host\" class=\"language-diff highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gd\">--- a/hosts\n</span><span class=\"gi\">+++ b/hosts\n</span><span class=\"p\">@@ -4,3 +4,5 @@</span> gat-0.eu.galaxy.training ansible_connection=local ansible_user=ubuntu\n galaxyservers\n [pulsarservers]\n gat-0.oz.galaxy.training ansible_user=ubuntu\n<span class=\"gi\">+[monitoring]\n+gat-0.eu.galaxy.training ansible_connection=local ansible_user=ubuntu\n</span>   \n</code></pre></div>      </div>\n\n      <p><strong>Ensure that the hostname is the full hostname of your machine.</strong></p>\n    </li>\n    <li>\n      <p>Run the playbook:</p>\n\n      <blockquote class=\"code-in\">\n        <code-in-title>Bash</code-in-title>\n        <div data-cmd=\"true\" class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>ansible-playbook monitoring.yml\n</code></pre></div>        </div>\n      </blockquote>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"hidden\">\n  <div data-test=\"true\" class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>1.sh\n</code></pre></div>  </div>\n</blockquote>\n\n<p>This will setup an InfluxDB server listening on port <code class=\"language-plaintext highlighter-rouge\">:8086</code>. The service is currently unauthenticated but it is only listening on <code class=\"language-plaintext highlighter-rouge\">localhost</code> so it is less of a concern. The service can be authenticated and SSL configured quite easily but that is outside the scope of this tutorial.</p>\n\n<p>You can access the InfluxDB service by running the command <code class=\"language-plaintext highlighter-rouge\">influx</code>.</p>\n\n<div class=\"language-sql highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"err\">$</span> <span class=\"n\">influx</span>\n<span class=\"n\">Connected</span> <span class=\"k\">to</span> <span class=\"n\">http</span><span class=\"p\">:</span><span class=\"o\">//</span><span class=\"n\">localhost</span><span class=\"p\">:</span><span class=\"mi\">8086</span> <span class=\"k\">version</span> <span class=\"mi\">1</span><span class=\"p\">.</span><span class=\"mi\">7</span><span class=\"p\">.</span><span class=\"mi\">7</span>\n<span class=\"n\">InfluxDB</span> <span class=\"n\">shell</span> <span class=\"k\">version</span><span class=\"p\">:</span> <span class=\"mi\">1</span><span class=\"p\">.</span><span class=\"mi\">7</span><span class=\"p\">.</span><span class=\"mi\">7</span>\n<span class=\"o\">&gt;</span> <span class=\"k\">show</span> <span class=\"n\">databases</span>\n<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">databases</span>\n<span class=\"n\">name</span>\n<span class=\"c1\">----</span>\n<span class=\"n\">_internal</span>\n<span class=\"o\">&gt;</span> <span class=\"n\">use</span> <span class=\"n\">_internal</span>\n<span class=\"k\">Using</span> <span class=\"k\">database</span> <span class=\"n\">_internal</span>\n<span class=\"o\">&gt;</span> <span class=\"k\">show</span> <span class=\"n\">measurements</span>\n<span class=\"n\">name</span><span class=\"p\">:</span> <span class=\"n\">measurements</span>\n<span class=\"n\">name</span>\n<span class=\"c1\">----</span>\n<span class=\"n\">cq</span>\n<span class=\"k\">database</span>\n<span class=\"n\">httpd</span>\n<span class=\"n\">queryExecutor</span>\n<span class=\"n\">runtime</span>\n<span class=\"n\">shard</span>\n<span class=\"n\">subscriber</span>\n<span class=\"n\">tsm1_cache</span>\n<span class=\"n\">tsm1_engine</span>\n<span class=\"n\">tsm1_filestore</span>\n<span class=\"n\">tsm1_wal</span>\n<span class=\"k\">write</span>\n</code></pre></div></div>\n\n<p>The <code class=\"language-plaintext highlighter-rouge\">influx</code> command provides command line access to InfluxDB in a similar fashion to <code class=\"language-plaintext highlighter-rouge\">psql</code> for Postgresql. It provides commands like <code class=\"language-plaintext highlighter-rouge\">show databases</code> and others, but we will not use this interface very often. Telegraf will automatically try to create any database needed, and no interaction is required to setup Grafana to talk to the database.</p>\n\n<h2 id=\"telegraf\">Telegraf</h2>\n\n<p>We use <a href=\"https://github.com/influxdata/telegraf\">Telegraf</a> for monitoring as it is incredibly easy to get started with, and it natively integrates with InfluxDB.</p>\n\n<h3 id=\"data-input\">Data Input</h3>\n\n<p>Telegraf has extensive documentation on how to configure different types of monitoring, and it supports <a href=\"https://github.com/influxdata/telegraf#input-plugins\">a huge array of inputs</a>. If Telegraf doesn’t support a specific data source you wish to query, you can write a bash script to query this data, and have Telegraf <a href=\"https://github.com/influxdata/telegraf/tree/master/plugins/inputs/exec\">execute it regularly</a>. Telegraf supports several text formats here but the easiest to manage is the InfluxDB line protocol format. The InfluxDB format looks like:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>weather,country=germany,city=freiburg temperature=25,wind=0 1453832006274169688\nweather,country=usa,city=state-college temperature=33,wind=10 1453832006274169688\n</code></pre></div></div>\n\n<p>The first portion is the metric name, in both of these cases <code class=\"language-plaintext highlighter-rouge\">weather</code>. This is just a unique key for a metric which describes the data being collected. Telegraf commonly collects metrics like <code class=\"language-plaintext highlighter-rouge\">cpu</code>, or <code class=\"language-plaintext highlighter-rouge\">disk</code>, or <code class=\"language-plaintext highlighter-rouge\">mem</code>. After the metric name, up to the first space are tags. Tags are used to store categorical data usually, something that is <a href=\"https://en.wikipedia.org/wiki/Continuous_or_discrete_variable\">discrete</a> and <a href=\"https://en.wikipedia.org/wiki/Enumeration\">enumerable</a>. If you’re interested in the weather you would collect some information from a particular city, and then <em>tag</em> these values with information about where they’re collected. After the space, are the various values or data points that are of interest. For weather this would be information like temperature, wind speed or direction, percentage cloud coverage, etc. After the final space is a timestamp, formatted as <a href=\"https://en.wikipedia.org/wiki/Unix_time\">Unix epoch</a> with nanosecond precision.</p>\n\n<p>To apply this example to real world data, we’ll look at the some example output of the <a href=\"https://github.com/influxdata/telegraf/tree/master/plugins/inputs/disk\"><code class=\"language-plaintext highlighter-rouge\">disk</code> plugin</a>, which measures information about disks mounted to a server:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>disk,device=devtmpfs,fstype=devtmpfs,host=stats.galaxyproject.eu,mode=rw,path=/dev free=952795136i,inodes_free=232283i,inodes_total=232616i,inodes_used=333i,total=952795136i,used=0i,used_percent=0 1564485157000000000\ndisk,device=tmpfs,fstype=tmpfs,host=stats.galaxyproject.eu,mode=rw,path=/dev/shm free=963690496i,inodes_free=235275i,inodes_total=235276i,inodes_used=1i,total=963690496i,used=0i,used_percent=0 1564485157000000000\ndisk,device=tmpfs,fstype=tmpfs,host=stats.galaxyproject.eu,mode=rw,path=/run free=862007296i,inodes_free=234817i,inodes_total=235276i,inodes_used=459i,total=963690496i,used=101683200i,used_percent=10.551437460684472 1564485157000000000\ndisk,device=tmpfs,fstype=tmpfs,host=stats.galaxyproject.eu,mode=ro,path=/sys/fs/cgroup free=963690496i,inodes_free=235260i,inodes_total=235276i,inodes_used=16i,total=963690496i,used=0i,used_percent=0 1564485157000000000\ndisk,device=vda2,fstype=xfs,host=stats.galaxyproject.eu,mode=rw,path=/ free=6652604416i,inodes_free=6134444i,inodes_total=6290368i,inodes_used=155924i,total=12872298496i,used=6219694080i,used_percent=48.31844197780791 1564485157000000000\ndisk,device=vdb,fstype=xfs,host=stats.galaxyproject.eu,mode=rw,path=/vdb free=2013384704i,inodes_free=1044728i,inodes_total=1048576i,inodes_used=3848i,total=2136997888i,used=123613184i,used_percent=5.78443173454367 1564485157000000000\ndisk,device=tmpfs,fstype=tmpfs,host=stats.galaxyproject.eu,mode=rw,path=/run/user/0 free=192741376i,inodes_free=235275i,inodes_total=235276i,inodes_used=1i,total=192741376i,used=0i,used_percent=0 1564485157000000000\ndisk,device=tmpfs,fstype=tmpfs,host=stats.galaxyproject.eu,mode=rw,path=/run/user/1000 free=192741376i,inodes_free=235275i,inodes_total=235276i,inodes_used=1i,total=192741376i,used=0i,used_percent=0 1564485157000000000\n\n</code></pre></div></div>\n\n<p>Reformatting one of the lines to be a bit easier to read:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>disk,\n\tdevice=vdb,\n\tfstype=xfs,\n\thost=stats.galaxyproject.eu,\n\tmode=rw,\n\tpath=/vdb\n\n\tfree=2013384704i,\n\tinodes_free=1044728i,\n\tinodes_total=1048576i,\n\tinodes_used=3848i,\n\ttotal=2136997888i,\n\tused=123613184i,\n\tused_percent=5.78443173454367\n\n\t1564485157000000000\n</code></pre></div></div>\n\n<p>The plugin generates a line of output per disk. It is tagged with the <code class=\"language-plaintext highlighter-rouge\">fstype</code>, the type of the filesystem (e.g. <code class=\"language-plaintext highlighter-rouge\">ext3</code>/<code class=\"language-plaintext highlighter-rouge\">ext4</code>/<code class=\"language-plaintext highlighter-rouge\">xfs</code>/<code class=\"language-plaintext highlighter-rouge\">autofs</code>/etc.), the mode by which the filesystem was mounted (<code class=\"language-plaintext highlighter-rouge\">rw</code> or <code class=\"language-plaintext highlighter-rouge\">ro</code>), and the path to which the filesystem was mounted. Then various numbers are collected, the <code class=\"language-plaintext highlighter-rouge\">i</code> suffix meaning an <a href=\"https://en.wikipedia.org/wiki/Integer\">integer</a>. Those without a suffix are <a href=\"https://en.wikipedia.org/wiki/Floating-point_arithmetic\">floats</a>. In this example, you can see that it is an <code class=\"language-plaintext highlighter-rouge\">xfs</code> formatted device, available as vdb, mounted read-write on the path /vdb. Telegraf automatically tags values with the name of the host from which the data was collected.</p>\n\n<p>The values collected usually have quite self-explanatory names. Here there are <code class=\"language-plaintext highlighter-rouge\">2013384704</code> bytes free on the disk, 1044728 <a href=\"https://en.wikipedia.org/wiki/Inode\">inodes</a>, so many bytes total and used, and finally 5.784% disk usage.</p>\n\n<h3 id=\"gxadmin\"><code class=\"language-plaintext highlighter-rouge\">gxadmin</code></h3>\n\n<p>In the Galaxy world, the InfluxDB line protocol format and <a href=\"https://github.com/influxdata/telegraf/tree/master/plugins/inputs/exec\">exec</a> plugin are commonly seen together in conjunction with <a href=\"https://github.com/usegalaxy-eu/gxadmin\">gxadmin</a> to run various database queries, and store the results into InfluxDB.</p>\n\n<p><code class=\"language-plaintext highlighter-rouge\">gxadmin</code> provides various commands to inspect the database like <code class=\"language-plaintext highlighter-rouge\">gxadmin query queue-detail</code>. It was written such that many of the queries can be automatically formatted for consumption by InfluxDB:</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>$ gxadmin iquery queue-overview --short-tool-id\nqueue-overview,tool_id=__SET_METADATA__,tool_version=1.0.1,state=new,handler=handler_main_9,destination_id=unknown,job_runner_name=unknown count=3\nqueue-overview,tool_id=iuc/mothur_pre_cluster/mothur_pre_cluster,tool_version=1.39.5.0,state=new,handler=handler_main_2,destination_id=unknown,job_runner_name=unknown count=1\n</code></pre></div></div>\n\n<p>If Telegraf runs this command in an exec block, the data will then be available for graphing. Here the only numeric value we’re collecting is the <em>count</em> of how many jobs of that type are currently running.</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>queue-overview,\n\ttool_id=__SET_METADATA__,\n\ttool_version=1.0.1,\n\tstate=new,\n\thandler=handler_main_9,\n\tdestination_id=unknown,\n\tjob_runner_name=unknown\n\n\tcount=3\n</code></pre></div></div>\n\n<p>We capture information about what tool is running, the job state, and where it is running. This will allow us to produce nice graphs of the current queue status, how many jobs are new or queued or running.</p>\n\n<h3 id=\"configuring-telegraf\">Configuring Telegraf</h3>\n\n<p>Setting up Telegraf is again very simple. We just add a single role to our playbook and set some variables.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Dependencies</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Edit your <code class=\"language-plaintext highlighter-rouge\">requirements.yml</code> and add the following:</p>\n\n      <div data-commit=\"Add Telegraf requirement\" class=\"language-diff highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gd\">--- a/requirements.yml\n</span><span class=\"gi\">+++ b/requirements.yml\n</span><span class=\"p\">@@ -45,3 +45,7 @@</span>\n   version: 1.0.2\n - src: usegalaxy_eu.influxdb\n   version: v6.0.7\n<span class=\"gi\">+# Monitoring\n+- name: dj-wasabi.telegraf\n+  src: https://github.com/dj-wasabi/ansible-telegraf\n+  version: 6f6fdf7f5ead491560783d52528b79e9e088bd5b\n</span>   \n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Install the requirements</p>\n\n      <blockquote class=\"code-in\">\n        <code-in-title>Bash</code-in-title>\n        <div data-cmd=\"true\" class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>ansible-galaxy <span class=\"nb\">install</span> <span class=\"nt\">-p</span> roles <span class=\"nt\">-r</span> requirements.yml\n</code></pre></div>        </div>\n      </blockquote>\n    </li>\n    <li>\n      <p>Add an entry to the <em>end</em> of your <code class=\"language-plaintext highlighter-rouge\">galaxy.yml</code> playbook under <code class=\"language-plaintext highlighter-rouge\">roles:</code></p>\n\n      <div data-commit=\"Add telegraf to the monitoring playbook\" class=\"language-diff highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gd\">--- a/galaxy.yml\n</span><span class=\"gi\">+++ b/galaxy.yml\n</span><span class=\"p\">@@ -49,6 +49,7 @@</span>\n     - usegalaxy_eu.rabbitmqserver\n     - galaxyproject.gxadmin\n     - galaxyproject.cvmfs\n<span class=\"gi\">+    - dj-wasabi.telegraf\n</span>   post_tasks:\n     - name: Setup gxadmin cleanup task\n       ansible.builtin.cron:\n   \n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Create and edit <code class=\"language-plaintext highlighter-rouge\">group_vars/all.yml</code> and add the following variables:</p>\n\n      <div data-commit=\"Setup telegraf's variables\" class=\"language-diff highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gd\">--- a/group_vars/all.yml\n</span><span class=\"gi\">+++ b/group_vars/all.yml\n</span><span class=\"p\">@@ -20,3 +20,28 @@</span> galaxy_job_metrics_plugins:\n   - type: env\n   - type: cgroup\n   - type: hostname\n<span class=\"gi\">+\n+# Telegraf\n+telegraf_agent_package_state: latest\n+\n+# Configure the output to point to an InfluxDB\n+# running on localhost, and # place data in the\n+# database \"telegraf\" which will be created if need be.\n+telegraf_agent_output:\n+  - type: influxdb\n+    config:\n+    - urls = [\"http://127.0.0.1:8086\"]\n+    - database = \"telegraf\"\n+\n+# The default plugins, applied to any telegraf-configured host\n+telegraf_plugins_default:\n+  - plugin: cpu\n+  - plugin: disk\n+  - plugin: kernel\n+  - plugin: processes\n+  - plugin: io\n+  - plugin: mem\n+  - plugin: system\n+  - plugin: swap\n+  - plugin: net\n+  - plugin: netstat\n</span>   \n</code></pre></div>      </div>\n\n      <p>This configures telegraf to output to the configured influxdb server in the <code class=\"language-plaintext highlighter-rouge\">telegraf</code> database. A number of plugins are enabled as <code class=\"language-plaintext highlighter-rouge\">defaults</code> like cpu or disk or memory, all of which is generically interesting to observe, across every host.</p>\n\n      <p>Any host that we setup Telegraf on, will have this base configuration. If you are setting up multiple hosts to be monitored, you will need to put the full hostname (or IP address) where InfluxDB will be available in the <code class=\"language-plaintext highlighter-rouge\">telegraf_agent_output</code>, rather than <code class=\"language-plaintext highlighter-rouge\">127.0.0.1</code>. That way every host with Telegraf will send data to the correct location.</p>\n    </li>\n    <li>\n      <p>Now with the generic configuration applied to all of our hosts, we will apply some specific configuration to the Galaxy server.</p>\n\n      <p>Open your <code class=\"language-plaintext highlighter-rouge\">group_vars/galaxyservers.yml</code> file, and add the following variables at the end not under any category:</p>\n\n      <div data-commit=\"Add extra monitoring for Galaxy\" class=\"language-diff highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gd\">--- a/group_vars/galaxyservers.yml\n</span><span class=\"gi\">+++ b/group_vars/galaxyservers.yml\n</span><span class=\"p\">@@ -330,3 +330,12 @@</span> flower_ui_users:\n    \n flower_environment_variables:\n   GALAXY_CONFIG_FILE: \"{{ galaxy_config_file }}\"\n<span class=\"gi\">+\n+# Telegraf\n+telegraf_plugins_extra:\n+  listen_galaxy_routes:\n+    plugin: \"statsd\"\n+    config:\n+      - service_address = \":8125\"\n+      - metric_separator = \".\"\n+      - allowed_pending_messages = 10000\n</span>   \n</code></pre></div>      </div>\n\n      <p>We have configured the <code class=\"language-plaintext highlighter-rouge\">statsd</code> plugin for telegraf, as we will use it to receive Galaxy timing data. <a href=\"https://github.com/statsd/statsd\">StatsD</a> was an earlier time series database and had an associated line protocol with a different format. Telegraf supports data sent in this format, allowing us to reuse the long-present Galaxy support for this with our newer Telegraf/InfluxDB setup. Telegraf parses the data and converts it into a format that InfluxDB can understand.</p>\n    </li>\n    <li>\n      <p>Lastly, we need to enable Galaxy to send data to Telegraf:</p>\n\n      <p>In <code class=\"language-plaintext highlighter-rouge\">group_vars/galaxyservers.yml</code>, edit the <code class=\"language-plaintext highlighter-rouge\">galaxy_config</code> block, and add <code class=\"language-plaintext highlighter-rouge\">statsd_host: localhost</code> and <code class=\"language-plaintext highlighter-rouge\">statsd_influxdb: true</code> under the <code class=\"language-plaintext highlighter-rouge\">galaxy</code> subsection. It should look like:</p>\n\n      <div data-commit=\"Add extra monitoring for Galaxy\" class=\"language-diff highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gd\">--- a/group_vars/galaxyservers.yml\n</span><span class=\"gi\">+++ b/group_vars/galaxyservers.yml\n</span><span class=\"p\">@@ -116,6 +116,9 @@</span> galaxy_config:\n     celery_conf:\n       result_backend: \"redis://localhost:6379/0\"\n     enable_celery_tasks: true\n<span class=\"gi\">+    # Monitoring\n+    statsd_host: localhost\n+    statsd_influxdb: true\n</span>   gravity:\n     process_manager: systemd\n     galaxy_root: \"{{ galaxy_root }}/server\"\n   \n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Run the <code class=\"language-plaintext highlighter-rouge\">galaxy.yml</code> playbook</p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"hidden\">\n  <div data-test=\"true\" class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>3.sh\n</code></pre></div>  </div>\n</blockquote>\n\n<h1 id=\"monitoring-with-grafana\">Monitoring with Grafana</h1>\n\n<h2 id=\"grafana\">Grafana</h2>\n\n<p><a href=\"https://grafana.com/\">Grafana</a> provides a visual interface to our metrics. It includes a nice query builder that provides a uniform experience across multiple backend databases, along with many attractive graphing and other visualization options. Each page in the Grafana webserver display is called a “dashboard.” Dashboards can each have multiple visualizations and graphs, all responding to the data collected by InfluxDB. Another benefit of using Grafana is that many of the UseGalaxy.* servers share their dashboards publicly, and you can easily copy these and use them on your own server.</p>\n\n<p>There are some nice examples of dashboards available from the public Galaxies, we recommend that you peruse them to get an idea of the possibilities:</p>\n\n<ul>\n  <li><a href=\"https://stats.galaxyproject.eu/\">UseGalaxy.eu</a></li>\n  <li><a href=\"https://stats.genome.edu.au/\">UseGalaxy.org.au</a></li>\n</ul>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Setting up Grafana</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Edit your <code class=\"language-plaintext highlighter-rouge\">requirements.yml</code> and add the following:</p>\n\n      <div data-commit=\"Add grafana requirement\" class=\"language-diff highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gd\">--- a/requirements.yml\n</span><span class=\"gi\">+++ b/requirements.yml\n</span><span class=\"p\">@@ -49,3 +49,5 @@</span>\n - name: dj-wasabi.telegraf\n   src: https://github.com/dj-wasabi/ansible-telegraf\n   version: 6f6fdf7f5ead491560783d52528b79e9e088bd5b\n<span class=\"gi\">+- src: cloudalchemy.grafana\n+  version: 0.14.2\n</span>   \n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Install the role</p>\n\n      <blockquote class=\"code-in\">\n        <code-in-title>Bash</code-in-title>\n        <div data-cmd=\"true\" class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>ansible-galaxy <span class=\"nb\">install</span> <span class=\"nt\">-p</span> roles <span class=\"nt\">-r</span> requirements.yml\n</code></pre></div>        </div>\n      </blockquote>\n    </li>\n    <li>\n      <p>Add <code class=\"language-plaintext highlighter-rouge\">cloudalchemy.grafana</code> to your <code class=\"language-plaintext highlighter-rouge\">monitoring.yml</code> playbook:</p>\n\n      <div data-commit=\"Add grafana to monitoring playbook\" class=\"language-diff highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gd\">--- a/monitoring.yml\n</span><span class=\"gi\">+++ b/monitoring.yml\n</span><span class=\"p\">@@ -2,3 +2,4 @@</span>\n   become: true\n   roles:\n     - usegalaxy_eu.influxdb\n<span class=\"gi\">+    - cloudalchemy.grafana\n</span>   \n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Edit the file <code class=\"language-plaintext highlighter-rouge\">group_vars/monitoring.yml</code> and set the following variables:</p>\n\n      <div data-commit=\"Configure Grafana\" class=\"language-diff highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gd\">--- /dev/null\n</span><span class=\"gi\">+++ b/group_vars/monitoring.yml\n</span><span class=\"p\">@@ -0,0 +1,17 @@</span>\n<span class=\"gi\">+grafana_url: \"https://{{ inventory_hostname }}/grafana/\"\n+\n+grafana_security:\n+    # Please change at least the password to something more suitable\n+    admin_user: admin\n+    admin_password: password\n+\n+# These datasources will be automatically included into Grafana\n+grafana_datasources:\n+ - name: Galaxy\n+   type: influxdb\n+   access: proxy\n+   url: http://127.0.0.1:8086\n+   isDefault: true\n+   version: 1\n+   editable: false\n+   database: telegraf\n</span>   \n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Run the monitoring playbook:</p>\n\n      <blockquote class=\"code-in\">\n        <code-in-title>Bash</code-in-title>\n        <div data-cmd=\"true\" class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>ansible-playbook monitoring.yml\n</code></pre></div>        </div>\n      </blockquote>\n    </li>\n    <li>\n      <p>Update the nginx configuration in <code class=\"language-plaintext highlighter-rouge\">templates/nginx/galaxy.j2</code> to include the following at the end, before the last curly brace</p>\n\n      <div data-commit=\"Setup nginx location for grafana\" class=\"language-diff highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gd\">--- a/templates/nginx/galaxy.j2\n</span><span class=\"gi\">+++ b/templates/nginx/galaxy.j2\n</span><span class=\"p\">@@ -108,4 +108,9 @@</span> server {\n \t\tproxy_pass http://{{ galaxy_config.gravity.reports.bind }}:/;\n \t}\n    \n<span class=\"gi\">+\tlocation /grafana/ {\n+\t\tproxy_pass http://127.0.0.1:3000/;\n+\t\tproxy_set_header Host $http_host;\n+\t}\n+\n</span> }\n   \n</code></pre></div>      </div>\n\n      <p>Since we will setup everything on the same host, we will re-use the Nginx server we setup for Galaxy. If you had planned to run the Grafana and InfluxDB servers on a separate host, you would need to setup Nginx for this host separately.</p>\n    </li>\n    <li>\n      <p>Run the Galaxy playbook which includes Nginx:</p>\n\n      <blockquote class=\"code-in\">\n        <code-in-title>Bash</code-in-title>\n        <div data-cmd=\"true\" class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>ansible-playbook galaxy.yml\n</code></pre></div>        </div>\n      </blockquote>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>This has now deployed Grafana on your domain under <code class=\"language-plaintext highlighter-rouge\">/grafana/</code>, with the username and password you set. The datasource, from which Grafana obtains data, is preconfigured. The Grafana web application will now be available, but currently there is no data available to it. We will return to Grafana shortly in the tutorial to configure dashboards once data is present.</p>\n\n<blockquote class=\"hidden\">\n  <div data-test=\"true\" class=\"language-bash highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>2.sh\n</code></pre></div>  </div>\n</blockquote>\n\n<p>The stats have been collecting in InfluxDB for a few minutes, so now we will now configure Grafana with dashboards and alerting rules.</p>\n\n<h2 id=\"importing-a-dashboard\">Importing a dashboard</h2>\n\n<p>For any public Grafana dashboard, you can copy the dashboard for your own use. This is a nice feature of Grafana that has really helped it spread in the Galaxy community, any cool thing one of us builds, everyone else can copy and build upon.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Import a dashboard</hands-on-title>\n\n  <ol>\n    <li>\n      <p><a href=\"https://stats.galaxyproject.eu/d/000000023/node-detail-infrastructure?orgId=1\">Visit UseGalaxy.eu’s Node Detail dashboard</a></p>\n    </li>\n    <li>\n      <p>Look for the sharing icon at the top and click it</p>\n    </li>\n    <li>\n      <p>Under the “Export” tab, click “Save to file”</p>\n    </li>\n    <li>\n      <p>On your own Grafana server, on the home page, hover over the <code class=\"language-plaintext highlighter-rouge\">+</code> icon and use “Import” from the menu.</p>\n    </li>\n    <li>\n      <p>Click “Upload .json file” and select the json dashboard you downloaded</p>\n    </li>\n    <li>\n      <p>Click “Import”.</p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>With this, your first dashboard should be live! You should see some data from your Galaxy instance, like CPU/load/memory/etc. This can give you a nice <code class=\"language-plaintext highlighter-rouge\">htop</code> like view into your systems, all collected in one easy dashboard. At the top you will see a box labelled “Host” with a dropdown. If you have more systems, you can click here to select between different machines.</p>\n\n<h2 id=\"setting-up-a-galaxy-dashboard\">Setting up a Galaxy dashboard</h2>\n\n<p>Importing dashboards is a good start, but it’s more interesting to create our own that’s personalised to our needs.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Create a dashboard</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Again find the <code class=\"language-plaintext highlighter-rouge\">+</code> icon in Grafana and create a dashboard. This will bring you to a new screen</p>\n    </li>\n    <li>\n      <p>Click <em>Add Query</em>, and you will be dropped into the Grafana query builder</p>\n\n      <p><a href=\"../../images/grafana-query-builder.png\" rel=\"noopener noreferrer\"><img src=\"../../images/grafana-query-builder.png\" alt=\"Grafana query builder interface. \" width=\"643\" height=\"333\" loading=\"lazy\" /></a></p>\n\n      <p>This is the query builder interface. The interface somewhat resembles a SQL query, selecting data <em>from</em> a database, <em>where</em> it meets some condition, <em>select</em>ing some specific data, and <em>grouping by</em> time period. If this isn’t immediately clear how it behaves, hopefully it will become more clear once you have built some queries.</p>\n    </li>\n    <li>Let’s build a query:\n      <ul>\n        <li>From:\n          <ul>\n            <li><em>“select measurement”</em>: <code class=\"language-plaintext highlighter-rouge\">galaxy.</code></li>\n          </ul>\n        </li>\n        <li>Select:\n          <ul>\n            <li><em>“field(value)”</em>: <code class=\"language-plaintext highlighter-rouge\">field(mean)</code></li>\n          </ul>\n        </li>\n        <li>Group by:\n          <ul>\n            <li><em>“fill(null)”</em>: <code class=\"language-plaintext highlighter-rouge\">fill(none)</code></li>\n            <li>add new (+): <code class=\"language-plaintext highlighter-rouge\">tag(path)</code></li>\n          </ul>\n        </li>\n        <li>Alias by: <code class=\"language-plaintext highlighter-rouge\">[[tag_path]]</code></li>\n      </ul>\n    </li>\n    <li>\n      <p>At the top of the page it probably says “Last 6 hours”, click this to change to “Last 30 minutes”</p>\n    </li>\n    <li>\n      <p>Remember to save the dashboard (using the <i class=\"far fa-save\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-save</span> at the top), and give it a name like “Galaxy”</p>\n    </li>\n    <li>You can hit <kbd>Escape</kbd> to exit out of the graph editor, if need be.</li>\n  </ol>\n\n</blockquote>\n\n<p>This will track how long it takes the interface to respond on various web routes and API routes. The collection of individual points is a bit hard to interpret the “feeling” of, so it’s common to add a query like the <a href=\"https://en.wikipedia.org/wiki/Percentile\">95th percentile</a> of requests. This is a value that is calculated from all of the data points collected. The 95th percentile means that 95% of requests are responded to more quickly than this value.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Add a second query to an existing graph</hands-on-title>\n\n  <ol>\n    <li>\n      <p>The top of the graph is probably labelled “Panel Title”, unless you changed it. Click this to access a dropdown and click “Edit”</p>\n    </li>\n    <li>\n      <p>On the right side you will find a button <strong>Add Query</strong>, click it.</p>\n    </li>\n    <li>Let’s build a query:\n      <ul>\n        <li>From:\n          <ul>\n            <li><em>“select measurement”</em>: <code class=\"language-plaintext highlighter-rouge\">galaxy.</code></li>\n          </ul>\n        </li>\n        <li>Select:\n          <ul>\n            <li><em>“field(value)”</em>: <code class=\"language-plaintext highlighter-rouge\">field(mean)</code></li>\n            <li>add new (+): Selectors → percentile</li>\n          </ul>\n        </li>\n        <li>Group by:\n          <ul>\n            <li><em>“fill(null)”</em>: <code class=\"language-plaintext highlighter-rouge\">fill(none)</code></li>\n          </ul>\n        </li>\n        <li>Alias by: <code class=\"language-plaintext highlighter-rouge\">percentile</code></li>\n      </ul>\n    </li>\n    <li>\n      <p>Remember to save the dashboard</p>\n    </li>\n    <li>\n      <p>You can hit <kbd>Escape</kbd> to exit out of the graph editor</p>\n    </li>\n    <li>At any time you can drag the bottom right corner of the graph to resize it as needed.</li>\n  </ol>\n\n</blockquote>\n\n<p>We should now have a graph that gives us not only individual data points, but also a more easily consumable overall representation. For many metrics there are so many data points individually collected that it can be overwhelming and so it is often useful to come up with an aggregate representation that summarises the points into a more easily consumed value. We will touch upon this again under the monitoring section.</p>\n\n<h2 id=\"styling\">Styling</h2>\n\n<p>There is a significant amount of visual styling that one can do to the graphs to make data more or less prominent as you need.</p>\n\n<figure id=\"figure-1\" style=\"max-width: 90%;\"><img src=\"../../images/grafana-graph-sections.png\" alt=\"Grafana graph configuration sections. \" width=\"67\" height=\"276\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/grafana-graph-sections.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 1</strong>:</span> Graph configuration sections, from top to bottom: data, visualisation, configuration, and alerting</figcaption></figure>\n\n<p>We will update the panel we’ve added to highlight the important information and downplay less important facets, as well as configuring it to have a nicer title than “Panel Title”</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Styling the graph</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Again edit the one graph we’ve added in our dashboard</p>\n    </li>\n    <li>\n      <p>On the left side, select the second icon, Visualisation</p>\n    </li>\n    <li>\n      <p>In the first section, we can edit some display attributes.</p>\n\n      <p>We are primarily interested in the 95th percentile line. Here we can change the display from points to lines or bars, change the tooltip that displays when we hover over the graph, among other facets.</p>\n\n      <ul>\n        <li>Click <strong>Add series override</strong>, click in the box that appears and type “percentile”, to find the series we created early. Select it when it appears. We can now apply custom styling to this series.</li>\n        <li>Click the “+” after the series override, and find <strong>“Color → change”</strong>, and choose a colour that you like.</li>\n        <li>Click the “+” again, and find <strong>“Line width → 5”</strong> to make the line more visible. This is the most important facet of the graph for us, so we can emphasise it through colour and size.</li>\n      </ul>\n    </li>\n    <li>\n      <p>In the second section, we can edit information about the Axes:</p>\n\n      <ul>\n        <li>Left Y\n          <ul>\n            <li><em>“Unit”</em>: Time → millisecond (ms)</li>\n          </ul>\n        </li>\n      </ul>\n\n      <p>This will cause the axis to display nicely at any scale. Before Grafana only knew it was a number, now it knows the type of number. If you have a request that takes 30 seconds, it will display as “30s” in Grafana, rather than “30000 ms”.</p>\n\n      <p>This section is also useful for setting the scale if your data is better viewed with a logarithmic scale, or forcing specific axis bounds. Commonly on graphs that show things like “disk usage percentage”, it can be useful to set the axis bounds to 0 and 100 to ensure that full context is available.</p>\n    </li>\n    <li>\n      <p>In the next section, “Legend” allows us to format the legend in more interesting ways.</p>\n\n      <ul>\n        <li>Options\n          <ul>\n            <li><em>“Show”</em>: yes</li>\n            <li><em>“As table”</em>: yes</li>\n            <li><em>“To right”</em>: yes</li>\n          </ul>\n        </li>\n        <li>Values\n          <ul>\n            <li><em>“Min”</em>: yes</li>\n            <li><em>“Max”</em>: yes</li>\n            <li><em>“Avg”</em>: yes</li>\n          </ul>\n        </li>\n      </ul>\n\n      <p>Clicking on the headers of the table that has appeared, you can force it to be sorted by one column or another.</p>\n    </li>\n    <li>\n      <p>On the left side, select the third icon, “General”</p>\n\n      <ul>\n        <li><em>“Title”</em>: <code class=\"language-plaintext highlighter-rouge\">Galaxy Request Times</code></li>\n      </ul>\n    </li>\n    <li>\n      <p>Save the dashboard</p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>Your graph should look something like the following:</p>\n\n<figure id=\"figure-2\" style=\"max-width: 90%;\"><img src=\"../../images/grafana-graph-final.png\" alt=\"Final graph. \" width=\"945\" height=\"346\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/grafana-graph-final.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 2</strong>:</span> The final graph should look something like this, but probably different based on the requests to your server. For this image the author made repeated, automated requests to Galaxy to produce more data points than might normally be present.</figcaption></figure>\n\n<h2 id=\"monitoring\">Monitoring</h2>\n\n<p>Collecting all of this data is interesting to visualise but as an administrator you surely have more interesting things to do than to watch graphs all day. Many organisations like to display these dashboards on large monitors, but again this assumes someone is watching it. Everyone has better things to do with their time! So we will setup monitoring on the most important aspects of our system.</p>\n\n<p>Doing monitoring effectively, without causing undue burden to the administrators (extraneous alerts that are not actionable), or the users (unexpected/unnoticed downtime), is a very complex topic. Recommended reading here includes the <a href=\"https://landing.google.com/sre/sre-book/chapters/monitoring-distributed-systems/\">monitoring chapter</a> of the Google SRE book <span class=\"citation\"><a href=\"#Beyer:2016:SRE:3006357\">Beyer <i>et al.</i> 2016</a></span> which can provide some general guidance on the topic and what metrics may be interesting or annoying to alert upon.</p>\n\n<blockquote class=\"comment\">\n  <comment-title>No generic advice</comment-title>\n  <p>We cannot easily provide generic and applicable recommendations, that work across every system and every scale. Some of these performance bounds or features you will need to discover yourself, either adding new metrics in support of this, or changing monitoring thresholds to match the values you need.</p>\n</blockquote>\n\n<p>We will add an example alert, to make you familiar with the process. This is not an alert that will probably be useful in production.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Add an alert to your graph</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Again edit the <code class=\"language-plaintext highlighter-rouge\">Galaxy Request Times</code> graph</p>\n    </li>\n    <li>\n      <p>On the left side, select the last icon, Alerting</p>\n    </li>\n    <li>\n      <p>Click <strong>Create Alert</strong></p>\n\n      <p>Alerts consist of a <em>Rule</em>, with some name, evaluated every N seconds, for a period of time. The <em>for</em> can be an important parameter, which you can read more about <a href=\"https://grafana.com/docs/alerting/rules/\">in the Grafana documentation</a>.</p>\n\n      <p>Under some <em>conditions</em>, this alert will activate. We will change the conditions of the alert here:</p>\n\n      <ul>\n        <li><em>“When”</em>: <code class=\"language-plaintext highlighter-rouge\">avg()</code></li>\n        <li><em>“OF”</em>: <code class=\"language-plaintext highlighter-rouge\">query(B, 1m, now)</code>, here we select query B, the 95th percentile track, and the average over 1 minute</li>\n        <li><em>“IS ABOVE”</em>: <code class=\"language-plaintext highlighter-rouge\">50</code></li>\n      </ul>\n\n      <p>We will not configure a notification channel in this tutorial. In practice, it is useful to do to ensure that the relevant people are notified automatically. If you and your team use <a href=\"https://grafana.com/docs/alerting/notifications/\">one of the many services</a>, then you can configure this following their documentation.</p>\n    </li>\n    <li>\n      <p>Save the dashboard</p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h1 id=\"telegraf--gxadmin\">Telegraf &amp; <code class=\"language-plaintext highlighter-rouge\">gxadmin</code></h1>\n\n<p>Via this setup using <code class=\"language-plaintext highlighter-rouge\">systemd</code> we collect metrics about Galaxy request times. To get statistics about other Galaxy-specific metrics such as the job queue status, we need to use <code class=\"language-plaintext highlighter-rouge\">gxadmin</code> to query the Galaxy database and configure Telegraf to consume this data. In this section we will setup gxadmin, and to configure Telegraf to have permissions to run it.</p>\n\n<h2 id=\"installing-gxadmin\">Installing gxadmin</h2>\n\n<p>It’s simple to install gxadmin. Here’s how you do it, if you haven’t done it already:</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Installing gxadmin and configuring Telegraf</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Edit your <code class=\"language-plaintext highlighter-rouge\">requirements.yml</code> and add the following:</p>\n\n      <div class=\"language-yml highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"pi\">-</span> <span class=\"na\">src</span><span class=\"pi\">:</span> <span class=\"s\">galaxyproject.gxadmin</span>\n  <span class=\"na\">version</span><span class=\"pi\">:</span> <span class=\"s\">0.0.12</span>\n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Install the role with <code class=\"language-plaintext highlighter-rouge\">ansible-galaxy install -p roles -r requirements.yml</code></p>\n    </li>\n    <li>\n      <p>Add the role to your <code class=\"language-plaintext highlighter-rouge\">galaxy.yml</code> playbook, it should come before the Telegraf role.</p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>You can run the playbook now, or wait until you have configured Telegraf below:</p>\n\n<h2 id=\"configuring-telegraf-for-gxadmin\">Configuring Telegraf for gxadmin</h2>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Configuring Telegraf</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Edit the <code class=\"language-plaintext highlighter-rouge\">group_vars/galaxyservers.yml</code>, we need to add some additional permissions to permit Telegraf to run <code class=\"language-plaintext highlighter-rouge\">gxadmin</code>:</p>\n\n      <div data-commit=\"Configure database permissions for Telegraf\" class=\"language-diff highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gd\">--- a/group_vars/dbservers.yml\n</span><span class=\"gi\">+++ b/group_vars/dbservers.yml\n</span><span class=\"p\">@@ -2,9 +2,16 @@</span>\n # PostgreSQL\n postgresql_objects_users:\n   - name: \"{{ galaxy_user_name }}\"\n<span class=\"gi\">+  - name: telegraf\n</span> postgresql_objects_databases:\n   - name: \"{{ galaxy_db_name }}\"\n     owner: \"{{ galaxy_user_name }}\"\n<span class=\"gi\">+postgresql_objects_privileges:\n+  - database: galaxy\n+    roles: telegraf\n+    privs: SELECT\n+    objs: ALL_IN_SCHEMA\n+\n</span>    \n # PostgreSQL Backups\n postgresql_backup_dir: /data/backups\n   \n</code></pre></div>      </div>\n    </li>\n    <li>\n      <p>Again edit the <code class=\"language-plaintext highlighter-rouge\">group_vars/galaxyservers.yml</code>, we need to configure Telegraf to run <code class=\"language-plaintext highlighter-rouge\">gxadmin</code></p>\n\n      <p>Under <code class=\"language-plaintext highlighter-rouge\">telegraf_plugins_extra</code>, where we already have set a Galaxy StatsD listener, add a stanza to monitor the Galaxy queue</p>\n\n      <div data-commit=\"Add extra monitoring for Galaxy\" class=\"language-diff highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code><span class=\"gd\">--- a/group_vars/galaxyservers.yml\n</span><span class=\"gi\">+++ b/group_vars/galaxyservers.yml\n</span><span class=\"p\">@@ -342,3 +342,10 @@</span> telegraf_plugins_extra:\n       - service_address = \":8125\"\n       - metric_separator = \".\"\n       - allowed_pending_messages = 10000\n<span class=\"gi\">+  monitor_galaxy_queue:\n+    plugin: \"exec\"\n+    config:\n+      - commands = [\"/usr/bin/env PGDATABASE=galaxy /usr/local/bin/gxadmin iquery queue-overview --short-tool-id\"]\n+      - timeout = \"10s\"\n+      - data_format = \"influx\"\n+      - interval = \"15s\"\n</span>   \n</code></pre></div>      </div>\n\n      <p>This one is slightly more complex in the configuration. The command block does several things:</p>\n\n      <ul>\n        <li>it wraps the command with <code class=\"language-plaintext highlighter-rouge\">env</code> which allows setting environment variables for a single command</li>\n        <li>It sets the <code class=\"language-plaintext highlighter-rouge\">PGDATABASE</code> to the Galaxy database, by default the <code class=\"language-plaintext highlighter-rouge\">psql</code> will try and connect to a database with the same name of the user. So the <code class=\"language-plaintext highlighter-rouge\">telegraf</code> user will attempt to connect to a (non-existent) <code class=\"language-plaintext highlighter-rouge\">telegraf</code> database.</li>\n        <li>Then it calls the gxadmin command <code class=\"language-plaintext highlighter-rouge\">queue-overview</code>. By using <code class=\"language-plaintext highlighter-rouge\">iquery</code> instead of <code class=\"language-plaintext highlighter-rouge\">query</code>, the output is automatically converted to InfluxDB line protocol.</li>\n        <li>The command is run every 15 seconds, and has a timeout of 10 seconds. If the command fails to finish in 10 seconds, it will be killed.</li>\n      </ul>\n    </li>\n    <li>\n      <p>Run the Galaxy playbook</p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>With this, Telegraf will start monitoring the Galaxy queue by calling the query every few seconds to check the status every 15 seconds. This monitoring <em>will</em> miss jobs that complete within the 15 second interval, but for most servers this is not an issue. Most jobs are running for more than 15 seconds, and if not, it still gives an accurate point-in-time view.</p>\n\n<p>We’ll now create a graph for this, just like the one on <a href=\"https://stats.galaxyproject.eu\">stats.galaxyproject.eu</a></p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Building the queue graph</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Click the <strong>new graph</strong> button at the top of Grafana’s interface, and <em>Add a Query</em></p>\n    </li>\n    <li>Let’s build a query:\n      <ul>\n        <li>From:\n          <ul>\n            <li><em>“select measurement”</em>: <code class=\"language-plaintext highlighter-rouge\">queue-overview</code></li>\n          </ul>\n        </li>\n        <li>Select:\n          <ul>\n            <li><em>“field(value)”</em>: <code class=\"language-plaintext highlighter-rouge\">field(count)</code></li>\n            <li>add new (+): Aggregations → sum</li>\n          </ul>\n        </li>\n        <li>Group by:\n          <ul>\n            <li><em>“time(__interval)”</em>: <code class=\"language-plaintext highlighter-rouge\">time(15s)</code>, because we set the interval to 15s</li>\n            <li>add new (+): <code class=\"language-plaintext highlighter-rouge\">tag(tool_id)</code></li>\n            <li>add new (+): <code class=\"language-plaintext highlighter-rouge\">tag(tool_version)</code></li>\n          </ul>\n        </li>\n        <li>Alias by: <code class=\"language-plaintext highlighter-rouge\">[[tag_tool_id]]/[[tag_tool_version]]</code></li>\n      </ul>\n    </li>\n    <li>\n      <p>In the second tab on the left, Visualisation:</p>\n\n      <p>Under the first section:</p>\n\n      <ul>\n        <li>Draw Modes:\n          <ul>\n            <li><em>“Bars”</em>: <code class=\"language-plaintext highlighter-rouge\">no</code></li>\n            <li><em>“Lines”</em>: <code class=\"language-plaintext highlighter-rouge\">yes</code></li>\n            <li><em>“Points”</em>: <code class=\"language-plaintext highlighter-rouge\">no</code></li>\n          </ul>\n        </li>\n        <li>Mode Options:\n          <ul>\n            <li><em>“Staircase”</em>: <code class=\"language-plaintext highlighter-rouge\">yes</code></li>\n          </ul>\n        </li>\n        <li>Stacking &amp; Null Value\n          <ul>\n            <li><em>“Stack”</em>: <code class=\"language-plaintext highlighter-rouge\">yes</code></li>\n            <li><em>“Null Value”</em>: <code class=\"language-plaintext highlighter-rouge\">null as zero</code></li>\n          </ul>\n        </li>\n      </ul>\n\n      <p>Below, under the <em>Legend</em> section,</p>\n\n      <ul>\n        <li>Options:\n          <ul>\n            <li><em>“Show”</em>: <code class=\"language-plaintext highlighter-rouge\">yes</code></li>\n            <li><em>“As table”</em>: <code class=\"language-plaintext highlighter-rouge\">yes</code></li>\n            <li><em>“To Right”</em>: <code class=\"language-plaintext highlighter-rouge\">yes</code></li>\n          </ul>\n        </li>\n        <li>Values:\n          <ul>\n            <li><em>“Max”</em>: <code class=\"language-plaintext highlighter-rouge\">yes</code></li>\n            <li><em>“Avg”</em>: <code class=\"language-plaintext highlighter-rouge\">yes</code></li>\n            <li><em>“Current”</em>: <code class=\"language-plaintext highlighter-rouge\">yes</code></li>\n          </ul>\n        </li>\n        <li>Hide Series:\n          <ul>\n            <li><em>“With only nulls”</em>: <code class=\"language-plaintext highlighter-rouge\">yes</code></li>\n            <li><em>“With only zeros”</em>: <code class=\"language-plaintext highlighter-rouge\">yes</code></li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <p>In the third tab, General settings:</p>\n\n      <ul>\n        <li><em>“Title”</em>: <code class=\"language-plaintext highlighter-rouge\">Galaxy Queue Overview</code></li>\n      </ul>\n    </li>\n    <li>You can hit <kbd>Escape</kbd> to exit out of the graph editor, and remember to save your dashboard.</li>\n  </ol>\n\n</blockquote>\n\n<p>Run some tools in Galaxy, try to generate a large number of jobs. It is relatively easy to upload a dataset, and then run the “Secure Hash / Message Digest” or another tool repeatedly, running it over every dataset in your history, repeating until you’ve generated a few dozen datasets. If you have a slower tool like <code class=\"language-plaintext highlighter-rouge\">bwa</code> installed, this can be an option too.</p>\n\n<figure id=\"figure-3\" style=\"max-width: 90%;\"><img src=\"../../images/grafana-final-graph.png\" alt=\"Final Graph. \" width=\"1634\" height=\"783\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/grafana-final-graph.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 3</strong>:</span> Final graphs generated from this tutorial.</figcaption></figure>\n\n<p>You can also import a <a href=\"/training-material/topics/admin/tutorials/monitoring/dashboard.json\">copy of the dashboard</a>.</p>\n\n<!--SNIPPET-->\n<blockquote class=\"hands_on\">   <div class=\"box-title hands_on-title\" id=\"hands-on-time-to-git-commit\"><i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i> Hands-on: Time to git commit</div>   <p>It’s time to commit your work! Check the status with</p>   <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>git status<br /></code></pre></div></div>   <p>Add your changed files with</p>   <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>git add ... # any files you see that are changed<br /></code></pre></div></div>   <p>And then commit it!</p>   <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>git commit -m 'Finished Galaxy Monitoring with Telegraf and Grafana'<br /></code></pre></div></div> </blockquote>\n<p><!--END_SNIPPET--></p>\n\n<!--SNIPPET-->\n<blockquote class=\"comment\">   <div class=\"box-title comment-title\" id=\"comment-got-lost-along-the-way\"><i class=\"far fa-comment-dots\" aria-hidden=\"true\"></i> Comment: Got lost along the way?</div>   <p>If you missed any steps, you can compare against the <a href=\"https://github.com/hexylena/git-gat/tree/step-13\">reference files</a>, or see what changed since <a href=\"https://github.com/hexylena/git-gat/compare/step-12...step-13#files_bucket\">the previous tutorial</a>.</p>   <p>If you’re using <code class=\"language-plaintext highlighter-rouge\">git</code> to track your progress, remember to add your changes and commit with a good commit message!</p> </blockquote>\n<p><!--END_SNIPPET--></p>\n\n<h1 id=\"conclusion\">Conclusion</h1>\n\n<p>Monitoring with Telegraf, InfluxDB, and Grafana can provide an easy solution to monitor your infrastructure. The UseGalaxy.* servers use this stack and it has proven to be effective in production situations, with large Galaxy servers. The base monitoring done with Telegraf is easy to setup and extend on a per-site basis simply by adding scripts or commands to your servers which generate InfluxDB line protocol formatted output. Grafana provides an ideal visualisation solution as it encourages sharing, and allows you to import whatever dashboards have been developed by UseGalaxy.*, and then to extend them to your own needs.</p>\n\n<!--SNIPPET-->\n<blockquote class=\"comment\">   <div class=\"box-title comment-title\" id=\"comment-galaxy-admin-training-path-1\"><i class=\"far fa-comment-dots\" aria-hidden=\"true\"></i> Comment: Galaxy Admin Training Path</div>   <p>The yearly Galaxy Admin Training follows a specific ordering of tutorials. Use this timeline to help keep track of where you are in Galaxy Admin Training.</p>   <ol id=\"git-gat-timeline\">                    <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/ansible-galaxy/tutorial.html\">             <div>Step 1</div>             <div>ansible-galaxy</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/backup-cleanup/tutorial.html\">             <div>Step 2</div>             <div>backup-cleanup</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/customization/tutorial.html\">             <div>Step 3</div>             <div>customization</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/tus/tutorial.html\">             <div>Step 4</div>             <div>tus</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/cvmfs/tutorial.html\">             <div>Step 5</div>             <div>cvmfs</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/apptainer/tutorial.html\">             <div>Step 6</div>             <div>apptainer</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/tool-management/tutorial.html\">             <div>Step 7</div>             <div>tool-management</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/reference-genomes/tutorial.html\">             <div>Step 8</div>             <div>reference-genomes</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/data-library/tutorial.html\">             <div>Step 9</div>             <div>data-library</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/dev/tutorials/bioblend-api/tutorial.html\">             <div>Step 10</div>             <div>dev/bioblend-api</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/connect-to-compute-cluster/tutorial.html\">             <div>Step 11</div>             <div>connect-to-compute-cluster</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/job-destinations/tutorial.html\">             <div>Step 12</div>             <div>job-destinations</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/pulsar/tutorial.html\">             <div>Step 13</div>             <div>pulsar</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/celery/tutorial.html\">             <div>Step 14</div>             <div>celery</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/gxadmin/tutorial.html\">             <div>Step 15</div>             <div>gxadmin</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"disabled\">         <a href=\"/training-material/topics/admin/tutorials/reports/tutorial.html\">             <div>Step 16</div>             <div>reports</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"active\">         <a href=\"/training-material/topics/admin/tutorials/monitoring/tutorial.html\">             <div>Step 17</div>             <div>monitoring</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"\">         <a href=\"/training-material/topics/admin/tutorials/tiaas/tutorial.html\">             <div>Step 18</div>             <div>tiaas</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"\">         <a href=\"/training-material/topics/admin/tutorials/sentry/tutorial.html\">             <div>Step 19</div>             <div>sentry</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"\">         <a href=\"/training-material/topics/admin/tutorials/ftp/tutorial.html\">             <div>Step 20</div>             <div>ftp</div>         </a>     </li>               <span aria-hidden=\"true\">         <i class=\"fas fa-arrow-right\" aria-hidden=\"true\"></i>     </span>                         <li class=\"\">         <a href=\"/training-material/topics/admin/tutorials/beacon/tutorial.html\">             <div>Step 21</div>             <div>beacon</div>         </a>     </li>           </ol> </blockquote>\n<p><!--END_SNIPPET--></p>\n"],"ref_slides":["# Telegraf, InfluxDB, and Grafana\n\nGeneral purpose tools for monitoring systems and services.\n\nTool     | Use\n---      | ---\n[Telegraf](https://github.com/influxdata/telegraf) | plugin-driven server agent for collecting & reporting metrics\n[Influxdb](https://github.com/influxdata/influxdb/) | purpose built time series database\n[Grafana](https://grafana.com/)  | dashboard for beautiful analytics and monitoring\n\nDataflow:\n\n- Galaxy produces data\n- Telegraf consumes and buffers it, before sending it to\n- InfluxDB which stores the data\n- And Grafana is used to visualise it\n\n???\n\n- Monitoring in Galaxy is easy to setup.\n- Galaxy produces data, which is consumed by telegraf.\n- telegrafends data to Influx DB.\n- This data is visualized in Grafana.\n\n---\n# Grafana showcase\n\n* usegalaxy.eu [public server](https://stats.galaxyproject.eu)\n* usegalaxy.org.au [public server](https://stats.genome.edu.au)\n* usegalaxy.org private server\n\nIf you see a dashboard you can export its configuration and put it on your Grafana with your data. Copy away!\n\n???\n\n- We have several public Grafana servers.\n- If you like any of our graphs, you can copy them.\n\n---\n\n![galaxy dashboard showing route timings, user counts, job counts, etc.](../../images/grafana/galaxy.png)\n\n???\n\n- We have built numerous dashboards for monitoring Galaxy.\n- These include scripts and playbooks and configuration for everything.\n- Here is EU's galaxy dashboard showing active users, running and unscheduled jobs, etc.\n\n---\n\n![node detail dashboard with filesystem usage, process states, cpu, memory, load, network, etc.](../../images/grafana/node.png)\n\n???\n\n- However sometimes we notice something going wrong with our infrastructure.\n- We use the node detail dashboard to begin our investigation.\n- It gives us a very fast overview of the server.\n- This can help efficiently pinpoint isuses.\n\n---\n\n![DB dashboard showing transactions, tuples fetched/modified, and index sizes for each database](../../images/grafana/db.png)\n\n???\n\n- We also monitor the database heavily.\n- All of this monitoring is built into telegraf.\n- We need to be able to correlate latency with autovacuums or contention.\n- We monitor table size changes to check for anomalies.\n\n---\n\n![user statistics page for Eu with 23k users, 30k workflows, 400k histories, 13M jobs, and 30M datasets. Additional breakdowns provided for years of compute time on various clusters included 1k years on de.NBI cloud.](../../images/grafana/stats.png)\n\n???\n\n- Our staff often needs to report numbers for their grants.\n- We produced this user statistics dashboard to help them.\n- Now they can answer their own questions, and make their own graphs, without admin help.\n\n---\n\n![cvmfs dashboard showing which repos each server supports in green, and missing ones in white. ~90% of repos are supported](../../images/grafana/cvmfs.png)\n\n???\n\n- We don't just monitor Galaxy though.\n- We also monitor CVMFS, and the availability of repositories in each server.\n- This can give a good view of which repositories are replicated.\n\n\n\n"],"video_library":{"tutorial":{"description":null,"materials":[{"link":"topics/admin/tutorials/monitoring/tutorial.html","type":"Tutorial"}],"tags":["admin"],"type":"Tutorial","versions":[{"captions":["shiltemann","hexylena"],"date":"2021-02-15","galaxy_version":"21.01","length":"73M","link":"drUaYQtMBLY","speakers":[]}],"gtn_id":"admin/monitoring","title":"Galaxy Monitoring with Telegraf and Grafana","captioned":true},"slides":{"description":null,"materials":[{"link":"topics/admin/tutorials/monitoring/slides.html","type":"Slides"}],"tags":["admin"],"type":"Lecture","versions":[{"captions":["galaxycommunity"],"date":"2021-02-15","galaxy_version":"21.01","length":"2M","link":"qcp9lEUxCGI","speakers":[]}],"gtn_id":"admin/monitoring","title":"Galaxy Monitoring with Telegraf and Grafana","captioned":true},"demo":null,"both":null,"session":{"title":"Monitoring","description":"Learn advanced Galaxy monitoring with Telegraf, Influx, and Grafana.","videos":["admin/monitoring/slides","admin/monitoring/tutorial"]}},"hands_on":true,"slides":true,"mod_date":"2024-01-31 16:33:56 +0000","pub_date":"2019-01-31 15:17:51 +0000","version":110,"api":"https://training.galaxyproject.org/training-material/api/topics/admin/tutorials/monitoring/tutorial.json","tools":[],"supported_servers":[],"topic_name_human":"Galaxy Server administration","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools: []\n","tours":false,"video":true,"translations":{"tutorial":[],"slides":[],"video":true},"license":"CC-BY-4.0","type":"tutorial","logo":"assets/images/gat.png","redirect_from":["/short/admin/monitoring/slides","/short/S00017"]}