{"layout":"tutorial_hands_on","title":"Identification of somatic and germline variants from tumor and normal sample pairs","subtopic":"human-genetics-cancer","zenodo_link":"https://doi.org/10.5281/zenodo.2582555","questions":["What are the specific challenges in somatic variant calling that set it apart from regular diploid variant calling?","How can you call variants and classify them according to their presence/absence in/from tumor and normal tissue of the same individual?","How can you annotate variants and affected genes with prior knowledge from human genetic and cancer-specific databases to generate clinically relevant reports?"],"objectives":["Call variants and their somatic status from whole-exome sequencing data","Annotate variants with a wealth of human genetic and cancer-specific information extracted from public databases","Add gene-level annotations and generate reports of annotated somatic and germline variants, loss-of-heterozygosity (LOH) events, and affected genes, ready for interpretation by clinicians"],"time_estimation":"7h","key_points":["Follow best practices for read mapping, quality control and mapped reads postprocessing to minimize false-positive variant calls.","Use a dedicated somatic variant caller to call variants and to classify them into somatic, germline and LOH event variants on statistical grounds.","Annotations and queries based on variant properties add relevance to variant and gene reports.","A framework like GEMINI is very helpful for managing, annotating and querying lists of variants in a flexible way.","Prefer public, free annotation sources to foster reproducibility and information sharing."],"contributors":[{"name":"Wolfgang Maier","orcid":"0000-0002-9464-6640","matrix":"wm75:matrix.org","joined":"2017-09","elixir_node":"de","fediverse":"https://scholar.social/@zerodivision","fediverse_flavor":"mastodon","affiliations":["by-covid","uni-freiburg","elixir-europe"],"id":"wm75","url":"https://training.galaxyproject.org/training-material/api/contributors/wm75.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/wm75/"}],"js_requirements":{"mathjax":null,"mermaid":false},"short_id":"T00318","url":"/topics/variant-analysis/tutorials/somatic-variants/tutorial.html","topic_name":"variant-analysis","tutorial_name":"somatic-variants","dir":"topics/variant-analysis/tutorials/somatic-variants","symlink":null,"id":"variant-analysis/somatic-variants","ref_tutorials":["<p>When sequencing genomic material from a human tumor, the underlying clinical or\nresearch question typically is <strong>what spectrum of mutations distinguishes this\ntumor from healthy tissue</strong>.</p>\n\n<p>This question cannot be answered adequately just by comparing the tumor tissue\nto the human reference genome because even in healthy tissue there will be many\nthousands of variants compared to the reference genome. This is because every\nindividual inherits a unique pattern of that many variants from her parents. A\nfundamental difference between these variants and the tumor-specific mutations\nis that the former are present in the carrier’s germline, while the latter have\nbeen acquired somatically and will, thus, not be transmitted to offspring.\nTherefor, we talk of germline variants to refer to variants present in healthy\nand tumor tissue alike, and of somatic variants to refer to tumor-specific\nvariants. To be able to distinguish between these two types of variants always\nrequires a direct comparison of data from tumor and normal tissue samples.</p>\n\n<p>In addition to acquiring new variants, tumors can also lose or gain chromosomal\ncopies of variants found heterozygously in an individual’s germline. This\nphenomenon is termed <em>loss of heterozygosity</em> (LOH) because only one of the two\noriginal alleles persists in the tumor (either in a hemizygous state if the\nother allele is simply dropped, or in a homozygous state in the case of a\nduplication of one allelic copy accompanied by loss of the other).\nThe detection of LOH events, again, is dependent on a comparison of tumor and\nnormal tissue data.</p>\n\n<p>In this tutorial we are going to identify somatic and germline variants, as\nwell as variants affected by LOH, from a tumor and a normal sample of the same\npatient. Our goal is to report the variant sites, and the genes affected by\nthem, annotated with the content of general human genetic and cancer-specific\ndatabases. Ideally, this may provide insight into the genetic events driving\ntumor formation and growth in the patient, and might be of prognostic and even\ntherapeutic value by revealing variants known to affect drug\nresistance/sensitivity, tumor aggressiveness, <em>etc</em>.</p>\n\n<blockquote class=\"agenda\">\n  <agenda-title></agenda-title>\n\n  <p>In this tutorial, we will cover:</p>\n\n<ol id=\"markdown-toc\">\n  <li><a href=\"#data-preparation\" id=\"markdown-toc-data-preparation\">Data Preparation</a>    <ol>\n      <li><a href=\"#get-data\" id=\"markdown-toc-get-data\">Get data</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#quality-control-and-mapping-of-ngs-reads\" id=\"markdown-toc-quality-control-and-mapping-of-ngs-reads\">Quality control and mapping of NGS reads</a>    <ol>\n      <li><a href=\"#quality-control\" id=\"markdown-toc-quality-control\">Quality control</a></li>\n      <li><a href=\"#read-trimming-and-filtering\" id=\"markdown-toc-read-trimming-and-filtering\">Read trimming and filtering</a></li>\n      <li><a href=\"#read-mapping\" id=\"markdown-toc-read-mapping\">Read Mapping</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#mapped-reads-postprocessing\" id=\"markdown-toc-mapped-reads-postprocessing\">Mapped reads postprocessing</a>    <ol>\n      <li><a href=\"#filtering-on-mapped-reads-properties\" id=\"markdown-toc-filtering-on-mapped-reads-properties\">Filtering on mapped reads properties</a></li>\n      <li><a href=\"#removing-duplicate-reads\" id=\"markdown-toc-removing-duplicate-reads\">Removing duplicate reads</a></li>\n      <li><a href=\"#left-align-reads-around-indels\" id=\"markdown-toc-left-align-reads-around-indels\">Left-align reads around indels</a></li>\n      <li><a href=\"#recalibrate-read-mapping-qualities\" id=\"markdown-toc-recalibrate-read-mapping-qualities\">Recalibrate read mapping qualities</a></li>\n      <li><a href=\"#refilter-reads-based-on-mapping-quality\" id=\"markdown-toc-refilter-reads-based-on-mapping-quality\">Refilter reads based on mapping quality</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#variant-calling-and-classification\" id=\"markdown-toc-variant-calling-and-classification\">Variant calling and classification</a></li>\n  <li><a href=\"#variant-annotation-and-reporting\" id=\"markdown-toc-variant-annotation-and-reporting\">Variant annotation and reporting</a>    <ol>\n      <li><a href=\"#get-data-1\" id=\"markdown-toc-get-data-1\">Get data</a></li>\n      <li><a href=\"#adding-annotations-to-the-called-variants\" id=\"markdown-toc-adding-annotations-to-the-called-variants\">Adding annotations to the called variants</a></li>\n      <li><a href=\"#reporting-selected-subsets-of-variants\" id=\"markdown-toc-reporting-selected-subsets-of-variants\">Reporting selected subsets of variants</a></li>\n      <li><a href=\"#generating-reports-of-genes-affected-by-variants\" id=\"markdown-toc-generating-reports-of-genes-affected-by-variants\">Generating reports of genes affected by variants</a></li>\n      <li><a href=\"#adding-additional-annotations-to-the-gene-centered-report\" id=\"markdown-toc-adding-additional-annotations-to-the-gene-centered-report\">Adding additional annotations to the gene-centered report</a></li>\n    </ol>\n  </li>\n  <li><a href=\"#conclusion\" id=\"markdown-toc-conclusion\">Conclusion</a></li>\n</ol>\n\n</blockquote>\n\n<h1 id=\"data-preparation\">Data Preparation</h1>\n\n<p>First we need to upload and prepare some input data to analyze. The sequencing\nreads we are going to analyze are from real-world data from a cancer patient’s\ntumor and normal tissue samples.\nFor the sake of an acceptable speed of the analysis, the original data has been\ndownsampled though to include only the reads from human chromosomes 5, 12 and\n17.</p>\n\n<h2 id=\"get-data\">Get data</h2>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Data upload</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Create a new history for this tutorial and give it a meaningful name</p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-creating-a-new-history\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-creating-a-new-history\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Creating a new history</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <p>Click the <i class=\"fas fa-plus\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">new-history</span> icon at the top of the history panel:</p>   <p><img src=\"/training-material/shared/images/history_create_new.svg\" alt=\"UI for creating new history\" /></p>   <!-- the original drawing can be found here https://docs.google.com/drawings/d/1cCBrLAo4kDGic5QyB70rRiWJAKTenTU8STsKDaLcVU8/edit?usp=sharing --> </blockquote>\n      <p><!--END_SNIPPET--></p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-renaming-a-history\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-renaming-a-history\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Renaming a history</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ol>   <li>Click on <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> (<strong>Edit</strong>) next to the history name (which by default is “Unnamed history”)</li>   <li>Type the new name</li>   <li>Click on <strong>Save</strong></li> </ol>   <p>If you do not have the <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> (<strong>Edit</strong>) next to the history name:</p>   <ol>   <li>Click on <strong>Unnamed history</strong> (or the current name of the history) (<strong>Click to rename history</strong>) at the top of your history panel</li>   <li>Type the new name</li>   <li>Press <kbd>Enter</kbd></li> </ol> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li>\n      <p>Import the following four files from\n<a href=\"https://zenodo.org/record/2582555\">Zenodo</a>:</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>https://zenodo.org/record/2582555/files/SLGFSK-N_231335_r1_chr5_12_17.fastq.gz\nhttps://zenodo.org/record/2582555/files/SLGFSK-N_231335_r2_chr5_12_17.fastq.gz\nhttps://zenodo.org/record/2582555/files/SLGFSK-T_231336_r1_chr5_12_17.fastq.gz\nhttps://zenodo.org/record/2582555/files/SLGFSK-T_231336_r2_chr5_12_17.fastq.gz\n</code></pre></div>      </div>\n      <p>where the first two files represent the forward and reverse reads sequence\ndata from a patient’s <strong>normal</strong> tissue, and the last two represent the\ndata of the same patient’s <strong>tumor</strong> tissue.</p>\n\n      <p>Alternatively, the same files may be available on your Galaxy server\nthrough a shared data library (your instructor may tell you so), in which\ncase you may prefer to import the data directly from there.</p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-importing-via-links\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-importing-via-links\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Importing via links</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Copy the link location</li>   <li>     <p>Click <i class=\"fas fa-upload\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-upload</span> <strong>Upload Data</strong> at the top of the tool panel</p>   </li>   <li>Select <i class=\"fa fa-edit\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-wf-edit</span> <strong>Paste/Fetch Data</strong></li>   <li>     <p>Paste the link(s) into the text field</p>   </li>   <li>     <p>Change <strong>Type (set all):</strong> from “Auto-detect” to <code class=\"language-plaintext highlighter-rouge\">fastqsanger.gz</code></p>   </li>   <li>     <p>Press <strong>Start</strong></p>   </li>   <li><strong>Close</strong> the window</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-importing-data-from-a-data-library\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-importing-data-from-a-data-library\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Importing data from a data library</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <p>As an alternative to uploading the data from a URL or your computer, the files may also have been made available from a <em>shared data library</em>:</p>   <ol>   <li>Go into <strong>Shared data</strong> (top panel) then <strong>Data libraries</strong></li>   <li>Navigate to  the correct folder as indicated by your instructor.     <ul>       <li>On most Galaxies tutorial data will be provided in a folder named <strong>GTN - Material –&gt; Topic Name -&gt; Tutorial Name</strong>.</li>     </ul>   </li>   <li>Select the desired files</li>   <li>Click on <strong>Add to History</strong> <i class=\"fas fa-caret-down\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-dropdown</span> near the top and select <strong>as Datasets</strong> from the dropdown menu</li>   <li>     <p>In the pop-up window, choose</p>     <ul>       <li><em>“Select history”</em>: the history you want to import the data to (or create a new one)</li>     </ul>   </li>   <li>Click on <strong>Import</strong></li> </ol> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li>\n      <p>Check that all newly created datasets in your history have their datatypes assigned \ncorrectly, and fix any missing or wrong datatype assignment</p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-changing-the-datatype\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-changing-the-datatype\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Changing the datatype</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Click on the <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> <strong>pencil icon</strong> for the dataset to edit its attributes</li>   <li>In the central panel, click <i class=\"fas fa-database\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-chart-select-data</span> <strong>Datatypes</strong> tab on the top</li>   <li>In the <i class=\"fas fa-database\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-chart-select-data</span> <strong>Assign Datatype</strong>, select <code class=\"language-plaintext highlighter-rouge\">fastqsanger.gz</code> from “<em>New type</em>” dropdown     <ul>       <li>Tip: you can start typing the datatype into the field to filter the dropdown menu</li>     </ul>   </li>   <li>Click the <strong>Save</strong> button</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n    <li>\n      <p>Rename the datasets and add appropriate tags to them</p>\n\n      <p>For datasets that you upload via a link, Galaxy will pick the link\naddress as the dataset name, which you will likely want to shorten to\njust the file names.</p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-renaming-a-dataset\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-renaming-a-dataset\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Renaming a dataset</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Click on the <i class=\"fas fa-pencil-alt\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-pencil</span> <strong>pencil icon</strong> for the dataset to edit its attributes</li>   <li>In the central panel, change the <strong>Name</strong> field</li>   <li>Click the <strong>Save</strong> button</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n\n      <p>Large parts of the analysis in this tutorial will consist of\nidentical steps performed on the normal and on the tumor tissue data\nin parallel.</p>\n\n      <p>To make it easier to keep track of which dataset represents which\nbranch of an analysis in a linear history, Galaxy supports dataset\ntags. In particular, if you attach a tag starting with <code class=\"language-plaintext highlighter-rouge\">#</code> to any\ndataset, that tag will automatically propagate to any new dataset\nderived from the tagged dataset.</p>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-adding-a-tag\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-adding-a-tag\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Adding a tag</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ol>   <li>Click on the dataset to expand it</li>   <li>Click on <strong>Add Tags</strong> <i class=\"fas fa-tags\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-tags</span></li>   <li>Add a tag  starting with <code class=\"language-plaintext highlighter-rouge\">#</code>     <ul>       <li>Tags starting with <code class=\"language-plaintext highlighter-rouge\">#</code> will be automatically propagated to the outputs of tools using this dataset.</li>     </ul>   </li>   <li>Press <kbd>Enter</kbd></li>   <li>Check that the tag appears below the dataset name</li> </ol> </blockquote>\n      <p><!--END_SNIPPET--></p>\n\n      <p>Before starting our analysis it is, thus, a good idea to tag the two\nfastq datasets representing the normal tissue with, <em>e.g.</em>, <code class=\"language-plaintext highlighter-rouge\">#normal</code>\nand the two datasets representing the tumor tissue with, <em>e.g.</em>,\n<code class=\"language-plaintext highlighter-rouge\">#tumor</code>.</p>\n    </li>\n    <li>\n      <p>Import the reference genome with the <code class=\"language-plaintext highlighter-rouge\">hg19</code> version of the sequences of\nhuman chromosomes 5, 12 and 17:</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>https://zenodo.org/record/2582555/files/hg19.chr5_12_17.fa.gz\n</code></pre></div>      </div>\n\n      <p>Make sure you specify the datatype as <code class=\"language-plaintext highlighter-rouge\">fasta</code> in the import dialog.</p>\n\n      <blockquote class=\"comment\">\n        <comment-title>Shortcut</comment-title>\n        <p>You can skip this step if the Galaxy server you are working on offers\na <code class=\"language-plaintext highlighter-rouge\">hg19</code> version of the human reference genome with prebuilt indexes for\n<em>bwa-mem</em> <strong>and</strong> <em>samtools</em> (ask your instructor, or check the tools\n<strong>Map with BWA-MEM</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> and <strong>VarScan Somatic</strong>\n<i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> if they list a <code class=\"language-plaintext highlighter-rouge\">hg19</code> version as an option under\n<em>“(Using) reference genome”</em>).</p>\n      </blockquote>\n\n      <p>Alternatively, load the dataset from a shared data library.</p>\n    </li>\n    <li>\n      <p>Rename the reference genome</p>\n\n      <p>The reference genome you have imported above came as a compressed\nfile, but got unpacked by Galaxy to plain <code class=\"language-plaintext highlighter-rouge\">fasta</code> format according to\nyour datatype selection. You may now wish to remove the <code class=\"language-plaintext highlighter-rouge\">.gz</code> suffix\nfrom the dataset name.</p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h1 id=\"quality-control-and-mapping-of-ngs-reads\">Quality control and mapping of NGS reads</h1>\n\n<p>Before starting our analysis, we would like to make sure that the input data\nis of good quality, <em>i.e.</em>, that there haven’t been any major issues during\nDNA preparation, exon capture, or during actual sequencing. To avoid spurious\nvariant calls due to low input quality, we can ensure that all sequencing reads\nused in the analysis meet some minimal quality criteria by trimming low-quality\nparts off of the ends of reads and/or discarding reads of poor quality\naltogether. The resulting set of polished reads then needs to be mapped to the\nhuman reference genome because knowing the genomic positions that the bases of\na read provide evidence for is, of course, a prerequisite for variant calling.</p>\n\n<blockquote class=\"comment\">\n  <comment-title>More on quality control and mapping</comment-title>\n  <p>If you would like to explore the topics of quality control and read mapping\nin detail, you should take a look at the separate\n<a href=\"/training-material/topics/sequence-analysis/tutorials/quality-control/tutorial.html\">Quality Control</a>\nand <a href=\"/training-material/topics/sequence-analysis/tutorials/mapping/tutorial.html\">Mapping</a>\ntutorials.\nHere, we will only illustrate the concrete steps necessary for quality\ncontrol and read mapping of our particular datasets.</p>\n</blockquote>\n\n<h2 id=\"quality-control\">Quality control</h2>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Quality control of the input datasets</hands-on-title>\n  <ol>\n    <li>Run <span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.72+galaxy1\" title=\"FastQC tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>FastQC</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.72+galaxy1)</span> on each of your four fastq datasets\n      <ul>\n        <li><i class=\"far fa-copy\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-files</span> <em>“Short read data from your current history”</em>: all 4 FASTQ  datasets selected with <strong>Multiple datasets</strong></li>\n      </ul>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-select-multiple-datasets\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-select-multiple-datasets\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Select multiple datasets</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ol>   <li>Click on <i class=\"far fa-copy\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-files</span> <strong>Multiple datasets</strong></li>   <li>Select several files by keeping the <kbd>Ctrl</kbd> (or <kbd>COMMAND</kbd>) key pressed and clicking on the files of interest</li> </ol> </blockquote>\n      <p><!--END_SNIPPET--></p>\n\n      <p>When you start this job, eight new datasets (one with the calculated raw\ndata, another one with an html report of the findings for each input\ndataset) will get added to your history.</p>\n    </li>\n    <li>Use <span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc/1.8+galaxy0\" title=\"MultiQC tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>MultiQC</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 1.8+galaxy0)</span> to aggregate the raw <strong>FastQC</strong> data of all four input datasets into one report\n      <ul>\n        <li>In <em>“Results”</em>\n          <ul>\n            <li><em>“Which tool was used generate logs?”</em>: <code class=\"language-plaintext highlighter-rouge\">FastQC</code></li>\n            <li>In <em>“FastQC output”</em>\n              <ul>\n                <li><em>“Type of FastQC output?”</em>: <code class=\"language-plaintext highlighter-rouge\">Raw data</code></li>\n                <li><i class=\"far fa-copy\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-files</span> <em>“FastQC output”</em>: all four <em>RawData</em>\noutputs of <strong>FastQC</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>)</li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li>\n      <p>Inspect the <em>Webpage</em> output produced by the tool</p>\n\n      <blockquote class=\"question\">\n        <question-title></question-title>\n\n        <ol>\n          <li>What do you think of the base qualities of the sequences?</li>\n          <li>Which aspect of the quality report is most puzzling to you?\n(Hint: Have a look at the GC content of the reads)</li>\n        </ol>\n\n        <blockquote class=\"solution\">\n          <solution-title></solution-title>\n\n          <ol>\n            <li>\n              <p>The quality of the sequences looks promising. There are no\ndiscernible systematic problems with it.</p>\n\n              <p>Even the reverse reads, which are typically of somewhat poorer\nquality than the corresponding forward reads, look good on average.</p>\n            </li>\n            <li>\n              <p>The GC content plots of the forward and the reverse reads from both\nsamples reveal a very peculiar bimodal distribution.</p>\n\n              <p>Typically, a non-normal distribution of the GC content of the reads\nfrom a sample is considered to hint at possible contamination.\nHere, however, we are dealing with sequencing data from captured\nexomes, <em>i.e</em>, the reads are not representing random sequences from\na genome, but rather an arbitrary selection.\nIn fact, the samples at hand were prepared using Agilent’s\nSureSelect V5 technology for exome enrichment, and bimodal GC\ncontent distributions can be seen as a hallmark of that capture\nmethod in several publications (see, for example, Fig. 4C in\n<a href=\"https://www.ncbi.nlm.nih.gov/pmc/articles/PMC4477645/\">Meienberg et al., 2015</a>\n).</p>\n            </li>\n          </ol>\n\n        </blockquote>\n      </blockquote>\n    </li>\n  </ol>\n</blockquote>\n\n<h2 id=\"read-trimming-and-filtering\">Read trimming and filtering</h2>\n<p>Although the raw reads used in this tutorial are of relatively good overall\nquality already, we will apply read trimming and filtering to see if we can\nimprove things still a bit, but also to demonstrate the general concept.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Read trimming and filtering of the normal tissue reads</hands-on-title>\n  <ol>\n    <li>Run <span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.36.5\" title=\"Trimmomatic tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Trimmomatic</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.36.5)</span> to trim and filter the normal tissue reads\n      <ul>\n        <li>\n          <p><em>“Single-end or paired-end reads?”</em>: <code class=\"language-plaintext highlighter-rouge\">Paired-end (two separate\ninput files)</code></p>\n\n          <p>This makes the tool treat the forward and reverse reads simultaneously.</p>\n\n          <ul>\n            <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Input FASTQ file (R1/first of pair)”</em>: the\nforward reads (r1) dataset of the normal tissue sample</li>\n            <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Input FASTQ file (R2/second of pair)”</em>: the\nreverse reads (r2) dataset of the normal tissue sample</li>\n          </ul>\n        </li>\n        <li><em>“Perform initial ILLUMINACLIP step?”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code>\n          <ul>\n            <li><em>“Select standard adapter sequences or provide custom?”</em>: <code class=\"language-plaintext highlighter-rouge\">Standard</code>\n              <ul>\n                <li><em>“Adapter sequences to use”</em>: <code class=\"language-plaintext highlighter-rouge\">TruSeq3 (paired-ended, for MiSeq and\n HiSeq)</code></li>\n              </ul>\n            </li>\n            <li><em>“Maximum mismatch count which will still allow a full match to be\n  performed”</em>: <code class=\"language-plaintext highlighter-rouge\">2</code></li>\n            <li><em>“How accurate the match between the two ‘adapter ligated’ reads must\n  be for PE palindrome read alignment”</em>: <code class=\"language-plaintext highlighter-rouge\">30</code></li>\n            <li><em>“How accurate the match between any adapter etc. sequence must be\n  against a read”</em>: <code class=\"language-plaintext highlighter-rouge\">10</code></li>\n            <li><em>“Minimum length of adapter that needs to be detected (PE specific/\n  palindrome mode)”</em>: <code class=\"language-plaintext highlighter-rouge\">8</code></li>\n            <li><em>“Always keep both reads (PE specific/palindrome mode)?”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n          </ul>\n\n          <p>These parameters are used to cut ILLUMINA-specific adapter sequences\n from the reads.</p>\n        </li>\n        <li>In <em>“Trimmomatic Operation”</em>\n          <ul>\n            <li>In <em>“1: Trimmomatic Operation”</em>\n              <ul>\n                <li><em>“Select Trimmomatic operation to perform”</em>: <code class=\"language-plaintext highlighter-rouge\">Cut the specified number\n of bases from the start of the read (HEADCROP)</code>\n                  <ul>\n                    <li><em>“Number of bases to remove from the start of the read”</em>: <code class=\"language-plaintext highlighter-rouge\">3</code></li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n            <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> “Insert Trimmomatic Operation”*</li>\n            <li>In <em>“2: Trimmomatic Operation”</em>\n              <ul>\n                <li><em>“Select Trimmomatic operation to perform”</em>: <code class=\"language-plaintext highlighter-rouge\">Cut bases off the end of\n a read, if below a threshold quality (TRAILING)</code>\n                  <ul>\n                    <li><em>“Minimum quality required to keep a base”</em>: <code class=\"language-plaintext highlighter-rouge\">10</code></li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n            <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> “Insert Trimmomatic Operation”*</li>\n            <li>In <em>“3: Trimmomatic Operation”</em>\n              <ul>\n                <li><em>“Select Trimmomatic operation to perform”</em>: <code class=\"language-plaintext highlighter-rouge\">Drop reads below a\n specified length (MINLEN)</code>\n                  <ul>\n                    <li><em>“Minimum quality required to keep a base”</em>: <code class=\"language-plaintext highlighter-rouge\">25</code></li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n          </ul>\n\n          <p>These three trimming and filtering operations will be applied to the\n reads in the given order after adapter trimming.</p>\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>Running this job will generate four output datasets:</p>\n<ul>\n  <li>two for the trimmed forward and reverse reads that still have a proper\nmate in the other dataset</li>\n  <li>two more datasets of orphaned forward and reverse reads, for which the\ncorresponding mate got dropped because of insufficient length after\ntrimming; when you inspect these two files, however, you should find\nthat they are empty because none of our relatively high quality reads\ngot trimmed that excessively. You can delete the two datasets to keep\nyour history more compact.</li>\n</ul>\n\n<blockquote class=\"details\">\n  <details-title>More on handling unpaired reads in paired-end data</details-title>\n  <p>Splitting out potential unpaired reads into separate datasets like this\nis important because read mappers, typically, expect reads in forward\nand reverse input datasets to be arranged in proper pairs, and reads\nin one of the datasets without a counterpart in the other would destroy\nthat expected structure. Therefor, when your data is paired-end data\nalways make sure you use Trimmomatic in paired-end mode, too!</p>\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Read trimming and filtering of the tumor tissue reads</hands-on-title>\n  <ol>\n    <li>\n      <p>Trim and filter the <strong>tumor tissue</strong> reads following the same steps as above, just change the two input datasets to treat the tumor tissue reads with identical settings.</p>\n    </li>\n    <li>\n      <p>Check that the two unpaired reads datasets are empty, and delete them.</p>\n    </li>\n  </ol>\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Exercise: Quality control of the polished datasets</hands-on-title>\n  <p>Use <span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.72+galaxy1\" title=\"FastQC tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>FastQC</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.72+galaxy1)</span> and <span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc/1.8+galaxy0\" title=\"MultiQC tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>MultiQC</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 1.8+galaxy0)</span> like before,\nbut using the four trimmed datasets produced by Trimmomatic as input.</p>\n\n  <blockquote class=\"question\">\n    <question-title></question-title>\n\n    <p>How did read trimming affect the quality reports?</p>\n\n    <blockquote class=\"solution\">\n      <solution-title></solution-title>\n\n      <p>As expected, trimming the relatively high-quality raw reads did not\nhave any substantial impact on average. A small fraction of successful\nadapter removal is visible though.</p>\n\n    </blockquote>\n  </blockquote>\n</blockquote>\n\n<h2 id=\"read-mapping\">Read Mapping</h2>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Read Mapping</hands-on-title>\n  <ol>\n    <li>Use <span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa_mem/0.7.17.1\" title=\"Map with BWA-MEM tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Map with BWA-MEM</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.7.17.1)</span> to map the reads from the <strong>normal tissue</strong> sample to the reference genome\n      <ul>\n        <li><em>“Will you select a reference genome from your history or use a built-in index?”</em>: <code class=\"language-plaintext highlighter-rouge\">Use a built-in genome index</code>\n          <ul>\n            <li><em>“Using reference genome”</em>: <code class=\"language-plaintext highlighter-rouge\">Human: hg19</code> (or a similarly named option)</li>\n          </ul>\n\n          <blockquote class=\"comment\">\n            <comment-title>Using the imported `hg19` sequence</comment-title>\n            <p>If you have imported the <code class=\"language-plaintext highlighter-rouge\">hg19</code> sequence as a fasta dataset into your\nhistory instead:</p>\n            <ul>\n              <li><em>“Will you select a reference genome from your history or use a\nbuilt-in index?”</em>: <code class=\"language-plaintext highlighter-rouge\">Use a genome from history and build index</code>\n                <ul>\n                  <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Use the following dataset as the reference sequence”</em>: your imported <code class=\"language-plaintext highlighter-rouge\">hg19</code> fasta dataset.</li>\n                </ul>\n              </li>\n            </ul>\n          </blockquote>\n        </li>\n        <li><em>“Single or Paired-end reads”</em>: <code class=\"language-plaintext highlighter-rouge\">Paired</code>\n          <ul>\n            <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Select first set of reads”</em>: the trimmed \nforward reads (r1) dataset of the <strong>normal tissue</strong> sample; output of\n<strong>Trimmomatic</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span></li>\n            <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Select second set of reads”</em>: the trimmed\nreverse reads (r2) dataset of the <strong>normal tissue</strong> sample; output of\n<strong>Trimmomatic</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span></li>\n          </ul>\n        </li>\n        <li><em>“Set read groups information?”</em>: <code class=\"language-plaintext highlighter-rouge\">Set read groups (SAM/BAM specification)</code>\n          <ul>\n            <li><em>“Auto-assign”</em>: <code class=\"language-plaintext highlighter-rouge\">No</code>\n              <ul>\n                <li><em>“Read group identifier (ID)”</em>: <code class=\"language-plaintext highlighter-rouge\">231335</code> (this value being taken\nfrom the original name of the normal tissue input files)</li>\n              </ul>\n            </li>\n            <li><em>“Auto-assign”</em>: <code class=\"language-plaintext highlighter-rouge\">No</code>\n              <ul>\n                <li><em>“Read group sample name (SM)”</em>: <code class=\"language-plaintext highlighter-rouge\">Normal</code></li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n      </ul>\n\n      <blockquote class=\"comment\">\n        <comment-title>More on read group identifiers and sample names</comment-title>\n        <p>In general, you are free to choose ID and SM values to your liking,\nbut the ID should unambiguously identify the sequencing run that\nproduced the reads, while the SM value should identify the\nbiological sample.</p>\n      </blockquote>\n    </li>\n    <li>Use <span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa_mem/0.7.17.1\" title=\"Map with BWA-MEM tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Map with BWA-MEM</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.7.17.1)</span> to map the reads from the <strong>tumor tissue</strong> sample,\n      <ul>\n        <li><em>“Will you select a reference genome from your history or use a built-in index?”</em>: <code class=\"language-plaintext highlighter-rouge\">Use a built-in genome index</code>\n          <ul>\n            <li><em>“Using reference genome”</em>: <code class=\"language-plaintext highlighter-rouge\">Human: hg19</code> (or a similarly named option)</li>\n          </ul>\n\n          <p>Adjust these settings as before if you are using the imported reference\ngenome.</p>\n        </li>\n        <li><em>“Single or Paired-end reads”</em>: <code class=\"language-plaintext highlighter-rouge\">Paired</code>\n          <ul>\n            <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Select first set of reads”</em>: the trimmed\nforward reads (r1) dataset of the <strong>tumor tissue</strong> sample; output of\n<strong>Trimmomatic</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span></li>\n            <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Select second set of reads”</em>: the reverse\nreads (r2) dataset of the <strong>tumor tissue</strong> sample; output of\n<strong>Trimmomatic</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span></li>\n          </ul>\n        </li>\n        <li><em>“Set read groups information?”</em>: <code class=\"language-plaintext highlighter-rouge\">Set read groups (SAM/BAM specification)</code>\n          <ul>\n            <li><em>“Auto-assign”</em>: <code class=\"language-plaintext highlighter-rouge\">No</code>\n              <ul>\n                <li><em>“Read group identifier (ID)”</em>: <code class=\"language-plaintext highlighter-rouge\">231336</code> (this value, again, being\ntaken from the original name of the tumor tissue input files)</li>\n              </ul>\n            </li>\n            <li><em>“Auto-assign”</em>: <code class=\"language-plaintext highlighter-rouge\">No</code>\n              <ul>\n                <li><em>“Read group sample name (SM)”</em>: <code class=\"language-plaintext highlighter-rouge\">Tumor</code></li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h1 id=\"mapped-reads-postprocessing\">Mapped reads postprocessing</h1>\n\n<p>To ensure that we base our variant analysis only on unambiguous, high-quality\nread mappings we will do some postprocessing next.</p>\n\n<h2 id=\"filtering-on-mapped-reads-properties\">Filtering on mapped reads properties</h2>\n\n<p>To produce new filtered BAM datasets with only those reads retained that have\nbeen mapped to the reference successfully, have a minimal mapping quality of 1,\nand for which the mate read has also been mapped:</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Filtering for mapping status and quality</hands-on-title>\n\n  <ol>\n    <li>Run <span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/devteam/bamtools_filter/bamFilter/2.4.1\" title=\"Filter BAM datasets on a variety of attributes tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Filter BAM datasets on a variety of attributes</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 2.4.1)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-copy\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-files</span> <em>“BAM dataset(s) to filter”</em>: mapped reads\n datasets from the normal <em>and</em> the tumor tissue data, outputs of\n <strong>Map with BWA-MEM</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span></li>\n        <li>In <em>“Condition”</em>:</li>\n      </ul>\n      <ul>\n        <li>In <em>“1: Condition”</em>:\n          <ul>\n            <li>In <em>“Filter”</em>:\n              <ul>\n                <li>In <em>“1: Filter”</em>:\n                  <ul>\n                    <li><em>“Select BAM property to filter on”</em>: <code class=\"language-plaintext highlighter-rouge\">mapQuality</code>\n                      <ul>\n                        <li><em>“Filter on read mapping quality (phred scale)”</em>: <code class=\"language-plaintext highlighter-rouge\">&gt;=1</code></li>\n                      </ul>\n                    </li>\n                  </ul>\n                </li>\n                <li>In <em>“2: Filter”</em>:\n                  <ul>\n                    <li><em>“Select BAM property to filter on”</em>: <code class=\"language-plaintext highlighter-rouge\">isMapped</code>\n                      <ul>\n                        <li><em>“Selected mapped reads”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n                      </ul>\n                    </li>\n                  </ul>\n                </li>\n                <li>Click on <em>“Insert Filter”</em></li>\n                <li>In <em>“3: Filter”</em>:\n                  <ul>\n                    <li><em>“Select BAM property to filter on”</em>: <code class=\"language-plaintext highlighter-rouge\">isMateMapped</code>\n                      <ul>\n                        <li><em>“Select reads with mapped mate”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n                      </ul>\n                    </li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n          </ul>\n\n          <p>When you configure multiple filters within one condition, reads have\nto pass <em>all</em> the filters to be retained in the output. The above\nsettings, thus, retain only read pairs, for which both mates are\nmapped.</p>\n\n          <p>Note that filtering for a minimal mapping quality is not strictly\nnecessary. Most variant callers (including **VarScan somatic, which we\nwill be using later) have an option for using only reads above a\ncertain mapping quality. In this section, however, we are going to\nprocess the retained reads further rather extensively so it pays off\nin terms of performance to eliminate reads we do not plan to use at an\nearly step.</p>\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n  <ul>\n    <li><em>“Would you like to set rules?”</em>: <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n  </ul>\n\n</blockquote>\n\n<p>This will result in two new datasets, one for each of the normal and tumor data.</p>\n\n<blockquote class=\"details\">\n  <details-title>Tools for filtering BAM datasets</details-title>\n  <p>The related tutorial on variant detection from exome-seq data, demonstrates\nnearly identical filtering of BAM datasets using the tool <strong>Filter BAM\ndatasets on a variety of attributes</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>.</p>\n\n  <p>These two tools offer very similar functionality and can often be used\ninterchangeably. Under the hood, <strong>Filter SAM or BAM, output SAM or BAM</strong>\n<i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> uses the <code class=\"language-plaintext highlighter-rouge\">samtools view</code> command line tool, while <strong>Filter\nBAM datasets on a variety of attributes</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> uses <code class=\"language-plaintext highlighter-rouge\">bamtools\nfilter</code>. Whatever the BAM filtering task, you should be able to perform it in\nGalaxy with one of these two tools.</p>\n\n</blockquote>\n\n<h2 id=\"removing-duplicate-reads\">Removing duplicate reads</h2>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Remove duplicates</hands-on-title>\n\n  <ol>\n    <li>Run <span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/devteam/samtools_rmdup/samtools_rmdup/2.0.1\" title=\"RmDup tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>RmDup</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 2.0.1)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-copy\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-files</span> <em>“BAM file”</em>: filtered reads datasets from\n the normal <em>and</em> the tumor tissue data; the outputs of\n <strong>Filter SAM or BAM</strong></li>\n        <li><em>“Is this paired-end or single end data”</em>: <code class=\"language-plaintext highlighter-rouge\">BAM is paired-end</code></li>\n      </ul>\n      <ul>\n        <li><em>“Treat as single-end”</em>: <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>Again, this will produce two new datasets, one for each of the normal and\ntumor data.</p>\n\n<h2 id=\"left-align-reads-around-indels\">Left-align reads around indels</h2>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Left-align</hands-on-title>\n\n  <ol>\n    <li>Run <span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/devteam/freebayes/bamleftalign/1.3.1\" title=\"BamLeftAlign tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>BamLeftAlign</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 1.3.1)</span> with the following parameters:\n      <ul>\n        <li><em>“Choose the source for the reference genome”</em>: <code class=\"language-plaintext highlighter-rouge\">Locally cached</code>\n          <ul>\n            <li><i class=\"far fa-copy\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-files</span> <em>“BAM dataset to re-align”</em>: your\nfiltered and deduplicated reads datasets from the normal <em>and</em> the tumor\ntissue data; the outputs of <strong>RmDup</strong></li>\n            <li><em>“Using reference genome”</em>: <code class=\"language-plaintext highlighter-rouge\">Human: hg19</code> (or a similarly\nnamed choice)</li>\n          </ul>\n        </li>\n        <li><em>“Maximum number of iterations”</em>: <code class=\"language-plaintext highlighter-rouge\">5</code></li>\n      </ul>\n    </li>\n  </ol>\n\n  <blockquote class=\"comment\">\n    <comment-title>Using the imported `hg19` sequence</comment-title>\n    <p>If you have imported the <code class=\"language-plaintext highlighter-rouge\">hg19</code> sequence as a fasta dataset into your\nhistory instead:</p>\n    <ul>\n      <li><em>“Choose the source for the reference genome”</em>: <code class=\"language-plaintext highlighter-rouge\">History</code>\n        <ul>\n          <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Using reference file”</em>: your imported <code class=\"language-plaintext highlighter-rouge\">hg19</code> fasta dataset</li>\n        </ul>\n      </li>\n    </ul>\n  </blockquote>\n</blockquote>\n\n<p>As before, this will generate two new datasets, one for each of the normal and tumor data.</p>\n\n<h2 id=\"recalibrate-read-mapping-qualities\">Recalibrate read mapping qualities</h2>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Recalibrate read quality scores</hands-on-title>\n\n  <ol>\n    <li>Run <span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/devteam/samtools_calmd/samtools_calmd/2.0.2\" title=\"CalMD tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>CalMD</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 2.0.2)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-copy\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-files</span> <em>“BAM file to recalculate”</em>: the left-aligned\ndatasets from the normal and the tumor tissue data; the outputs of\n<strong>BamLeftAlign</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span></li>\n        <li><em>“Choose the source for the reference genome”</em>: <code class=\"language-plaintext highlighter-rouge\">Use a built-in genome</code>\n          <ul>\n            <li><em>“Using reference genome”</em>: <code class=\"language-plaintext highlighter-rouge\">Human: hg19</code> (or a similarly named choice)</li>\n          </ul>\n\n          <blockquote class=\"comment\">\n            <comment-title>Using the imported `hg19` sequence</comment-title>\n            <p>If you have imported the <code class=\"language-plaintext highlighter-rouge\">hg19</code> sequence as a fasta dataset into your\nhistory instead:</p>\n            <ul>\n              <li><em>“Choose the source for the reference genome”</em>: <code class=\"language-plaintext highlighter-rouge\">Use a genome from the history</code>\n                <ul>\n                  <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Using reference file”</em>: your imported <code class=\"language-plaintext highlighter-rouge\">hg19</code> fasta dataset.</li>\n                </ul>\n              </li>\n            </ul>\n          </blockquote>\n        </li>\n        <li>\n          <p><em>“Do you also want BAQ (Base Alignment Quality) scores to be calculated?”</em>: <code class=\"language-plaintext highlighter-rouge\">No</code></p>\n\n          <p>The <em>VarScan somatic</em> tool that we are going to use for calling variants at\nthe next step is typically used in combination with unadjusted base quality\nscores because the general opinion is that the base quality downgrades\nperformed by <em>CalMD</em> and other tools from the <em>samtools</em> suite of tools\nare too severe for <em>VarScan</em> to retain good sensitivity. We are sticking\nwith this practice in this tutorial.</p>\n\n          <blockquote class=\"comment\">\n            <comment-title>Using adjusted base quality scores</comment-title>\n            <p>If, for your own data, you would like to experiment with adjusted base\nquality scores, it is important to understand that <em>VarScan somatic</em> will\nonly make use of the adjusted scores if they are incorporated directly into\nthe read base qualities of a BAM input dataset, but not if they are written\nto the dataset separately.</p>\n\n            <p>Hence, should you ever decide to use:</p>\n            <ul>\n              <li>\n                <p><em>“Do you also want BAQ (Base Alignment Quality) scores to be calculated?”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes, run BAQ calculation</code></p>\n\n                <p>and you want this setting to affect downstream variant calling with\n<em>VarScan somatic</em>, make sure you also set then:</p>\n                <ul>\n                  <li><em>“Use BAQ to cap read base qualities”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n                </ul>\n              </li>\n            </ul>\n\n            <p>Please also note that BAQ scores are quite expensive to calculate so\nbe prepared to see a substantial (up to 10x!) increase in job run time \nwhen enabling it.</p>\n          </blockquote>\n        </li>\n        <li><em>“Additional options”</em>: <code class=\"language-plaintext highlighter-rouge\">Advanced options</code>\n          <ul>\n            <li><em>“Change identical bases to ‘=’“</em>: <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n            <li>\n              <p><em>“Coefficient to cap mapping quality of poorly mapped reads”</em>: <code class=\"language-plaintext highlighter-rouge\">50</code></p>\n\n              <p>This last setting is the real reason why we use CalMD at this point.\nIt is an empirical, but well-established finding that the mapping\nquality of reads mapped with <em>bwa</em> should be capped this way before\nvariant calling.</p>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>This will, once more, produce two new datasets, one for each of the normal\nand tumor data.</p>\n\n<h2 id=\"refilter-reads-based-on-mapping-quality\">Refilter reads based on mapping quality</h2>\n\n<p>During recalibration of read mapping qualities <strong>CalMD</strong> may have set some\nmapping quality scores to 255. This special value is reserved for <em>undefined</em>\nmapping qualities and is used by the tool when a recalibrated mapping quality\nwould drop below zero. In other words, a value of 255 does not indicate a\nparticularly good mapping score, but a really poor one.\nTo remove such reads from the data:</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Eliminating reads with undefined mapping quality</hands-on-title>\n\n  <ol>\n    <li>Run <span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/devteam/bamtools_filter/bamFilter/2.4.1\" title=\"Filter BAM datasets on a variety of attributes tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Filter BAM datasets on a variety of attributes</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 2.4.1)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-copy\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-files</span> <em>“BAM dataset(s) to filter”</em>: the recalibrated\n datasets from the normal and the tumor tissue data; the outputs of\n <strong>CalMD</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span></li>\n        <li>In <em>“Condition”</em>:</li>\n      </ul>\n      <ul>\n        <li>In <em>“1: Condition”</em>:\n          <ul>\n            <li>In <em>“Filter”</em>:\n              <ul>\n                <li>In <em>“1: Filter”</em>:\n                  <ul>\n                    <li><em>“Select BAM property to filter on”</em>: <code class=\"language-plaintext highlighter-rouge\">mapQuality</code>\n                      <ul>\n                        <li><em>“Filter on read mapping quality (phred scale)”</em>: <code class=\"language-plaintext highlighter-rouge\">&lt;=254</code></li>\n                      </ul>\n                    </li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h1 id=\"variant-calling-and-classification\">Variant calling and classification</h1>\n\n<p>Having generated a high-quality set of mapped read pairs, we can proceed to\nvariant calling. The tool <strong>VarScan somatic</strong> is a dedicated solution for\nsomatic variant calling that:</p>\n\n<ul>\n  <li>detects variant alleles in tumor/normal sample pairs</li>\n  <li>calls sample genotypes at variant sites</li>\n  <li>classifies variants into germline, somatic and LOH event variants using\nsolid classical statistics even in the presence of non-pure samples like\nthose obtained from biopsies</li>\n</ul>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Variant calling and classification</hands-on-title>\n\n  <ol>\n    <li>Run <span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/varscan_somatic/varscan_somatic/2.4.3.6\" title=\"VarScan somatic tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>VarScan somatic</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 2.4.3.6)</span> with the following parameters:\n      <ul>\n        <li><em>“Will you select a reference genome from your history or use a built-in\ngenome?”</em>: <code class=\"language-plaintext highlighter-rouge\">Use a built-in genome</code>\n          <ul>\n            <li><em>“reference genome”</em>: <code class=\"language-plaintext highlighter-rouge\">Human: hg19</code> (or a similarly named choice)</li>\n          </ul>\n\n          <blockquote class=\"comment\">\n            <comment-title>Using the imported `hg19` sequence</comment-title>\n            <p>If you have imported the <code class=\"language-plaintext highlighter-rouge\">hg19</code> sequence as a fasta dataset into your\nhistory instead:</p>\n            <ul>\n              <li><em>“Will you select a reference genome from your history or use a\nbuilt-in genome?”</em>: <code class=\"language-plaintext highlighter-rouge\">Use a genome from the history</code>\n                <ul>\n                  <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“reference genome”</em>: your imported <code class=\"language-plaintext highlighter-rouge\">hg19</code> fasta dataset.</li>\n                </ul>\n              </li>\n            </ul>\n          </blockquote>\n        </li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“aligned reads from normal sample”</em>: the mapped\nand fully post-processed normal tissue dataset; one of the two outputs\nof filtering the <strong>CalMD</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> outputs</li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span><em>“aligned reads from tumor sample”</em>: the mapped\nand fully post-processed tumor tissue dataset; the other output of\nfiltering the <strong>CalMD</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> outputs</li>\n        <li><em>“Estimated purity (non-tumor content) of normal sample”</em>: <code class=\"language-plaintext highlighter-rouge\">1</code></li>\n        <li><em>“Estimated purity (tumor content) of tumor sample”</em>: <code class=\"language-plaintext highlighter-rouge\">0.5</code></li>\n        <li><em>“Generate separate output datasets for SNP and indel calls?”</em>: <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n        <li><em>“Settings for Variant Calling”</em>: <code class=\"language-plaintext highlighter-rouge\">Customize settings</code>\n          <ul>\n            <li>\n              <p><em>“Minimum base quality”</em>: <code class=\"language-plaintext highlighter-rouge\">28</code></p>\n\n              <p>We have seen, at the quality control step, that our sequencing data is of\nreally good quality, and we have chosen not to downgrade base qualities at\nthe quality scores recalibration step above, so we can increase the base\nquality required at any given position without throwing away too much of\nour data.</p>\n            </li>\n            <li>\n              <p><em>“Minimum mapping quality”</em>: <code class=\"language-plaintext highlighter-rouge\">1</code></p>\n\n              <p>During postprocessing, we have filtered our reads for ones with a\nmapping quality of at least one, but <strong>CalMD</strong> may have lowered some\nmapping qualities to zero afterwards.</p>\n            </li>\n          </ul>\n\n          <p>Leave all other settings in this section at their default values.</p>\n        </li>\n        <li><em>“Settings for Posterior Variant Filtering”</em>: <code class=\"language-plaintext highlighter-rouge\">Use default values</code></li>\n      </ul>\n    </li>\n  </ol>\n</blockquote>\n\n<h1 id=\"variant-annotation-and-reporting\">Variant annotation and reporting</h1>\n\n<p>For this tutorial we are going to use variant and gene annotations from many\ndifferent sources. Most of these are handled for us by the tools we are going\nto use in this section, but we need to take care of importing the data from\nfour sources into Galaxy separately:</p>\n\n<ul>\n  <li>variant annotations from <a href=\"https://www.cancerhotspots.org\">Cancer Hotspots</a></li>\n  <li>variant and gene information from the\n<a href=\"https://www.cancergenomeinterpreter.org/biomarkers\">Cancer Biomarkers database</a>\nof the Cancer Genome Interpreter (CGI) project</li>\n  <li>variant and gene information from the <a href=\"https://civicdb.org\">CIViC</a> database</li>\n  <li>variant annotations from <a href=\"https://www.ncbi.nlm.nih.gov/snp\">dbSNP</a></li>\n  <li>lists of genes annotated with the keywords <em>proto-oncogene</em> or <em>tumor\nsuppressor</em> at <a href=\"https://www.uniprot.org/\">UniProt</a></li>\n</ul>\n\n<p>Each of these annotation sets has been released either in the public domain or\nunder a free data license, which allows you to use them as part of this\ntutorial, but also for other purposes.</p>\n\n<p>Starting from the data downloaded from each of these sites, we have generated\na set of new data files tailored to the requirements of the workflow of this\ntutorial and have made them available through Zenodo, again under a free data\nlicense.</p>\n\n<h2 id=\"get-data-1\">Get data</h2>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Data upload</hands-on-title>\n\n  <ol>\n    <li>\n      <p>Import the following <strong>variant annotation files</strong> from\n<a href=\"https://zenodo.org/record/7962928\">Zenodo</a>:</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>https://zenodo.org/record/7962928/files/hotspots.bed\nhttps://zenodo.org/record/7962928/files/cgi_variant_positions.bed\nhttps://zenodo.org/record/7962928/files/01-Feb-2019-CIVic.bed\nhttps://zenodo.org/record/2582555/files/dbsnp.b147.chr5_12_17.vcf.gz\n</code></pre></div>      </div>\n\n      <p>Make sure you select <code class=\"language-plaintext highlighter-rouge\">bed</code> as the datatype for the first three files and\n<code class=\"language-plaintext highlighter-rouge\">vcf</code> for the last file.</p>\n\n      <p>Alternatively, add the files from a shared data library on your Galaxy\nserver instance.</p>\n    </li>\n    <li>\n      <p>Import some <strong>gene-level annotation files</strong> from\n<a href=\"https://zenodo.org/record/2581881\">Zenodo</a>:</p>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>https://zenodo.org/record/2581881/files/Uniprot_Cancer_Genes.13Feb2019.txt\nhttps://zenodo.org/record/2581881/files/cgi_genes.txt\nhttps://zenodo.org/record/2581881/files/01-Feb-2019-GeneSummaries.tsv\n</code></pre></div>      </div>\n\n      <p>and make sure you select <code class=\"language-plaintext highlighter-rouge\">tabular</code> as their datatype, or add them from\nthe shared data library.</p>\n    </li>\n    <li>\n      <p>Download <strong>SnpEff functional genomic annotations</strong></p>\n\n      <blockquote class=\"comment\">\n        <comment-title>Shortcut</comment-title>\n        <p>You can skip this step if the Galaxy server you are working on offers\n<code class=\"language-plaintext highlighter-rouge\">Homo sapiens: hg19</code> as a locally installed snpEff database. You can\ncheck the <strong>SnpEff eff</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> tool under <strong>Genome source</strong> to\nsee if this is the case.</p>\n      </blockquote>\n\n      <p>Use <strong>SnpEff Download</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> to download genome annotation\ndatabase <code class=\"language-plaintext highlighter-rouge\">hg19</code>.</p>\n    </li>\n    <li>\n      <p>Check that the datatypes of all new datasets have been set correctly, and\nchange them if necessary. You may also want to shorten some of the\ndataset names.</p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h2 id=\"adding-annotations-to-the-called-variants\">Adding annotations to the called variants</h2>\n\n<h3 id=\"adding-functional-genomic-annotations\">Adding functional genomic annotations</h3>\n\n<p>Certainly, not all variants are equal. Many may just be silent mutations with\nno effect at the amino acid level, while a few others may be disrupting the\ncoding sequence of a protein by introducing a premature stop codon or a\nframeshift. Of course, it is also important to know <em>which</em> gene is affected\nby a variant.\nSuch functional genomic annotations can be added to a VCF dataset of variants\nwith <em>SnpEff</em>.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Adding annotations with SnpEff</hands-on-title>\n  <ol>\n    <li>Run <span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/snpeff/snpEff/4.3+T.galaxy1\" title=\"SnpEff eff tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>SnpEff eff</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 4.3+T.galaxy1)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Sequence changes (SNPs, MNPs, InDels)”</em>: the\noutput of <strong>VarScan somatic</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span></li>\n        <li><em>“Input format”</em>: <code class=\"language-plaintext highlighter-rouge\">VCF</code></li>\n        <li><em>“Output format”</em>: <code class=\"language-plaintext highlighter-rouge\">VCF (only if input is VCF)</code></li>\n        <li><em>“Genome source”</em>: <code class=\"language-plaintext highlighter-rouge\">Locally installed reference genome</code>\n          <ul>\n            <li><em>“Genome”</em>: <code class=\"language-plaintext highlighter-rouge\">Homo sapiens: hg19</code> (or a similarly named option)</li>\n          </ul>\n\n          <blockquote class=\"comment\">\n            <comment-title>Using the imported `hg19` SnpEff genome database</comment-title>\n            <p>If you have imported the <code class=\"language-plaintext highlighter-rouge\">hg19</code> SnpEff genome database into your\nhistory instead:</p>\n            <ul>\n              <li><em>“Genome source”</em>: <code class=\"language-plaintext highlighter-rouge\">Downloaded snpEff database in your history</code>\n                <ul>\n                  <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“SnpEff4.3 Genome Data”</em>: your imported <code class=\"language-plaintext highlighter-rouge\">hg19</code> SnpEff dataset.</li>\n                </ul>\n              </li>\n            </ul>\n          </blockquote>\n        </li>\n        <li><em>“Produce Summary Stats”</em>: <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h3 id=\"adding-genetic-and-clinical-evidence-based-annotations\">Adding genetic and clinical evidence-based annotations</h3>\n\n<p>Other interesting pieces of information about a variant include aspects like\nwhether the variant has been observed before in the human population and,\nif so, at which frequency. If a variant is known to be associated with specific\ndiseases, we would also very much like to know that.\nTo proceed with this kind of genetic and clinical evidence-based annotations,\nwe are going to convert our list of variants into a database that can be\nhandled more efficiently than a VCF dataset. We will use the <em>GEMINI</em> tool\nsuite for this task and for all further work with the variants.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Creating a GEMINI database from a variants dataset</hands-on-title>\n  <ol>\n    <li>Run <span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/gemini_load/gemini_load/0.20.1+galaxy2\" title=\"GEMINI load tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>GEMINI load</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.20.1+galaxy2)</span> with the following parameters:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“VCF dataset to be loaded in the GEMINI database”</em>:\nthe output of <strong>SnpEff eff</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span></li>\n        <li><em>“The variants in this input are”</em>: <code class=\"language-plaintext highlighter-rouge\">annotated with snpEff</code></li>\n        <li>\n          <p><em>“This input comes with genotype calls for its samples”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></p>\n\n          <p>Calling sample genotypes was part of what we used VarScan somatic for.</p>\n        </li>\n        <li><em>“Choose a gemini annotation source”</em>: select the latest available annotations snapshot (most likely, there will be only one)</li>\n        <li><em>“Sample and family information in PED format”</em>: <code class=\"language-plaintext highlighter-rouge\">Nothing selected</code></li>\n        <li><em>“Load the following optional content into the database”</em>\n          <ul>\n            <li><i class=\"far fa-check-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-check</span> <em>“GERP scores”</em></li>\n            <li><i class=\"far fa-check-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-check</span> <em>“CADD scores”</em></li>\n            <li><i class=\"far fa-check-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-check</span> <em>“Gene tables”</em></li>\n            <li><i class=\"far fa-check-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-check</span> <em>“Sample genotypes”</em></li>\n            <li><i class=\"far fa-check-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-check</span> <em>“variant INFO field”</em></li>\n          </ul>\n\n          <p>Be careful to leave <strong>unchecked</strong>:</p>\n          <ul>\n            <li>\n              <p><em>“Genotype likelihoods (sample PLs)”</em></p>\n\n              <p>VarScan somatic does not generate these values</p>\n            </li>\n            <li>\n              <p><em>“only variants that passed all filters”</em></p>\n\n              <p>It is simple and more flexible to filter for this property later</p>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n  </ol>\n</blockquote>\n\n<p>During the creation of the database <em>GEMINI</em> already (silently) adds an\nimpressive amount of annotations it knows about to our variants (including,\n<em>e.g.</em>, the frequency at which every variant has been observed in large human\ngenome sequencing projects). We have gotten all of these for free, just by converting the variants to a GEMINI database!</p>\n\n<p><em>GEMINI</em> also extracts a lot of the information stored in the VCF input dataset for us (such as the functional genomic annotations that we added with\n<em>SnpEff</em>).</p>\n\n<p>However, there are typically additional annotations from other sources (not\nincorporated into <em>GEMINI</em>) that one would like to add. In addition, <em>GEMINI</em>\nis not prepared to extract some non-standard information from VCF datasets,\nincluding some important bits added by <em>VarScan somatic</em>.</p>\n\n<p><strong>GEMINI annotate</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> is the tool that is designed to help you\nwith these rather common issues. It lets you add further annotations to the\nvariants in an already loaded GEMINI database.</p>\n\n<p>As a first step, we are going to use the tool to add some crucial information\ngenerated by <em>VarScan somatic</em>, but not recognized by <em>GEMINI load</em>, to the\ndatabase. Specifically, we are interested in three values calculated by\n<em>VarScan somatic</em> for each variant it detected:</p>\n\n<ul>\n  <li>\n    <p><em>Somatic status (SS)</em></p>\n\n    <p>This is a simple numeric code, in which a value of <code class=\"language-plaintext highlighter-rouge\">1</code> indicates a germline\nvariant, <code class=\"language-plaintext highlighter-rouge\">2</code> a somatic variant and <code class=\"language-plaintext highlighter-rouge\">3</code> an LOH event.</p>\n  </li>\n  <li>\n    <p><em>Germline p-value (GPV)</em></p>\n\n    <p>For variants with a somatic status of 1, this is the error probability\nassociated with that status call.</p>\n  </li>\n  <li>\n    <p><em>Somatic p-value (SPV)</em></p>\n\n    <p>This is the error probability associated with status calls of 2 and 3\n(somatic and LOH calls).</p>\n  </li>\n</ul>\n\n<p>These values are encoded in the <em>INFO</em> column of the VarScan-generated VCF\ndataset and we are going to extract them from there and add them to the\n<em>GEMINI</em> database.</p>\n\n<blockquote class=\"details\">\n  <details-title>Handling of the VCF INFO field by GEMINI load</details-title>\n  <p>If you paid close attention to how we generated the GEMINI database, you\nmight remember that, under <em>“Load the following optional content into the\ndatabase”</em>, we checked the option <i class=\"far fa-check-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-check</span> <em>“variant INFO\nfield”</em>. Did the tool not do what it was supposed to do?</p>\n\n  <p>The answer is that it did, but not in the way you may expect.</p>\n\n  <p>In fact, <em>GEMINI load</em> always extracts INFO field elements it knows about and\nstores them into predefined columns of the variants table in the database.\nIn addition, it can store the <em>whole</em> INFO field of each variant into a\nseparate <em>info</em> column so that no information gets lost on the way from the\nVCF input to the GEMINI database, and that’s the optional behavior we have\nbeen asking for. To keep things compact, however, this column stores the INFO\ncontent in compressed form, which is not readily accessible.</p>\n\n  <p>That’s why it is necessary to extract non-standard INFO field elements\nexplicitly if they are supposed to be used for filtering and querying.</p>\n</blockquote>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Making variant call statistics accessible</hands-on-title>\n  <ol>\n    <li>Run <span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/gemini_annotate/gemini_annotate/0.20.1+galaxy2\" title=\"GEMINI annotate tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>GEMINI annotate</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.20.1+galaxy2)</span>:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“GEMINI database”</em>: output of <strong>GEMINI load</strong></li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Dataset to use as the annotation source”</em>: output of <strong>VarScan somatic</strong></li>\n        <li>\n          <p><em>“Strict variant-identity matching of database and annotation records\n(VCF format only)”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></p>\n\n          <p>This setting does not really matter here since you have built the GEMINI\ndatabase from the exact same list of variants that we are now retrieving\nannotations from and because VarScan somatic does not call multiple alleles\nat single sites. Matching on variant-identity is the behavior we would\nlike to see though, so we may as well be explicit about it.</p>\n        </li>\n        <li>\n          <p><em>“Type of information to add to the database variants”</em>: <code class=\"language-plaintext highlighter-rouge\">Specific values\nextracted from matching records in the annotation source (extract)</code></p>\n\n          <ul>\n            <li>In <em>“1: Annotation extraction recipe”</em>:\n              <ul>\n                <li><em>“Elements to extract from the annotation source”</em>: <code class=\"language-plaintext highlighter-rouge\">SS</code></li>\n                <li><em>“Database column name to use for recording annotations”</em>:\n<code class=\"language-plaintext highlighter-rouge\">somatic_status</code></li>\n                <li><em>“What type of data are you trying to extract?”</em>: <code class=\"language-plaintext highlighter-rouge\">Integer numbers</code></li>\n                <li><em>“If multiple annotations are found for the same variant,\nstore …“</em>: <code class=\"language-plaintext highlighter-rouge\">the first annotation found</code></li>\n              </ul>\n\n              <p>This is the recipe for extracting the VarScan-generated <em>SS</em> field and\nadding it as a new column <em>somatic_status</em> to the GEMINI database.</p>\n            </li>\n            <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <em>“Insert Annotation extraction recipe”</em></li>\n            <li>In <em>“2: Annotation extraction recipe”</em>:\n              <ul>\n                <li><em>“Elements to extract from the annotation source”</em>: <code class=\"language-plaintext highlighter-rouge\">GPV</code></li>\n                <li><em>“Database column name to use for recording annotations”</em>:\n <code class=\"language-plaintext highlighter-rouge\">germline_p</code></li>\n                <li><em>“What type of data are you trying to extract?”</em>: <code class=\"language-plaintext highlighter-rouge\">Numbers with\ndecimal precision</code></li>\n                <li><em>“If multiple annotations are found for the same variant,\nstore …“</em>: <code class=\"language-plaintext highlighter-rouge\">the first annotation found</code></li>\n              </ul>\n\n              <p>This is the recipe for extracting the VarScan-generated <em>GPV</em> field\nand adding it as a new column <em>germline_p</em> to the GEMINI database.</p>\n            </li>\n            <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <em>“Insert Annotation extraction recipe”</em></li>\n            <li>In <em>“3: Annotation extraction recipe”</em>:\n              <ul>\n                <li><em>“Elements to extract from the annotation source”</em>: <code class=\"language-plaintext highlighter-rouge\">SPV</code></li>\n                <li><em>“Database column name to use for recording annotations”</em>:\n <code class=\"language-plaintext highlighter-rouge\">somatic_p</code></li>\n                <li><em>“What type of data are you trying to extract?”</em>: <code class=\"language-plaintext highlighter-rouge\">Numbers with\ndecimal precision</code></li>\n                <li><em>“If multiple annotations are found for the same variant,\nstore …“</em>: <code class=\"language-plaintext highlighter-rouge\">the first annotation found</code></li>\n              </ul>\n\n              <p>This is the recipe for extracting the VarScan-generated <em>SPV</em> field\nand adding it as a new column <em>somatic_p</em> to the GEMINI database.</p>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>Next, we are going to add additional annotations beyond the ones directly\nobtainable through <em>GEMINI</em> or from the input VCF dataset. Specifically we\nwant to add:</p>\n\n<ul>\n  <li>\n    <p>more information from <strong>dbSNP</strong></p>\n\n    <p>As part of the database creation process, GEMINI already checks all\nvariants whether they occur in dbSNP and, if so, stores their dbSNP IDs.\nHence, we only need to extract some additional information of interest.</p>\n  </li>\n  <li>information from <strong>Cancer Hotspots</strong></li>\n  <li>links to the <strong>CIViC</strong> database</li>\n  <li>information from the <strong>Cancer Genome Interpreter (CGI)</strong></li>\n</ul>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Adding further annotations</hands-on-title>\n  <ol>\n    <li>Run <span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/gemini_annotate/gemini_annotate/0.20.1+galaxy2\" title=\"GEMINI annotate tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>GEMINI annotate</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.20.1+galaxy2)</span> to add further annotations from <strong>dbSNP</strong>\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“GEMINI database”</em>: the output of the last\n<strong>GEMINI annotate</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> run</li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Dataset to use as the annotation source”</em>: the imported <code class=\"language-plaintext highlighter-rouge\">dbsnp.b147.chr5_12_17.vcf</code></li>\n        <li>\n          <p><em>“Strict variant-identity matching of database and annotation records\n(VCF format only)”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></p>\n\n          <p>dbSNP stores information about specific SNPs observed in human\npopulations and we would like to record if any exact same SNPs are among\nour variants.</p>\n        </li>\n        <li><em>“Type of information to add to the database variants”</em>: <code class=\"language-plaintext highlighter-rouge\">Specific\nvalues extracted from matching records in the annotation source\n(extract)</code>\n          <ul>\n            <li>In <em>“1: Annotation extraction recipe”</em>:\n              <ul>\n                <li><em>“Elements to extract from the annotation source”</em>: <code class=\"language-plaintext highlighter-rouge\">SAO</code></li>\n                <li><em>“Database column name to use for recording annotations”</em>:\n<code class=\"language-plaintext highlighter-rouge\">rs_ss</code></li>\n                <li><em>“What type of data are you trying to extract?”</em>: <code class=\"language-plaintext highlighter-rouge\">Integer numbers</code></li>\n                <li><em>“If multiple annotations are found for the same variant,\nstore …“</em>: <code class=\"language-plaintext highlighter-rouge\">the first annotation found</code></li>\n              </ul>\n\n              <p>This recipe extracts the dbSNP <em>SAO</em> field and adds it as <em>rs_ss</em> to\nthe GEMINI database.</p>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li>Run <span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/gemini_annotate/gemini_annotate/0.20.1+galaxy2\" title=\"GEMINI annotate tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>GEMINI annotate</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.20.1+galaxy2)</span> to add further annotations from <strong>cancerhotspots</strong>\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“GEMINI database”</em>: the output of the last\n<strong>GEMINI annotate</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> run</li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Dataset to use as the annotation source”</em>: the imported <code class=\"language-plaintext highlighter-rouge\">cancerhotspots_v2.bed</code></li>\n        <li>\n          <p><em>“Strict variant-identity matching of database and annotation records\n(VCF format only)”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code> (with input in BED format this setting will\nbe ignored)</p>\n\n          <p>For the cancerhotspots data, we are simply going to record the best\nq-value associated with any cancerhotspots variant overlapping one\nof our variant sites.</p>\n        </li>\n        <li><em>“Type of information to add to the database variants”</em>: <code class=\"language-plaintext highlighter-rouge\">Specific\nvalues extracted from matching records in the annotation source\n(extract)</code>\n          <ul>\n            <li>In <em>“1: Annotation extraction recipe”</em>:\n              <ul>\n                <li>\n                  <p><em>“Elements to extract from the annotation source”</em>: <code class=\"language-plaintext highlighter-rouge\">5</code></p>\n\n                  <p>The q-values are stored in the fifth column of the BED dataset.</p>\n                </li>\n                <li><em>“Database column name to use for recording annotations”</em>:\n<code class=\"language-plaintext highlighter-rouge\">hs_qvalue</code></li>\n                <li><em>“What type of data are you trying to extract?”</em>: <code class=\"language-plaintext highlighter-rouge\">Numbers with\n decimal precision</code></li>\n                <li><em>“If multiple annotations are found for the same variant,\nstore …“</em>: <code class=\"language-plaintext highlighter-rouge\">the smallest of the (numeric) values</code></li>\n              </ul>\n\n              <p>This is the recipe for extracting the <em>q-values</em> of overlapping\ncancerhotspots sites and adding them as <em>hs_qvalue</em> to the GEMINI\ndatabase.</p>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li>Run <span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/gemini_annotate/gemini_annotate/0.20.1+galaxy2\" title=\"GEMINI annotate tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>GEMINI annotate</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.20.1+galaxy2)</span> to add links to <strong>CIViC</strong>\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“GEMINI database”</em>: the output of the last\n<strong>GEMINI annotate</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> run</li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Dataset to use as the annotation source”</em>: the imported <code class=\"language-plaintext highlighter-rouge\">CIViC.bed</code></li>\n        <li>\n          <p><em>“Strict variant-identity matching of database and annotation records\n(VCF format only)”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code> (with input in BED format this setting will\nbe ignored)</p>\n\n          <p>For the CIViC data, we are going to record the hyperlink to any variant\nfound in the CIViC database that overlaps one of our variant sites.</p>\n        </li>\n        <li><em>“Type of information to add to the database variants”</em>: <code class=\"language-plaintext highlighter-rouge\">Specific\nvalues extracted from matching records in the annotation source\n(extract)</code>\n          <ul>\n            <li>In <em>“1: Annotation extraction recipe”</em>:\n              <ul>\n                <li>\n                  <p><em>“Elements to extract from the annotation source”</em>: <code class=\"language-plaintext highlighter-rouge\">4</code></p>\n\n                  <p>The hyperlinks are stored in the fourth column of the BED dataset.</p>\n                </li>\n                <li><em>“Database column name to use for recording annotations”</em>:\n<code class=\"language-plaintext highlighter-rouge\">overlapping_civic_url</code></li>\n                <li><em>“What type of data are you trying to extract?”</em>: <code class=\"language-plaintext highlighter-rouge\">Text (text)</code></li>\n                <li><em>“If multiple annotations are found for the same variant,\nstore …“</em>: <code class=\"language-plaintext highlighter-rouge\">a comma-separated list of non-redundant (text) values</code></li>\n              </ul>\n\n              <p>This is the recipe for extracting the hyperlinks of overlapping CIViC\nsites and adding them as a list of <em>overlapping_civic_urls</em> to the\nGEMINI database.</p>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n    <li>Run <span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/gemini_annotate/gemini_annotate/0.20.1+galaxy2\" title=\"GEMINI annotate tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>GEMINI annotate</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.20.1+galaxy2)</span> to add information from the <strong>Cancer Genome Interpreter (CGI)</strong>\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“GEMINI database”</em>: the output of the last\n<strong>GEMINI annotate</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> run</li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“Dataset to use as the annotation source”</em>: the imported <code class=\"language-plaintext highlighter-rouge\">cgi_variant_positions.bed</code></li>\n        <li>\n          <p><em>“Strict variant-identity matching of database and annotation records\n(VCF format only)”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code> (with input in BED format this setting will\nbe ignored)</p>\n\n          <p>For the CGI data, we are going to record if any of our variant sites\nis overlapped by a variant in the CGI biomarkers database.</p>\n        </li>\n        <li><em>“Type of information to add to the database variants”</em>: <code class=\"language-plaintext highlighter-rouge\">Binary\nindicator (1=found, 0=not found) of whether the variant had any match in\nthe annotation source (boolean)</code>\n          <ul>\n            <li><em>“Database column name to use for recording annotations”</em>: <code class=\"language-plaintext highlighter-rouge\">in_cgidb</code></li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h2 id=\"reporting-selected-subsets-of-variants\">Reporting selected subsets of variants</h2>\n\n<p>Now that we have built our GEMINI database and enriched it with additional\nannotations, it is time that we explore the wealth of information stored in it.\nThe goal is to produce filtered variant reports that list specific classes\n(somatic, germline, LOH) of high-quality variants together with their most\nrelevant annotations. The way to achieve this is through <strong>GEMINI queries</strong>\nthat specify:</p>\n\n<ol>\n  <li>filters we want to apply to the variant list stored in the database</li>\n  <li>the pieces of information about the filtered variants that we would like to\nretrieve</li>\n</ol>\n\n<blockquote class=\"comment\">\n  <comment-title>The GEMINI query language</comment-title>\n  <p>GEMINI queries are extremely flexible, enabling users to express many\ndifferent ideas to explore the variant space, and as such, the complete\nquery syntax can be a bit overwhelming for beginners.</p>\n\n  <p>In this section, we will start off with a rather simple query, then build on\nit stepwise before trying a really complex query in the next section.</p>\n\n  <p>For a more detailed explanation of the query syntax, you should consult the\n<a href=\"https://gemini.readthedocs.io/en/latest/content/querying.html\">query section of the GEMINI documentation</a>.\nSince the GEMINI query syntax is built on the <em>SQLite</em> dialect of <em>SQL</em>, the\n<em>SQLite</em> documentation, in particular, its chapter on\n<a href=\"https://sqlite.org/lang_corefunc.html\">SQLite core functions</a>, is another\nreally helpful resource for understanding more sophisticated queries.</p>\n</blockquote>\n\n<p>Lets start by configuring a simple query to obtain a report of <em>bona fide</em>\nsomatic variants. Our strategy for retrieving them is to:</p>\n\n<ol>\n  <li>rely on the <em>somatic status</em> of the variants called by <strong>VarScan somatic</strong>\n<i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span></li>\n  <li>disregard questionable variants, for which either a non-negligible amount of\nsupporting sequencing reads is also found in the normal tissue data, or\nwhich are only supported by a very small fraction of the reads from the\ntumor sample</li>\n</ol>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Querying the GEMINI database for somatic variants</hands-on-title>\n  <ol>\n    <li>Run <span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/gemini_query/gemini_query/0.20.1+galaxy1\" title=\"GEMINI query tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>GEMINI query</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.20.1+galaxy1)</span> with:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“GEMINI database”</em>: the fully annotated database\ncreated in the last <strong>GEMINI annotate</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> step</li>\n        <li><em>“Build GEMINI query using”</em>: <code class=\"language-plaintext highlighter-rouge\">Basic variant query constructor</code>\n          <ul>\n            <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <em>“Insert Genotype filter expression”</em>\n              <ul>\n                <li><em>“Restrictions to apply to genotype values”</em>:\n<code class=\"language-plaintext highlighter-rouge\">gt_alt_freqs.NORMAL &lt;= 0.05 AND gt_alt_freqs.TUMOR &gt;= 0.10</code></li>\n              </ul>\n\n              <p>With this genotype-based filter, we retain only those variants that\nare supported by less than 5% of the reads of the normal sample, but\nby more than 10% of the reads of the tumor sample.</p>\n            </li>\n            <li>\n              <p><em>“Additional constraints expressed in SQL syntax”</em>: <code class=\"language-plaintext highlighter-rouge\">somatic_status = 2</code></p>\n\n              <p>Among the info stored in the GEMINI database is the somatic status\nVarScan somatic has called for every variant (remember we\nused GEMINI annotate to add it). With the condition\n<code class=\"language-plaintext highlighter-rouge\">somatic_status = 2</code> we retain only those variants passing the\ngenotype filter above <strong>and</strong> considered somatic variants by the\nvariant caller.</p>\n            </li>\n            <li>In <em>“Output format options”</em>\n              <ul>\n                <li><em>“Type of report to generate”</em>: <code class=\"language-plaintext highlighter-rouge\">tabular (GEMINI default)</code>\n                  <ul>\n                    <li><em>“Add a header of column names to the output”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n                    <li><em>“Set of columns to include in the variant report table”</em>: <code class=\"language-plaintext highlighter-rouge\">Custom\n(report user-specified columns)</code>\n                      <ul>\n                        <li>In <em>“Choose columns to include in the report”</em>:\n                          <ul>\n                            <li><i class=\"far fa-check-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-check</span> <em>“chrom”</em></li>\n                            <li><i class=\"far fa-check-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-check</span> <em>“start”</em></li>\n                            <li><i class=\"far fa-check-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-check</span> <em>“ref”</em></li>\n                            <li><i class=\"far fa-check-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-check</span> <em>“alt”</em></li>\n                          </ul>\n                        </li>\n                        <li><em>“Additional columns (comma-separated)”</em>: <code class=\"language-plaintext highlighter-rouge\">gene, aa_change, rs_ids,\nhs_qvalue, cosmic_ids</code></li>\n                      </ul>\n                    </li>\n                  </ul>\n                </li>\n              </ul>\n\n              <p>Here we specify, which columns (from the <em>variants</em> table of the\nGEMINI database) we want to have included, in the specified order, in\na <code class=\"language-plaintext highlighter-rouge\">tabular</code> variant report.</p>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<blockquote class=\"comment\">\n  <comment-title>How am I supposed to know these column names?</comment-title>\n  <p>Obviously, you need to know the names of the columns (in the tables of the\nGEMINI database) to include them in the report, but how are you supposed to\nknow them?</p>\n\n  <p>The standard ones (added by <em>GEMINI load</em> when building the database) are\nlisted in the\n<a href=\"https://gemini.readthedocs.io/en/latest/content/database_schema.html\">GEMINI documentation</a>.\nThe non-standard columns (the ones you added with <em>GEMINI annotate</em>) have\nthe names you gave them, when you added them.</p>\n\n  <p>Alternatively, to get the tables and column names of a specific database\nlisted, you can use <strong>GEMINI database info</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> like so:</p>\n\n  <ul>\n    <li><em>“GEMINI database”</em>: the database you want to explore</li>\n    <li><em>“Information to retrieve from the database”</em>: <code class=\"language-plaintext highlighter-rouge\">Names of database tables\nand their columns</code></li>\n  </ul>\n</blockquote>\n\n<p>What about more sophisticated filtering?</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>More complex filter criteria</hands-on-title>\n  <ol>\n    <li>Run <span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/gemini_query/gemini_query/0.20.1+galaxy1\" title=\"GEMINI query tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>GEMINI query</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.20.1+galaxy1)</span> with the exact same settings as before, but:\n      <ul>\n        <li><em>“Additional constraints expressed in SQL syntax”</em>: <code class=\"language-plaintext highlighter-rouge\">somatic_status = 2 AND somatic_p &lt;= 0.05 AND filter IS NULL</code></li>\n      </ul>\n\n      <p>This translates into “variants classified as somatic with a p-value &lt;=\n 0.05, which haven’t been flagged as likely false-positives”.</p>\n    </li>\n  </ol>\n</blockquote>\n\n<blockquote class=\"comment\">\n  <comment-title>SQL keywords</comment-title>\n  <p>In the condition above, SQL keywords are given in uppercase. This is not a\nrequirement, but it makes it easier to understand the syntax.</p>\n\n  <p>You can check whether any cell in a data table is empty with <code class=\"language-plaintext highlighter-rouge\">IS NULL</code>, and\nwhether it contains <em>any</em> value with <code class=\"language-plaintext highlighter-rouge\">IS NOT NULL</code>. To combine different\nfilter criteria logically, you can use <code class=\"language-plaintext highlighter-rouge\">AND</code> and <code class=\"language-plaintext highlighter-rouge\">OR</code>, and parentheses to\ngroup conditions if required.</p>\n</blockquote>\n\n<p>If you have followed all steps up to here exactly, running this job should give\nyou a tabular dataset of 43 variants, and with the annotations in the report\nit is relatively easy to pick out a few interesting ones.\nBefore we focus on the content of the report, however, we could enhance the\nreport format a bit more.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>SQL-based output formatting</hands-on-title>\n  <ol>\n    <li>Run <span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/gemini_query/gemini_query/0.20.1+galaxy1\" title=\"GEMINI query tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>GEMINI query</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.20.1+galaxy1)</span> with the exact same settings as in the\nlast example, but:\n      <ul>\n        <li>In <em>“Output format options”</em>\n          <ul>\n            <li><em>“Additional columns (comma-separated)”</em>: <code class=\"language-plaintext highlighter-rouge\">type, gt_alt_freqs.TUMOR, gt_alt_freqs.NORMAL,\nifnull(nullif(round(max_aaf_all,2),-1.0),0) AS MAF, gene, impact_so,\naa_change, ifnull(round(cadd_scaled,2),'.') AS cadd_scaled,\nround(gerp_bp_score,2) AS gerp_bp, ifnull(round(gerp_element_pval,2),'.')\nAS gerp_element_pval, ifnull(round(hs_qvalue,2), '.') AS hs_qvalue,\nin_omim, ifnull(clinvar_sig,'.') AS clinvar_sig,\nifnull(clinvar_disease_name,'.') AS clinvar_disease_name,\nifnull(rs_ids,'.') AS dbsnp_ids, rs_ss, ifnull(cosmic_ids,'.') AS\ncosmic_ids, ifnull(overlapping_civic_url,'.') AS overlapping_civic_url,\nin_cgidb</code></li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n  </ol>\n</blockquote>\n\n<p>This last query adds a lot more annotations to the report, and it also\ndemonstrates the use of the <code class=\"language-plaintext highlighter-rouge\">AS</code> keyword to rename columns and of some\n<a href=\"https://sqlite.org/lang_corefunc.html\">SQLite functions</a> to clean up the\noutput.</p>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n  <p>Compare the new report to the previous one to see what has changed.</p>\n</blockquote>\n\n<blockquote class=\"details\">\n  <details-title>Limitations of genotype column queries</details-title>\n  <p>In case you are wondering why the above query does not use rounding on\nthe alternate allele frequencies of the samples, <em>i.e.</em>, on\n<code class=\"language-plaintext highlighter-rouge\">gt_alt_freqs.TUMOR</code> and <code class=\"language-plaintext highlighter-rouge\">gt_alt_freqs.NORMAL</code>, or why it does not rename\nthese columns, that is because it would break the query.</p>\n\n  <p>As a general rule, note that all columns in the variants table starting\nwith <code class=\"language-plaintext highlighter-rouge\">gt</code> (the genotype columns, calculated from the genotype fields of a\nVCF dataset) cannot be used like regular SQLite columns, but are parsed by\nGEMINI separately. That is why you cannot mix them with regular SQLite\nelements like functions and alias specifications with <code class=\"language-plaintext highlighter-rouge\">AS</code>.\nYou may also have noticed that <code class=\"language-plaintext highlighter-rouge\">gt_alt_freqs.TUMOR</code> and\n<code class=\"language-plaintext highlighter-rouge\">gt_alt_freqs.NORMAL</code> do not obey the column order specification of the\nquery, but end up as the last columns of the tabular report. This is\nanother artefact of GEMINI’s special treatment of <code class=\"language-plaintext highlighter-rouge\">gt</code> columns.</p>\n</blockquote>\n\n<h2 id=\"generating-reports-of-genes-affected-by-variants\">Generating reports of genes affected by variants</h2>\n\n<p>As a final step, let us now try to generate a gene-centered report based on the\nsame somatic variants we just selected above.</p>\n\n<p>Such a gene-centered report would include annotations that apply to a whole\ngene affected by a variant rather than to the variant itself. Examples of such\nannotations include known synonyms of an affected gene, its NCBI entrez number,\nthe ClinVar phenotype, if any, associated with the gene, a hyperlink to the\ngene’s page at CIViC.org, <em>etc.</em>.</p>\n\n<p>Some of this information comes built-in into every GEMINI database, but it is\nstored in a separate table called <code class=\"language-plaintext highlighter-rouge\">gene_detailed</code>, while all information we\nused and queried so far was from the <code class=\"language-plaintext highlighter-rouge\">variants</code> table.</p>\n\n<p>To access information from the <code class=\"language-plaintext highlighter-rouge\">variants</code> and the <code class=\"language-plaintext highlighter-rouge\">gene_detailed</code> table in the\nsame query we need to join the two tables. Such an operation is not possible\nwith the <code class=\"language-plaintext highlighter-rouge\">Basic query constructor</code> we have used so far, but requires an\nadvanced mode for composing the query.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Turning query results into gene-centered reports</hands-on-title>\n  <ol>\n    <li>Run <span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/iuc/gemini_query/gemini_query/0.20.1+galaxy1\" title=\"GEMINI query tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>GEMINI query</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.20.1+galaxy1)</span> in advanced mode by choosing\n      <ul>\n        <li><em>“Build GEMINI query using”</em>: <code class=\"language-plaintext highlighter-rouge\">Advanced query constructor</code></li>\n        <li><em>“The query to be issued to the database”</em>: <code class=\"language-plaintext highlighter-rouge\">SELECT v.gene, v.chrom,\n g.synonym, g.hgnc_id, g.entrez_id, g.rvis_pct, v.clinvar_gene_phenotype\n FROM variants v, gene_detailed g WHERE v.chrom = g.chrom AND\n v.gene = g.gene AND v.somatic_status = 2 AND v.somatic_p &lt;= 0.05 AND\n v.filter IS NULL GROUP BY g.gene</code></li>\n      </ul>\n\n      <blockquote class=\"comment\">\n        <comment-title>Elements of the SQL query</comment-title>\n        <p>In this full SQL query, the part between <code class=\"language-plaintext highlighter-rouge\">SELECT</code> and <code class=\"language-plaintext highlighter-rouge\">FROM</code> states which\ncolumns from which database tables we wish to retrieve, while the part\nbetween <code class=\"language-plaintext highlighter-rouge\">FROM</code> and <code class=\"language-plaintext highlighter-rouge\">WHERE</code> specifies the database tables that need to be\nconsulted and gives them simpler aliases (<code class=\"language-plaintext highlighter-rouge\">v</code> becomes an alias for\nthe <code class=\"language-plaintext highlighter-rouge\">variants</code> table, <code class=\"language-plaintext highlighter-rouge\">g</code> for the <code class=\"language-plaintext highlighter-rouge\">gene_detailed</code> table), which we can then\nuse everywhere else in the query.</p>\n\n        <p>The part following <code class=\"language-plaintext highlighter-rouge\">WHERE</code> are the filter criteria we want to apply. Note\nthat these criteria are almost the same as those we have used in our\nearlier somatic variants query, but since we are working with two tables\ninstead of just one, we need to state which table the filter columns come\nfrom through table prefixes. Thus, <code class=\"language-plaintext highlighter-rouge\">somatic_status</code> becomes\n<code class=\"language-plaintext highlighter-rouge\">v.somatic_status</code>, <em>etc.</em>. In addition, we want to report, of course,\ncorresponding information from the two tables, which is ensured by the\nadditional criteria <code class=\"language-plaintext highlighter-rouge\">v.chrom = g.chrom</code> and <code class=\"language-plaintext highlighter-rouge\">v.gene = g.gene</code> (the SQL\nterminology for this is: we want to join the <code class=\"language-plaintext highlighter-rouge\">variants</code> and the\n<code class=\"language-plaintext highlighter-rouge\">gene_detailed</code> tables on their <code class=\"language-plaintext highlighter-rouge\">chrom</code> and <code class=\"language-plaintext highlighter-rouge\">gene</code> columns).</p>\n\n        <p>The <code class=\"language-plaintext highlighter-rouge\">GROUP BY</code> part, finally, specifies that we want to collapse records\naffecting the same gene into one.</p>\n      </blockquote>\n    </li>\n  </ol>\n\n  <ul>\n    <li>\n      <p><em>“Genotype filter expression”</em>: <code class=\"language-plaintext highlighter-rouge\">gt_alt_freqs.NORMAL &lt;= 0.05 AND\ngt_alt_freqs.TUMOR &gt;= 0.10</code></p>\n\n      <p>This remains the same as in the previous somatic variants query.</p>\n    </li>\n  </ul>\n</blockquote>\n\n<h2 id=\"adding-additional-annotations-to-the-gene-centered-report\">Adding additional annotations to the gene-centered report</h2>\n\n<p>Unfortunately, <em>GEMINI annotate</em> lets you add columns only to the variants\ntable of a GEMINI database, but there is no simple way to enhance the\n<code class=\"language-plaintext highlighter-rouge\">gene_detailed</code> table with additional annotations. That’s why we are going to\nadd such extra annotations now to the tabular gene-centered report using more\ngeneral-purpose Galaxy tools.</p>\n\n<p>Annotating the tabular gene report produced with GEMINI is a two-step\nprocess, in which we first <em>join</em> the report and tabular annotation sources\ninto a larger tabular dataset, from which we then eliminate redundant and\nunwanted columns, while <em>rearranging</em> the remaining ones.</p>\n\n<p><strong>Step 1</strong> consists of three separate <em>join</em> operations that sequentially pull in the annotations found in the three gene-based tabular datasets that you imported in the <em>Get Data</em> step of this section.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Join </hands-on-title>\n\n  <ol>\n    <li>Use <span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_easyjoin_tool/1.1.1\" title=\"Join two files tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Join two files</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 1.1.1)</span> to add <strong>UniProt cancer genes</strong> information\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“1st file”</em>: the GEMINI-generated gene report from the previous step</li>\n        <li><em>“Column to use from 1st file”</em>: <code class=\"language-plaintext highlighter-rouge\">Column: 1</code></li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span>  <em>“2nd file”</em>: the imported <code class=\"language-plaintext highlighter-rouge\">Uniprot_Cancer_Genes</code> dataset</li>\n        <li><em>“Column to use from 2nd file”</em>: <code class=\"language-plaintext highlighter-rouge\">Column: 1</code></li>\n        <li>\n          <p><em>“Output lines appearing in”</em>: <code class=\"language-plaintext highlighter-rouge\">Both 1st &amp; 2nd file, plus unpairable\nlines from 1st file. (-a 1)</code></p>\n\n          <p>If a variant-affected gene is not listed as a Uniprot cancer gene, then,\nobviously, we still want to have it included in the final report.</p>\n        </li>\n        <li><em>“First line is a header line”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n        <li><em>“Ignore case”</em>: <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n        <li>\n          <p><em>“Value to put in unpaired (empty) fields”</em>: <code class=\"language-plaintext highlighter-rouge\">0</code></p>\n\n          <p>If you inspect the <code class=\"language-plaintext highlighter-rouge\">Uniprot_Cancer_Genes</code> dataset, you will see that it\nhas two annotation columns - one indicating, using <code class=\"language-plaintext highlighter-rouge\">1</code> and <code class=\"language-plaintext highlighter-rouge\">0</code>, whether\na given gene is a <em>proto-oncogene</em> or not, the other one indicating\n<em>tumor suppressor</em> genes the same way. For genes missing from this\nannotation dataset, we want to fill the corresponding two columns of the\njoin result with <code class=\"language-plaintext highlighter-rouge\">0</code> to indicate the common case that a gene affected by\na variant is neither a known proto-oncogene, nor a tumor suppressor\ngene.</p>\n        </li>\n      </ul>\n    </li>\n    <li>Use <span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_easyjoin_tool/1.1.1\" title=\"Join two files tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Join two files</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 1.1.1)</span> to add <strong>CGI biomarkers</strong> information\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“1st file”</em>: the partially annotated dataset from the previous</li>\n        <li><em>“Column to use from 1st file”</em>: <code class=\"language-plaintext highlighter-rouge\">Column: 1</code></li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“2nd file”</em>: the imported <code class=\"language-plaintext highlighter-rouge\">cgi_genes</code> dataset</li>\n        <li><em>“Column to use from 2nd file”</em>: <code class=\"language-plaintext highlighter-rouge\">Column: 1</code></li>\n        <li><em>“Output lines appearing in”</em>: <code class=\"language-plaintext highlighter-rouge\">Both 1st &amp; 2nd file, plus unpairable\nlines from 1st file. (-a 1)</code></li>\n        <li><em>“First line is a header line”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n        <li><em>“Ignore case”</em>: <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n        <li><em>“Value to put in unpaired (empty) fields”</em>: <code class=\"language-plaintext highlighter-rouge\">0</code></li>\n      </ul>\n\n      <p>Inspect the input and the result dataset to make sure you understand what\nhappened at this step.</p>\n    </li>\n    <li>Use <span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_easyjoin_tool/1.1.1\" title=\"Join two files tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Join two files</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 1.1.1)</span> to add gene information from <strong>CIViC</strong>\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“1st file”</em>: the partially annotated dataset from step 2</li>\n        <li><em>“Column to use from 1st file”</em>: <code class=\"language-plaintext highlighter-rouge\">Column: 1</code></li>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“2nd file”</em>: the imported <code class=\"language-plaintext highlighter-rouge\">GeneSummaries</code> dataset</li>\n        <li>\n          <p><em>“Column to use from 2nd file”</em>: <code class=\"language-plaintext highlighter-rouge\">Column: 3</code></p>\n\n          <p>The gene column in the CIViC gene summaries annotation dataset is <em>not</em> the first one!</p>\n        </li>\n        <li><em>“Output lines appearing in”</em>: <code class=\"language-plaintext highlighter-rouge\">Both 1st &amp; 2nd file, plus unpairable\nlines from 1st file. (-a 1)</code></li>\n        <li><em>“First line is a header line”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n        <li><em>“Ignore case”</em>: <code class=\"language-plaintext highlighter-rouge\">No</code></li>\n        <li><em>“Value to put in unpaired (empty) fields”</em>: <code class=\"language-plaintext highlighter-rouge\">.</code></li>\n      </ul>\n\n      <p>Inspect the input and the result dataset to make sure you understand what\nhappened at this step.</p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<p>If you took a look at all output datasets as suggested, you will have noticed\nthat each of the <em>join</em> operations kept the gene columns from both input\ndatasets. In addition, we had no control over the order, in which columns got\nadded to the report, nor could we exclude columns.</p>\n\n<p>In <strong>Step 2</strong> of the report preparation we are going to address all of these\nissues and rearrange to get a fully annotated gene report.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Rearrange to get a fully annotated gene report </hands-on-title>\n  <ol>\n    <li>Run <span class=\"tool\" data-tool=\"toolshed.g2.bx.psu.edu/repos/bgruening/column_arrange_by_header/bg_column_arrange_by_header/0.2\" title=\"Column arrange by header name tool\" aria-role=\"button\"><i class=\"fas fa-wrench\" aria-hidden=\"true\"></i> <strong>Column arrange by header name</strong> (<i class=\"fas fa-cubes\" aria-hidden=\"true\"></i> Galaxy version 0.2)</span> configured like\nthis:\n      <ul>\n        <li><i class=\"far fa-file\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-file</span> <em>“file to rearrange”</em>: the final <strong>Join</strong> result dataset from step 3</li>\n        <li>In <em>“Specify the first few columns by name”</em>\n          <ul>\n            <li>In <em>“1: Specify the first few columns by name”</em>\n              <ul>\n                <li><em>“column”</em>: <code class=\"language-plaintext highlighter-rouge\">gene</code></li>\n              </ul>\n            </li>\n            <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <em>“Specify the first few columns by name”</em></li>\n            <li>In <em>“2: Specify the first few columns by name”</em>\n              <ul>\n                <li><em>“column”</em>: <code class=\"language-plaintext highlighter-rouge\">chrom</code></li>\n              </ul>\n            </li>\n            <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <em>“Specify the first few columns by name”</em></li>\n            <li>In <em>“3: Specify the first few columns by name”</em>\n              <ul>\n                <li><em>“column”</em>: <code class=\"language-plaintext highlighter-rouge\">synonym</code></li>\n              </ul>\n            </li>\n            <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <em>“Specify the first few columns by name”</em></li>\n            <li>In <em>“4: Specify the first few columns by name”</em>\n              <ul>\n                <li><em>“column”</em>: <code class=\"language-plaintext highlighter-rouge\">hgnc_id</code></li>\n              </ul>\n            </li>\n            <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <em>“Specify the first few columns by name”</em></li>\n            <li>In <em>“5: Specify the first few columns by name”</em>\n              <ul>\n                <li><em>“column”</em>: <code class=\"language-plaintext highlighter-rouge\">entrez_id</code></li>\n              </ul>\n            </li>\n            <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <em>“Specify the first few columns by name”</em></li>\n            <li>In <em>“6: Specify the first few columns by name”</em>\n              <ul>\n                <li><em>“column”</em>: <code class=\"language-plaintext highlighter-rouge\">rvis_pct</code></li>\n              </ul>\n            </li>\n            <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <em>“Specify the first few columns by name”</em></li>\n            <li>In <em>“7: Specify the first few columns by name”</em>\n              <ul>\n                <li><em>“column”</em>: <code class=\"language-plaintext highlighter-rouge\">is_OG</code></li>\n              </ul>\n            </li>\n            <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <em>“Specify the first few columns by name”</em></li>\n            <li>In <em>“8: Specify the first few columns by name”</em>\n              <ul>\n                <li><em>“column”</em>: <code class=\"language-plaintext highlighter-rouge\">is_TS</code></li>\n              </ul>\n            </li>\n            <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <em>“Specify the first few columns by name”</em></li>\n            <li>In <em>“9: Specify the first few columns by name”</em>\n              <ul>\n                <li><em>“column”</em>: <code class=\"language-plaintext highlighter-rouge\">in_cgi_biomarkers</code></li>\n              </ul>\n            </li>\n            <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <em>“Specify the first few columns by name”</em></li>\n            <li>In <em>“10: Specify the first few columns by name”</em>\n              <ul>\n                <li><em>“column”</em>: <code class=\"language-plaintext highlighter-rouge\">clinvar_gene_phenotype</code></li>\n              </ul>\n            </li>\n            <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <em>“Specify the first few columns by name”</em></li>\n            <li>In <em>“11: Specify the first few columns by name”</em>\n              <ul>\n                <li><em>“column”</em>: <code class=\"language-plaintext highlighter-rouge\">gene_civic_url</code></li>\n              </ul>\n            </li>\n            <li><i class=\"far fa-plus-square\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">param-repeat</span> <em>“Specify the first few columns by name”</em></li>\n            <li>In <em>“12: Specify the first few columns by name”</em>\n              <ul>\n                <li><em>“column”</em>: <code class=\"language-plaintext highlighter-rouge\">description</code></li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n        <li><em>“Discard unspecified columns”</em>: <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n      </ul>\n    </li>\n  </ol>\n\n  <blockquote class=\"comment\">\n    <comment-title>Alternative tool suggestion</comment-title>\n    <p>If your Galaxy server does not offer the <em>Column arrange</em> tool, it will\nalmost certainly offer <strong>Cut columns from a table</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span>,\nwhich can be used as a drop-in replacement.\nInstead of column names, however, this tool expects a comma-separated list\nof column indexes, like <code class=\"language-plaintext highlighter-rouge\">c1,c2</code> for the first and second column, so you\nwill have to first figure out the column numbers of your columns of\ninterest.</p>\n\n    <p><strong>Note</strong>: Be sure not to confuse the suggested tool with <em>Cut\ncolumns from a table (cut)</em>, which does <em>not</em> let you change the order of\ncolumns!</p>\n  </blockquote>\n</blockquote>\n\n<h1 id=\"conclusion\">Conclusion</h1>\n\n<p>In addition to merely calling variants, <em>somatic variant calling</em> tries to\ndistinguish <em>somatic mutations</em>, which are private to tumor tissue, from\n<em>germline</em> mutations, that are shared by tumor and healthy tissue, and\n<em>loss-of-heterozygosity</em> events, which involve the loss, from tumor tissue, of\none of two alleles found at a biallelic site in healthy tissue.</p>\n\n<p>Dedicated somatic variant callers can perform this classification on\nstatistical grounds, but the interpretation of any list of variants (somatic,\ngermline or LOH) also depends crucially on rich genetic and cancer-specific\nvariant and gene annotations.</p>\n"],"ref_slides":[],"hands_on":true,"slides":false,"mod_date":"2023-11-03 14:30:27 +0000","pub_date":"2019-03-13 10:31:31 +0000","version":19,"workflows":[{"workflow":"somatic_variants_tutorial_workflow.ga","tests":true,"url":"https://training.galaxyproject.org/training-material/topics/variant-analysis/tutorials/somatic-variants/workflows/somatic_variants_tutorial_workflow.ga","path":"topics/variant-analysis/tutorials/somatic-variants/workflows/somatic_variants_tutorial_workflow.ga","wfid":"variant-analysis-somatic-variants","wfname":"somatic_variants_tutorial_workflow","trs_endpoint":"https://training.galaxyproject.org/training-material/api/ga4gh/trs/v2/tools/variant-analysis-somatic-variants/versions/somatic_variants_tutorial_workflow","license":null,"creators":[],"name":"Identification of somatic and germline variants from tumor and normal sample pairs tutorial","title":"Identification of somatic and germline variants from tumor and normal sample pairs tutorial","test_results":null,"modified":"2024-06-21 00:05:33 +0000","mermaid":"flowchart TD\n  0[\"ℹ️ Input Dataset\\nSLGFSK-N_231335_r1_chr5_12_17.fastq\"];\n  style 0 stroke:#2c3143,stroke-width:4px;\n  1[\"ℹ️ Input Dataset\\nSLGFSK-N_231335_r2_chr5_12_17.fastq\"];\n  style 1 stroke:#2c3143,stroke-width:4px;\n  2[\"ℹ️ Input Dataset\\nSLGFSK-T_231336_r1_chr5_12_17.fastq\"];\n  style 2 stroke:#2c3143,stroke-width:4px;\n  3[\"ℹ️ Input Dataset\\nSLGFSK-T_231336_r2_chr5_12_17.fastq\"];\n  style 3 stroke:#2c3143,stroke-width:4px;\n  4[\"ℹ️ Input Dataset\\nhg19.chr5_12_17.fa\"];\n  style 4 stroke:#2c3143,stroke-width:4px;\n  5[\"ℹ️ Input Dataset\\nhotspots.bed\"];\n  style 5 stroke:#2c3143,stroke-width:4px;\n  6[\"ℹ️ Input Dataset\\ncgi_variant_positions.bed\"];\n  style 6 stroke:#2c3143,stroke-width:4px;\n  7[\"ℹ️ Input Dataset\\n01-Feb-2019-CIVic.bed\"];\n  style 7 stroke:#2c3143,stroke-width:4px;\n  8[\"ℹ️ Input Dataset\\ndbsnp.b147.chr5_12_17.vcf.gz\"];\n  style 8 stroke:#2c3143,stroke-width:4px;\n  9[\"ℹ️ Input Dataset\\nUniprot_Cancer_Genes.13Feb2019.txt\"];\n  style 9 stroke:#2c3143,stroke-width:4px;\n  10[\"ℹ️ Input Dataset\\ncgi_genes.txt\"];\n  style 10 stroke:#2c3143,stroke-width:4px;\n  11[\"ℹ️ Input Dataset\\n01-Feb-2019-GeneSummaries.tsv\"];\n  style 11 stroke:#2c3143,stroke-width:4px;\n  12[\"FastQC\"];\n  0 -->|output| 12;\n  13[\"FastQC\"];\n  1 -->|output| 13;\n  14[\"Trimmomatic\"];\n  0 -->|output| 14;\n  1 -->|output| 14;\n  15[\"FastQC\"];\n  2 -->|output| 15;\n  16[\"FastQC\"];\n  3 -->|output| 16;\n  17[\"Trimmomatic\"];\n  2 -->|output| 17;\n  3 -->|output| 17;\n  18[\"FastQC\"];\n  14 -->|fastq_out_r2_paired| 18;\n  19[\"FastQC\"];\n  14 -->|fastq_out_r1_paired| 19;\n  20[\"Map with BWA-MEM\"];\n  14 -->|fastq_out_r1_paired| 20;\n  14 -->|fastq_out_r2_paired| 20;\n  21[\"MultiQC\"];\n  13 -->|text_file| 21;\n  15 -->|text_file| 21;\n  16 -->|text_file| 21;\n  12 -->|text_file| 21;\n  22[\"FastQC\"];\n  17 -->|fastq_out_r1_paired| 22;\n  23[\"FastQC\"];\n  17 -->|fastq_out_r2_paired| 23;\n  24[\"Map with BWA-MEM\"];\n  17 -->|fastq_out_r1_paired| 24;\n  17 -->|fastq_out_r2_paired| 24;\n  25[\"Filter\"];\n  20 -->|bam_output| 25;\n  26[\"MultiQC\"];\n  19 -->|text_file| 26;\n  22 -->|text_file| 26;\n  23 -->|text_file| 26;\n  18 -->|text_file| 26;\n  27[\"Filter\"];\n  24 -->|bam_output| 27;\n  28[\"RmDup\"];\n  25 -->|out_file1| 28;\n  29[\"RmDup\"];\n  27 -->|out_file1| 29;\n  30[\"BamLeftAlign\"];\n  28 -->|output1| 30;\n  31[\"BamLeftAlign\"];\n  29 -->|output1| 31;\n  32[\"CalMD\"];\n  30 -->|output_bam| 32;\n  33[\"CalMD\"];\n  31 -->|output_bam| 33;\n  34[\"Filter\"];\n  32 -->|calmd_output| 34;\n  35[\"Filter\"];\n  33 -->|calmd_output| 35;\n  36[\"VarScan somatic\"];\n  34 -->|out_file1| 36;\n  35 -->|out_file1| 36;\n  37[\"SnpEff eff:\"];\n  36 -->|output| 37;\n  38[\"GEMINI load\"];\n  37 -->|snpeff_output| 38;\n  39[\"GEMINI annotate\"];\n  36 -->|output| 39;\n  38 -->|outfile| 39;\n  40[\"GEMINI annotate\"];\n  8 -->|output| 40;\n  39 -->|outfile| 40;\n  41[\"GEMINI annotate\"];\n  5 -->|output| 41;\n  40 -->|outfile| 41;\n  42[\"GEMINI annotate\"];\n  7 -->|output| 42;\n  41 -->|outfile| 42;\n  43[\"GEMINI annotate\"];\n  6 -->|output| 43;\n  42 -->|outfile| 43;\n  44[\"GEMINI query\"];\n  43 -->|outfile| 44;\n  45[\"GEMINI query\"];\n  43 -->|outfile| 45;\n  46[\"GEMINI query\"];\n  43 -->|outfile| 46;\n  47[\"GEMINI query\"];\n  43 -->|outfile| 47;\n  48[\"Join\"];\n  47 -->|outfile| 48;\n  9 -->|output| 48;\n  49[\"Join\"];\n  48 -->|output| 49;\n  10 -->|output| 49;\n  50[\"Join\"];\n  49 -->|output| 50;\n  11 -->|output| 50;\n  51[\"Column arrange\"];\n  50 -->|output| 51;\n  b08d1581-3e42-4222-88a3-bfec6e2e176e[\"Output\\ngene_report_output\"];\n  51 --> b08d1581-3e42-4222-88a3-bfec6e2e176e;\n  style b08d1581-3e42-4222-88a3-bfec6e2e176e stroke:#2c3143,stroke-width:4px;"}],"api":"https://training.galaxyproject.org/training-material/api/topics/variant-analysis/tutorials/somatic-variants/tutorial.json","tools":["toolshed.g2.bx.psu.edu/repos/bgruening/column_arrange_by_header/bg_column_arrange_by_header/0.2","toolshed.g2.bx.psu.edu/repos/bgruening/text_processing/tp_easyjoin_tool/1.1.1","toolshed.g2.bx.psu.edu/repos/devteam/bamtools_filter/bamFilter/2.4.1","toolshed.g2.bx.psu.edu/repos/devteam/bwa/bwa_mem/0.7.17.1","toolshed.g2.bx.psu.edu/repos/devteam/fastqc/fastqc/0.72+galaxy1","toolshed.g2.bx.psu.edu/repos/devteam/freebayes/bamleftalign/1.3.1","toolshed.g2.bx.psu.edu/repos/devteam/samtools_calmd/samtools_calmd/2.0.2","toolshed.g2.bx.psu.edu/repos/devteam/samtools_rmdup/samtools_rmdup/2.0.1","toolshed.g2.bx.psu.edu/repos/iuc/gemini_annotate/gemini_annotate/0.20.1+galaxy2","toolshed.g2.bx.psu.edu/repos/iuc/gemini_load/gemini_load/0.20.1+galaxy2","toolshed.g2.bx.psu.edu/repos/iuc/gemini_query/gemini_query/0.20.1+galaxy1","toolshed.g2.bx.psu.edu/repos/iuc/multiqc/multiqc/1.8+galaxy0","toolshed.g2.bx.psu.edu/repos/iuc/snpeff/snpEff/4.3+T.galaxy1","toolshed.g2.bx.psu.edu/repos/iuc/varscan_somatic/varscan_somatic/2.4.3.6","toolshed.g2.bx.psu.edu/repos/pjbriggs/trimmomatic/trimmomatic/0.36.5"],"supported_servers":{"exact":[{"url":"https://usegalaxy.eu","name":"UseGalaxy.eu","usegalaxy":true},{"url":"https://usegalaxy.no/","name":"UseGalaxy.no","usegalaxy":false},{"url":"https://usegalaxy.org","name":"UseGalaxy.org (Main)","usegalaxy":true},{"url":"https://usegalaxy.org.au","name":"UseGalaxy.org.au","usegalaxy":true}],"inexact":[{"url":"https://usegalaxy.cz/","name":"UseGalaxy.cz","usegalaxy":false},{"url":"https://usegalaxy.fr/","name":"UseGalaxy.fr","usegalaxy":false}]},"topic_name_human":"Variant Analysis","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[{"name":"column_arrange_by_header","owner":"bgruening","revisions":"6c6d26ff01ff","tool_panel_section_label":"Filter and Sort","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"text_processing","owner":"bgruening","revisions":"0a8c6b61f0f4","tool_panel_section_label":"Text Manipulation","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"bamtools_filter","owner":"devteam","revisions":"cb20f99fd45b","tool_panel_section_label":"SAM/BAM","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"bwa","owner":"devteam","revisions":"3fe632431b68","tool_panel_section_label":"Mapping","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"fastqc","owner":"devteam","revisions":"e7b2202befea","tool_panel_section_label":"FASTA/FASTQ","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"freebayes","owner":"devteam","revisions":"57def2d7c093","tool_panel_section_label":"Variant Calling","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"samtools_calmd","owner":"devteam","revisions":"06dc50b7b711","tool_panel_section_label":"SAM/BAM","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"samtools_rmdup","owner":"devteam","revisions":"586f9e1cdb2b","tool_panel_section_label":"SAM/BAM","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"gemini_annotate","owner":"iuc","revisions":"cf0f0f05ba9f","tool_panel_section_label":"Gemini","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"gemini_load","owner":"iuc","revisions":"2270a8b83c12","tool_panel_section_label":"Gemini","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"gemini_query","owner":"iuc","revisions":"da74170c55c7","tool_panel_section_label":"Gemini","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"multiqc","owner":"iuc","revisions":"bf675f34b056","tool_panel_section_label":"Quality Control","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"snpeff","owner":"iuc","revisions":"5c7b70713fb5","tool_panel_section_label":"Variant Calling","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"varscan_somatic","owner":"iuc","revisions":"cf8ffc79db67","tool_panel_section_label":"Variant Calling","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"trimmomatic","owner":"pjbriggs","revisions":"dfa082f84068","tool_panel_section_label":"FASTA/FASTQ","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"}]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools:\n- name: column_arrange_by_header\n  owner: bgruening\n  revisions: 6c6d26ff01ff\n  tool_panel_section_label: Filter and Sort\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: text_processing\n  owner: bgruening\n  revisions: 0a8c6b61f0f4\n  tool_panel_section_label: Text Manipulation\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: bamtools_filter\n  owner: devteam\n  revisions: cb20f99fd45b\n  tool_panel_section_label: SAM/BAM\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: bwa\n  owner: devteam\n  revisions: 3fe632431b68\n  tool_panel_section_label: Mapping\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: fastqc\n  owner: devteam\n  revisions: e7b2202befea\n  tool_panel_section_label: FASTA/FASTQ\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: freebayes\n  owner: devteam\n  revisions: 57def2d7c093\n  tool_panel_section_label: Variant Calling\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: samtools_calmd\n  owner: devteam\n  revisions: 06dc50b7b711\n  tool_panel_section_label: SAM/BAM\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: samtools_rmdup\n  owner: devteam\n  revisions: 586f9e1cdb2b\n  tool_panel_section_label: SAM/BAM\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: gemini_annotate\n  owner: iuc\n  revisions: cf0f0f05ba9f\n  tool_panel_section_label: Gemini\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: gemini_load\n  owner: iuc\n  revisions: 2270a8b83c12\n  tool_panel_section_label: Gemini\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: gemini_query\n  owner: iuc\n  revisions: da74170c55c7\n  tool_panel_section_label: Gemini\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: multiqc\n  owner: iuc\n  revisions: bf675f34b056\n  tool_panel_section_label: Quality Control\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: snpeff\n  owner: iuc\n  revisions: 5c7b70713fb5\n  tool_panel_section_label: Variant Calling\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: varscan_somatic\n  owner: iuc\n  revisions: cf8ffc79db67\n  tool_panel_section_label: Variant Calling\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: trimmomatic\n  owner: pjbriggs\n  revisions: dfa082f84068\n  tool_panel_section_label: FASTA/FASTQ\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n","tours":false,"video":false,"slides_recordings":false,"translations":{"tutorial":[],"slides":[],"video":false},"license":"CC-BY-4.0","type":"tutorial"}