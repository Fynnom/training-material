{"layout":"tutorial_hands_on","title":"Microbial Variant Calling","subtopic":"introduction","zenodo_link":"https://doi.org/10.5281/zenodo.582600","tags":["prokaryote","microgalaxy","gmod","jbrowse1"],"questions":["How do we detect differences between a set of reads from a microorganism and a reference genome"],"objectives":["Find variants between a reference genome and a set of reads","Visualise the SNP in context of the reads aligned to the genome","Determine the effect of those variants on genomic features","Understand if the SNP is potentially affecting the phenotype"],"time_estimation":"45m","key_points":["We used a tool called Snippy to call variants between our reads and our reference genome.","As our reference genome had annotations, we could see what effect the changes have on the features as annotated in the reference and therefore make inferences on the possible changes to the phenotype.","We used the JBrowse genome browser to visualise what these changes look like."],"contributors":[{"name":"Anna Syme","joined":"2017-09","orcid":"0000-0002-9906-0673","id":"annasyme","url":"https://training.galaxyproject.org/training-material/api/contributors/annasyme.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/annasyme/"},{"name":"Simon Gladman","email":"simon.gladman@unimelb.edu.au","joined":"2017-09","elixir_node":"au","orcid":"0000-0002-6100-4385","in_memoriam":"<a href=\"https://www.biocommons.org.au/news/simon-gladman\">Simon Gladman, system administrator of UseGalaxy.org.au, passed away on November 26, 2022</a>\n\n<a href=\"https://galaxyproject.org/news/2022-11-28-simon-gladman/\">He was a fantastic teacher, tutorial author, system administrator, and warm and welcoming friend.</a> He contributed heavily to the Galaxy Training Network and especially the Galaxy Administration community over the years, we will miss him dearly. The GTN and GAT would not be what they are today, without him.\n\n“Have I told you about my watch?”","id":"slugger70","url":"https://training.galaxyproject.org/training-material/api/contributors/slugger70.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/slugger70/"},{"name":"Torsten Seemann","joined":"2018-06","elixir_node":"au","affiliations":["elixir-europe"],"id":"tseemann","url":"https://training.galaxyproject.org/training-material/api/contributors/tseemann.json","page":"https://training.galaxyproject.org/training-material/hall-of-fame/tseemann/"}],"edam_ontology":["topic_0622","topic_0196","topic_2885","topic_3301","topic_0080","topic_0199"],"js_requirements":{"mathjax":null,"mermaid":false},"short_id":"T00313","url":"/topics/variant-analysis/tutorials/microbial-variants/tutorial.html","topic_name":"variant-analysis","tutorial_name":"microbial-variants","dir":"topics/variant-analysis/tutorials/microbial-variants","symlink":null,"id":"variant-analysis/microbial-variants","ref_tutorials":["<p>Variant calling is the process of identifying differences between two genome samples. Usually differences are limited to single nucleotide polymorphisms (SNPs) and small insertions and deletions (indels). Larger structural variation such as inversions, duplications and large deletions are not typically covered by “variant calling”.</p>\n\n<p>Imagine that you have been asked to find the differences between a sample that has been sequenced and a known genome. For example: You have a new sample from a patient and you want to see if it has any differences from a well known reference genome of the same species. Typically, you would have a couple of fastq read files sent back to you from the sequencing provider and either an annotated or non annotated reference genome.</p>\n\n<p>In this tutorial, we will use the tool “Snippy” (see <a href=\"https://github.com/tseemann/snippy\">author development repository</a>) to find high confidence differences (indels or SNPs) between our known genome and our reads. Snippy uses one tool to align the reads to the reference genome, and another tool to decide (“call”) if any of the resulting discrepancies are real variants or technical artifacts that can be ignored. Finally, Snippy uses another tool to check what effect these differences have on the predicted genes - truncation, frame shift or if the changes are synonymous.</p>\n\n<p>For the read alignment (read mapping) step, Snippy uses BWA MEM with a custom set of settings which are very suitable to aligning reads for microbial type data. For the variant calling step, Snippy uses Freebayes with a custom set of settings. snpeff is then used to describe what the predicted changes do in terms of the genes themselves.</p>\n\n<p>The Galaxy wrapper for Snippy has the ability to change some of the underlying tool settings in the advanced section but it is not recommended.</p>\n\n<p>Read more about SNP calling <a href=\"https://en.wikipedia.org/wiki/SNV_calling_from_NGS_data\">at Wikipedia</a>.</p>\n\n<blockquote class=\"agenda\">\n  <agenda-title></agenda-title>\n\n  <p>In this tutorial, we will deal with:</p>\n\n<ol id=\"markdown-toc\">\n  <li><a href=\"#get-the-data\" id=\"markdown-toc-get-the-data\">Get the data</a></li>\n  <li><a href=\"#find-variants-with-snippy\" id=\"markdown-toc-find-variants-with-snippy\">Find variants with Snippy</a></li>\n  <li><a href=\"#examine-snippy-output\" id=\"markdown-toc-examine-snippy-output\">Examine Snippy output</a></li>\n  <li><a href=\"#view-snippy-output-in-jbrowse\" id=\"markdown-toc-view-snippy-output-in-jbrowse\">View Snippy output in JBrowse</a></li>\n  <li><a href=\"#conclusion\" id=\"markdown-toc-conclusion\">Conclusion</a></li>\n</ol>\n\n</blockquote>\n\n<h1 id=\"get-the-data\">Get the data</h1>\n\n<p>The data for today is a subset of a real dataset from a <em>Staphylococcus aureus</em> bacteria.\nWe have a closed genome sequence and an annotation for our “wildtype” strain.\nWe have used a whole genome shotgun approach to produce a set of short sequence reads on an Illumina DNA sequencing instrument for our mutant strain.</p>\n\n<ul>\n  <li>The reads are paired-end</li>\n  <li>Each read is on average 150 bases</li>\n  <li>The reads would cover the original wildtype genome to a depth of 19x</li>\n</ul>\n\n<p>The files we will be using are:</p>\n\n<ul>\n  <li><code class=\"language-plaintext highlighter-rouge\">mutant_R1.fastq</code> &amp; <code class=\"language-plaintext highlighter-rouge\">mutant_R2.fastq</code> - the read files in fastq format.</li>\n  <li><code class=\"language-plaintext highlighter-rouge\">wildtype.fna</code> - The sequence of the reference strain in fasta format.</li>\n  <li><code class=\"language-plaintext highlighter-rouge\">wildtype.gbk</code> - The reference strain with gene and other annotations in genbank format.</li>\n  <li><code class=\"language-plaintext highlighter-rouge\">wildtype.gff</code> - The reference strain with gene and other annotations in gff3 format.</li>\n</ul>\n\n<p><a href=\"https://doi.org/10.5281/zenodo.582600\">This data is available at Zenodo</a>.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Get the data</hands-on-title>\n\n  <ol>\n    <li>Import all of the following files into a new history:\n      <ul>\n        <li><a href=\"https://zenodo.org/record/582600/files/mutant_R1.fastq\">mutant_R1.fastq</a></li>\n        <li><a href=\"https://zenodo.org/record/582600/files/mutant_R2.fastq\">mutant_R2.fastq</a></li>\n        <li><a href=\"https://zenodo.org/record/582600/files/wildtype.fna\">wildtype.fna</a></li>\n        <li><a href=\"https://zenodo.org/record/582600/files/wildtype.gbk\">wildtype.gbk</a></li>\n        <li><a href=\"https://zenodo.org/record/582600/files/wildtype.gff\">wildtype.gff</a></li>\n      </ul>\n\n      <div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>https://zenodo.org/record/582600/files/mutant_R1.fastq\nhttps://zenodo.org/record/582600/files/mutant_R2.fastq\nhttps://zenodo.org/record/582600/files/wildtype.fna\nhttps://zenodo.org/record/582600/files/wildtype.gbk\nhttps://zenodo.org/record/582600/files/wildtype.gff\n</code></pre></div>      </div>\n\n      <!--SNIPPET-->\n      <blockquote class=\"tip\">   <div class=\"box-title tip-title\" id=\"tip-importing-via-links\"><button class=\"gtn-boxify-button tip\" type=\"button\" aria-controls=\"tip-importing-via-links\" aria-expanded=\"true\"><i class=\"far fa-lightbulb\" aria-hidden=\"true\"></i> <span>Tip: Importing via links</span><span class=\"fold-unfold fa fa-minus-square\"></span></button></div>   <ul>   <li>Copy the link location</li>   <li>     <p>Click <i class=\"fas fa-upload\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-upload</span> <strong>Upload Data</strong> at the top of the tool panel</p>   </li>   <li>Select <i class=\"fa fa-edit\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-wf-edit</span> <strong>Paste/Fetch Data</strong></li>   <li>     <p>Paste the link(s) into the text field</p>   </li>   <li>     <p>Press <strong>Start</strong></p>   </li>   <li><strong>Close</strong> the window</li> </ul> </blockquote>\n      <p><!--END_SNIPPET--></p>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h1 id=\"find-variants-with-snippy\">Find variants with Snippy</h1>\n\n<p>We will now run the Snippy tool on our reads, comparing it to the reference.</p>\n\n<p>Snippy is a tool for rapid bacterial SNP calling and core genome alignments. Snippy finds SNPs between a haploid reference genome and your NGS sequence reads. It will find both substitutions (snps) and insertions/deletions (indels).</p>\n\n<p>If we give Snippy an annotated reference, it will silently run a tool called SnpEff which will figure out the effect of any changes on the genes and other features. If we just give Snippy the reference sequence alone without the annotations, it will not run SnpEff.</p>\n\n<p>We have an annotated reference and so will use it in this case.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Run Snippy</hands-on-title>\n\n  <ol>\n    <li><strong>Snippy</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with the following parameters\n      <ul>\n        <li>“Reference File” to the <code class=\"language-plaintext highlighter-rouge\">wildtype.gbk</code> file (if the genbank file is not selectable, make sure to change its datatype to ‘genbank’)</li>\n        <li>“Single or Paired-end reads” to <code class=\"language-plaintext highlighter-rouge\">Paired</code></li>\n        <li>“Select first set of reads” to <code class=\"language-plaintext highlighter-rouge\">mutant_R1.fastq</code></li>\n        <li>“Select second set of reads” to <code class=\"language-plaintext highlighter-rouge\">mutant_R2.fastq</code></li>\n        <li>Select all outputs</li>\n      </ul>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h1 id=\"examine-snippy-output\">Examine Snippy output</h1>\n\n<p>Snippy has taken the reads, mapped them against the reference using BWA MEM, looked through the resulting BAM file and found differences using some fancy Bayesian statistics (Freebayes), filtered the differences for sensibility and finally checked what effect these differences will have on the predicted genes and other features in the genome.</p>\n\n<p>It produces quite a bit of output, there can be up to 10 output files.</p>\n\n<table>\n  <thead>\n    <tr>\n      <th>Filename</th>\n      <th>Description</th>\n    </tr>\n  </thead>\n  <tbody>\n    <tr>\n      <td>snps vcf file</td>\n      <td>The final annotated variants in VCF format</td>\n    </tr>\n    <tr>\n      <td>snps gff file</td>\n      <td>The variants in GFF3 format</td>\n    </tr>\n    <tr>\n      <td>snps table</td>\n      <td>A simple tab-separated summary of all the variants</td>\n    </tr>\n    <tr>\n      <td>snps summary</td>\n      <td>A summary of the SNPs called</td>\n    </tr>\n    <tr>\n      <td>log file</td>\n      <td>A log file with the commands run and their outputs</td>\n    </tr>\n    <tr>\n      <td>aligned fasta</td>\n      <td>A version of the reference but with - at position with depth=0 and N for 0 &lt; depth &lt; –mincov <strong>(does not have variants)</strong></td>\n    </tr>\n    <tr>\n      <td>consensus fasta</td>\n      <td>A version of the reference genome with all variants instantiated</td>\n    </tr>\n    <tr>\n      <td>mapping depth</td>\n      <td>A table of the mapping depth</td>\n    </tr>\n    <tr>\n      <td>mapped reads bam</td>\n      <td>A BAM file containing all of the mapped reads</td>\n    </tr>\n    <tr>\n      <td>outdir</td>\n      <td>A tarball of the Snippy output directory for input into Snippy-core if required</td>\n    </tr>\n  </tbody>\n</table>\n\n<p>We will now have a look at the contents of the SNP table file (<code class=\"language-plaintext highlighter-rouge\">snippy on data XX, data XX and data XX table</code>):</p>\n\n<div class=\"language-plaintext highlighter-rouge\"><div class=\"highlight\"><pre class=\"highlight\"><code>1   2   3   4   5   6   7   8   9   10  11  12  13  14\nCHROM   POS TYPE    REF ALT EVIDENCE    FTYPE   STRAND  NT_POS  AA_POS  EFFECT  LOCUS_TAG   GENE    PRODUCT\nWildtype    24388   snp A   G   G:22 A:0    CDS +   1/702   1/233   initiator_codon_variant c.1A&gt;G p.Met1?  WILD_00022  walR    Transcriptional regulatory protein WalR\nWildtype    29479   snp T   G   G:21 T:0    CDS +   39/792  13/263  synonymous_variant c.39T&gt;G p.Gly13Gly   WILD_00026  yycJ    Putative metallo-hydrolase YycJ\nWildtype    47299   snp T   A   A:24 T:0    CDS +   54/1758 18/585  stop_gained c.54T&gt;A p.Cys18*    WILD_00043  mecR1   Methicillin resistance mecR1 protein\nWildtype    102969  snp G   C   C:16 G:0    CDS -   87/1281 29/426  synonymous_variant c.87C&gt;G p.Gly29Gly   WILD_00093  spa Immunoglobulin G-binding protein A\nWildtype    103048  snp T   A   A:20 T:0    CDS -   8/1281  3/426   missense_variant c.8A&gt;T p.Lys3Met   WILD_00093  spa Immunoglobulin G-binding protein A\nWildtype    103379  del GAA GA  GA:11 GAA:0\nWildtype    106602  snp T   G   G:21 T:0    CDS -   993/993 331/330 stop_lost&amp;splice_region_variant c.993A&gt;C p.Ter331Tyrext*?   WILD_00097  yfiY    putative siderophore-binding lipoprotein YfiY\nWildtype    109833  snp T   A   A:16 T:0    CDS +   1/1755  1/584   initiator_codon_variant c.1T&gt;A p.Leu1?  WILD_00100  iucC_1  Aerobactin synthase\nWildtype    114540  del ATT AT  AT:25 ATT:0 CDS +   1717/1737   573/578 frameshift_variant c.1717delT p.Cys573fs    WILD_00102  iucA    N(2)-citryl-N(6)-acetyl-N(6)-hydroxylysine synthase\nWildtype    129881  mnp GT  AA  AA:18 GT:0  CDS +   55/708  19/235  missense_variant c.55_56delGTinsAA p.Val19Asn   WILD_00117  deoD    Purine nucleoside phosphorylase DeoD-type\nWildtype    138877  snp G   C   C:14 G:0    CDS +   1119/1545   373/514 missense_variant c.1119G&gt;C p.Trp373Cys  WILD_00125      hypothetical protein\nWildtype    138920  snp A   G   G:10 A:0    CDS +   1162/1545   388/514 missense_variant c.1162A&gt;G p.Lys388Glu  WILD_00125      hypothetical protein\nWildtype    160547  del GTC GC  GC:18 GTC:0\nWildtype    160552  del CTA CA  CA:20 CTA:0\nWildtype    190866  del GTT GT  GT:18 GTT:0 CDS -   28/1356 10/451  frameshift_variant c.28delA p.Asn10fs   WILD_00166  brnQ    Branched-chain amino acid transport system 2 carrier protein\n</code></pre></div></div>\n\n<blockquote class=\"question\">\n  <question-title></question-title>\n\n  <ol>\n    <li>Which types of variants have been found?</li>\n    <li>What is the third variant called?</li>\n    <li>What is the product of the mutation?</li>\n    <li>What might be the result of such a mutation?</li>\n  </ol>\n\n  <blockquote class=\"solution\">\n    <solution-title></solution-title>\n    <ol>\n      <li>In the 3rd column, you have “snp” for SNP, “del” for deletion, “mnp” for</li>\n      <li>This is a T→A mutation, causing a stop codon</li>\n      <li>On the 14th column, we see that The product of this gene is a methicillin resistance protein. Methicillin is an antibiotic.</li>\n      <li>This will cause a truncation in the Methicillin gene and a loss of resistance in the organism.</li>\n    </ol>\n  </blockquote>\n</blockquote>\n\n<h1 id=\"view-snippy-output-in-jbrowse\">View Snippy output in JBrowse</h1>\n\n<p>We could go through all of the variants like this and read them out of a text table, but this is onerous and doesn’t really give the context of the changes very well. It would be much nicer to have a visualisation of the SNPs and the other relevant data. In Galaxy we can use a tool called JBrowse.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Run JBrowse</hands-on-title>\n\n  <ol>\n    <li><strong>JBrowse</strong> <i class=\"fas fa-wrench\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">tool</span> with the following parameters\n      <ul>\n        <li>“Reference genome to display” to <code class=\"language-plaintext highlighter-rouge\">Use a genome from history</code></li>\n        <li>\n          <p>“Select the reference genome” to <code class=\"language-plaintext highlighter-rouge\">wildtype.fna</code></p>\n\n          <p>This sequence will be the reference against which annotations are displayed</p>\n        </li>\n        <li>“Produce Standalone Instance” to <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n        <li>“Genetic Code” to <code class=\"language-plaintext highlighter-rouge\">11: The Bacterial, Archaeal and Plant Plastid Code</code></li>\n        <li>“JBrowse-in-Galaxy Action” to <code class=\"language-plaintext highlighter-rouge\">New JBrowse Instance</code></li>\n        <li>\n          <p>“Track Group”</p>\n\n          <p>We will now set up three different tracks - these are datasets displayed underneath the reference sequence (which is displayed as nucleotides in FASTA format). We will choose to display the sequence reads (the .bam file), the variants found by snippy (the .gff file) and the annotated reference genome (the wildtype.gff)</p>\n\n          <ul>\n            <li><strong>Track 1 - sequence reads</strong>: Click on <code class=\"language-plaintext highlighter-rouge\">Insert Track Group</code> and fill it with\n              <ul>\n                <li>“Track Category” to <code class=\"language-plaintext highlighter-rouge\">sequence reads</code></li>\n                <li>Click on <code class=\"language-plaintext highlighter-rouge\">Insert Annotation Track</code> and fill it with\n                  <ul>\n                    <li>“Track Type” to <code class=\"language-plaintext highlighter-rouge\">BAM Pileups</code></li>\n                    <li>“BAM Track Data” to <code class=\"language-plaintext highlighter-rouge\">snippy bam file</code></li>\n                    <li>“Autogenerate SNP Track” to <code class=\"language-plaintext highlighter-rouge\">Yes</code></li>\n                    <li>“Track Visibility” to <code class=\"language-plaintext highlighter-rouge\">On for new users</code></li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n            <li><strong>Track 2 - variants</strong>: Click on <code class=\"language-plaintext highlighter-rouge\">Insert Track Group</code> and fill it with\n              <ul>\n                <li>“Track Category” to <code class=\"language-plaintext highlighter-rouge\">variants</code></li>\n                <li>Click on <code class=\"language-plaintext highlighter-rouge\">Insert Annotation Track</code> and fill it with\n                  <ul>\n                    <li>“Track Type” to <code class=\"language-plaintext highlighter-rouge\">GFF/GFF3/BED Features</code></li>\n                    <li>“GFF/GFF3/BED Track Data” to <code class=\"language-plaintext highlighter-rouge\">snippy snps gff file</code></li>\n                    <li>“Track Visibility” to <code class=\"language-plaintext highlighter-rouge\">On for new users</code></li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n            <li><strong>Track 3 - annotated reference</strong>: Click on <code class=\"language-plaintext highlighter-rouge\">Insert Track Group</code> and fill it with\n              <ul>\n                <li>“Track Category” to <code class=\"language-plaintext highlighter-rouge\">annotated reference</code></li>\n                <li>Click on <code class=\"language-plaintext highlighter-rouge\">Insert Annotation Track</code> and fill it with\n                  <ul>\n                    <li>“Track Type” to <code class=\"language-plaintext highlighter-rouge\">GFF/GFF3/BED Features</code></li>\n                    <li>“GFF/GFF3/BED Track Data” to <code class=\"language-plaintext highlighter-rouge\">wildtype.gff</code></li>\n                    <li>“JBrowse Track Type [Advanced]” to <code class=\"language-plaintext highlighter-rouge\">Canvas Features</code></li>\n                    <li>Click on “JBrowse Styling Options [Advanced]”</li>\n                    <li>“JBrowse style.label” to <code class=\"language-plaintext highlighter-rouge\">product</code></li>\n                    <li>“JBrowse style.description” to <code class=\"language-plaintext highlighter-rouge\">product</code></li>\n                    <li>“Track Visibility” to <code class=\"language-plaintext highlighter-rouge\">On for new users</code></li>\n                  </ul>\n                </li>\n              </ul>\n            </li>\n          </ul>\n        </li>\n      </ul>\n    </li>\n  </ol>\n</blockquote>\n\n<p>A new dataset will be created in your history, containing the JBrowse interactive visualisation. We will now view its contents and play with it by clicking the <i class=\"far fa-eye\" aria-hidden=\"true\"></i><span class=\"visually-hidden\">galaxy-eye</span> (eye) icon of the <code class=\"language-plaintext highlighter-rouge\">JBrowse on data XX and data XX - Complete</code> dataset. The JBrowse window will appear in the centre Galaxy panel.</p>\n\n<blockquote class=\"hands_on\">\n  <hands-on-title>Inspecting the SNPs using JBrowse</hands-on-title>\n  <ol>\n    <li>Display all the tracks and practice maneuvering around\n      <ol>\n        <li>Click on the tick boxes on the left to display the tracks</li>\n        <li>Zoom out by clicking on the <code class=\"language-plaintext highlighter-rouge\">minus</code> button to see sequence reads and their coverage (the grey graph)</li>\n        <li>Zoom in by clicking on the <code class=\"language-plaintext highlighter-rouge\">plus</code> button to see\n          <ul>\n            <li>probable real variants (a whole column of SNPs)</li>\n            <li>probable errors (single one here and there)</li>\n          </ul>\n        </li>\n      </ol>\n\n      <figure id=\"figure-1\" style=\"max-width: 90%;\"><img src=\"../../images/jbrowse1.png\" alt=\"JBrowse screenshot. \" width=\"1818\" height=\"1308\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/jbrowse1.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 1</strong>:</span> Screenshot of JBrowse</figcaption></figure>\n    </li>\n    <li>Look at the stop SNP\n      <ol>\n        <li>Type <code class=\"language-plaintext highlighter-rouge\">47299</code> in the coordinates box</li>\n        <li>Click on <code class=\"language-plaintext highlighter-rouge\">Go</code> to see the position of the SNP discussed above</li>\n      </ol>\n\n      <figure id=\"figure-2\" style=\"max-width: 90%;\"><img src=\"../../images/jbrowse2.png\" alt=\"JBrowse screenshot. \" width=\"680\" height=\"723\" loading=\"lazy\" /><a target=\"_blank\" href=\"../../images/jbrowse2.png\" rel=\"noopener noreferrer\"><small>Open image in new tab</small></a><br /><br /><figcaption><span class=\"figcaption-prefix\"><strong>Figure 2</strong>:</span> Inspection of the STOP SNP using JBrowse</figcaption></figure>\n\n      <blockquote class=\"question\">\n        <question-title></question-title>\n\n        <ol>\n          <li>What is the correct codon at this position?</li>\n          <li>What is the mutation found here?</li>\n        </ol>\n\n        <blockquote class=\"solution\">\n          <solution-title></solution-title>\n          <ol>\n            <li>The correct codon at this position is TGT, coding for the amino acid Cysteine (middle row of the amino acid translations).</li>\n            <li>The mutation of T → A turns this triplet into TGA, a stop codon.</li>\n          </ol>\n        </blockquote>\n      </blockquote>\n    </li>\n  </ol>\n\n</blockquote>\n\n<h1 id=\"conclusion\">Conclusion</h1>\n\n<p>By running a tool such as Snippy on your read files and reference genome, we can find where the biologically important changes between genomes of different strains occur and perhaps what they mean to the phenotype.</p>\n"],"ref_slides":[],"hands_on":true,"slides":false,"mod_date":"2024-03-14 16:42:55 +0000","pub_date":"2018-02-26 16:12:34 +0000","version":36,"workflows":[{"workflow":"microbial_variant_calling.ga","tests":true,"url":"https://training.galaxyproject.org/training-material/topics/variant-analysis/tutorials/microbial-variants/workflows/microbial_variant_calling.ga","path":"topics/variant-analysis/tutorials/microbial-variants/workflows/microbial_variant_calling.ga","wfid":"variant-analysis-microbial-variants","wfname":"microbial_variant_calling","trs_endpoint":"https://training.galaxyproject.org/training-material/api/ga4gh/trs/v2/tools/variant-analysis-microbial-variants/versions/microbial_variant_calling","license":null,"creators":[],"name":"Microbial Variant Calling","title":"Microbial Variant Calling","test_results":null,"modified":"2024-06-17 13:05:37 +0000","mermaid":"flowchart TD\n  0[\"ℹ️ Input Dataset\\nInput dataset\"];\n  style 0 stroke:#2c3143,stroke-width:4px;\n  1[\"ℹ️ Input Dataset\\nInput dataset\"];\n  style 1 stroke:#2c3143,stroke-width:4px;\n  2[\"ℹ️ Input Dataset\\nInput dataset\"];\n  style 2 stroke:#2c3143,stroke-width:4px;\n  3[\"ℹ️ Input Dataset\\nInput dataset\"];\n  style 3 stroke:#2c3143,stroke-width:4px;\n  4[\"ℹ️ Input Dataset\\nInput dataset\"];\n  style 4 stroke:#2c3143,stroke-width:4px;\n  5[\"snippy\"];\n  0 -->|output| 5;\n  1 -->|output| 5;\n  3 -->|output| 5;\n  db746070-d6d3-40d9-88e0-91dcea4aad17[\"Output\\nsnippy_fasta\"];\n  5 --> db746070-d6d3-40d9-88e0-91dcea4aad17;\n  style db746070-d6d3-40d9-88e0-91dcea4aad17 stroke:#2c3143,stroke-width:4px;\n  4ad00edd-8dff-4d92-8205-9f72b1f5e943[\"Output\\nsnippy_tabular\"];\n  5 --> 4ad00edd-8dff-4d92-8205-9f72b1f5e943;\n  style 4ad00edd-8dff-4d92-8205-9f72b1f5e943 stroke:#2c3143,stroke-width:4px;\n  6[\"JBrowse\"];\n  5 -->|snpgff| 6;\n  4 -->|output| 6;\n  5 -->|snpsbam| 6;\n  2 -->|output| 6;\n  59f4848f-0768-421c-aad1-991dc8b1ad29[\"Output\\njbrowse_html\"];\n  6 --> 59f4848f-0768-421c-aad1-991dc8b1ad29;\n  style 59f4848f-0768-421c-aad1-991dc8b1ad29 stroke:#2c3143,stroke-width:4px;"}],"api":"https://training.galaxyproject.org/training-material/api/topics/variant-analysis/tutorials/microbial-variants/tutorial.json","tools":["toolshed.g2.bx.psu.edu/repos/iuc/jbrowse/jbrowse/0.7.0.3","toolshed.g2.bx.psu.edu/repos/iuc/snippy/snippy/3.2"],"supported_servers":{"exact":[{"url":"https://usegalaxy.be/","name":"UseGalaxy.be","usegalaxy":false},{"url":"https://usegalaxy.eu","name":"UseGalaxy.eu","usegalaxy":true},{"url":"https://usegalaxy.org","name":"UseGalaxy.org (Main)","usegalaxy":true}],"inexact":[{"url":"https://galaxytrakr.org/","name":"GalaxyTrakr","usegalaxy":false},{"url":"https://usegalaxy.cz/","name":"UseGalaxy.cz","usegalaxy":false},{"url":"https://usegalaxy.fr/","name":"UseGalaxy.fr","usegalaxy":false},{"url":"https://usegalaxy.no/","name":"UseGalaxy.no","usegalaxy":false},{"url":"https://usegalaxy.org.au","name":"UseGalaxy.org.au","usegalaxy":true}]},"topic_name_human":"Variant Analysis","admin_install":{"install_tool_dependencies":true,"install_repository_dependencies":true,"install_resolver_dependencies":true,"tools":[{"name":"jbrowse","owner":"iuc","revisions":"836d1aa3e89a","tool_panel_section_label":"Graph/Display Data","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"},{"name":"snippy","owner":"iuc","revisions":"c9a8ef2aa380","tool_panel_section_label":"Variant Calling","tool_shed_url":"https://toolshed.g2.bx.psu.edu/"}]},"admin_install_yaml":"---\ninstall_tool_dependencies: true\ninstall_repository_dependencies: true\ninstall_resolver_dependencies: true\ntools:\n- name: jbrowse\n  owner: iuc\n  revisions: 836d1aa3e89a\n  tool_panel_section_label: Graph/Display Data\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n- name: snippy\n  owner: iuc\n  revisions: c9a8ef2aa380\n  tool_panel_section_label: Variant Calling\n  tool_shed_url: https://toolshed.g2.bx.psu.edu/\n","tours":false,"video":false,"slides_recordings":false,"translations":{"tutorial":[],"slides":[],"video":false},"license":"CC-BY-4.0","type":"tutorial"}